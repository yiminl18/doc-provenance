[
  {
    "06f0a278": {
      "question": "What benefits does the article identify for implementing RDBS in clinical data management?",
      "answer": "1. Efficient management of one-to-many relationships.\n2. Prevention of duplicate data entries.\n3. Specific data field definitions to minimize data errors.\n4. Maintenance of data consistency.\n5. Ability to link tables through foreign keys.\n6. Automatic deletion of related data when a record is removed.\n7. Optimization for managing vast amounts of data.\n8. Fast querying and manipulation of large datasets.\n9. Enhanced security compared to spreadsheets.\n10. Ability to perform complex queries using SQL.",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            138,
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            165,
            166,
            167,
            168,
            169,
            170,
            171,
            172,
            173,
            174,
            175,
            176,
            177,
            178,
            179,
            180,
            181,
            182,
            183,
            184,
            185,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            193
          ],
          "provenance_ids": [
            0,
            1,
            2,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            14,
            15,
            16,
            17,
            18,
            22,
            23,
            24,
            25,
            26,
            31,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            44,
            45,
            46,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            134,
            150,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            166,
            167,
            168,
            170,
            171,
            172,
            173,
            174,
            175,
            176,
            177,
            178,
            182,
            183,
            185,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            193
          ],
          "provenance": "Advances in Radiation Oncology (2020) 5, 1280-1285\n\nScientiﬁc Article\nArtiﬁcial Intelligence Research: The Utility and\nDesign of a Relational Database System\n\nwww.advancesradonc.org\n\nThomas J. Dilling, MD*\n\nDepartment of Radiation Oncology, Mofﬁtt Cancer Center\n\nReceived 13 March 2020; revised 13 April 2020; accepted 11 June 2020\n\nAbstract\nAlthough many researchers talk about a “patient database,” they typically are not referring to a database at all, but instead to a spreadsheet of\ncurated facts about a cohort of patients.This article describes relational database systems and how they differ from spreadsheets.At their core,\nspreadsheets are only capable of describing one-to-one (1:1) relationships.Consequently, spreadsheets are very inefﬁcient relative to relational database systems,\nwhich gracefully manage such data.Databases provide other advantages, in that the data ﬁelds are “typed” (that is, they contain speciﬁc\nkinds of data).This prevents users from entering spurious data during data import.Because each record contains a “key,” it becomes\nimpossible to add duplicate information (ie, add the same patient twice).Databases store data in very efﬁcient ways, minimizing space and\nmemory requirements on the host system.Likewise, databases can be queried or manipulated using a highly complex language called\nSQL.Consequently, it becomes trivial to cull large amounts of data from a vast number of data ﬁelds on very precise subsets of patients.Databases can be quite large (terabytes or more in size), yet still are highly efﬁcient to query.This article provides initial guidance in terms of creating a relational database system.(cid:1) 2020 Published by Elsevier Inc. on behalf of American Society for Radiation Oncology.This is an open access article under the CC BY-NC-\nND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).Introduction\n\nThis issue of Advances in Radiation Oncology presents\na series of articles around applications of artiﬁcial intel-\nligence (AI) in our ﬁeld.One of the potential beneﬁts of\nAI is that it can pore through large amounts of data to\ndiscover patterns not evident to clinicians.Dilling@mofﬁtt.org. work when conducting standard multivariable analyses).In fact, many researchers erroneously describe spread-\nsheets as databases.This article will demonstrate both\nwhat a relational database system is and how it is superior\nto a spreadsheet.It will also discuss considerations when\nimplementing a relational database system (RDBS) for\nyour own research purposes, using an actual lung cancer\nradiation therapy database as an example.I have also\nprovided some excellent Wikipedia references\nthat\ncontain abundant additional\ninformation, beyond what\ncan be encapsulated in a single article.Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1281\n\nto cleanly and accurately contain these data.There is a famous\nthe “data science hierarchy of needs”\nillustration of\n(Fig 1).To perform an AI analysis, one must ﬁrst create\nan RDBS to serve as the storage mechanism.This crea-\ntion of a system to store structured data entails a major\npart of the bottom row of the pyramid.To create a data-\nbase,\nthe reader down the path toward\nconducting AI research at their own institution.then, will set\n\nOrigin of Relational Databases\n\nThe concept of a RDBS was ﬁrst described in a sem-\ninal article in 1970.1 The theoretic construct was that all\ndata could be deﬁned or represented as a series of re-\nlations with or to other data.The article was quantitative\nin that it used relational algebra and tuple relational cal-\nculus to prove its points.2 IBM used this theoretic\nframework to design what became the initial SQL (pro-\nnounced “see-quell” or “ess-cue-ell”) language, which\nthey used to manipulate and retrieve data from IBM’s\noriginal RDBS.3 Since that time, the American National\nStandards Institute and the International Standards Orga-\nnization have deemed SQL to be the standard language in\nrelational database communication.2 Today, there are a\nwide variety of commercial and open-source relational\ndatabase systems available for use.These vary in their\nfeatures and relative strengths or weaknesses, but,\nfundamentally,\nthey all operate using the principles\ndeﬁned in the Codd article.1 The SQL language is well\ndeﬁned and is used to write code to query (or update) the\ndata within an RDBS.Fundamental Disadvantage of Spreadsheets\n\nSpreadsheets are designed to incorporate and analyze\none-to-one (1:1) relationships (Fig 2a).To\naccommodate these data, a spreadsheet quickly balloons in\nsize (Fig 2c).Not only is this inefﬁcient (duplication of\ndata), but it also makes maintenance of the spreadsheet\nextremely cumbersome and prone to error.For instance, in\nthis example, when patient “12345” passes away, the\n“DeathDate” needs to be updated in 5 rows of the spread-\nsheet (because she had 2 courses of radiation therapy and 4\ncycles of chemotherapy).But,\nto reiterate the point, spreadsheets are only designed to\nencapsulate 1:1 relationships (2-dimensional data).But\npatient data are multidimensional.Fundamental Advantage of Relational\nDatabases\n\nRDBS gracefully manage one-to-many relationships.They can do so because a database is created of numerous\ndifferent tables, which are explicitly linked (Fig 3).Every\n\nFigure 1\nAbbreviation: AI Z artiﬁcial intelligence.The data science hierarchy of needs.Used with permission of Monica Rogati (aipyramid.com). For details, see text.1282\n\nT.J. Dilling\n\nAdvances in Radiation Oncology: NovembereDecember 2020\n\nFigure 2\n(a) Spreadsheets are useful where there is a one-to-one correspondence of data.For instance, each unique medical record\nnumber (MRN) represents a single patient, with a single birth/death date and a single ﬁrst and last name.(b) Spreadsheets “break down”\nwhen describing 1-to-many correspondences.In this example, 2 patients have a total of 5 courses of radiation therapy treatment between\nthem.(c) To accommodate all the data in our simple example, a spreadsheet needs to store redundant data (colored in red).The data\nstorage requirements quickly balloon.Furthermore, as additional traits and factors are added to the spreadsheet, it becomes impossible to\nfollow, as one patient will require untold numbers of rows to capture all relevant data concepts.Stated another way, the data are\nmultidimensional.Maintenance and updating of ﬁelds become error-prone (see text).Abbreviations: DOB Z date of birth; Lname Z\nlast name; Fname Z ﬁrst name; LUL Z upper lobe; MRN Z medical record number; RLL, right lower lobe; RUL Z right upper lobe;\nSBRT Z stereotactic body radiotherapy.table must also contain a key, which is a unique, required\nidentiﬁer for each row of data.Relationships between the\ntables are deﬁned when creating the database tables or\nﬁelds.In the “demographics” table, medical\nrecord\nnumber, “MRN,” is the key.For the “TreatmentCourse”\nand “Chemotherapy” tables,\nthe keys are “Treatment-\nCourse” and “ChemotherapyID,” respectively.Note that\n“TreatmentCourse 1” in the “TreatmentCourse” table\npertains to breast radiation therapy treatment.This, in\nis linked to 4 cycles of chemotherapy in the\nturn,\n“Chemotherapy” table, each of which is uniquely identi-\nﬁed in that table, in turn.When comparing Fig 3 (a database) to Fig 2c (a\nspreadsheet), note that Fig 3 contains the same informa-\ntion as Fig 2c without the addition of repetitious infor-\nmation (colored red in Fig 2c).Alternately,\nin a\nspreadsheet, the researcher could manually aggregate and\nsummarize the chemotherapy delivered into a single cell\nin a single row of the spreadsheet (ie, “ﬂatten” the data, to\nuse a data science term), but then some data would be\nlost.Using the chemotherapy administrations as an\nexample, if one were to “ﬂatten” the data down to a single\nstating “4 cycles of Adriamycin/\nspreadsheet cell\nCytoxan,” one loses the dates of administration.If one\nsummarizes the data as “4 cycles of Adriamycin/Cytoxan:\n<date1>, <date2>, <date3>, <date4>,” the dates and\nthe chemotherapy occupy the same cell and the data are\nretained but are no longer discrete; one loses the ability to\nﬁlter the spreadsheet by chemotherapy kind or by date.Conversely, a SQL database cleanly encapsulates these\nmultidimensional data (Fig 3).Each table is 2-dimensional\n\nin structure.But because it can contain multiple rows of\ndata on 1 patient (chemotherapy administrations, to follow\nthe same example), a multidimensional structure is created,\nas 4 chemotherapy cycles link to one of 2 courses of radi-\nation therapy (“TreatmentCourse” table) for 1 patient\n(“Demographics” table).Now, imagine a clinical database\nwith millions of rows of data spread across hundreds of\ntables, as in the real-life example described below.Clearly,\na spreadsheet would not be adequate.Additional Advantages of Relational Databases\n\n1.Each row of data in a table has a unique identiﬁer (a\nkey).Consequently, one cannot accidentally add a\nrow of data into a database table twice.2. Each ﬁeld in the database is speciﬁcally deﬁned as to\nwhat it contains (Fig 4).Consequently, if data are\nimported from some external source, the data types\nmust correspond or the import will fail.For example,\nif an entry contained an integer where a date was\nindicated, the database would signal that the variable\ncontained erroneous data.This feature helps maintain\nconsistency of data and minimize data errors. 3.Not only must the data types correspond, but the\ndata lengths must be observed.If the database\ndesign states that a ﬁeld is a decimal with 3 places to\nthe right of the decimal place, then a fourth decimal\nplace would be truncated at import.Alternately, the\ndatabase could declare an error, which might also\nimply that the ﬁeld contains erroneous data.Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1283\n\n4.A key from one table can be linked “backward” to a\nkey from another table (termed a “foreign key”).As\nan example (Fig 3), the database can be designed\nsuch that the MRN from “TreatmentCourse” must\nto an MRN already contained within the\nrefer\n“Demographics” table.If one tried to import data\ninto “TreatmentCourse” and it used an MRN not\nlisted in “Demographics,” the import would fail.Such a situation might imply, for instance, that the\nMRN was incorrect in the external data source (or in\nthe database).Or perhaps it relates to a patient who\nreceived prostate radiation therapy (but you have a\nbreast cancer database). 5.Foreign key relationships also work in the opposite\ndirection: If one realizes that a patient is represented\nin the database who should not be, one can delete\nthe patient from the “Demographics” table and the\ndatabase will delete all data about that patient from\nall the other data tables automatically.6. RDBS are speciﬁcally optimized to manage vast\namounts of data.Large spreadsheets (containing\nthousands of rows and hundreds of columns) are\nextremely slow and memory intensive.However, one\ncan query across or manipulate many gigabytes of data\nin fractions of a second in many RDBS, as the data\nstores are highly optimized and efﬁcient from both a\ncomputational and memory utilization perspective.7. RDBS are much more secure than spreadsheets.Abbreviations: DOB Z date of birth.Wikipedia\nprovides an outstanding overview of the topic.5\n\nTo implement a database system, it is ﬁrst necessary to\nhave a discussion with the IT Department at your institu-\ntion.Some large centers have\nelaborate data warehouse systems.Smaller centers might\nprovide access to data from individual source systems but\nmight not have compiled them into a single data warehouse.Some IT departments might have adequate resources to\nprovide output data from their data warehouse to individual\nresearchers, when needed.Others might not. Some might\nprovide a dedicated research server on which the researcher\ncan construct a database.Other researchers might need to\nrely instead upon existing servers within their department.I\ndo not recommend that one set up a database system on a\nfree-standing laptop or desktop machine, as there are Health\nInsurance Portability and Accountability Act concerns (the\ncomputer could be stolen).Data should be backed up across\na secured network electronically.Creation of a Lung Cancer Radiation Therapy\nDatabase\n\nI began my own database several years ago.My need\ngrew out of a sense of frustration regarding lack of access\nto clinical data.At the time, at my institution, it was a\ndifﬁcult (and somewhat mysterious) process to procure\ndata from the data warehouse.However, data from\nMosaiq (Elekta AB, Stockholm, Sweden), which is our\ndepartment’s record or verify system, were available.These data formed the nucleus of the original database.Research IT provided a Linux server, on which I imple-\nmented the database.I chose to use MariaDB (MariaDB\nis a powerful, well-regarded,\nFoundation, DE), as it\n\ncommercially supported, free, open-source database sys-\ntem whose SQL functions are congruent with those of\nOracle (which is a database system I had used previ-\nously).Because my institution could not support an\nimplementation of an Oracle, MariaDB was an excellent\nalternate option.I had previously used a\nsimilar commercial database administration product called\nNavicat (Premium Cybertech Ltd, Hong Kong), which\nprovides similar functionality, so I elected to purchase\nthat.Similarly, I imported all data I had captured in\nresearch projects.More\nspreadsheets\nrecently, I have gained access to data from our data\nwarehouse and so have created numerous additional ta-\nbles to store the information.At present, the database\ncontains more than 3 million rows of data on approxi-\nmately 4800 patients, spread across more than 170 tables.for previous\n\nIncorporation of Data from Other\nInstitutional Data Systems\n\nTo import data from outside source systems requires a\nmultistep process, referred to as “ETL” (“Extraction,\nTransformation, and Loading”) in the data science liter-\nature.”6 The issues go far beyond the physical importation\nof data into the database; importing spreadsheets of data\nare a trivial task.There are numerous issues in ETL,\nwhich are critical to consider when designing a database\nand importing data into it.Furthermore, many of these\nissues are not inherently obvious.In fact, a large pro-\nportion of the time required to create a database and ﬁll it\nwith clinically useable data derives from the ETL\ninvolved.The oft-reproduced “Data Science Hierarchy of\nNeeds” illustrates this fact (Fig 1).Commmunications of the ACM. 1970;13:377-387. 2. Wikipedia. SQL.Available at: https://en.wikipedia.org/wiki/SQL.IBM System R. Available at: https://en.wikipedia.org/\n\nwiki/IBM_System_R.Accessed February 14, 2020. 4. Dilling TJ.Artiﬁcial Intelligence (AI) for clinical analysis: Design\nand implementation of a suitable database resource.Int J Radiat\nOncol Biol Phys. 2019;105:E131-E132. 5. Wikipedia.Comparison of relational database managment systems.Available\nhttps://en.wikipedia.org/wiki/Comparison_of_\nrelational_database_management_systems.Accessed February 14,\n2020.\n\nat:\n\n6.Wikipedia. Extract, Transform, Load. Available at: https://en.wikipedia.org/wiki/Extract,_transform,_load. Accessed April 13,\n2020.",
          "time": 300.38982033729553,
          "input_token_size": 5729,
          "output_token_size": 187,
          "original_provenance_id": 0
        }
      ],
      "metadata": {
        "question_id": "database_design_article_06f0a278",
        "created_at": 1749869549.782233,
        "processing_time": 303.60214257240295,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs_prev1",
        "reason": "shorter_provenance",
        "sentence_count": 194,
        "provenance_count": 1,
        "alternatives": [
          {
            "source": "test_outputs_prev1",
            "sentence_count": 194,
            "provenance_count": 1,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.664953"
      }
    }
  },
  {
    "07c34719": {
      "question": "Who introduced the concept of relational database systems?",
      "answer": "E.F. Codd",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            138,
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            165,
            166,
            167,
            168,
            169,
            170,
            171,
            172,
            173,
            174,
            175,
            176,
            177,
            178,
            179,
            180,
            181,
            182,
            183,
            184,
            185,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            193
          ],
          "provenance_ids": [
            98,
            99,
            103,
            104,
            105,
            106,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            138,
            139,
            141,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            154,
            156,
            157,
            161,
            163,
            164,
            165,
            166,
            167,
            168,
            169,
            172,
            173,
            174,
            175,
            176,
            177,
            178,
            179,
            180,
            181,
            182,
            183,
            184,
            185,
            186,
            187,
            188,
            189,
            190,
            191,
            192
          ],
          "provenance": "Foreign key relationships also work in the opposite\ndirection: If one realizes that a patient is represented\nin the database who should not be, one can delete\nthe patient from the “Demographics” table and the\ndatabase will delete all data about that patient from\nall the other data tables automatically.6. RDBS are speciﬁcally optimized to manage vast\namounts of data.An\ninstitution’s IT team might allow one to access some\ntables within an institution’s data warehouse, but not\nothers.One’s access could be restricted to deﬁned\nsubsets of patients.One might have “read” access to\nthese data, but not “write” access (or “write” access to\nonly some subset of ﬁelds).Databases might likewise\nbe set up such that only users from speciﬁc IP ad-\ndresses or computers may access them.Furthermore, this re-\nstriction is to “write” access only, not to “read” ac-\ncess.It is true that one can “hide” columns in a\nspreadsheet and then lock it, to prevent a given user\nfrom viewing them, but the spreadsheet maintainer\nmust do this manually before distributing the\nspreadsheet (time-consuming and prone to error).Beneﬁts of SQL\n\nAs described earlier, SQL is a deﬁned, standardized\nlanguage for composing queries within an RDBS, or to\n\nmanipulate and update these data.Some database systems\nprovide “extensions” to the SQL standard, to provide some\nadditional and speciﬁc functionality (details available in the\nvendors’ literature).It is beyond the scope of this article to\nteach SQL coding.However, many excellent online re-\nsources are available for the interested reader.Functionally,\nSQL allows one to search for any number of variables or\ncombinations of variables across any number of tables,\nsimultaneously.This can be extremely powerful and useful,\nboth for retrieving and for manipulating and updating data.Queries can be saved for reuse or modiﬁcation later.As\nstated above, these queries typically produce output in\nfractions of a second, even across vast pools of data.In this example, it would be impossible\nto discover the patients who developed neutropenia while\nundergoing radiation therapy unless one had a “neu-\ntropenia (yes or no)” column.But one cannot perform the\narithmetic “where date of neutropenia > Radiation-\nStartDate and < RadiationEndDate” to ﬁlter the data\nwithout writing code in Visual Basic, which is likely\nbeyond the ability of most.1284\n\nT.J. Dilling\n\nAdvances in Radiation Oncology: NovembereDecember 2020\n\nIn a relational database, data are stored in multiple tables, which are joined via deﬁned variables.In this ﬁctitious example,\nFigure 3\nnote that the patient only has one “DeathDate” to update.Furthermore, each course of treatment (“TreatmentCourse”) can have multiple\nchemotherapy cycles associated with it.Note, too, that medical record number (MRN) only appears in 2 of the 3 tables (it is not needed\nin the “Chemotherapy” table).If the researcher wishes to retrieve the MRN, it can be obtained via a SQL query, linking back to one of\nthe tables that contains it.Abbreviations: DOB Z date of birth.Disadvantage of SQL\n\nWith SQL, it is possible to create highly complex queries;\nit is a rich and powerful language.However, these can be\n\nquite complicated and obtuse to a nontechnical person.Figure 4 Note that each ﬁeld in this database table is speciﬁcally designed.It has a “type” (kind) and a “size” (length).Note that the\nﬁeld “MRN” is the key for this table.MRN can be used as\nthe key because no 2 patients have the same MRN.Abbreviations: DOB Z date of birth; MRN Z medical record number.Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1285\n\nDatabase Implementation\n\nDatabases may, and often do, contain many thousands\nof tables and millions of rows of data.(In other words,\nthey can contain data far in excess of the requirements of\nany one radiation oncologist or even any one radiation\noncology department).In fact, some systems allow even\nsingle tables to contain terabytes or even petabytes of\ndata.5 Consequently, there are numerous systems avail-\nable to accommodate any researcher’s needs.Some of the\nvery best are open source (free).Software is available\nacross a wide variety of operating systems.Wikipedia\nprovides an outstanding overview of the topic.5\n\nTo implement a database system, it is ﬁrst necessary to\nhave a discussion with the IT Department at your institu-\ntion.Smaller centers might\nprovide access to data from individual source systems but\nmight not have compiled them into a single data warehouse.Others might not. Some might\nprovide a dedicated research server on which the researcher\ncan construct a database.Other researchers might need to\nrely instead upon existing servers within their department.My need\ngrew out of a sense of frustration regarding lack of access\nto clinical data.However, data from\nMosaiq (Elekta AB, Stockholm, Sweden), which is our\ndepartment’s record or verify system, were available.These data formed the nucleus of the original database.Basic demographic information and radiation therapy\nprescriptions, dates of treatment, dose delivered, tumor\nstage, and the like, were exported, using custom software.Research IT provided a Linux server, on which I imple-\nmented the database.I chose to use MariaDB (MariaDB\nis a powerful, well-regarded,\nFoundation, DE), as it\n\ncommercially supported, free, open-source database sys-\ntem whose SQL functions are congruent with those of\nOracle (which is a database system I had used previ-\nously).Because my institution could not support an\nimplementation of an Oracle, MariaDB was an excellent\nalternate option.MariaDB does include a Windows GUI\ndatabase administration tool for administering its data-\nbases (creating tables, writing SQL code, importing or\nexporting data, and the like).More\nspreadsheets\nrecently, I have gained access to data from our data\nwarehouse and so have created numerous additional ta-\nbles to store the information.At present, the database\ncontains more than 3 million rows of data on approxi-\nmately 4800 patients, spread across more than 170 tables.for previous\n\nIncorporation of Data from Other\nInstitutional Data Systems\n\nTo import data from outside source systems requires a\nmultistep process, referred to as “ETL” (“Extraction,\nTransformation, and Loading”) in the data science liter-\nature.”6 The issues go far beyond the physical importation\nof data into the database; importing spreadsheets of data\nare a trivial task.There are numerous issues in ETL,\nwhich are critical to consider when designing a database\nand importing data into it.Furthermore, many of these\nissues are not inherently obvious.In fact, a large pro-\nportion of the time required to create a database and ﬁll it\nwith clinically useable data derives from the ETL\ninvolved.The oft-reproduced “Data Science Hierarchy of\nNeeds” illustrates this fact (Fig 1).Most of the discussion\nin this article addressed aspects of the bottom-most layer\nof the pyramid.ETL comprises the majority of the next 2\nlayers of the pyramid and is the topic of another article.References\n\n1. Codd ER. A relational model of data for large shared data banks.Commmunications of the ACM. 1970;13:377-387. 2. Wikipedia. SQL.Available at: https://en.wikipedia.org/wiki/SQL.Accessed February 14, 2020. 3. Wikipedia.IBM System R. Available at: https://en.wikipedia.org/\n\nwiki/IBM_System_R.Accessed February 14, 2020. 4. Dilling TJ.Artiﬁcial Intelligence (AI) for clinical analysis: Design\nand implementation of a suitable database resource.Int J Radiat\nOncol Biol Phys. 2019;105:E131-E132. 5. Wikipedia.Comparison of relational database managment systems.Available\nhttps://en.wikipedia.org/wiki/Comparison_of_\nrelational_database_management_systems.Accessed February 14,\n2020.\n\nat:\n\n6.Wikipedia. Extract, Transform, Load. Available at: https://en.",
          "time": 60.263084173202515,
          "input_token_size": 8486,
          "output_token_size": 11,
          "original_provenance_id": 0
        }
      ],
      "metadata": {
        "question_id": "database_design_article_07c34719",
        "created_at": 1749869504.0023048,
        "processing_time": 62.559126138687134,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs_prev1",
        "reason": "shorter_provenance",
        "sentence_count": 97,
        "provenance_count": 1,
        "alternatives": [
          {
            "source": "test_outputs_prev1",
            "sentence_count": 97,
            "provenance_count": 1,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.665997"
      }
    }
  },
  {
    "090c8e16": {
      "question": "How do relational database systems ensure data integrity and prevent redundancy?",
      "answer": "1. Each row of data in a table has a unique identifier (a key).\n2. Each field in the database is specifically defined as to what it contains.\n3. Data types must correspond during data import, or the import will fail.\n4. A key from one table can be linked to a key from another table (foreign key).\n5. Foreign key relationships allow for automatic deletion of related data.\n6. RDBS are optimized to manage vast amounts of data efficiently.\n7. RDBS provide more security than spreadsheets, with controlled access to data.",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            138,
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            165,
            166,
            167,
            168,
            169,
            170,
            171,
            172,
            173,
            174,
            175,
            176,
            177,
            178,
            179,
            180,
            181,
            182,
            183,
            184,
            185,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            193
          ],
          "provenance_ids": [
            1,
            2,
            3,
            4,
            5,
            7,
            9,
            10,
            11,
            12,
            13,
            14,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            42,
            43,
            54,
            55,
            57,
            61,
            63,
            64,
            65,
            66,
            68,
            69,
            70,
            72,
            73,
            75,
            76,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            88,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            111,
            135,
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            151,
            152,
            153,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            165,
            166,
            167,
            168,
            169,
            170,
            171,
            172,
            173,
            174,
            175,
            176,
            177,
            178,
            179,
            180,
            181,
            182,
            183,
            184,
            185,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            193
          ],
          "provenance": "This article describes relational database systems and how they differ from spreadsheets.At their core,\nspreadsheets are only capable of describing one-to-one (1:1) relationships.However, this article demonstrates that clinical medical data\nencapsulate numerous one-to-many relationships.Consequently, spreadsheets are very inefﬁcient relative to relational database systems,\nwhich gracefully manage such data.Databases provide other advantages, in that the data ﬁelds are “typed” (that is, they contain speciﬁc\nkinds of data).Because each record contains a “key,” it becomes\nimpossible to add duplicate information (ie, add the same patient twice).Likewise, databases can be queried or manipulated using a highly complex language called\nSQL.Consequently, it becomes trivial to cull large amounts of data from a vast number of data ﬁelds on very precise subsets of patients.Databases can be quite large (terabytes or more in size), yet still are highly efﬁcient to query.Consequently, with the explosion of data\navailable in electronic health records and other data sources, databases become increasingly important to contain or order these data.Ultimately, this will enable the clinical researcher to perform artiﬁcial intelligence analyses across vast amounts of clinical data in a way\nheretofore impossible.This article provides initial guidance in terms of creating a relational database system.* Corresponding author: Thomas J. Dilling, MD; E-mail: Thomas.Dilling@mofﬁtt.org. work when conducting standard multivariable analyses).In fact, many researchers erroneously describe spread-\nsheets as databases.This article will demonstrate both\nwhat a relational database system is and how it is superior\nto a spreadsheet.It will also discuss considerations when\nimplementing a relational database system (RDBS) for\nyour own research purposes, using an actual lung cancer\nradiation therapy database as an example.I have also\nprovided some excellent Wikipedia references\nthat\ncontain abundant additional\ninformation, beyond what\ncan be encapsulated in a single article.(These, in turn,\nreference computer science literature for the very intrepid\nreader, but such references might extend beyond the level\nof understanding of all but the most technically inclined.)One might question why a database system is neces-\nsary for AI research.This article will demonstrate that a\ndatabase enables creation of a multidimensional structure\n\nhttps://doi.org/10.1016/j.adro.2020.06.027\n2452-1094/(cid:1) 2020 Published by Elsevier Inc. on behalf of American Society for Radiation Oncology.This is an open access article under the CC BY-\nNC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1281\n\nto cleanly and accurately contain these data.To perform\nAI analysis requires efﬁcient storage of hundreds or\nthousands of data points on a single patient or even on a\nsingle course of radiation therapy.There is a famous\nthe “data science hierarchy of needs”\nillustration of\n(Fig 1).To perform an AI analysis, one must ﬁrst create\nan RDBS to serve as the storage mechanism.This crea-\ntion of a system to store structured data entails a major\npart of the bottom row of the pyramid.To create a data-\nbase,\nthe reader down the path toward\nconducting AI research at their own institution.then, will set\n\nOrigin of Relational Databases\n\nThe concept of a RDBS was ﬁrst described in a sem-\ninal article in 1970.1 The theoretic construct was that all\ndata could be deﬁned or represented as a series of re-\nlations with or to other data.The article was quantitative\nin that it used relational algebra and tuple relational cal-\nculus to prove its points.2 IBM used this theoretic\nframework to design what became the initial SQL (pro-\nnounced “see-quell” or “ess-cue-ell”) language, which\nthey used to manipulate and retrieve data from IBM’s\noriginal RDBS.3 Since that time, the American National\nStandards Institute and the International Standards Orga-\nnization have deemed SQL to be the standard language in\nrelational database communication.2 Today, there are a\nwide variety of commercial and open-source relational\ndatabase systems available for use.These vary in their\nfeatures and relative strengths or weaknesses, but,\nfundamentally,\nthey all operate using the principles\ndeﬁned in the Codd article.1 The SQL language is well\ndeﬁned and is used to write code to query (or update) the\ndata within an RDBS.Fundamental Disadvantage of Spreadsheets\n\nSpreadsheets are designed to incorporate and analyze\none-to-one (1:1) relationships (Fig 2a).However, medical\nrecords are rife with “one-to-many” relationships (Fig 2b).A patient might receive multiple different courses of radi-\nation therapy treatment, as in the example provided, or\nmight have multiple chemotherapy administrations.Every\n\nFigure 1\nAbbreviation: AI Z artiﬁcial intelligence.The data science hierarchy of needs.1282\n\nT.J. Dilling\n\nAdvances in Radiation Oncology: NovembereDecember 2020\n\nFigure 2\n(a) Spreadsheets are useful where there is a one-to-one correspondence of data.(c) To accommodate all the data in our simple example, a spreadsheet needs to store redundant data (colored in red).Furthermore, as additional traits and factors are added to the spreadsheet, it becomes impossible to\nfollow, as one patient will require untold numbers of rows to capture all relevant data concepts.Stated another way, the data are\nmultidimensional.Maintenance and updating of ﬁelds become error-prone (see text).Abbreviations: DOB Z date of birth; Lname Z\nlast name; Fname Z ﬁrst name; LUL Z upper lobe; MRN Z medical record number; RLL, right lower lobe; RUL Z right upper lobe;\nSBRT Z stereotactic body radiotherapy.Relationships between the\ntables are deﬁned when creating the database tables or\nﬁelds.In the “demographics” table, medical\nrecord\nnumber, “MRN,” is the key.For the “TreatmentCourse”\nand “Chemotherapy” tables,\nthe keys are “Treatment-\nCourse” and “ChemotherapyID,” respectively.This, in\nis linked to 4 cycles of chemotherapy in the\nturn,\n“Chemotherapy” table, each of which is uniquely identi-\nﬁed in that table, in turn.When comparing Fig 3 (a database) to Fig 2c (a\nspreadsheet), note that Fig 3 contains the same informa-\ntion as Fig 2c without the addition of repetitious infor-\nmation (colored red in Fig 2c).Using the chemotherapy administrations as an\nexample, if one were to “ﬂatten” the data down to a single\nstating “4 cycles of Adriamycin/\nspreadsheet cell\nCytoxan,” one loses the dates of administration.If one\nsummarizes the data as “4 cycles of Adriamycin/Cytoxan:\n<date1>, <date2>, <date3>, <date4>,” the dates and\nthe chemotherapy occupy the same cell and the data are\nretained but are no longer discrete; one loses the ability to\nﬁlter the spreadsheet by chemotherapy kind or by date.Now, imagine a clinical database\nwith millions of rows of data spread across hundreds of\ntables, as in the real-life example described below.Clearly,\na spreadsheet would not be adequate.Additional Advantages of Relational Databases\n\n1.Each row of data in a table has a unique identiﬁer (a\nkey).Consequently, one cannot accidentally add a\nrow of data into a database table twice.2. Each ﬁeld in the database is speciﬁcally deﬁned as to\nwhat it contains (Fig 4).Consequently, if data are\nimported from some external source, the data types\nmust correspond or the import will fail.This feature helps maintain\nconsistency of data and minimize data errors. 3.If the database\ndesign states that a ﬁeld is a decimal with 3 places to\nthe right of the decimal place, then a fourth decimal\nplace would be truncated at import.Alternately, the\ndatabase could declare an error, which might also\nimply that the ﬁeld contains erroneous data.Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1283\n\n4.A key from one table can be linked “backward” to a\nkey from another table (termed a “foreign key”).As\nan example (Fig 3), the database can be designed\nsuch that the MRN from “TreatmentCourse” must\nto an MRN already contained within the\nrefer\n“Demographics” table.If one tried to import data\ninto “TreatmentCourse” and it used an MRN not\nlisted in “Demographics,” the import would fail.Such a situation might imply, for instance, that the\nMRN was incorrect in the external data source (or in\nthe database).Or perhaps it relates to a patient who\nreceived prostate radiation therapy (but you have a\nbreast cancer database). 5.Foreign key relationships also work in the opposite\ndirection: If one realizes that a patient is represented\nin the database who should not be, one can delete\nthe patient from the “Demographics” table and the\ndatabase will delete all data about that patient from\nall the other data tables automatically.6. RDBS are speciﬁcally optimized to manage vast\namounts of data.Large spreadsheets (containing\nthousands of rows and hundreds of columns) are\nextremely slow and memory intensive.However, one\ncan query across or manipulate many gigabytes of data\nin fractions of a second in many RDBS, as the data\nstores are highly optimized and efﬁcient from both a\ncomputational and memory utilization perspective.7. RDBS are much more secure than spreadsheets.An\ninstitution’s IT team might allow one to access some\ntables within an institution’s data warehouse, but not\nothers.One’s access could be restricted to deﬁned\nsubsets of patients.It is true that one can “hide” columns in a\nspreadsheet and then lock it, to prevent a given user\nfrom viewing them, but the spreadsheet maintainer\nmust do this manually before distributing the\nspreadsheet (time-consuming and prone to error).Disadvantage of SQL\n\nWith SQL, it is possible to create highly complex queries;\nit is a rich and powerful language.It has a “type” (kind) and a “size” (length).When\nimporting data from numerous external sources, these deﬁnitions can prevent erroneous imports (for details, see text).Note that the\nﬁeld “MRN” is the key for this table.All the data in this table refer back to “MRN” via a one-to-one relationship.MRN can be used as\nthe key because no 2 patients have the same MRN.Abbreviations: DOB Z date of birth; MRN Z medical record number.Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1285\n\nDatabase Implementation\n\nDatabases may, and often do, contain many thousands\nof tables and millions of rows of data.(In other words,\nthey can contain data far in excess of the requirements of\nany one radiation oncologist or even any one radiation\noncology department).In fact, some systems allow even\nsingle tables to contain terabytes or even petabytes of\ndata.5 Consequently, there are numerous systems avail-\nable to accommodate any researcher’s needs.Some of the\nvery best are open source (free).Software is available\nacross a wide variety of operating systems.There is no single solution for creating a data re-\nresearchers across all\ntrue for\npository that holds\ninstitutions.The solution can vary, depending on the re-\nsources at your institution and the level of access the IT\nDepartment has into the underlying patient data source\nsystems (often deﬁned in the institutional contracts signed\nwith the individual vendors).Some large centers have\nelaborate data warehouse systems.Some IT departments might have adequate resources to\nprovide output data from their data warehouse to individual\nresearchers, when needed.Others might not. Some might\nprovide a dedicated research server on which the researcher\ncan construct a database.Other researchers might need to\nrely instead upon existing servers within their department.I\ndo not recommend that one set up a database system on a\nfree-standing laptop or desktop machine, as there are Health\nInsurance Portability and Accountability Act concerns (the\ncomputer could be stolen).Data should be backed up across\na secured network electronically.Creation of a Lung Cancer Radiation Therapy\nDatabase\n\nI began my own database several years ago.My need\ngrew out of a sense of frustration regarding lack of access\nto clinical data.At the time, at my institution, it was a\ndifﬁcult (and somewhat mysterious) process to procure\ndata from the data warehouse.However, data from\nMosaiq (Elekta AB, Stockholm, Sweden), which is our\ndepartment’s record or verify system, were available.These data formed the nucleus of the original database.Basic demographic information and radiation therapy\nprescriptions, dates of treatment, dose delivered, tumor\nstage, and the like, were exported, using custom software.Research IT provided a Linux server, on which I imple-\nmented the database.I chose to use MariaDB (MariaDB\nis a powerful, well-regarded,\nFoundation, DE), as it\n\ncommercially supported, free, open-source database sys-\ntem whose SQL functions are congruent with those of\nOracle (which is a database system I had used previ-\nously).Because my institution could not support an\nimplementation of an Oracle, MariaDB was an excellent\nalternate option.MariaDB does include a Windows GUI\ndatabase administration tool for administering its data-\nbases (creating tables, writing SQL code, importing or\nexporting data, and the like).I had previously used a\nsimilar commercial database administration product called\nNavicat (Premium Cybertech Ltd, Hong Kong), which\nprovides similar functionality, so I elected to purchase\nthat.Similarly, I imported all data I had captured in\nresearch projects.More\nspreadsheets\nrecently, I have gained access to data from our data\nwarehouse and so have created numerous additional ta-\nbles to store the information.At present, the database\ncontains more than 3 million rows of data on approxi-\nmately 4800 patients, spread across more than 170 tables.for previous\n\nIncorporation of Data from Other\nInstitutional Data Systems\n\nTo import data from outside source systems requires a\nmultistep process, referred to as “ETL” (“Extraction,\nTransformation, and Loading”) in the data science liter-\nature.”6 The issues go far beyond the physical importation\nof data into the database; importing spreadsheets of data\nare a trivial task.There are numerous issues in ETL,\nwhich are critical to consider when designing a database\nand importing data into it.Furthermore, many of these\nissues are not inherently obvious.In fact, a large pro-\nportion of the time required to create a database and ﬁll it\nwith clinically useable data derives from the ETL\ninvolved.The oft-reproduced “Data Science Hierarchy of\nNeeds” illustrates this fact (Fig 1).Most of the discussion\nin this article addressed aspects of the bottom-most layer\nof the pyramid.ETL comprises the majority of the next 2\nlayers of the pyramid and is the topic of another article.References\n\n1. Codd ER. A relational model of data for large shared data banks.Commmunications of the ACM. 1970;13:377-387. 2. Wikipedia. SQL.Available at: https://en.wikipedia.org/wiki/SQL.Accessed February 14, 2020. 3. Wikipedia.IBM System R. Available at: https://en.wikipedia.org/\n\nwiki/IBM_System_R.Accessed February 14, 2020. 4. Dilling TJ.Artiﬁcial Intelligence (AI) for clinical analysis: Design\nand implementation of a suitable database resource.Int J Radiat\nOncol Biol Phys. 2019;105:E131-E132. 5. Wikipedia.Comparison of relational database managment systems.Available\nhttps://en.wikipedia.org/wiki/Comparison_of_\nrelational_database_management_systems.Accessed February 14,\n2020.\n\nat:\n\n6.Wikipedia. Extract, Transform, Load. Available at: https://en.wikipedia.org/wiki/Extract,_transform,_load. Accessed April 13,\n2020.",
          "time": 537.3298897743225,
          "input_token_size": 5721,
          "output_token_size": 123,
          "original_provenance_id": 0
        }
      ],
      "metadata": {
        "question_id": "database_design_article_090c8e16",
        "created_at": 1749627041.9584389,
        "processing_time": 540.9804244041443,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs_prev",
        "reason": "shorter_provenance",
        "sentence_count": 194,
        "provenance_count": 1,
        "alternatives": [
          {
            "source": "test_outputs_prev",
            "sentence_count": 194,
            "provenance_count": 1,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.666997"
      }
    }
  },
  {
    "0c99c7ed": {
      "question": "What is the name of the database system discussed in the article?",
      "answer": "MariaDB",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            166,
            167,
            168
          ],
          "provenance_ids": [
            168
          ],
          "provenance": "Because my institution could not support an\nimplementation of an Oracle, MariaDB was an excellent\nalternate option.",
          "time": 5.018755197525024,
          "input_token_size": 5383,
          "output_token_size": 12,
          "original_provenance_id": 0
        },
        {
          "provenance_id": 1,
          "input_sentence_ids": [
            169,
            170,
            171
          ],
          "provenance_ids": [
            169
          ],
          "provenance": "MariaDB does include a Windows GUI\ndatabase administration tool for administering its data-\nbases (creating tables, writing SQL code, importing or\nexporting data, and the like).",
          "time": 10.239013433456421,
          "input_token_size": 7475,
          "output_token_size": 25,
          "original_provenance_id": 1
        }
      ],
      "metadata": {
        "question_id": "database_design_article_0c99c7ed",
        "created_at": 1749665027.1772063,
        "processing_time": 18.079201698303223,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs_prev",
        "reason": "shorter_provenance",
        "sentence_count": 6,
        "provenance_count": 2,
        "alternatives": [
          {
            "source": "test_outputs_prev",
            "sentence_count": 6,
            "provenance_count": 2,
            "has_answer": true
          },
          {
            "source": "test_outputs_prev1",
            "sentence_count": 6,
            "provenance_count": 2,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.667996"
      }
    }
  },
  {
    "0ee822b3": {
      "question": "What disadvantage of spreadsheets is highlighted in the article?",
      "answer": "Spreadsheets are very inefficient relative to relational database systems, which gracefully manage one-to-many relationships.",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96
          ],
          "provenance_ids": [
            0,
            2,
            3,
            4,
            5,
            8,
            11,
            21,
            25,
            26,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            37,
            38
          ],
          "provenance": "Advances in Radiation Oncology (2020) 5, 1280-1285\n\nScientiﬁc Article\nArtiﬁcial Intelligence Research: The Utility and\nDesign of a Relational Database System\n\nwww.advancesradonc.org\n\nThomas J. Dilling, MD*\n\nDepartment of Radiation Oncology, Mofﬁtt Cancer Center\n\nReceived 13 March 2020; revised 13 April 2020; accepted 11 June 2020\n\nAbstract\nAlthough many researchers talk about a “patient database,” they typically are not referring to a database at all, but instead to a spreadsheet of\ncurated facts about a cohort of patients.At their core,\nspreadsheets are only capable of describing one-to-one (1:1) relationships.However, this article demonstrates that clinical medical data\nencapsulate numerous one-to-many relationships.Consequently, spreadsheets are very inefﬁcient relative to relational database systems,\nwhich gracefully manage such data.Databases provide other advantages, in that the data ﬁelds are “typed” (that is, they contain speciﬁc\nkinds of data).Databases store data in very efﬁcient ways, minimizing space and\nmemory requirements on the host system.Databases can be quite large (terabytes or more in size), yet still are highly efﬁcient to query.* Corresponding author: Thomas J. Dilling, MD; E-mail: Thomas.It will also discuss considerations when\nimplementing a relational database system (RDBS) for\nyour own research purposes, using an actual lung cancer\nradiation therapy database as an example.I have also\nprovided some excellent Wikipedia references\nthat\ncontain abundant additional\ninformation, beyond what\ncan be encapsulated in a single article.One might question why a database system is neces-\nsary for AI research.This article will demonstrate that a\ndatabase enables creation of a multidimensional structure\n\nhttps://doi.org/10.1016/j.adro.2020.06.027\n2452-1094/(cid:1) 2020 Published by Elsevier Inc. on behalf of American Society for Radiation Oncology.This is an open access article under the CC BY-\nNC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1281\n\nto cleanly and accurately contain these data.To perform\nAI analysis requires efﬁcient storage of hundreds or\nthousands of data points on a single patient or even on a\nsingle course of radiation therapy.There is a famous\nthe “data science hierarchy of needs”\nillustration of\n(Fig 1).To perform an AI analysis, one must ﬁrst create\nan RDBS to serve as the storage mechanism.then, will set\n\nOrigin of Relational Databases\n\nThe concept of a RDBS was ﬁrst described in a sem-\ninal article in 1970.1 The theoretic construct was that all\ndata could be deﬁned or represented as a series of re-\nlations with or to other data.The article was quantitative\nin that it used relational algebra and tuple relational cal-\nculus to prove its points.2 IBM used this theoretic\nframework to design what became the initial SQL (pro-\nnounced “see-quell” or “ess-cue-ell”) language, which\nthey used to manipulate and retrieve data from IBM’s\noriginal RDBS.3 Since that time, the American National\nStandards Institute and the International Standards Orga-\nnization have deemed SQL to be the standard language in\nrelational database communication.2 Today, there are a\nwide variety of commercial and open-source relational\ndatabase systems available for use.",
          "time": 50.43429970741272,
          "input_token_size": 5991,
          "output_token_size": 90,
          "original_provenance_id": 0
        }
      ],
      "metadata": {
        "question_id": "database_design_article_0ee822b3",
        "created_at": 1750197209.6730576,
        "processing_time": 53.24834990501404,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs",
        "reason": "shorter_provenance",
        "sentence_count": 97,
        "provenance_count": 1,
        "alternatives": [
          {
            "source": "test_outputs",
            "sentence_count": 97,
            "provenance_count": 1,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.668995"
      }
    }
  },
  {
    "1275b400": {
      "question": "What role do relational database systems play in the context of artificial intelligence research in radiation oncology?",
      "answer": "Relational database systems play a crucial role in artificial intelligence research in radiation oncology by enabling the efficient storage and management of vast amounts of clinical data, facilitating complex queries, and supporting the analysis of multidimensional data structures necessary for AI analyses.",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            138,
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            165,
            166,
            167,
            168,
            169,
            170,
            171,
            172,
            173,
            174,
            175,
            176,
            177,
            178,
            179,
            180,
            181,
            182,
            183,
            184,
            185,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            193
          ],
          "provenance_ids": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            19,
            20,
            21,
            22,
            25,
            28,
            29,
            30,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            47,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            58,
            59,
            60,
            64,
            99,
            188,
            190,
            192,
            193
          ],
          "provenance": "Advances in Radiation Oncology (2020) 5, 1280-1285\n\nScientiﬁc Article\nArtiﬁcial Intelligence Research: The Utility and\nDesign of a Relational Database System\n\nwww.advancesradonc.org\n\nThomas J. Dilling, MD*\n\nDepartment of Radiation Oncology, Mofﬁtt Cancer Center\n\nReceived 13 March 2020; revised 13 April 2020; accepted 11 June 2020\n\nAbstract\nAlthough many researchers talk about a “patient database,” they typically are not referring to a database at all, but instead to a spreadsheet of\ncurated facts about a cohort of patients.This article describes relational database systems and how they differ from spreadsheets.At their core,\nspreadsheets are only capable of describing one-to-one (1:1) relationships.However, this article demonstrates that clinical medical data\nencapsulate numerous one-to-many relationships.Consequently, spreadsheets are very inefﬁcient relative to relational database systems,\nwhich gracefully manage such data.Databases provide other advantages, in that the data ﬁelds are “typed” (that is, they contain speciﬁc\nkinds of data).This prevents users from entering spurious data during data import.Because each record contains a “key,” it becomes\nimpossible to add duplicate information (ie, add the same patient twice).Databases store data in very efﬁcient ways, minimizing space and\nmemory requirements on the host system.Likewise, databases can be queried or manipulated using a highly complex language called\nSQL.Consequently, it becomes trivial to cull large amounts of data from a vast number of data ﬁelds on very precise subsets of patients.Databases can be quite large (terabytes or more in size), yet still are highly efﬁcient to query.Consequently, with the explosion of data\navailable in electronic health records and other data sources, databases become increasingly important to contain or order these data.Ultimately, this will enable the clinical researcher to perform artiﬁcial intelligence analyses across vast amounts of clinical data in a way\nheretofore impossible.This article provides initial guidance in terms of creating a relational database system.(cid:1) 2020 Published by Elsevier Inc. on behalf of American Society for Radiation Oncology.This is an open access article under the CC BY-NC-\nND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).However, this\nvast volume of data cannot be accommodated within a\nsingle spreadsheet (which is how most clinical researchers\n\nResearch data are not available at this time. Sources of support: none.Disclosures: Dr Dilling reports personal fees and nonﬁnancial sup-\nport from NCCN, personal fees from Varian, personal fees and nonﬁ-\nnancial support from Harborside Press, nonﬁnancial support from Astra\nZeneca, all outside the submitted work.* Corresponding author: Thomas J. Dilling, MD; E-mail: Thomas.Dilling@mofﬁtt.org. work when conducting standard multivariable analyses).It will also discuss considerations when\nimplementing a relational database system (RDBS) for\nyour own research purposes, using an actual lung cancer\nradiation therapy database as an example.One might question why a database system is neces-\nsary for AI research.This article will demonstrate that a\ndatabase enables creation of a multidimensional structure\n\nhttps://doi.org/10.1016/j.adro.2020.06.027\n2452-1094/(cid:1) 2020 Published by Elsevier Inc. on behalf of American Society for Radiation Oncology.This is an open access article under the CC BY-\nNC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).To perform\nAI analysis requires efﬁcient storage of hundreds or\nthousands of data points on a single patient or even on a\nsingle course of radiation therapy.There is a famous\nthe “data science hierarchy of needs”\nillustration of\n(Fig 1).To perform an AI analysis, one must ﬁrst create\nan RDBS to serve as the storage mechanism.This crea-\ntion of a system to store structured data entails a major\npart of the bottom row of the pyramid.To create a data-\nbase,\nthe reader down the path toward\nconducting AI research at their own institution.then, will set\n\nOrigin of Relational Databases\n\nThe concept of a RDBS was ﬁrst described in a sem-\ninal article in 1970.1 The theoretic construct was that all\ndata could be deﬁned or represented as a series of re-\nlations with or to other data.The article was quantitative\nin that it used relational algebra and tuple relational cal-\nculus to prove its points.2 IBM used this theoretic\nframework to design what became the initial SQL (pro-\nnounced “see-quell” or “ess-cue-ell”) language, which\nthey used to manipulate and retrieve data from IBM’s\noriginal RDBS.3 Since that time, the American National\nStandards Institute and the International Standards Orga-\nnization have deemed SQL to be the standard language in\nrelational database communication.2 Today, there are a\nwide variety of commercial and open-source relational\ndatabase systems available for use.These vary in their\nfeatures and relative strengths or weaknesses, but,\nfundamentally,\nthey all operate using the principles\ndeﬁned in the Codd article.1 The SQL language is well\ndeﬁned and is used to write code to query (or update) the\ndata within an RDBS.Fundamental Disadvantage of Spreadsheets\n\nSpreadsheets are designed to incorporate and analyze\none-to-one (1:1) relationships (Fig 2a).Each patient has a\nsingle birth date and a single death date.However, medical\nrecords are rife with “one-to-many” relationships (Fig 2b).A patient might receive multiple different courses of radi-\nation therapy treatment, as in the example provided, or\nmight have multiple chemotherapy administrations.To\naccommodate these data, a spreadsheet quickly balloons in\nsize (Fig 2c).Not only is this inefﬁcient (duplication of\ndata), but it also makes maintenance of the spreadsheet\nextremely cumbersome and prone to error.It is not difﬁcult to imagine that a\nresearcher could neglect to update the “DeathDate” in each\nplace, introducing errors.To use a data\nscience term, the dimensionality of the data balloons.But,\nto reiterate the point, spreadsheets are only designed to\nencapsulate 1:1 relationships (2-dimensional data).But\npatient data are multidimensional.Fundamental Advantage of Relational\nDatabases\n\nRDBS gracefully manage one-to-many relationships.They can do so because a database is created of numerous\ndifferent tables, which are explicitly linked (Fig 3).Every\n\nFigure 1\nAbbreviation: AI Z artiﬁcial intelligence.The data science hierarchy of needs.Used with permission of Monica Rogati (aipyramid.com). For details, see text.For instance, each unique medical record\nnumber (MRN) represents a single patient, with a single birth/death date and a single ﬁrst and last name.(b) Spreadsheets “break down”\nwhen describing 1-to-many correspondences.In this example, 2 patients have a total of 5 courses of radiation therapy treatment between\nthem.Stated another way, the data are\nmultidimensional.6. RDBS are speciﬁcally optimized to manage vast\namounts of data.Int J Radiat\nOncol Biol Phys. 2019;105:E131-E132. 5. Wikipedia.Available\nhttps://en.wikipedia.org/wiki/Comparison_of_\nrelational_database_management_systems.Wikipedia. Extract, Transform, Load. Available at: https://en.wikipedia.org/wiki/Extract,_transform,_load. Accessed April 13,\n2020.",
          "time": 173.29460167884827,
          "input_token_size": 5733,
          "output_token_size": 173,
          "original_provenance_id": 0
        }
      ],
      "metadata": {
        "question_id": "database_design_article_1275b400",
        "created_at": 1749627035.328581,
        "processing_time": 176.85767030715942,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs_prev",
        "reason": "shorter_provenance",
        "sentence_count": 194,
        "provenance_count": 1,
        "alternatives": [
          {
            "source": "test_outputs_prev",
            "sentence_count": 194,
            "provenance_count": 1,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.669995"
      }
    }
  },
  {
    "1907b52a": {
      "question": "What is the main theme of the article published in Advances in Radiation Oncology in 2020?",
      "answer": "The main theme of the article is the utility and design of relational database systems in clinical research, particularly in the context of artificial intelligence applications in radiation oncology.",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            138,
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            165,
            166,
            167,
            168,
            169,
            170,
            171,
            172,
            173,
            174,
            175,
            176,
            177,
            178,
            179,
            180,
            181,
            182,
            183,
            184,
            185,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            193
          ],
          "provenance_ids": [
            0,
            1,
            2,
            3,
            4,
            6,
            7,
            8,
            17,
            19,
            20,
            21,
            22,
            24,
            25,
            26,
            27,
            28,
            29,
            31,
            32,
            36,
            44,
            45,
            46,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            73,
            79,
            87,
            88,
            178,
            179,
            181,
            182,
            183,
            184,
            185,
            186,
            187,
            188,
            189,
            190,
            191
          ],
          "provenance": "Advances in Radiation Oncology (2020) 5, 1280-1285\n\nScientiﬁc Article\nArtiﬁcial Intelligence Research: The Utility and\nDesign of a Relational Database System\n\nwww.advancesradonc.org\n\nThomas J. Dilling, MD*\n\nDepartment of Radiation Oncology, Mofﬁtt Cancer Center\n\nReceived 13 March 2020; revised 13 April 2020; accepted 11 June 2020\n\nAbstract\nAlthough many researchers talk about a “patient database,” they typically are not referring to a database at all, but instead to a spreadsheet of\ncurated facts about a cohort of patients.This article describes relational database systems and how they differ from spreadsheets.At their core,\nspreadsheets are only capable of describing one-to-one (1:1) relationships.However, this article demonstrates that clinical medical data\nencapsulate numerous one-to-many relationships.Consequently, spreadsheets are very inefﬁcient relative to relational database systems,\nwhich gracefully manage such data.This prevents users from entering spurious data during data import.Because each record contains a “key,” it becomes\nimpossible to add duplicate information (ie, add the same patient twice).Databases store data in very efﬁcient ways, minimizing space and\nmemory requirements on the host system.Introduction\n\nThis issue of Advances in Radiation Oncology presents\na series of articles around applications of artiﬁcial intel-\nligence (AI) in our ﬁeld.However, this\nvast volume of data cannot be accommodated within a\nsingle spreadsheet (which is how most clinical researchers\n\nResearch data are not available at this time. Sources of support: none.Disclosures: Dr Dilling reports personal fees and nonﬁnancial sup-\nport from NCCN, personal fees from Varian, personal fees and nonﬁ-\nnancial support from Harborside Press, nonﬁnancial support from Astra\nZeneca, all outside the submitted work.* Corresponding author: Thomas J. Dilling, MD; E-mail: Thomas.Dilling@mofﬁtt.org. work when conducting standard multivariable analyses).This article will demonstrate both\nwhat a relational database system is and how it is superior\nto a spreadsheet.It will also discuss considerations when\nimplementing a relational database system (RDBS) for\nyour own research purposes, using an actual lung cancer\nradiation therapy database as an example.I have also\nprovided some excellent Wikipedia references\nthat\ncontain abundant additional\ninformation, beyond what\ncan be encapsulated in a single article.(These, in turn,\nreference computer science literature for the very intrepid\nreader, but such references might extend beyond the level\nof understanding of all but the most technically inclined.)One might question why a database system is neces-\nsary for AI research.This article will demonstrate that a\ndatabase enables creation of a multidimensional structure\n\nhttps://doi.org/10.1016/j.adro.2020.06.027\n2452-1094/(cid:1) 2020 Published by Elsevier Inc. on behalf of American Society for Radiation Oncology.Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1281\n\nto cleanly and accurately contain these data.To perform\nAI analysis requires efﬁcient storage of hundreds or\nthousands of data points on a single patient or even on a\nsingle course of radiation therapy.To create a data-\nbase,\nthe reader down the path toward\nconducting AI research at their own institution.To\naccommodate these data, a spreadsheet quickly balloons in\nsize (Fig 2c).Not only is this inefﬁcient (duplication of\ndata), but it also makes maintenance of the spreadsheet\nextremely cumbersome and prone to error.For instance, in\nthis example, when patient “12345” passes away, the\n“DeathDate” needs to be updated in 5 rows of the spread-\nsheet (because she had 2 courses of radiation therapy and 4\ncycles of chemotherapy).To further expound upon the\nissue, imagine a patient who takes numerous medications or\nhas variable numbers of comorbid illnesses;\nthe rows\nrequired to encapsulate 1 patient explode.To use a data\nscience term, the dimensionality of the data balloons.But,\nto reiterate the point, spreadsheets are only designed to\nencapsulate 1:1 relationships (2-dimensional data).But\npatient data are multidimensional.Fundamental Advantage of Relational\nDatabases\n\nRDBS gracefully manage one-to-many relationships.They can do so because a database is created of numerous\ndifferent tables, which are explicitly linked (Fig 3).Every\n\nFigure 1\nAbbreviation: AI Z artiﬁcial intelligence.The data science hierarchy of needs.Used with permission of Monica Rogati (aipyramid.com). For details, see text.Stated another way, the data are\nmultidimensional.Maintenance and updating of ﬁelds become error-prone (see text).Abbreviations: DOB Z date of birth; Lname Z\nlast name; Fname Z ﬁrst name; LUL Z upper lobe; MRN Z medical record number; RLL, right lower lobe; RUL Z right upper lobe;\nSBRT Z stereotactic body radiotherapy.table must also contain a key, which is a unique, required\nidentiﬁer for each row of data.Relationships between the\ntables are deﬁned when creating the database tables or\nﬁelds.In the “demographics” table, medical\nrecord\nnumber, “MRN,” is the key.For the “TreatmentCourse”\nand “Chemotherapy” tables,\nthe keys are “Treatment-\nCourse” and “ChemotherapyID,” respectively.When comparing Fig 3 (a database) to Fig 2c (a\nspreadsheet), note that Fig 3 contains the same informa-\ntion as Fig 2c without the addition of repetitious infor-\nmation (colored red in Fig 2c).But because it can contain multiple rows of\ndata on 1 patient (chemotherapy administrations, to follow\nthe same example), a multidimensional structure is created,\nas 4 chemotherapy cycles link to one of 2 courses of radi-\nation therapy (“TreatmentCourse” table) for 1 patient\n(“Demographics” table).For example,\nif an entry contained an integer where a date was\nindicated, the database would signal that the variable\ncontained erroneous data.This feature helps maintain\nconsistency of data and minimize data errors. 3.The oft-reproduced “Data Science Hierarchy of\nNeeds” illustrates this fact (Fig 1).Most of the discussion\nin this article addressed aspects of the bottom-most layer\nof the pyramid.References\n\n1. Codd ER. A relational model of data for large shared data banks.Commmunications of the ACM. 1970;13:377-387. 2. Wikipedia. SQL.Available at: https://en.wikipedia.org/wiki/SQL.Accessed February 14, 2020. 3. Wikipedia.IBM System R. Available at: https://en.wikipedia.org/\n\nwiki/IBM_System_R.Accessed February 14, 2020. 4. Dilling TJ.Artiﬁcial Intelligence (AI) for clinical analysis: Design\nand implementation of a suitable database resource.Int J Radiat\nOncol Biol Phys. 2019;105:E131-E132. 5. Wikipedia.Comparison of relational database managment systems.Available\nhttps://en.wikipedia.org/wiki/Comparison_of_\nrelational_database_management_systems.Accessed February 14,\n2020.\n\nat:\n\n6.",
          "time": 114.87531113624573,
          "input_token_size": 5735,
          "output_token_size": 31,
          "original_provenance_id": 0
        }
      ],
      "metadata": {
        "question_id": "database_design_article_1907b52a",
        "created_at": 1750197157.0336807,
        "processing_time": 117.79460120201111,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs",
        "reason": "shorter_provenance",
        "sentence_count": 194,
        "provenance_count": 1,
        "alternatives": [
          {
            "source": "test_outputs",
            "sentence_count": 194,
            "provenance_count": 1,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.669995"
      }
    }
  },
  {
    "1a4a5dd6": {
      "question": "What are the key findings regarding the use of SQL in relational database systems?",
      "answer": "1. SQL is a standardized language for composing queries within a relational database system (RDBS).\n2. SQL allows for searching and manipulating data across multiple tables simultaneously.\n3. Queries in SQL can be saved for reuse or modification later.\n4. SQL queries typically produce output in fractions of a second, even across vast pools of data.\n5. SQL can create highly complex queries, which may be complicated for nontechnical users.\n6. Some database systems provide graphical tools to help build SQL queries.",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            138,
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            165,
            166,
            167,
            168,
            169,
            170,
            171,
            172,
            173,
            174,
            175,
            176,
            177,
            178,
            179,
            180,
            181,
            182,
            183,
            184,
            185,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            193
          ],
          "provenance_ids": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            38,
            39,
            40,
            52,
            57,
            58,
            63,
            64,
            65,
            66,
            67,
            75,
            79,
            80,
            81,
            83,
            87,
            88,
            89,
            90,
            92,
            93,
            95,
            96,
            97,
            98,
            99,
            100,
            108,
            109,
            111,
            112,
            113,
            114,
            116,
            117,
            118,
            119,
            121,
            123,
            124,
            134,
            135,
            137,
            145,
            149,
            151,
            160,
            162,
            163,
            164,
            165,
            167,
            168,
            171,
            172,
            173,
            175,
            176,
            177,
            178,
            179,
            180,
            182,
            184,
            185,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            193
          ],
          "provenance": "Advances in Radiation Oncology (2020) 5, 1280-1285\n\nScientiﬁc Article\nArtiﬁcial Intelligence Research: The Utility and\nDesign of a Relational Database System\n\nwww.advancesradonc.org\n\nThomas J. Dilling, MD*\n\nDepartment of Radiation Oncology, Mofﬁtt Cancer Center\n\nReceived 13 March 2020; revised 13 April 2020; accepted 11 June 2020\n\nAbstract\nAlthough many researchers talk about a “patient database,” they typically are not referring to a database at all, but instead to a spreadsheet of\ncurated facts about a cohort of patients.This article describes relational database systems and how they differ from spreadsheets.At their core,\nspreadsheets are only capable of describing one-to-one (1:1) relationships.However, this article demonstrates that clinical medical data\nencapsulate numerous one-to-many relationships.Consequently, spreadsheets are very inefﬁcient relative to relational database systems,\nwhich gracefully manage such data.Databases provide other advantages, in that the data ﬁelds are “typed” (that is, they contain speciﬁc\nkinds of data).This prevents users from entering spurious data during data import.Because each record contains a “key,” it becomes\nimpossible to add duplicate information (ie, add the same patient twice).Databases store data in very efﬁcient ways, minimizing space and\nmemory requirements on the host system.Likewise, databases can be queried or manipulated using a highly complex language called\nSQL.Consequently, it becomes trivial to cull large amounts of data from a vast number of data ﬁelds on very precise subsets of patients.Databases can be quite large (terabytes or more in size), yet still are highly efﬁcient to query.Consequently, with the explosion of data\navailable in electronic health records and other data sources, databases become increasingly important to contain or order these data.Ultimately, this will enable the clinical researcher to perform artiﬁcial intelligence analyses across vast amounts of clinical data in a way\nheretofore impossible.This article provides initial guidance in terms of creating a relational database system.(cid:1) 2020 Published by Elsevier Inc. on behalf of American Society for Radiation Oncology.This is an open access article under the CC BY-NC-\nND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).Introduction\n\nThis issue of Advances in Radiation Oncology presents\na series of articles around applications of artiﬁcial intel-\nligence (AI) in our ﬁeld.One of the potential beneﬁts of\nAI is that it can pore through large amounts of data to\ndiscover patterns not evident to clinicians.However, this\nvast volume of data cannot be accommodated within a\nsingle spreadsheet (which is how most clinical researchers\n\nResearch data are not available at this time. Sources of support: none.Disclosures: Dr Dilling reports personal fees and nonﬁnancial sup-\nport from NCCN, personal fees from Varian, personal fees and nonﬁ-\nnancial support from Harborside Press, nonﬁnancial support from Astra\nZeneca, all outside the submitted work.* Corresponding author: Thomas J. Dilling, MD; E-mail: Thomas.Dilling@mofﬁtt.org. work when conducting standard multivariable analyses).In fact, many researchers erroneously describe spread-\nsheets as databases.This article will demonstrate both\nwhat a relational database system is and how it is superior\nto a spreadsheet.It will also discuss considerations when\nimplementing a relational database system (RDBS) for\nyour own research purposes, using an actual lung cancer\nradiation therapy database as an example.I have also\nprovided some excellent Wikipedia references\nthat\ncontain abundant additional\ninformation, beyond what\ncan be encapsulated in a single article.(These, in turn,\nreference computer science literature for the very intrepid\nreader, but such references might extend beyond the level\nof understanding of all but the most technically inclined.)One might question why a database system is neces-\nsary for AI research.This article will demonstrate that a\ndatabase enables creation of a multidimensional structure\n\nhttps://doi.org/10.1016/j.adro.2020.06.027\n2452-1094/(cid:1) 2020 Published by Elsevier Inc. on behalf of American Society for Radiation Oncology.This is an open access article under the CC BY-\nNC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1281\n\nto cleanly and accurately contain these data.To perform\nAI analysis requires efﬁcient storage of hundreds or\nthousands of data points on a single patient or even on a\nsingle course of radiation therapy.There is a famous\nthe “data science hierarchy of needs”\nillustration of\n(Fig 1).To perform an AI analysis, one must ﬁrst create\nan RDBS to serve as the storage mechanism.This crea-\ntion of a system to store structured data entails a major\npart of the bottom row of the pyramid.To create a data-\nbase,\nthe reader down the path toward\nconducting AI research at their own institution.The article was quantitative\nin that it used relational algebra and tuple relational cal-\nculus to prove its points.2 IBM used this theoretic\nframework to design what became the initial SQL (pro-\nnounced “see-quell” or “ess-cue-ell”) language, which\nthey used to manipulate and retrieve data from IBM’s\noriginal RDBS.3 Since that time, the American National\nStandards Institute and the International Standards Orga-\nnization have deemed SQL to be the standard language in\nrelational database communication.2 Today, there are a\nwide variety of commercial and open-source relational\ndatabase systems available for use.These vary in their\nfeatures and relative strengths or weaknesses, but,\nfundamentally,\nthey all operate using the principles\ndeﬁned in the Codd article.1 The SQL language is well\ndeﬁned and is used to write code to query (or update) the\ndata within an RDBS.Fundamental Disadvantage of Spreadsheets\n\nSpreadsheets are designed to incorporate and analyze\none-to-one (1:1) relationships (Fig 2a).Fundamental Advantage of Relational\nDatabases\n\nRDBS gracefully manage one-to-many relationships.1282\n\nT.J. Dilling\n\nAdvances in Radiation Oncology: NovembereDecember 2020\n\nFigure 2\n(a) Spreadsheets are useful where there is a one-to-one correspondence of data.For instance, each unique medical record\nnumber (MRN) represents a single patient, with a single birth/death date and a single ﬁrst and last name.Furthermore, as additional traits and factors are added to the spreadsheet, it becomes impossible to\nfollow, as one patient will require untold numbers of rows to capture all relevant data concepts.Stated another way, the data are\nmultidimensional.Maintenance and updating of ﬁelds become error-prone (see text).Abbreviations: DOB Z date of birth; Lname Z\nlast name; Fname Z ﬁrst name; LUL Z upper lobe; MRN Z medical record number; RLL, right lower lobe; RUL Z right upper lobe;\nSBRT Z stereotactic body radiotherapy.table must also contain a key, which is a unique, required\nidentiﬁer for each row of data.Using the chemotherapy administrations as an\nexample, if one were to “ﬂatten” the data down to a single\nstating “4 cycles of Adriamycin/\nspreadsheet cell\nCytoxan,” one loses the dates of administration.But because it can contain multiple rows of\ndata on 1 patient (chemotherapy administrations, to follow\nthe same example), a multidimensional structure is created,\nas 4 chemotherapy cycles link to one of 2 courses of radi-\nation therapy (“TreatmentCourse” table) for 1 patient\n(“Demographics” table).Now, imagine a clinical database\nwith millions of rows of data spread across hundreds of\ntables, as in the real-life example described below.Clearly,\na spreadsheet would not be adequate.Each row of data in a table has a unique identiﬁer (a\nkey).For example,\nif an entry contained an integer where a date was\nindicated, the database would signal that the variable\ncontained erroneous data.This feature helps maintain\nconsistency of data and minimize data errors. 3.Not only must the data types correspond, but the\ndata lengths must be observed.If the database\ndesign states that a ﬁeld is a decimal with 3 places to\nthe right of the decimal place, then a fourth decimal\nplace would be truncated at import.Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1283\n\n4.A key from one table can be linked “backward” to a\nkey from another table (termed a “foreign key”).If one tried to import data\ninto “TreatmentCourse” and it used an MRN not\nlisted in “Demographics,” the import would fail.Such a situation might imply, for instance, that the\nMRN was incorrect in the external data source (or in\nthe database).Or perhaps it relates to a patient who\nreceived prostate radiation therapy (but you have a\nbreast cancer database). 5.Foreign key relationships also work in the opposite\ndirection: If one realizes that a patient is represented\nin the database who should not be, one can delete\nthe patient from the “Demographics” table and the\ndatabase will delete all data about that patient from\nall the other data tables automatically.6. RDBS are speciﬁcally optimized to manage vast\namounts of data.Large spreadsheets (containing\nthousands of rows and hundreds of columns) are\nextremely slow and memory intensive.In contrast, an\nExcel spreadsheet can be “locked” such that only\nsome ﬁelds are editable.But it is not possible to\nrestrict data access by user.It is true that one can “hide” columns in a\nspreadsheet and then lock it, to prevent a given user\nfrom viewing them, but the spreadsheet maintainer\nmust do this manually before distributing the\nspreadsheet (time-consuming and prone to error).Beneﬁts of SQL\n\nAs described earlier, SQL is a deﬁned, standardized\nlanguage for composing queries within an RDBS, or to\n\nmanipulate and update these data.Some database systems\nprovide “extensions” to the SQL standard, to provide some\nadditional and speciﬁc functionality (details available in the\nvendors’ literature).It is beyond the scope of this article to\nteach SQL coding.Functionally,\nSQL allows one to search for any number of variables or\ncombinations of variables across any number of tables,\nsimultaneously.This can be extremely powerful and useful,\nboth for retrieving and for manipulating and updating data.Queries can be saved for reuse or modiﬁcation later.As\nstated above, these queries typically produce output in\nfractions of a second, even across vast pools of data.For\nthis particular study,\nthey must have previously\nreceived lung SBRT, have nonmetastatic disease, no\nevidence of recurrence, be alive (obviously), be at\nleast 2 years out from the end of the prior SBRT\ntreatment, and must have been seen in follow-up\nwithin the past 1.5 years.(cid:1) Real-life example 2: It takes only a few minutes to\nset up very complex queries.If one has a basic fa-\ncility with SQL, one can design a query such as:\n“Find all patients with stage II or III lung cancer\ntreated with concurrent chemoradiotherapy who\ndeveloped neutropenia during treatment, who are\nfemale, 70 years of age or older, and who take any\nantihypertensive medication (deﬁned in a certain\nlist).” Ultimately, such queries are only limited by\none’s imagination (and the richness or completeness\nof the data coming from the source systems).Abbreviations: DOB Z date of birth.Disadvantage of SQL\n\nWith SQL, it is possible to create highly complex queries;\nit is a rich and powerful language.Some\nsystems do provide graphical tools to help build SQL queries,\nbut, even so, there are some users for whom all but the\nsimplest SQL queries will be beyond their technical skills.Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1285\n\nDatabase Implementation\n\nDatabases may, and often do, contain many thousands\nof tables and millions of rows of data.Software is available\nacross a wide variety of operating systems.There is no single solution for creating a data re-\nresearchers across all\ntrue for\npository that holds\ninstitutions.Creation of a Lung Cancer Radiation Therapy\nDatabase\n\nI began my own database several years ago.At the time, at my institution, it was a\ndifﬁcult (and somewhat mysterious) process to procure\ndata from the data warehouse.However, data from\nMosaiq (Elekta AB, Stockholm, Sweden), which is our\ndepartment’s record or verify system, were available.These data formed the nucleus of the original database.Basic demographic information and radiation therapy\nprescriptions, dates of treatment, dose delivered, tumor\nstage, and the like, were exported, using custom software.I chose to use MariaDB (MariaDB\nis a powerful, well-regarded,\nFoundation, DE), as it\n\ncommercially supported, free, open-source database sys-\ntem whose SQL functions are congruent with those of\nOracle (which is a database system I had used previ-\nously).Because my institution could not support an\nimplementation of an Oracle, MariaDB was an excellent\nalternate option.Similarly, I imported all data I had captured in\nresearch projects.More\nspreadsheets\nrecently, I have gained access to data from our data\nwarehouse and so have created numerous additional ta-\nbles to store the information.At present, the database\ncontains more than 3 million rows of data on approxi-\nmately 4800 patients, spread across more than 170 tables.There are numerous issues in ETL,\nwhich are critical to consider when designing a database\nand importing data into it.Furthermore, many of these\nissues are not inherently obvious.In fact, a large pro-\nportion of the time required to create a database and ﬁll it\nwith clinically useable data derives from the ETL\ninvolved.The oft-reproduced “Data Science Hierarchy of\nNeeds” illustrates this fact (Fig 1).Most of the discussion\nin this article addressed aspects of the bottom-most layer\nof the pyramid.ETL comprises the majority of the next 2\nlayers of the pyramid and is the topic of another article.Commmunications of the ACM. 1970;13:377-387. 2. Wikipedia. SQL.Accessed February 14, 2020. 3. Wikipedia.IBM System R. Available at: https://en.wikipedia.org/\n\nwiki/IBM_System_R.Accessed February 14, 2020. 4. Dilling TJ.Artiﬁcial Intelligence (AI) for clinical analysis: Design\nand implementation of a suitable database resource.Int J Radiat\nOncol Biol Phys. 2019;105:E131-E132. 5. Wikipedia.Comparison of relational database managment systems.Available\nhttps://en.wikipedia.org/wiki/Comparison_of_\nrelational_database_management_systems.Accessed February 14,\n2020.\n\nat:\n\n6.Wikipedia. Extract, Transform, Load. Available at: https://en.wikipedia.org/wiki/Extract,_transform,_load. Accessed April 13,\n2020.",
          "time": 408.1033363342285,
          "input_token_size": 5727,
          "output_token_size": 274,
          "original_provenance_id": 0
        }
      ],
      "metadata": {
        "question_id": "database_design_article_1a4a5dd6",
        "created_at": 1749869529.9303236,
        "processing_time": 411.3725788593292,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs_prev1",
        "reason": "shorter_provenance",
        "sentence_count": 194,
        "provenance_count": 1,
        "alternatives": [
          {
            "source": "test_outputs_prev1",
            "sentence_count": 194,
            "provenance_count": 1,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.669995"
      }
    }
  },
  {
    "1b29c976": {
      "question": "How does the article describe the implementation example of a relational database system?",
      "answer": "The article describes the implementation example of a relational database system as follows:\n\n1. The author began their own database several years ago due to frustration with lack of access to clinical data.\n2. Data from Mosaiq (Elekta AB, Stockholm, Sweden), the department’s record or verify system, formed the nucleus of the original database.\n3. Basic demographic information and radiation therapy prescriptions, dates of treatment, dose delivered, tumor stage, and similar data were exported using custom software.\n4. Research IT provided a Linux server for the database implementation.\n5. The author chose to use MariaDB, a free, open-source database system, due to its SQL functions being congruent with those of Oracle.\n6. The database currently contains more than 3 million rows of data on approximately 4800 patients, spread across more than 170 tables.\n7. Importing data from outside source systems requires a multistep process referred to as “ETL” (Extraction, Transformation, and Loading).",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            138,
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            165,
            166,
            167,
            168,
            169,
            170,
            171,
            172,
            173,
            174,
            175,
            176,
            177,
            178,
            179,
            180,
            181,
            182,
            183,
            184,
            185,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            193
          ],
          "provenance_ids": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            138,
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            165,
            166,
            167,
            168,
            169,
            170,
            171,
            172,
            173,
            174,
            175,
            176,
            177,
            178,
            179,
            180,
            181,
            182,
            183,
            184,
            185,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            193
          ],
          "provenance": "Advances in Radiation Oncology (2020) 5, 1280-1285\n\nScientiﬁc Article\nArtiﬁcial Intelligence Research: The Utility and\nDesign of a Relational Database System\n\nwww.advancesradonc.org\n\nThomas J. Dilling, MD*\n\nDepartment of Radiation Oncology, Mofﬁtt Cancer Center\n\nReceived 13 March 2020; revised 13 April 2020; accepted 11 June 2020\n\nAbstract\nAlthough many researchers talk about a “patient database,” they typically are not referring to a database at all, but instead to a spreadsheet of\ncurated facts about a cohort of patients.This article describes relational database systems and how they differ from spreadsheets.At their core,\nspreadsheets are only capable of describing one-to-one (1:1) relationships.However, this article demonstrates that clinical medical data\nencapsulate numerous one-to-many relationships.Consequently, spreadsheets are very inefﬁcient relative to relational database systems,\nwhich gracefully manage such data.Databases provide other advantages, in that the data ﬁelds are “typed” (that is, they contain speciﬁc\nkinds of data).This prevents users from entering spurious data during data import.Because each record contains a “key,” it becomes\nimpossible to add duplicate information (ie, add the same patient twice).Databases store data in very efﬁcient ways, minimizing space and\nmemory requirements on the host system.Likewise, databases can be queried or manipulated using a highly complex language called\nSQL.Consequently, it becomes trivial to cull large amounts of data from a vast number of data ﬁelds on very precise subsets of patients.Databases can be quite large (terabytes or more in size), yet still are highly efﬁcient to query.Consequently, with the explosion of data\navailable in electronic health records and other data sources, databases become increasingly important to contain or order these data.Ultimately, this will enable the clinical researcher to perform artiﬁcial intelligence analyses across vast amounts of clinical data in a way\nheretofore impossible.This article provides initial guidance in terms of creating a relational database system.(cid:1) 2020 Published by Elsevier Inc. on behalf of American Society for Radiation Oncology.This is an open access article under the CC BY-NC-\nND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).Introduction\n\nThis issue of Advances in Radiation Oncology presents\na series of articles around applications of artiﬁcial intel-\nligence (AI) in our ﬁeld.One of the potential beneﬁts of\nAI is that it can pore through large amounts of data to\ndiscover patterns not evident to clinicians.However, this\nvast volume of data cannot be accommodated within a\nsingle spreadsheet (which is how most clinical researchers\n\nResearch data are not available at this time. Sources of support: none.Disclosures: Dr Dilling reports personal fees and nonﬁnancial sup-\nport from NCCN, personal fees from Varian, personal fees and nonﬁ-\nnancial support from Harborside Press, nonﬁnancial support from Astra\nZeneca, all outside the submitted work.* Corresponding author: Thomas J. Dilling, MD; E-mail: Thomas.Dilling@mofﬁtt.org. work when conducting standard multivariable analyses).In fact, many researchers erroneously describe spread-\nsheets as databases.This article will demonstrate both\nwhat a relational database system is and how it is superior\nto a spreadsheet.It will also discuss considerations when\nimplementing a relational database system (RDBS) for\nyour own research purposes, using an actual lung cancer\nradiation therapy database as an example.I have also\nprovided some excellent Wikipedia references\nthat\ncontain abundant additional\ninformation, beyond what\ncan be encapsulated in a single article.(These, in turn,\nreference computer science literature for the very intrepid\nreader, but such references might extend beyond the level\nof understanding of all but the most technically inclined.)One might question why a database system is neces-\nsary for AI research.This article will demonstrate that a\ndatabase enables creation of a multidimensional structure\n\nhttps://doi.org/10.1016/j.adro.2020.06.027\n2452-1094/(cid:1) 2020 Published by Elsevier Inc. on behalf of American Society for Radiation Oncology.This is an open access article under the CC BY-\nNC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1281\n\nto cleanly and accurately contain these data.To perform\nAI analysis requires efﬁcient storage of hundreds or\nthousands of data points on a single patient or even on a\nsingle course of radiation therapy.There is a famous\nthe “data science hierarchy of needs”\nillustration of\n(Fig 1).To perform an AI analysis, one must ﬁrst create\nan RDBS to serve as the storage mechanism.This crea-\ntion of a system to store structured data entails a major\npart of the bottom row of the pyramid.To create a data-\nbase,\nthe reader down the path toward\nconducting AI research at their own institution.then, will set\n\nOrigin of Relational Databases\n\nThe concept of a RDBS was ﬁrst described in a sem-\ninal article in 1970.1 The theoretic construct was that all\ndata could be deﬁned or represented as a series of re-\nlations with or to other data.The article was quantitative\nin that it used relational algebra and tuple relational cal-\nculus to prove its points.2 IBM used this theoretic\nframework to design what became the initial SQL (pro-\nnounced “see-quell” or “ess-cue-ell”) language, which\nthey used to manipulate and retrieve data from IBM’s\noriginal RDBS.3 Since that time, the American National\nStandards Institute and the International Standards Orga-\nnization have deemed SQL to be the standard language in\nrelational database communication.2 Today, there are a\nwide variety of commercial and open-source relational\ndatabase systems available for use.These vary in their\nfeatures and relative strengths or weaknesses, but,\nfundamentally,\nthey all operate using the principles\ndeﬁned in the Codd article.1 The SQL language is well\ndeﬁned and is used to write code to query (or update) the\ndata within an RDBS.Fundamental Disadvantage of Spreadsheets\n\nSpreadsheets are designed to incorporate and analyze\none-to-one (1:1) relationships (Fig 2a).Each patient has a\nsingle birth date and a single death date.However, medical\nrecords are rife with “one-to-many” relationships (Fig 2b).A patient might receive multiple different courses of radi-\nation therapy treatment, as in the example provided, or\nmight have multiple chemotherapy administrations.To\naccommodate these data, a spreadsheet quickly balloons in\nsize (Fig 2c).Not only is this inefﬁcient (duplication of\ndata), but it also makes maintenance of the spreadsheet\nextremely cumbersome and prone to error.For instance, in\nthis example, when patient “12345” passes away, the\n“DeathDate” needs to be updated in 5 rows of the spread-\nsheet (because she had 2 courses of radiation therapy and 4\ncycles of chemotherapy).It is not difﬁcult to imagine that a\nresearcher could neglect to update the “DeathDate” in each\nplace, introducing errors.To further expound upon the\nissue, imagine a patient who takes numerous medications or\nhas variable numbers of comorbid illnesses;\nthe rows\nrequired to encapsulate 1 patient explode.To use a data\nscience term, the dimensionality of the data balloons.But,\nto reiterate the point, spreadsheets are only designed to\nencapsulate 1:1 relationships (2-dimensional data).But\npatient data are multidimensional.Fundamental Advantage of Relational\nDatabases\n\nRDBS gracefully manage one-to-many relationships.They can do so because a database is created of numerous\ndifferent tables, which are explicitly linked (Fig 3).Every\n\nFigure 1\nAbbreviation: AI Z artiﬁcial intelligence.The data science hierarchy of needs.Used with permission of Monica Rogati (aipyramid.com). For details, see text.1282\n\nT.J. Dilling\n\nAdvances in Radiation Oncology: NovembereDecember 2020\n\nFigure 2\n(a) Spreadsheets are useful where there is a one-to-one correspondence of data.For instance, each unique medical record\nnumber (MRN) represents a single patient, with a single birth/death date and a single ﬁrst and last name.(b) Spreadsheets “break down”\nwhen describing 1-to-many correspondences.In this example, 2 patients have a total of 5 courses of radiation therapy treatment between\nthem.(c) To accommodate all the data in our simple example, a spreadsheet needs to store redundant data (colored in red).The data\nstorage requirements quickly balloon.Furthermore, as additional traits and factors are added to the spreadsheet, it becomes impossible to\nfollow, as one patient will require untold numbers of rows to capture all relevant data concepts.Stated another way, the data are\nmultidimensional.Maintenance and updating of ﬁelds become error-prone (see text).Abbreviations: DOB Z date of birth; Lname Z\nlast name; Fname Z ﬁrst name; LUL Z upper lobe; MRN Z medical record number; RLL, right lower lobe; RUL Z right upper lobe;\nSBRT Z stereotactic body radiotherapy.table must also contain a key, which is a unique, required\nidentiﬁer for each row of data.Relationships between the\ntables are deﬁned when creating the database tables or\nﬁelds.In the “demographics” table, medical\nrecord\nnumber, “MRN,” is the key.For the “TreatmentCourse”\nand “Chemotherapy” tables,\nthe keys are “Treatment-\nCourse” and “ChemotherapyID,” respectively.Note that\n“TreatmentCourse 1” in the “TreatmentCourse” table\npertains to breast radiation therapy treatment.This, in\nis linked to 4 cycles of chemotherapy in the\nturn,\n“Chemotherapy” table, each of which is uniquely identi-\nﬁed in that table, in turn.When comparing Fig 3 (a database) to Fig 2c (a\nspreadsheet), note that Fig 3 contains the same informa-\ntion as Fig 2c without the addition of repetitious infor-\nmation (colored red in Fig 2c).Alternately,\nin a\nspreadsheet, the researcher could manually aggregate and\nsummarize the chemotherapy delivered into a single cell\nin a single row of the spreadsheet (ie, “ﬂatten” the data, to\nuse a data science term), but then some data would be\nlost.Using the chemotherapy administrations as an\nexample, if one were to “ﬂatten” the data down to a single\nstating “4 cycles of Adriamycin/\nspreadsheet cell\nCytoxan,” one loses the dates of administration.If one\nsummarizes the data as “4 cycles of Adriamycin/Cytoxan:\n<date1>, <date2>, <date3>, <date4>,” the dates and\nthe chemotherapy occupy the same cell and the data are\nretained but are no longer discrete; one loses the ability to\nﬁlter the spreadsheet by chemotherapy kind or by date.Conversely, a SQL database cleanly encapsulates these\nmultidimensional data (Fig 3).Each table is 2-dimensional\n\nin structure.But because it can contain multiple rows of\ndata on 1 patient (chemotherapy administrations, to follow\nthe same example), a multidimensional structure is created,\nas 4 chemotherapy cycles link to one of 2 courses of radi-\nation therapy (“TreatmentCourse” table) for 1 patient\n(“Demographics” table).Now, imagine a clinical database\nwith millions of rows of data spread across hundreds of\ntables, as in the real-life example described below.Clearly,\na spreadsheet would not be adequate.Additional Advantages of Relational Databases\n\n1.Each row of data in a table has a unique identiﬁer (a\nkey).Consequently, one cannot accidentally add a\nrow of data into a database table twice.2. Each ﬁeld in the database is speciﬁcally deﬁned as to\nwhat it contains (Fig 4).Consequently, if data are\nimported from some external source, the data types\nmust correspond or the import will fail.For example,\nif an entry contained an integer where a date was\nindicated, the database would signal that the variable\ncontained erroneous data.This feature helps maintain\nconsistency of data and minimize data errors. 3.Not only must the data types correspond, but the\ndata lengths must be observed.If the database\ndesign states that a ﬁeld is a decimal with 3 places to\nthe right of the decimal place, then a fourth decimal\nplace would be truncated at import.Alternately, the\ndatabase could declare an error, which might also\nimply that the ﬁeld contains erroneous data.Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1283\n\n4.A key from one table can be linked “backward” to a\nkey from another table (termed a “foreign key”).As\nan example (Fig 3), the database can be designed\nsuch that the MRN from “TreatmentCourse” must\nto an MRN already contained within the\nrefer\n“Demographics” table.If one tried to import data\ninto “TreatmentCourse” and it used an MRN not\nlisted in “Demographics,” the import would fail.Such a situation might imply, for instance, that the\nMRN was incorrect in the external data source (or in\nthe database).Or perhaps it relates to a patient who\nreceived prostate radiation therapy (but you have a\nbreast cancer database). 5.Foreign key relationships also work in the opposite\ndirection: If one realizes that a patient is represented\nin the database who should not be, one can delete\nthe patient from the “Demographics” table and the\ndatabase will delete all data about that patient from\nall the other data tables automatically.6. RDBS are speciﬁcally optimized to manage vast\namounts of data.Large spreadsheets (containing\nthousands of rows and hundreds of columns) are\nextremely slow and memory intensive.However, one\ncan query across or manipulate many gigabytes of data\nin fractions of a second in many RDBS, as the data\nstores are highly optimized and efﬁcient from both a\ncomputational and memory utilization perspective.7. RDBS are much more secure than spreadsheets.An\ninstitution’s IT team might allow one to access some\ntables within an institution’s data warehouse, but not\nothers.One’s access could be restricted to deﬁned\nsubsets of patients.One might have “read” access to\nthese data, but not “write” access (or “write” access to\nonly some subset of ﬁelds).Databases might likewise\nbe set up such that only users from speciﬁc IP ad-\ndresses or computers may access them.The login\nsystems set up by IT departments for these purposes\ntypically use state of the art encryption algorithms, 2-\nfactor authentication, and the like.In contrast, an\nExcel spreadsheet can be “locked” such that only\nsome ﬁelds are editable.But it is not possible to\nrestrict data access by user.Furthermore, this re-\nstriction is to “write” access only, not to “read” ac-\ncess.It is true that one can “hide” columns in a\nspreadsheet and then lock it, to prevent a given user\nfrom viewing them, but the spreadsheet maintainer\nmust do this manually before distributing the\nspreadsheet (time-consuming and prone to error).Beneﬁts of SQL\n\nAs described earlier, SQL is a deﬁned, standardized\nlanguage for composing queries within an RDBS, or to\n\nmanipulate and update these data.Some database systems\nprovide “extensions” to the SQL standard, to provide some\nadditional and speciﬁc functionality (details available in the\nvendors’ literature).It is beyond the scope of this article to\nteach SQL coding.However, many excellent online re-\nsources are available for the interested reader.Functionally,\nSQL allows one to search for any number of variables or\ncombinations of variables across any number of tables,\nsimultaneously.This can be extremely powerful and useful,\nboth for retrieving and for manipulating and updating data.Queries can be saved for reuse or modiﬁcation later.As\nstated above, these queries typically produce output in\nfractions of a second, even across vast pools of data.Our institution has a database of patients who have\nreceived radiation therapy to the lung, whether for pri-\nmary cancer or metastatic disease to the lung.4 The\ndatabase and some of its details of implementation are\ndescribed below, but ﬁrst, some “real-life” examples of\nwhat such an RDBS system can do (not possible when\nusing a spreadsheet):\n\n(cid:1) Real-life example 1: Find patients who might be\ncandidates for a certain lung cancer clinical trial.For\nthis particular study,\nthey must have previously\nreceived lung SBRT, have nonmetastatic disease, no\nevidence of recurrence, be alive (obviously), be at\nleast 2 years out from the end of the prior SBRT\ntreatment, and must have been seen in follow-up\nwithin the past 1.5 years.By constructing an\nappropriate SQL query, 135 patients were found (out\nof more than 4600 in the database) to pass along to\nthe PI for closer inspection.(cid:1) Real-life example 2: It takes only a few minutes to\nset up very complex queries.If one has a basic fa-\ncility with SQL, one can design a query such as:\n“Find all patients with stage II or III lung cancer\ntreated with concurrent chemoradiotherapy who\ndeveloped neutropenia during treatment, who are\nfemale, 70 years of age or older, and who take any\nantihypertensive medication (deﬁned in a certain\nlist).” Ultimately, such queries are only limited by\none’s imagination (and the richness or completeness\nof the data coming from the source systems).It is true that one can “ﬁlter” data in Excel to rapidly\nﬁnd subsets.However, this ﬁltering is limited to “true or\nfalse” matching.In this example, it would be impossible\nto discover the patients who developed neutropenia while\nundergoing radiation therapy unless one had a “neu-\ntropenia (yes or no)” column.But one cannot perform the\narithmetic “where date of neutropenia > Radiation-\nStartDate and < RadiationEndDate” to ﬁlter the data\nwithout writing code in Visual Basic, which is likely\nbeyond the ability of most.1284\n\nT.J. Dilling\n\nAdvances in Radiation Oncology: NovembereDecember 2020\n\nIn a relational database, data are stored in multiple tables, which are joined via deﬁned variables.In this ﬁctitious example,\nFigure 3\nnote that the patient only has one “DeathDate” to update.Furthermore, each course of treatment (“TreatmentCourse”) can have multiple\nchemotherapy cycles associated with it.Note, too, that medical record number (MRN) only appears in 2 of the 3 tables (it is not needed\nin the “Chemotherapy” table).If the researcher wishes to retrieve the MRN, it can be obtained via a SQL query, linking back to one of\nthe tables that contains it.Abbreviations: DOB Z date of birth.Disadvantage of SQL\n\nWith SQL, it is possible to create highly complex queries;\nit is a rich and powerful language.However, these can be\n\nquite complicated and obtuse to a nontechnical person.Some\nsystems do provide graphical tools to help build SQL queries,\nbut, even so, there are some users for whom all but the\nsimplest SQL queries will be beyond their technical skills.Figure 4 Note that each ﬁeld in this database table is speciﬁcally designed.It has a “type” (kind) and a “size” (length).When\nimporting data from numerous external sources, these deﬁnitions can prevent erroneous imports (for details, see text).Note that the\nﬁeld “MRN” is the key for this table.All the data in this table refer back to “MRN” via a one-to-one relationship.MRN can be used as\nthe key because no 2 patients have the same MRN.Abbreviations: DOB Z date of birth; MRN Z medical record number.Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1285\n\nDatabase Implementation\n\nDatabases may, and often do, contain many thousands\nof tables and millions of rows of data.(In other words,\nthey can contain data far in excess of the requirements of\nany one radiation oncologist or even any one radiation\noncology department).In fact, some systems allow even\nsingle tables to contain terabytes or even petabytes of\ndata.5 Consequently, there are numerous systems avail-\nable to accommodate any researcher’s needs.Some of the\nvery best are open source (free).Software is available\nacross a wide variety of operating systems.Wikipedia\nprovides an outstanding overview of the topic.5\n\nTo implement a database system, it is ﬁrst necessary to\nhave a discussion with the IT Department at your institu-\ntion.There is no single solution for creating a data re-\nresearchers across all\ntrue for\npository that holds\ninstitutions.The solution can vary, depending on the re-\nsources at your institution and the level of access the IT\nDepartment has into the underlying patient data source\nsystems (often deﬁned in the institutional contracts signed\nwith the individual vendors).Some large centers have\nelaborate data warehouse systems.Smaller centers might\nprovide access to data from individual source systems but\nmight not have compiled them into a single data warehouse.Some IT departments might have adequate resources to\nprovide output data from their data warehouse to individual\nresearchers, when needed.Others might not. Some might\nprovide a dedicated research server on which the researcher\ncan construct a database.Other researchers might need to\nrely instead upon existing servers within their department.I\ndo not recommend that one set up a database system on a\nfree-standing laptop or desktop machine, as there are Health\nInsurance Portability and Accountability Act concerns (the\ncomputer could be stolen).Data should be backed up across\na secured network electronically.Creation of a Lung Cancer Radiation Therapy\nDatabase\n\nI began my own database several years ago.My need\ngrew out of a sense of frustration regarding lack of access\nto clinical data.At the time, at my institution, it was a\ndifﬁcult (and somewhat mysterious) process to procure\ndata from the data warehouse.However, data from\nMosaiq (Elekta AB, Stockholm, Sweden), which is our\ndepartment’s record or verify system, were available.These data formed the nucleus of the original database.Basic demographic information and radiation therapy\nprescriptions, dates of treatment, dose delivered, tumor\nstage, and the like, were exported, using custom software.Research IT provided a Linux server, on which I imple-\nmented the database.I chose to use MariaDB (MariaDB\nis a powerful, well-regarded,\nFoundation, DE), as it\n\ncommercially supported, free, open-source database sys-\ntem whose SQL functions are congruent with those of\nOracle (which is a database system I had used previ-\nously).Because my institution could not support an\nimplementation of an Oracle, MariaDB was an excellent\nalternate option.MariaDB does include a Windows GUI\ndatabase administration tool for administering its data-\nbases (creating tables, writing SQL code, importing or\nexporting data, and the like).I had previously used a\nsimilar commercial database administration product called\nNavicat (Premium Cybertech Ltd, Hong Kong), which\nprovides similar functionality, so I elected to purchase\nthat.Similarly, I imported all data I had captured in\nresearch projects.More\nspreadsheets\nrecently, I have gained access to data from our data\nwarehouse and so have created numerous additional ta-\nbles to store the information.At present, the database\ncontains more than 3 million rows of data on approxi-\nmately 4800 patients, spread across more than 170 tables.for previous\n\nIncorporation of Data from Other\nInstitutional Data Systems\n\nTo import data from outside source systems requires a\nmultistep process, referred to as “ETL” (“Extraction,\nTransformation, and Loading”) in the data science liter-\nature.”6 The issues go far beyond the physical importation\nof data into the database; importing spreadsheets of data\nare a trivial task.There are numerous issues in ETL,\nwhich are critical to consider when designing a database\nand importing data into it.Furthermore, many of these\nissues are not inherently obvious.In fact, a large pro-\nportion of the time required to create a database and ﬁll it\nwith clinically useable data derives from the ETL\ninvolved.The oft-reproduced “Data Science Hierarchy of\nNeeds” illustrates this fact (Fig 1).Most of the discussion\nin this article addressed aspects of the bottom-most layer\nof the pyramid.ETL comprises the majority of the next 2\nlayers of the pyramid and is the topic of another article.References\n\n1. Codd ER. A relational model of data for large shared data banks.Commmunications of the ACM. 1970;13:377-387. 2. Wikipedia. SQL.Available at: https://en.wikipedia.org/wiki/SQL.Accessed February 14, 2020. 3. Wikipedia.IBM System R. Available at: https://en.wikipedia.org/\n\nwiki/IBM_System_R.Accessed February 14, 2020. 4. Dilling TJ.Artiﬁcial Intelligence (AI) for clinical analysis: Design\nand implementation of a suitable database resource.Int J Radiat\nOncol Biol Phys. 2019;105:E131-E132. 5. Wikipedia.Comparison of relational database managment systems.Available\nhttps://en.wikipedia.org/wiki/Comparison_of_\nrelational_database_management_systems.Accessed February 14,\n2020.\n\nat:\n\n6.Wikipedia. Extract, Transform, Load. Available at: https://en.wikipedia.org/wiki/Extract,_transform,_load. Accessed April 13,\n2020.",
          "time": 540.1693878173828,
          "input_token_size": 5725,
          "output_token_size": 180,
          "original_provenance_id": 0
        }
      ],
      "metadata": {
        "question_id": "database_design_article_1b29c976",
        "created_at": 1749768857.6530766,
        "processing_time": 551.6904015541077,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs_prev1",
        "reason": "shorter_provenance",
        "sentence_count": 194,
        "provenance_count": 1,
        "alternatives": [
          {
            "source": "test_outputs_prev1",
            "sentence_count": 194,
            "provenance_count": 1,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.669995"
      }
    }
  },
  {
    "1f8474ad": {
      "question": "How is the data management capability of RDBS described in contrast to spreadsheets?",
      "answer": "1. Spreadsheets are only capable of describing one-to-one (1:1) relationships.\n2. Spreadsheets are very inefficient relative to relational database systems.\n3. Databases gracefully manage one-to-many relationships.\n4. Each row of data in a table has a unique identifier (a key) in databases.\n5. Each field in the database is specifically defined as to what it contains.\n6. Databases can be queried or manipulated using a highly complex language called SQL.\n7. Databases are optimized to manage vast amounts of data efficiently.\n8. RDBS are much more secure than spreadsheets.",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            138,
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            165,
            166,
            167,
            168,
            169,
            170,
            171,
            172,
            173,
            174,
            175,
            176,
            177,
            178,
            179,
            180,
            181,
            182,
            183,
            184,
            185,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            193
          ],
          "provenance_ids": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            17,
            19,
            23,
            24,
            25,
            26,
            27,
            28,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            55,
            56,
            57,
            58,
            59,
            60,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            77,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            91,
            92,
            93,
            94,
            95,
            96,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            111,
            112,
            113,
            114,
            115,
            116,
            120,
            122,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            138,
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            159,
            160,
            161,
            162,
            163,
            165,
            166,
            167,
            168,
            169,
            170,
            171,
            172,
            173,
            174,
            175,
            176,
            177,
            178,
            179,
            180,
            181,
            182,
            183,
            184,
            185,
            186,
            187,
            188,
            190,
            191,
            192,
            193
          ],
          "provenance": "Advances in Radiation Oncology (2020) 5, 1280-1285\n\nScientiﬁc Article\nArtiﬁcial Intelligence Research: The Utility and\nDesign of a Relational Database System\n\nwww.advancesradonc.org\n\nThomas J. Dilling, MD*\n\nDepartment of Radiation Oncology, Mofﬁtt Cancer Center\n\nReceived 13 March 2020; revised 13 April 2020; accepted 11 June 2020\n\nAbstract\nAlthough many researchers talk about a “patient database,” they typically are not referring to a database at all, but instead to a spreadsheet of\ncurated facts about a cohort of patients.This article describes relational database systems and how they differ from spreadsheets.At their core,\nspreadsheets are only capable of describing one-to-one (1:1) relationships.However, this article demonstrates that clinical medical data\nencapsulate numerous one-to-many relationships.Consequently, spreadsheets are very inefﬁcient relative to relational database systems,\nwhich gracefully manage such data.Databases provide other advantages, in that the data ﬁelds are “typed” (that is, they contain speciﬁc\nkinds of data).This prevents users from entering spurious data during data import.Because each record contains a “key,” it becomes\nimpossible to add duplicate information (ie, add the same patient twice).Databases store data in very efﬁcient ways, minimizing space and\nmemory requirements on the host system.Likewise, databases can be queried or manipulated using a highly complex language called\nSQL.Consequently, it becomes trivial to cull large amounts of data from a vast number of data ﬁelds on very precise subsets of patients.Databases can be quite large (terabytes or more in size), yet still are highly efﬁcient to query.Consequently, with the explosion of data\navailable in electronic health records and other data sources, databases become increasingly important to contain or order these data.Ultimately, this will enable the clinical researcher to perform artiﬁcial intelligence analyses across vast amounts of clinical data in a way\nheretofore impossible.This article provides initial guidance in terms of creating a relational database system.(cid:1) 2020 Published by Elsevier Inc. on behalf of American Society for Radiation Oncology.Introduction\n\nThis issue of Advances in Radiation Oncology presents\na series of articles around applications of artiﬁcial intel-\nligence (AI) in our ﬁeld.However, this\nvast volume of data cannot be accommodated within a\nsingle spreadsheet (which is how most clinical researchers\n\nResearch data are not available at this time. Sources of support: none.In fact, many researchers erroneously describe spread-\nsheets as databases.This article will demonstrate both\nwhat a relational database system is and how it is superior\nto a spreadsheet.It will also discuss considerations when\nimplementing a relational database system (RDBS) for\nyour own research purposes, using an actual lung cancer\nradiation therapy database as an example.I have also\nprovided some excellent Wikipedia references\nthat\ncontain abundant additional\ninformation, beyond what\ncan be encapsulated in a single article.(These, in turn,\nreference computer science literature for the very intrepid\nreader, but such references might extend beyond the level\nof understanding of all but the most technically inclined.)One might question why a database system is neces-\nsary for AI research.This is an open access article under the CC BY-\nNC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1281\n\nto cleanly and accurately contain these data.To perform\nAI analysis requires efﬁcient storage of hundreds or\nthousands of data points on a single patient or even on a\nsingle course of radiation therapy.There is a famous\nthe “data science hierarchy of needs”\nillustration of\n(Fig 1).To perform an AI analysis, one must ﬁrst create\nan RDBS to serve as the storage mechanism.This crea-\ntion of a system to store structured data entails a major\npart of the bottom row of the pyramid.To create a data-\nbase,\nthe reader down the path toward\nconducting AI research at their own institution.then, will set\n\nOrigin of Relational Databases\n\nThe concept of a RDBS was ﬁrst described in a sem-\ninal article in 1970.1 The theoretic construct was that all\ndata could be deﬁned or represented as a series of re-\nlations with or to other data.The article was quantitative\nin that it used relational algebra and tuple relational cal-\nculus to prove its points.2 IBM used this theoretic\nframework to design what became the initial SQL (pro-\nnounced “see-quell” or “ess-cue-ell”) language, which\nthey used to manipulate and retrieve data from IBM’s\noriginal RDBS.3 Since that time, the American National\nStandards Institute and the International Standards Orga-\nnization have deemed SQL to be the standard language in\nrelational database communication.2 Today, there are a\nwide variety of commercial and open-source relational\ndatabase systems available for use.These vary in their\nfeatures and relative strengths or weaknesses, but,\nfundamentally,\nthey all operate using the principles\ndeﬁned in the Codd article.1 The SQL language is well\ndeﬁned and is used to write code to query (or update) the\ndata within an RDBS.Fundamental Disadvantage of Spreadsheets\n\nSpreadsheets are designed to incorporate and analyze\none-to-one (1:1) relationships (Fig 2a).Each patient has a\nsingle birth date and a single death date.However, medical\nrecords are rife with “one-to-many” relationships (Fig 2b).A patient might receive multiple different courses of radi-\nation therapy treatment, as in the example provided, or\nmight have multiple chemotherapy administrations.To\naccommodate these data, a spreadsheet quickly balloons in\nsize (Fig 2c).Not only is this inefﬁcient (duplication of\ndata), but it also makes maintenance of the spreadsheet\nextremely cumbersome and prone to error.For instance, in\nthis example, when patient “12345” passes away, the\n“DeathDate” needs to be updated in 5 rows of the spread-\nsheet (because she had 2 courses of radiation therapy and 4\ncycles of chemotherapy).It is not difﬁcult to imagine that a\nresearcher could neglect to update the “DeathDate” in each\nplace, introducing errors.To further expound upon the\nissue, imagine a patient who takes numerous medications or\nhas variable numbers of comorbid illnesses;\nthe rows\nrequired to encapsulate 1 patient explode.To use a data\nscience term, the dimensionality of the data balloons.But,\nto reiterate the point, spreadsheets are only designed to\nencapsulate 1:1 relationships (2-dimensional data).But\npatient data are multidimensional.Fundamental Advantage of Relational\nDatabases\n\nRDBS gracefully manage one-to-many relationships.They can do so because a database is created of numerous\ndifferent tables, which are explicitly linked (Fig 3).The data science hierarchy of needs.Used with permission of Monica Rogati (aipyramid.com). For details, see text.1282\n\nT.J. Dilling\n\nAdvances in Radiation Oncology: NovembereDecember 2020\n\nFigure 2\n(a) Spreadsheets are useful where there is a one-to-one correspondence of data.For instance, each unique medical record\nnumber (MRN) represents a single patient, with a single birth/death date and a single ﬁrst and last name.(b) Spreadsheets “break down”\nwhen describing 1-to-many correspondences.In this example, 2 patients have a total of 5 courses of radiation therapy treatment between\nthem.The data\nstorage requirements quickly balloon.Furthermore, as additional traits and factors are added to the spreadsheet, it becomes impossible to\nfollow, as one patient will require untold numbers of rows to capture all relevant data concepts.Stated another way, the data are\nmultidimensional.Maintenance and updating of ﬁelds become error-prone (see text).Abbreviations: DOB Z date of birth; Lname Z\nlast name; Fname Z ﬁrst name; LUL Z upper lobe; MRN Z medical record number; RLL, right lower lobe; RUL Z right upper lobe;\nSBRT Z stereotactic body radiotherapy.table must also contain a key, which is a unique, required\nidentiﬁer for each row of data.Relationships between the\ntables are deﬁned when creating the database tables or\nﬁelds.In the “demographics” table, medical\nrecord\nnumber, “MRN,” is the key.For the “TreatmentCourse”\nand “Chemotherapy” tables,\nthe keys are “Treatment-\nCourse” and “ChemotherapyID,” respectively.Note that\n“TreatmentCourse 1” in the “TreatmentCourse” table\npertains to breast radiation therapy treatment.This, in\nis linked to 4 cycles of chemotherapy in the\nturn,\n“Chemotherapy” table, each of which is uniquely identi-\nﬁed in that table, in turn.When comparing Fig 3 (a database) to Fig 2c (a\nspreadsheet), note that Fig 3 contains the same informa-\ntion as Fig 2c without the addition of repetitious infor-\nmation (colored red in Fig 2c).Conversely, a SQL database cleanly encapsulates these\nmultidimensional data (Fig 3).But because it can contain multiple rows of\ndata on 1 patient (chemotherapy administrations, to follow\nthe same example), a multidimensional structure is created,\nas 4 chemotherapy cycles link to one of 2 courses of radi-\nation therapy (“TreatmentCourse” table) for 1 patient\n(“Demographics” table).Now, imagine a clinical database\nwith millions of rows of data spread across hundreds of\ntables, as in the real-life example described below.Clearly,\na spreadsheet would not be adequate.Additional Advantages of Relational Databases\n\n1.Each row of data in a table has a unique identiﬁer (a\nkey).Consequently, one cannot accidentally add a\nrow of data into a database table twice.2. Each ﬁeld in the database is speciﬁcally deﬁned as to\nwhat it contains (Fig 4).Consequently, if data are\nimported from some external source, the data types\nmust correspond or the import will fail.For example,\nif an entry contained an integer where a date was\nindicated, the database would signal that the variable\ncontained erroneous data.This feature helps maintain\nconsistency of data and minimize data errors. 3.Not only must the data types correspond, but the\ndata lengths must be observed.Alternately, the\ndatabase could declare an error, which might also\nimply that the ﬁeld contains erroneous data.Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1283\n\n4.A key from one table can be linked “backward” to a\nkey from another table (termed a “foreign key”).As\nan example (Fig 3), the database can be designed\nsuch that the MRN from “TreatmentCourse” must\nto an MRN already contained within the\nrefer\n“Demographics” table.If one tried to import data\ninto “TreatmentCourse” and it used an MRN not\nlisted in “Demographics,” the import would fail.Such a situation might imply, for instance, that the\nMRN was incorrect in the external data source (or in\nthe database).Foreign key relationships also work in the opposite\ndirection: If one realizes that a patient is represented\nin the database who should not be, one can delete\nthe patient from the “Demographics” table and the\ndatabase will delete all data about that patient from\nall the other data tables automatically.6. RDBS are speciﬁcally optimized to manage vast\namounts of data.Large spreadsheets (containing\nthousands of rows and hundreds of columns) are\nextremely slow and memory intensive.However, one\ncan query across or manipulate many gigabytes of data\nin fractions of a second in many RDBS, as the data\nstores are highly optimized and efﬁcient from both a\ncomputational and memory utilization perspective.7. RDBS are much more secure than spreadsheets.An\ninstitution’s IT team might allow one to access some\ntables within an institution’s data warehouse, but not\nothers.One’s access could be restricted to deﬁned\nsubsets of patients.One might have “read” access to\nthese data, but not “write” access (or “write” access to\nonly some subset of ﬁelds).Databases might likewise\nbe set up such that only users from speciﬁc IP ad-\ndresses or computers may access them.The login\nsystems set up by IT departments for these purposes\ntypically use state of the art encryption algorithms, 2-\nfactor authentication, and the like.In contrast, an\nExcel spreadsheet can be “locked” such that only\nsome ﬁelds are editable.But it is not possible to\nrestrict data access by user.It is true that one can “hide” columns in a\nspreadsheet and then lock it, to prevent a given user\nfrom viewing them, but the spreadsheet maintainer\nmust do this manually before distributing the\nspreadsheet (time-consuming and prone to error).Beneﬁts of SQL\n\nAs described earlier, SQL is a deﬁned, standardized\nlanguage for composing queries within an RDBS, or to\n\nmanipulate and update these data.Some database systems\nprovide “extensions” to the SQL standard, to provide some\nadditional and speciﬁc functionality (details available in the\nvendors’ literature).It is beyond the scope of this article to\nteach SQL coding.However, many excellent online re-\nsources are available for the interested reader.Functionally,\nSQL allows one to search for any number of variables or\ncombinations of variables across any number of tables,\nsimultaneously.Our institution has a database of patients who have\nreceived radiation therapy to the lung, whether for pri-\nmary cancer or metastatic disease to the lung.4 The\ndatabase and some of its details of implementation are\ndescribed below, but ﬁrst, some “real-life” examples of\nwhat such an RDBS system can do (not possible when\nusing a spreadsheet):\n\n(cid:1) Real-life example 1: Find patients who might be\ncandidates for a certain lung cancer clinical trial.By constructing an\nappropriate SQL query, 135 patients were found (out\nof more than 4600 in the database) to pass along to\nthe PI for closer inspection.It is true that one can “ﬁlter” data in Excel to rapidly\nﬁnd subsets.However, this ﬁltering is limited to “true or\nfalse” matching.In this example, it would be impossible\nto discover the patients who developed neutropenia while\nundergoing radiation therapy unless one had a “neu-\ntropenia (yes or no)” column.But one cannot perform the\narithmetic “where date of neutropenia > Radiation-\nStartDate and < RadiationEndDate” to ﬁlter the data\nwithout writing code in Visual Basic, which is likely\nbeyond the ability of most.1284\n\nT.J. Dilling\n\nAdvances in Radiation Oncology: NovembereDecember 2020\n\nIn a relational database, data are stored in multiple tables, which are joined via deﬁned variables.In this ﬁctitious example,\nFigure 3\nnote that the patient only has one “DeathDate” to update.Furthermore, each course of treatment (“TreatmentCourse”) can have multiple\nchemotherapy cycles associated with it.Note, too, that medical record number (MRN) only appears in 2 of the 3 tables (it is not needed\nin the “Chemotherapy” table).If the researcher wishes to retrieve the MRN, it can be obtained via a SQL query, linking back to one of\nthe tables that contains it.Abbreviations: DOB Z date of birth.Disadvantage of SQL\n\nWith SQL, it is possible to create highly complex queries;\nit is a rich and powerful language.However, these can be\n\nquite complicated and obtuse to a nontechnical person.Some\nsystems do provide graphical tools to help build SQL queries,\nbut, even so, there are some users for whom all but the\nsimplest SQL queries will be beyond their technical skills.Figure 4 Note that each ﬁeld in this database table is speciﬁcally designed.It has a “type” (kind) and a “size” (length).When\nimporting data from numerous external sources, these deﬁnitions can prevent erroneous imports (for details, see text).Note that the\nﬁeld “MRN” is the key for this table.All the data in this table refer back to “MRN” via a one-to-one relationship.MRN can be used as\nthe key because no 2 patients have the same MRN.Abbreviations: DOB Z date of birth; MRN Z medical record number.Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1285\n\nDatabase Implementation\n\nDatabases may, and often do, contain many thousands\nof tables and millions of rows of data.(In other words,\nthey can contain data far in excess of the requirements of\nany one radiation oncologist or even any one radiation\noncology department).In fact, some systems allow even\nsingle tables to contain terabytes or even petabytes of\ndata.5 Consequently, there are numerous systems avail-\nable to accommodate any researcher’s needs.Some of the\nvery best are open source (free).Software is available\nacross a wide variety of operating systems.Wikipedia\nprovides an outstanding overview of the topic.5\n\nTo implement a database system, it is ﬁrst necessary to\nhave a discussion with the IT Department at your institu-\ntion.There is no single solution for creating a data re-\nresearchers across all\ntrue for\npository that holds\ninstitutions.The solution can vary, depending on the re-\nsources at your institution and the level of access the IT\nDepartment has into the underlying patient data source\nsystems (often deﬁned in the institutional contracts signed\nwith the individual vendors).Some large centers have\nelaborate data warehouse systems.Smaller centers might\nprovide access to data from individual source systems but\nmight not have compiled them into a single data warehouse.Some IT departments might have adequate resources to\nprovide output data from their data warehouse to individual\nresearchers, when needed.Others might not. Some might\nprovide a dedicated research server on which the researcher\ncan construct a database.Data should be backed up across\na secured network electronically.Creation of a Lung Cancer Radiation Therapy\nDatabase\n\nI began my own database several years ago.My need\ngrew out of a sense of frustration regarding lack of access\nto clinical data.At the time, at my institution, it was a\ndifﬁcult (and somewhat mysterious) process to procure\ndata from the data warehouse.However, data from\nMosaiq (Elekta AB, Stockholm, Sweden), which is our\ndepartment’s record or verify system, were available.Basic demographic information and radiation therapy\nprescriptions, dates of treatment, dose delivered, tumor\nstage, and the like, were exported, using custom software.Research IT provided a Linux server, on which I imple-\nmented the database.I chose to use MariaDB (MariaDB\nis a powerful, well-regarded,\nFoundation, DE), as it\n\ncommercially supported, free, open-source database sys-\ntem whose SQL functions are congruent with those of\nOracle (which is a database system I had used previ-\nously).Because my institution could not support an\nimplementation of an Oracle, MariaDB was an excellent\nalternate option.MariaDB does include a Windows GUI\ndatabase administration tool for administering its data-\nbases (creating tables, writing SQL code, importing or\nexporting data, and the like).I had previously used a\nsimilar commercial database administration product called\nNavicat (Premium Cybertech Ltd, Hong Kong), which\nprovides similar functionality, so I elected to purchase\nthat.Similarly, I imported all data I had captured in\nresearch projects.More\nspreadsheets\nrecently, I have gained access to data from our data\nwarehouse and so have created numerous additional ta-\nbles to store the information.At present, the database\ncontains more than 3 million rows of data on approxi-\nmately 4800 patients, spread across more than 170 tables.for previous\n\nIncorporation of Data from Other\nInstitutional Data Systems\n\nTo import data from outside source systems requires a\nmultistep process, referred to as “ETL” (“Extraction,\nTransformation, and Loading”) in the data science liter-\nature.”6 The issues go far beyond the physical importation\nof data into the database; importing spreadsheets of data\nare a trivial task.There are numerous issues in ETL,\nwhich are critical to consider when designing a database\nand importing data into it.Furthermore, many of these\nissues are not inherently obvious.In fact, a large pro-\nportion of the time required to create a database and ﬁll it\nwith clinically useable data derives from the ETL\ninvolved.The oft-reproduced “Data Science Hierarchy of\nNeeds” illustrates this fact (Fig 1).Most of the discussion\nin this article addressed aspects of the bottom-most layer\nof the pyramid.ETL comprises the majority of the next 2\nlayers of the pyramid and is the topic of another article.References\n\n1. Codd ER. A relational model of data for large shared data banks.Commmunications of the ACM. 1970;13:377-387. 2. Wikipedia. SQL.Available at: https://en.wikipedia.org/wiki/SQL.Accessed February 14, 2020. 3. Wikipedia.IBM System R. Available at: https://en.wikipedia.org/\n\nwiki/IBM_System_R.Accessed February 14, 2020. 4. Dilling TJ.Artiﬁcial Intelligence (AI) for clinical analysis: Design\nand implementation of a suitable database resource.Int J Radiat\nOncol Biol Phys. 2019;105:E131-E132. 5. Wikipedia.Available\nhttps://en.wikipedia.org/wiki/Comparison_of_\nrelational_database_management_systems.Accessed February 14,\n2020.\n\nat:\n\n6.Wikipedia. Extract, Transform, Load. Available at: https://en.wikipedia.org/wiki/Extract,_transform,_load. Accessed April 13,\n2020.",
          "time": 539.4340043067932,
          "input_token_size": 5729,
          "output_token_size": 272,
          "original_provenance_id": 0
        }
      ],
      "metadata": {
        "question_id": "database_design_article_1f8474ad",
        "created_at": 1749869536.3297648,
        "processing_time": 543.8646218776703,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs_prev1",
        "reason": "shorter_provenance",
        "sentence_count": 194,
        "provenance_count": 1,
        "alternatives": [
          {
            "source": "test_outputs_prev1",
            "sentence_count": 194,
            "provenance_count": 1,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.669995"
      }
    }
  },
  {
    "2a8e1254": {
      "question": "How do relational database systems compare with spreadsheets in managing clinical data?",
      "answer": "Answer is not found.",
      "provenance": [],
      "metadata": {
        "question_id": "database_design_article_2a8e1254",
        "created_at": 1749768817.1565177,
        "processing_time": 3.3233957290649414,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs_prev1",
        "reason": "default",
        "sentence_count": 999999,
        "provenance_count": 0,
        "alternatives": [
          {
            "source": "test_outputs_prev1",
            "sentence_count": 999999,
            "provenance_count": 0,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.669995"
      }
    }
  },
  {
    "30cfa72d": {
      "question": "Who is the author of the article and what is his affiliation?",
      "answer": "Thomas J. Dilling, MD  \nDepartment of Radiation Oncology, Moffitt Cancer Center",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            0,
            1,
            2
          ],
          "provenance_ids": [
            0
          ],
          "provenance": "Advances in Radiation Oncology (2020) 5, 1280-1285\n\nScientiﬁc Article\nArtiﬁcial Intelligence Research: The Utility and\nDesign of a Relational Database System\n\nwww.advancesradonc.org\n\nThomas J. Dilling, MD*\n\nDepartment of Radiation Oncology, Mofﬁtt Cancer Center\n\nReceived 13 March 2020; revised 13 April 2020; accepted 11 June 2020\n\nAbstract\nAlthough many researchers talk about a “patient database,” they typically are not referring to a database at all, but instead to a spreadsheet of\ncurated facts about a cohort of patients.",
          "time": 7.469873428344727,
          "input_token_size": 6334,
          "output_token_size": 109,
          "original_provenance_id": 0
        }
      ],
      "metadata": {
        "question_id": "database_design_article_30cfa72d",
        "created_at": 1749627028.8312423,
        "processing_time": 11.605655193328857,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs_prev",
        "reason": "shorter_provenance",
        "sentence_count": 3,
        "provenance_count": 1,
        "alternatives": [
          {
            "source": "test_outputs_prev",
            "sentence_count": 3,
            "provenance_count": 1,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.669995"
      }
    }
  },
  {
    "3749e763": {
      "question": "What organization recognizes SQL as the standard language for RDBS communication?",
      "answer": "American National Standards Institute and the International Standards Organization",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            36,
            37,
            38
          ],
          "provenance_ids": [
            38
          ],
          "provenance": "The article was quantitative\nin that it used relational algebra and tuple relational cal-\nculus to prove its points.2 IBM used this theoretic\nframework to design what became the initial SQL (pro-\nnounced “see-quell” or “ess-cue-ell”) language, which\nthey used to manipulate and retrieve data from IBM’s\noriginal RDBS.3 Since that time, the American National\nStandards Institute and the International Standards Orga-\nnization have deemed SQL to be the standard language in\nrelational database communication.2 Today, there are a\nwide variety of commercial and open-source relational\ndatabase systems available for use.",
          "time": 3.948836326599121,
          "input_token_size": 6698,
          "output_token_size": 53,
          "original_provenance_id": 0
        }
      ],
      "metadata": {
        "question_id": "database_design_article_3749e763",
        "created_at": 1750197203.158653,
        "processing_time": 7.7965991497039795,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs",
        "reason": "shorter_provenance",
        "sentence_count": 3,
        "provenance_count": 1,
        "alternatives": [
          {
            "source": "test_outputs",
            "sentence_count": 3,
            "provenance_count": 1,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.669995"
      }
    }
  },
  {
    "392df5ee": {
      "question": "What are the initials of the author who wrote the article?",
      "answer": "T.J. D.",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59
          ],
          "provenance_ids": [
            48,
            49,
            52,
            53,
            55,
            56,
            57,
            58
          ],
          "provenance": "To further expound upon the\nissue, imagine a patient who takes numerous medications or\nhas variable numbers of comorbid illnesses;\nthe rows\nrequired to encapsulate 1 patient explode.To use a data\nscience term, the dimensionality of the data balloons.Fundamental Advantage of Relational\nDatabases\n\nRDBS gracefully manage one-to-many relationships.They can do so because a database is created of numerous\ndifferent tables, which are explicitly linked (Fig 3).The data science hierarchy of needs.Used with permission of Monica Rogati (aipyramid.com). For details, see text.1282\n\nT.J. Dilling\n\nAdvances in Radiation Oncology: NovembereDecember 2020\n\nFigure 2\n(a) Spreadsheets are useful where there is a one-to-one correspondence of data.For instance, each unique medical record\nnumber (MRN) represents a single patient, with a single birth/death date and a single ﬁrst and last name.",
          "time": 11.732948064804077,
          "input_token_size": 8413,
          "output_token_size": 30,
          "original_provenance_id": 0
        }
      ],
      "metadata": {
        "question_id": "database_design_article_392df5ee",
        "created_at": 1749869517.102819,
        "processing_time": 14.621264219284058,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs_prev1",
        "reason": "shorter_provenance",
        "sentence_count": 12,
        "provenance_count": 1,
        "alternatives": [
          {
            "source": "test_outputs_prev1",
            "sentence_count": 12,
            "provenance_count": 1,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.669995"
      }
    }
  },
  {
    "3d7e135c": {
      "question": "What journal published the article in 2020?",
      "answer": "Advances in Radiation Oncology",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            0,
            1,
            2
          ],
          "provenance_ids": [
            0
          ],
          "provenance": "Advances in Radiation Oncology (2020) 5, 1280-1285\n\nScientiﬁc Article\nArtiﬁcial Intelligence Research: The Utility and\nDesign of a Relational Database System\n\nwww.advancesradonc.org\n\nThomas J. Dilling, MD*\n\nDepartment of Radiation Oncology, Mofﬁtt Cancer Center\n\nReceived 13 March 2020; revised 13 April 2020; accepted 11 June 2020\n\nAbstract\nAlthough many researchers talk about a “patient database,” they typically are not referring to a database at all, but instead to a spreadsheet of\ncurated facts about a cohort of patients.",
          "time": 4.2320733070373535,
          "input_token_size": 6313,
          "output_token_size": 31,
          "original_provenance_id": 0
        },
        {
          "provenance_id": 1,
          "input_sentence_ids": [
            15,
            16,
            17
          ],
          "provenance_ids": [
            17
          ],
          "provenance": "Introduction\n\nThis issue of Advances in Radiation Oncology presents\na series of articles around applications of artiﬁcial intel-\nligence (AI) in our ﬁeld.",
          "time": 6.608211517333984,
          "input_token_size": 7158,
          "output_token_size": 47,
          "original_provenance_id": 1
        },
        {
          "provenance_id": 2,
          "input_sentence_ids": [
            30,
            31,
            32
          ],
          "provenance_ids": [
            31
          ],
          "provenance": "Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1281\n\nto cleanly and accurately contain these data.",
          "time": 10.240277528762817,
          "input_token_size": 9771,
          "output_token_size": 71,
          "original_provenance_id": 2
        },
        {
          "provenance_id": 3,
          "input_sentence_ids": [
            24,
            25,
            26,
            27,
            28,
            29
          ],
          "provenance_ids": [
            25,
            26,
            29
          ],
          "provenance": "It will also discuss considerations when\nimplementing a relational database system (RDBS) for\nyour own research purposes, using an actual lung cancer\nradiation therapy database as an example.I have also\nprovided some excellent Wikipedia references\nthat\ncontain abundant additional\ninformation, beyond what\ncan be encapsulated in a single article.This article will demonstrate that a\ndatabase enables creation of a multidimensional structure\n\nhttps://doi.org/10.1016/j.adro.2020.06.027\n2452-1094/(cid:1) 2020 Published by Elsevier Inc. on behalf of American Society for Radiation Oncology.",
          "time": 16.4078528881073,
          "input_token_size": 10282,
          "output_token_size": 82,
          "original_provenance_id": 3
        },
        {
          "provenance_id": 4,
          "input_sentence_ids": [
            90,
            91,
            92
          ],
          "provenance_ids": [
            91,
            92
          ],
          "provenance": "Alternately, the\ndatabase could declare an error, which might also\nimply that the ﬁeld contains erroneous data.Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1283\n\n4.",
          "time": 19.485368728637695,
          "input_token_size": 13424,
          "output_token_size": 108,
          "original_provenance_id": 4
        }
      ],
      "metadata": {
        "question_id": "database_design_article_3d7e135c",
        "created_at": 1749869523.531819,
        "processing_time": 21.337719678878784,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs_prev1",
        "reason": "shorter_provenance",
        "sentence_count": 18,
        "provenance_count": 5,
        "alternatives": [
          {
            "source": "test_outputs_prev1",
            "sentence_count": 18,
            "provenance_count": 5,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.669995"
      }
    }
  },
  {
    "4d50b01e": {
      "question": "Who authored the article 'Artificial Intelligence Research: The Utility and Design of a Relational Database System'?",
      "answer": "Thomas J. Dilling, MD",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            0,
            1,
            2
          ],
          "provenance_ids": [
            0
          ],
          "provenance": "Advances in Radiation Oncology (2020) 5, 1280-1285\n\nScientiﬁc Article\nArtiﬁcial Intelligence Research: The Utility and\nDesign of a Relational Database System\n\nwww.advancesradonc.org\n\nThomas J. Dilling, MD*\n\nDepartment of Radiation Oncology, Mofﬁtt Cancer Center\n\nReceived 13 March 2020; revised 13 April 2020; accepted 11 June 2020\n\nAbstract\nAlthough many researchers talk about a “patient database,” they typically are not referring to a database at all, but instead to a spreadsheet of\ncurated facts about a cohort of patients.",
          "time": 4.14976954460144,
          "input_token_size": 6383,
          "output_token_size": 43,
          "original_provenance_id": 0
        }
      ],
      "metadata": {
        "question_id": "database_design_article_4d50b01e",
        "created_at": 1750197150.6168497,
        "processing_time": 8.690038204193115,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs",
        "reason": "shorter_provenance",
        "sentence_count": 3,
        "provenance_count": 1,
        "alternatives": [
          {
            "source": "test_outputs",
            "sentence_count": 3,
            "provenance_count": 1,
            "has_answer": true
          },
          {
            "source": "test_outputs_prev",
            "sentence_count": 3,
            "provenance_count": 1,
            "has_answer": true
          },
          {
            "source": "test_outputs_prev1",
            "sentence_count": 3,
            "provenance_count": 1,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.669995"
      }
    }
  },
  {
    "5b75ba47": {
      "question": "What are the main advantages of using relational database systems over traditional spreadsheets in managing clinical data?",
      "answer": "1. Efficient management of one-to-many relationships.\n2. Unique identifiers for each row of data, preventing duplicates.\n3. Specific data field definitions to maintain data consistency.\n4. Foreign key relationships for data integrity and automatic deletion.\n5. Optimized for managing vast amounts of data efficiently.\n6. Enhanced security features compared to spreadsheets.",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            138,
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            165,
            166,
            167,
            168,
            169,
            170,
            171,
            172,
            173,
            174,
            175,
            176,
            177,
            178,
            179,
            180,
            181,
            182,
            183,
            184,
            185,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            193
          ],
          "provenance_ids": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            138,
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            165,
            166,
            167,
            168,
            169,
            170,
            171,
            172,
            173,
            174,
            175,
            176,
            177,
            178,
            179,
            180,
            181,
            182,
            183,
            184,
            185,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            193
          ],
          "provenance": "Advances in Radiation Oncology (2020) 5, 1280-1285\n\nScientiﬁc Article\nArtiﬁcial Intelligence Research: The Utility and\nDesign of a Relational Database System\n\nwww.advancesradonc.org\n\nThomas J. Dilling, MD*\n\nDepartment of Radiation Oncology, Mofﬁtt Cancer Center\n\nReceived 13 March 2020; revised 13 April 2020; accepted 11 June 2020\n\nAbstract\nAlthough many researchers talk about a “patient database,” they typically are not referring to a database at all, but instead to a spreadsheet of\ncurated facts about a cohort of patients.This article describes relational database systems and how they differ from spreadsheets.At their core,\nspreadsheets are only capable of describing one-to-one (1:1) relationships.However, this article demonstrates that clinical medical data\nencapsulate numerous one-to-many relationships.Consequently, spreadsheets are very inefﬁcient relative to relational database systems,\nwhich gracefully manage such data.Databases provide other advantages, in that the data ﬁelds are “typed” (that is, they contain speciﬁc\nkinds of data).This prevents users from entering spurious data during data import.Because each record contains a “key,” it becomes\nimpossible to add duplicate information (ie, add the same patient twice).Databases store data in very efﬁcient ways, minimizing space and\nmemory requirements on the host system.Likewise, databases can be queried or manipulated using a highly complex language called\nSQL.Consequently, it becomes trivial to cull large amounts of data from a vast number of data ﬁelds on very precise subsets of patients.Databases can be quite large (terabytes or more in size), yet still are highly efﬁcient to query.Consequently, with the explosion of data\navailable in electronic health records and other data sources, databases become increasingly important to contain or order these data.Ultimately, this will enable the clinical researcher to perform artiﬁcial intelligence analyses across vast amounts of clinical data in a way\nheretofore impossible.This article provides initial guidance in terms of creating a relational database system.(cid:1) 2020 Published by Elsevier Inc. on behalf of American Society for Radiation Oncology.This is an open access article under the CC BY-NC-\nND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).Introduction\n\nThis issue of Advances in Radiation Oncology presents\na series of articles around applications of artiﬁcial intel-\nligence (AI) in our ﬁeld.One of the potential beneﬁts of\nAI is that it can pore through large amounts of data to\ndiscover patterns not evident to clinicians.However, this\nvast volume of data cannot be accommodated within a\nsingle spreadsheet (which is how most clinical researchers\n\nResearch data are not available at this time. Sources of support: none.Disclosures: Dr Dilling reports personal fees and nonﬁnancial sup-\nport from NCCN, personal fees from Varian, personal fees and nonﬁ-\nnancial support from Harborside Press, nonﬁnancial support from Astra\nZeneca, all outside the submitted work.* Corresponding author: Thomas J. Dilling, MD; E-mail: Thomas.Dilling@mofﬁtt.org. work when conducting standard multivariable analyses).In fact, many researchers erroneously describe spread-\nsheets as databases.This article will demonstrate both\nwhat a relational database system is and how it is superior\nto a spreadsheet.It will also discuss considerations when\nimplementing a relational database system (RDBS) for\nyour own research purposes, using an actual lung cancer\nradiation therapy database as an example.I have also\nprovided some excellent Wikipedia references\nthat\ncontain abundant additional\ninformation, beyond what\ncan be encapsulated in a single article.(These, in turn,\nreference computer science literature for the very intrepid\nreader, but such references might extend beyond the level\nof understanding of all but the most technically inclined.)One might question why a database system is neces-\nsary for AI research.This article will demonstrate that a\ndatabase enables creation of a multidimensional structure\n\nhttps://doi.org/10.1016/j.adro.2020.06.027\n2452-1094/(cid:1) 2020 Published by Elsevier Inc. on behalf of American Society for Radiation Oncology.This is an open access article under the CC BY-\nNC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1281\n\nto cleanly and accurately contain these data.To perform\nAI analysis requires efﬁcient storage of hundreds or\nthousands of data points on a single patient or even on a\nsingle course of radiation therapy.There is a famous\nthe “data science hierarchy of needs”\nillustration of\n(Fig 1).To perform an AI analysis, one must ﬁrst create\nan RDBS to serve as the storage mechanism.This crea-\ntion of a system to store structured data entails a major\npart of the bottom row of the pyramid.To create a data-\nbase,\nthe reader down the path toward\nconducting AI research at their own institution.then, will set\n\nOrigin of Relational Databases\n\nThe concept of a RDBS was ﬁrst described in a sem-\ninal article in 1970.1 The theoretic construct was that all\ndata could be deﬁned or represented as a series of re-\nlations with or to other data.The article was quantitative\nin that it used relational algebra and tuple relational cal-\nculus to prove its points.2 IBM used this theoretic\nframework to design what became the initial SQL (pro-\nnounced “see-quell” or “ess-cue-ell”) language, which\nthey used to manipulate and retrieve data from IBM’s\noriginal RDBS.3 Since that time, the American National\nStandards Institute and the International Standards Orga-\nnization have deemed SQL to be the standard language in\nrelational database communication.2 Today, there are a\nwide variety of commercial and open-source relational\ndatabase systems available for use.These vary in their\nfeatures and relative strengths or weaknesses, but,\nfundamentally,\nthey all operate using the principles\ndeﬁned in the Codd article.1 The SQL language is well\ndeﬁned and is used to write code to query (or update) the\ndata within an RDBS.Fundamental Disadvantage of Spreadsheets\n\nSpreadsheets are designed to incorporate and analyze\none-to-one (1:1) relationships (Fig 2a).Each patient has a\nsingle birth date and a single death date.However, medical\nrecords are rife with “one-to-many” relationships (Fig 2b).A patient might receive multiple different courses of radi-\nation therapy treatment, as in the example provided, or\nmight have multiple chemotherapy administrations.To\naccommodate these data, a spreadsheet quickly balloons in\nsize (Fig 2c).Not only is this inefﬁcient (duplication of\ndata), but it also makes maintenance of the spreadsheet\nextremely cumbersome and prone to error.For instance, in\nthis example, when patient “12345” passes away, the\n“DeathDate” needs to be updated in 5 rows of the spread-\nsheet (because she had 2 courses of radiation therapy and 4\ncycles of chemotherapy).It is not difﬁcult to imagine that a\nresearcher could neglect to update the “DeathDate” in each\nplace, introducing errors.To further expound upon the\nissue, imagine a patient who takes numerous medications or\nhas variable numbers of comorbid illnesses;\nthe rows\nrequired to encapsulate 1 patient explode.To use a data\nscience term, the dimensionality of the data balloons.But,\nto reiterate the point, spreadsheets are only designed to\nencapsulate 1:1 relationships (2-dimensional data).But\npatient data are multidimensional.Fundamental Advantage of Relational\nDatabases\n\nRDBS gracefully manage one-to-many relationships.They can do so because a database is created of numerous\ndifferent tables, which are explicitly linked (Fig 3).Every\n\nFigure 1\nAbbreviation: AI Z artiﬁcial intelligence.The data science hierarchy of needs.Used with permission of Monica Rogati (aipyramid.com). For details, see text.1282\n\nT.J. Dilling\n\nAdvances in Radiation Oncology: NovembereDecember 2020\n\nFigure 2\n(a) Spreadsheets are useful where there is a one-to-one correspondence of data.For instance, each unique medical record\nnumber (MRN) represents a single patient, with a single birth/death date and a single ﬁrst and last name.(b) Spreadsheets “break down”\nwhen describing 1-to-many correspondences.In this example, 2 patients have a total of 5 courses of radiation therapy treatment between\nthem.(c) To accommodate all the data in our simple example, a spreadsheet needs to store redundant data (colored in red).The data\nstorage requirements quickly balloon.Furthermore, as additional traits and factors are added to the spreadsheet, it becomes impossible to\nfollow, as one patient will require untold numbers of rows to capture all relevant data concepts.Stated another way, the data are\nmultidimensional.Maintenance and updating of ﬁelds become error-prone (see text).Abbreviations: DOB Z date of birth; Lname Z\nlast name; Fname Z ﬁrst name; LUL Z upper lobe; MRN Z medical record number; RLL, right lower lobe; RUL Z right upper lobe;\nSBRT Z stereotactic body radiotherapy.table must also contain a key, which is a unique, required\nidentiﬁer for each row of data.Relationships between the\ntables are deﬁned when creating the database tables or\nﬁelds.In the “demographics” table, medical\nrecord\nnumber, “MRN,” is the key.For the “TreatmentCourse”\nand “Chemotherapy” tables,\nthe keys are “Treatment-\nCourse” and “ChemotherapyID,” respectively.Note that\n“TreatmentCourse 1” in the “TreatmentCourse” table\npertains to breast radiation therapy treatment.This, in\nis linked to 4 cycles of chemotherapy in the\nturn,\n“Chemotherapy” table, each of which is uniquely identi-\nﬁed in that table, in turn.When comparing Fig 3 (a database) to Fig 2c (a\nspreadsheet), note that Fig 3 contains the same informa-\ntion as Fig 2c without the addition of repetitious infor-\nmation (colored red in Fig 2c).Alternately,\nin a\nspreadsheet, the researcher could manually aggregate and\nsummarize the chemotherapy delivered into a single cell\nin a single row of the spreadsheet (ie, “ﬂatten” the data, to\nuse a data science term), but then some data would be\nlost.Using the chemotherapy administrations as an\nexample, if one were to “ﬂatten” the data down to a single\nstating “4 cycles of Adriamycin/\nspreadsheet cell\nCytoxan,” one loses the dates of administration.If one\nsummarizes the data as “4 cycles of Adriamycin/Cytoxan:\n<date1>, <date2>, <date3>, <date4>,” the dates and\nthe chemotherapy occupy the same cell and the data are\nretained but are no longer discrete; one loses the ability to\nﬁlter the spreadsheet by chemotherapy kind or by date.Conversely, a SQL database cleanly encapsulates these\nmultidimensional data (Fig 3).Each table is 2-dimensional\n\nin structure.But because it can contain multiple rows of\ndata on 1 patient (chemotherapy administrations, to follow\nthe same example), a multidimensional structure is created,\nas 4 chemotherapy cycles link to one of 2 courses of radi-\nation therapy (“TreatmentCourse” table) for 1 patient\n(“Demographics” table).Now, imagine a clinical database\nwith millions of rows of data spread across hundreds of\ntables, as in the real-life example described below.Clearly,\na spreadsheet would not be adequate.Additional Advantages of Relational Databases\n\n1.Each row of data in a table has a unique identiﬁer (a\nkey).Consequently, one cannot accidentally add a\nrow of data into a database table twice.2. Each ﬁeld in the database is speciﬁcally deﬁned as to\nwhat it contains (Fig 4).Consequently, if data are\nimported from some external source, the data types\nmust correspond or the import will fail.For example,\nif an entry contained an integer where a date was\nindicated, the database would signal that the variable\ncontained erroneous data.This feature helps maintain\nconsistency of data and minimize data errors. 3.Not only must the data types correspond, but the\ndata lengths must be observed.If the database\ndesign states that a ﬁeld is a decimal with 3 places to\nthe right of the decimal place, then a fourth decimal\nplace would be truncated at import.Alternately, the\ndatabase could declare an error, which might also\nimply that the ﬁeld contains erroneous data.Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1283\n\n4.A key from one table can be linked “backward” to a\nkey from another table (termed a “foreign key”).As\nan example (Fig 3), the database can be designed\nsuch that the MRN from “TreatmentCourse” must\nto an MRN already contained within the\nrefer\n“Demographics” table.If one tried to import data\ninto “TreatmentCourse” and it used an MRN not\nlisted in “Demographics,” the import would fail.Such a situation might imply, for instance, that the\nMRN was incorrect in the external data source (or in\nthe database).Or perhaps it relates to a patient who\nreceived prostate radiation therapy (but you have a\nbreast cancer database). 5.Foreign key relationships also work in the opposite\ndirection: If one realizes that a patient is represented\nin the database who should not be, one can delete\nthe patient from the “Demographics” table and the\ndatabase will delete all data about that patient from\nall the other data tables automatically.6. RDBS are speciﬁcally optimized to manage vast\namounts of data.Large spreadsheets (containing\nthousands of rows and hundreds of columns) are\nextremely slow and memory intensive.However, one\ncan query across or manipulate many gigabytes of data\nin fractions of a second in many RDBS, as the data\nstores are highly optimized and efﬁcient from both a\ncomputational and memory utilization perspective.7. RDBS are much more secure than spreadsheets.An\ninstitution’s IT team might allow one to access some\ntables within an institution’s data warehouse, but not\nothers.One’s access could be restricted to deﬁned\nsubsets of patients.One might have “read” access to\nthese data, but not “write” access (or “write” access to\nonly some subset of ﬁelds).Databases might likewise\nbe set up such that only users from speciﬁc IP ad-\ndresses or computers may access them.The login\nsystems set up by IT departments for these purposes\ntypically use state of the art encryption algorithms, 2-\nfactor authentication, and the like.In contrast, an\nExcel spreadsheet can be “locked” such that only\nsome ﬁelds are editable.But it is not possible to\nrestrict data access by user.Furthermore, this re-\nstriction is to “write” access only, not to “read” ac-\ncess.It is true that one can “hide” columns in a\nspreadsheet and then lock it, to prevent a given user\nfrom viewing them, but the spreadsheet maintainer\nmust do this manually before distributing the\nspreadsheet (time-consuming and prone to error).Beneﬁts of SQL\n\nAs described earlier, SQL is a deﬁned, standardized\nlanguage for composing queries within an RDBS, or to\n\nmanipulate and update these data.Some database systems\nprovide “extensions” to the SQL standard, to provide some\nadditional and speciﬁc functionality (details available in the\nvendors’ literature).It is beyond the scope of this article to\nteach SQL coding.However, many excellent online re-\nsources are available for the interested reader.Functionally,\nSQL allows one to search for any number of variables or\ncombinations of variables across any number of tables,\nsimultaneously.This can be extremely powerful and useful,\nboth for retrieving and for manipulating and updating data.Queries can be saved for reuse or modiﬁcation later.As\nstated above, these queries typically produce output in\nfractions of a second, even across vast pools of data.Our institution has a database of patients who have\nreceived radiation therapy to the lung, whether for pri-\nmary cancer or metastatic disease to the lung.4 The\ndatabase and some of its details of implementation are\ndescribed below, but ﬁrst, some “real-life” examples of\nwhat such an RDBS system can do (not possible when\nusing a spreadsheet):\n\n(cid:1) Real-life example 1: Find patients who might be\ncandidates for a certain lung cancer clinical trial.For\nthis particular study,\nthey must have previously\nreceived lung SBRT, have nonmetastatic disease, no\nevidence of recurrence, be alive (obviously), be at\nleast 2 years out from the end of the prior SBRT\ntreatment, and must have been seen in follow-up\nwithin the past 1.5 years.By constructing an\nappropriate SQL query, 135 patients were found (out\nof more than 4600 in the database) to pass along to\nthe PI for closer inspection.(cid:1) Real-life example 2: It takes only a few minutes to\nset up very complex queries.If one has a basic fa-\ncility with SQL, one can design a query such as:\n“Find all patients with stage II or III lung cancer\ntreated with concurrent chemoradiotherapy who\ndeveloped neutropenia during treatment, who are\nfemale, 70 years of age or older, and who take any\nantihypertensive medication (deﬁned in a certain\nlist).” Ultimately, such queries are only limited by\none’s imagination (and the richness or completeness\nof the data coming from the source systems).It is true that one can “ﬁlter” data in Excel to rapidly\nﬁnd subsets.However, this ﬁltering is limited to “true or\nfalse” matching.In this example, it would be impossible\nto discover the patients who developed neutropenia while\nundergoing radiation therapy unless one had a “neu-\ntropenia (yes or no)” column.But one cannot perform the\narithmetic “where date of neutropenia > Radiation-\nStartDate and < RadiationEndDate” to ﬁlter the data\nwithout writing code in Visual Basic, which is likely\nbeyond the ability of most.1284\n\nT.J. Dilling\n\nAdvances in Radiation Oncology: NovembereDecember 2020\n\nIn a relational database, data are stored in multiple tables, which are joined via deﬁned variables.In this ﬁctitious example,\nFigure 3\nnote that the patient only has one “DeathDate” to update.Furthermore, each course of treatment (“TreatmentCourse”) can have multiple\nchemotherapy cycles associated with it.Note, too, that medical record number (MRN) only appears in 2 of the 3 tables (it is not needed\nin the “Chemotherapy” table).If the researcher wishes to retrieve the MRN, it can be obtained via a SQL query, linking back to one of\nthe tables that contains it.Abbreviations: DOB Z date of birth.Disadvantage of SQL\n\nWith SQL, it is possible to create highly complex queries;\nit is a rich and powerful language.However, these can be\n\nquite complicated and obtuse to a nontechnical person.Some\nsystems do provide graphical tools to help build SQL queries,\nbut, even so, there are some users for whom all but the\nsimplest SQL queries will be beyond their technical skills.Figure 4 Note that each ﬁeld in this database table is speciﬁcally designed.It has a “type” (kind) and a “size” (length).When\nimporting data from numerous external sources, these deﬁnitions can prevent erroneous imports (for details, see text).Note that the\nﬁeld “MRN” is the key for this table.All the data in this table refer back to “MRN” via a one-to-one relationship.MRN can be used as\nthe key because no 2 patients have the same MRN.Abbreviations: DOB Z date of birth; MRN Z medical record number.Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1285\n\nDatabase Implementation\n\nDatabases may, and often do, contain many thousands\nof tables and millions of rows of data.(In other words,\nthey can contain data far in excess of the requirements of\nany one radiation oncologist or even any one radiation\noncology department).In fact, some systems allow even\nsingle tables to contain terabytes or even petabytes of\ndata.5 Consequently, there are numerous systems avail-\nable to accommodate any researcher’s needs.Some of the\nvery best are open source (free).Software is available\nacross a wide variety of operating systems.Wikipedia\nprovides an outstanding overview of the topic.5\n\nTo implement a database system, it is ﬁrst necessary to\nhave a discussion with the IT Department at your institu-\ntion.There is no single solution for creating a data re-\nresearchers across all\ntrue for\npository that holds\ninstitutions.The solution can vary, depending on the re-\nsources at your institution and the level of access the IT\nDepartment has into the underlying patient data source\nsystems (often deﬁned in the institutional contracts signed\nwith the individual vendors).Some large centers have\nelaborate data warehouse systems.Smaller centers might\nprovide access to data from individual source systems but\nmight not have compiled them into a single data warehouse.Some IT departments might have adequate resources to\nprovide output data from their data warehouse to individual\nresearchers, when needed.Others might not. Some might\nprovide a dedicated research server on which the researcher\ncan construct a database.Other researchers might need to\nrely instead upon existing servers within their department.I\ndo not recommend that one set up a database system on a\nfree-standing laptop or desktop machine, as there are Health\nInsurance Portability and Accountability Act concerns (the\ncomputer could be stolen).Data should be backed up across\na secured network electronically.Creation of a Lung Cancer Radiation Therapy\nDatabase\n\nI began my own database several years ago.My need\ngrew out of a sense of frustration regarding lack of access\nto clinical data.At the time, at my institution, it was a\ndifﬁcult (and somewhat mysterious) process to procure\ndata from the data warehouse.However, data from\nMosaiq (Elekta AB, Stockholm, Sweden), which is our\ndepartment’s record or verify system, were available.These data formed the nucleus of the original database.Basic demographic information and radiation therapy\nprescriptions, dates of treatment, dose delivered, tumor\nstage, and the like, were exported, using custom software.Research IT provided a Linux server, on which I imple-\nmented the database.I chose to use MariaDB (MariaDB\nis a powerful, well-regarded,\nFoundation, DE), as it\n\ncommercially supported, free, open-source database sys-\ntem whose SQL functions are congruent with those of\nOracle (which is a database system I had used previ-\nously).Because my institution could not support an\nimplementation of an Oracle, MariaDB was an excellent\nalternate option.MariaDB does include a Windows GUI\ndatabase administration tool for administering its data-\nbases (creating tables, writing SQL code, importing or\nexporting data, and the like).I had previously used a\nsimilar commercial database administration product called\nNavicat (Premium Cybertech Ltd, Hong Kong), which\nprovides similar functionality, so I elected to purchase\nthat.Similarly, I imported all data I had captured in\nresearch projects.More\nspreadsheets\nrecently, I have gained access to data from our data\nwarehouse and so have created numerous additional ta-\nbles to store the information.At present, the database\ncontains more than 3 million rows of data on approxi-\nmately 4800 patients, spread across more than 170 tables.for previous\n\nIncorporation of Data from Other\nInstitutional Data Systems\n\nTo import data from outside source systems requires a\nmultistep process, referred to as “ETL” (“Extraction,\nTransformation, and Loading”) in the data science liter-\nature.”6 The issues go far beyond the physical importation\nof data into the database; importing spreadsheets of data\nare a trivial task.There are numerous issues in ETL,\nwhich are critical to consider when designing a database\nand importing data into it.Furthermore, many of these\nissues are not inherently obvious.In fact, a large pro-\nportion of the time required to create a database and ﬁll it\nwith clinically useable data derives from the ETL\ninvolved.The oft-reproduced “Data Science Hierarchy of\nNeeds” illustrates this fact (Fig 1).Most of the discussion\nin this article addressed aspects of the bottom-most layer\nof the pyramid.ETL comprises the majority of the next 2\nlayers of the pyramid and is the topic of another article.References\n\n1. Codd ER. A relational model of data for large shared data banks.Commmunications of the ACM. 1970;13:377-387. 2. Wikipedia. SQL.Available at: https://en.wikipedia.org/wiki/SQL.Accessed February 14, 2020. 3. Wikipedia.IBM System R. Available at: https://en.wikipedia.org/\n\nwiki/IBM_System_R.Accessed February 14, 2020. 4. Dilling TJ.Artiﬁcial Intelligence (AI) for clinical analysis: Design\nand implementation of a suitable database resource.Int J Radiat\nOncol Biol Phys. 2019;105:E131-E132. 5. Wikipedia.Comparison of relational database managment systems.Available\nhttps://en.wikipedia.org/wiki/Comparison_of_\nrelational_database_management_systems.Accessed February 14,\n2020.\n\nat:\n\n6.Wikipedia. Extract, Transform, Load. Available at: https://en.wikipedia.org/wiki/Extract,_transform,_load. Accessed April 13,\n2020.",
          "time": 524.752192735672,
          "input_token_size": 5733,
          "output_token_size": 220,
          "original_provenance_id": 0
        }
      ],
      "metadata": {
        "question_id": "database_design_article_5b75ba47",
        "created_at": 1749627015.861017,
        "processing_time": 529.7121667861938,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs_prev",
        "reason": "shorter_provenance",
        "sentence_count": 194,
        "provenance_count": 1,
        "alternatives": [
          {
            "source": "test_outputs_prev",
            "sentence_count": 194,
            "provenance_count": 1,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.678671"
      }
    }
  },
  {
    "5e0017ec": {
      "question": "How does the article illustrate the practical application of a relational database system using a lung cancer therapy example?",
      "answer": "1. The article illustrates the practical application of a relational database system using a lung cancer therapy example by describing the creation of a lung cancer radiation therapy database that contains more than 3 million rows of data on approximately 4800 patients, spread across more than 170 tables.\n\n2. It provides real-life examples of what such a relational database system can do, such as finding patients who might be candidates for a certain lung cancer clinical trial and setting up complex queries to identify specific patient characteristics and treatment outcomes.\n\n3. The article emphasizes the efficiency of SQL queries in retrieving and manipulating large datasets, which is exemplified by the ability to find 135 patients out of more than 4600 in the database who meet specific criteria for a clinical trial.\n\n4. It highlights the advantages of relational databases over spreadsheets in managing multidimensional data, particularly in the context of tracking multiple treatment courses and chemotherapy cycles for lung cancer patients.",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            138,
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            165,
            166,
            167,
            168,
            169,
            170,
            171,
            172,
            173,
            174,
            175,
            176,
            177,
            178,
            179,
            180,
            181,
            182,
            183,
            184,
            185,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            193
          ],
          "provenance_ids": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            138,
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            165,
            166,
            167,
            168,
            169,
            170,
            171,
            172,
            173,
            174,
            175,
            176,
            177,
            178,
            179,
            180,
            181,
            182,
            183,
            184,
            185,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            193
          ],
          "provenance": "Advances in Radiation Oncology (2020) 5, 1280-1285\n\nScientiﬁc Article\nArtiﬁcial Intelligence Research: The Utility and\nDesign of a Relational Database System\n\nwww.advancesradonc.org\n\nThomas J. Dilling, MD*\n\nDepartment of Radiation Oncology, Mofﬁtt Cancer Center\n\nReceived 13 March 2020; revised 13 April 2020; accepted 11 June 2020\n\nAbstract\nAlthough many researchers talk about a “patient database,” they typically are not referring to a database at all, but instead to a spreadsheet of\ncurated facts about a cohort of patients.This article describes relational database systems and how they differ from spreadsheets.At their core,\nspreadsheets are only capable of describing one-to-one (1:1) relationships.However, this article demonstrates that clinical medical data\nencapsulate numerous one-to-many relationships.Consequently, spreadsheets are very inefﬁcient relative to relational database systems,\nwhich gracefully manage such data.Databases provide other advantages, in that the data ﬁelds are “typed” (that is, they contain speciﬁc\nkinds of data).This prevents users from entering spurious data during data import.Because each record contains a “key,” it becomes\nimpossible to add duplicate information (ie, add the same patient twice).Databases store data in very efﬁcient ways, minimizing space and\nmemory requirements on the host system.Likewise, databases can be queried or manipulated using a highly complex language called\nSQL.Consequently, it becomes trivial to cull large amounts of data from a vast number of data ﬁelds on very precise subsets of patients.Databases can be quite large (terabytes or more in size), yet still are highly efﬁcient to query.Consequently, with the explosion of data\navailable in electronic health records and other data sources, databases become increasingly important to contain or order these data.Ultimately, this will enable the clinical researcher to perform artiﬁcial intelligence analyses across vast amounts of clinical data in a way\nheretofore impossible.This article provides initial guidance in terms of creating a relational database system.(cid:1) 2020 Published by Elsevier Inc. on behalf of American Society for Radiation Oncology.This is an open access article under the CC BY-NC-\nND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).Introduction\n\nThis issue of Advances in Radiation Oncology presents\na series of articles around applications of artiﬁcial intel-\nligence (AI) in our ﬁeld.One of the potential beneﬁts of\nAI is that it can pore through large amounts of data to\ndiscover patterns not evident to clinicians.However, this\nvast volume of data cannot be accommodated within a\nsingle spreadsheet (which is how most clinical researchers\n\nResearch data are not available at this time. Sources of support: none.Disclosures: Dr Dilling reports personal fees and nonﬁnancial sup-\nport from NCCN, personal fees from Varian, personal fees and nonﬁ-\nnancial support from Harborside Press, nonﬁnancial support from Astra\nZeneca, all outside the submitted work.* Corresponding author: Thomas J. Dilling, MD; E-mail: Thomas.Dilling@mofﬁtt.org. work when conducting standard multivariable analyses).In fact, many researchers erroneously describe spread-\nsheets as databases.This article will demonstrate both\nwhat a relational database system is and how it is superior\nto a spreadsheet.It will also discuss considerations when\nimplementing a relational database system (RDBS) for\nyour own research purposes, using an actual lung cancer\nradiation therapy database as an example.I have also\nprovided some excellent Wikipedia references\nthat\ncontain abundant additional\ninformation, beyond what\ncan be encapsulated in a single article.(These, in turn,\nreference computer science literature for the very intrepid\nreader, but such references might extend beyond the level\nof understanding of all but the most technically inclined.)One might question why a database system is neces-\nsary for AI research.This article will demonstrate that a\ndatabase enables creation of a multidimensional structure\n\nhttps://doi.org/10.1016/j.adro.2020.06.027\n2452-1094/(cid:1) 2020 Published by Elsevier Inc. on behalf of American Society for Radiation Oncology.This is an open access article under the CC BY-\nNC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1281\n\nto cleanly and accurately contain these data.To perform\nAI analysis requires efﬁcient storage of hundreds or\nthousands of data points on a single patient or even on a\nsingle course of radiation therapy.There is a famous\nthe “data science hierarchy of needs”\nillustration of\n(Fig 1).To perform an AI analysis, one must ﬁrst create\nan RDBS to serve as the storage mechanism.This crea-\ntion of a system to store structured data entails a major\npart of the bottom row of the pyramid.To create a data-\nbase,\nthe reader down the path toward\nconducting AI research at their own institution.then, will set\n\nOrigin of Relational Databases\n\nThe concept of a RDBS was ﬁrst described in a sem-\ninal article in 1970.1 The theoretic construct was that all\ndata could be deﬁned or represented as a series of re-\nlations with or to other data.The article was quantitative\nin that it used relational algebra and tuple relational cal-\nculus to prove its points.2 IBM used this theoretic\nframework to design what became the initial SQL (pro-\nnounced “see-quell” or “ess-cue-ell”) language, which\nthey used to manipulate and retrieve data from IBM’s\noriginal RDBS.3 Since that time, the American National\nStandards Institute and the International Standards Orga-\nnization have deemed SQL to be the standard language in\nrelational database communication.2 Today, there are a\nwide variety of commercial and open-source relational\ndatabase systems available for use.These vary in their\nfeatures and relative strengths or weaknesses, but,\nfundamentally,\nthey all operate using the principles\ndeﬁned in the Codd article.1 The SQL language is well\ndeﬁned and is used to write code to query (or update) the\ndata within an RDBS.Fundamental Disadvantage of Spreadsheets\n\nSpreadsheets are designed to incorporate and analyze\none-to-one (1:1) relationships (Fig 2a).Each patient has a\nsingle birth date and a single death date.However, medical\nrecords are rife with “one-to-many” relationships (Fig 2b).A patient might receive multiple different courses of radi-\nation therapy treatment, as in the example provided, or\nmight have multiple chemotherapy administrations.To\naccommodate these data, a spreadsheet quickly balloons in\nsize (Fig 2c).Not only is this inefﬁcient (duplication of\ndata), but it also makes maintenance of the spreadsheet\nextremely cumbersome and prone to error.For instance, in\nthis example, when patient “12345” passes away, the\n“DeathDate” needs to be updated in 5 rows of the spread-\nsheet (because she had 2 courses of radiation therapy and 4\ncycles of chemotherapy).It is not difﬁcult to imagine that a\nresearcher could neglect to update the “DeathDate” in each\nplace, introducing errors.To further expound upon the\nissue, imagine a patient who takes numerous medications or\nhas variable numbers of comorbid illnesses;\nthe rows\nrequired to encapsulate 1 patient explode.To use a data\nscience term, the dimensionality of the data balloons.But,\nto reiterate the point, spreadsheets are only designed to\nencapsulate 1:1 relationships (2-dimensional data).But\npatient data are multidimensional.Fundamental Advantage of Relational\nDatabases\n\nRDBS gracefully manage one-to-many relationships.They can do so because a database is created of numerous\ndifferent tables, which are explicitly linked (Fig 3).Every\n\nFigure 1\nAbbreviation: AI Z artiﬁcial intelligence.The data science hierarchy of needs.Used with permission of Monica Rogati (aipyramid.com). For details, see text.1282\n\nT.J. Dilling\n\nAdvances in Radiation Oncology: NovembereDecember 2020\n\nFigure 2\n(a) Spreadsheets are useful where there is a one-to-one correspondence of data.For instance, each unique medical record\nnumber (MRN) represents a single patient, with a single birth/death date and a single ﬁrst and last name.(b) Spreadsheets “break down”\nwhen describing 1-to-many correspondences.In this example, 2 patients have a total of 5 courses of radiation therapy treatment between\nthem.(c) To accommodate all the data in our simple example, a spreadsheet needs to store redundant data (colored in red).The data\nstorage requirements quickly balloon.Furthermore, as additional traits and factors are added to the spreadsheet, it becomes impossible to\nfollow, as one patient will require untold numbers of rows to capture all relevant data concepts.Stated another way, the data are\nmultidimensional.Maintenance and updating of ﬁelds become error-prone (see text).Abbreviations: DOB Z date of birth; Lname Z\nlast name; Fname Z ﬁrst name; LUL Z upper lobe; MRN Z medical record number; RLL, right lower lobe; RUL Z right upper lobe;\nSBRT Z stereotactic body radiotherapy.table must also contain a key, which is a unique, required\nidentiﬁer for each row of data.Relationships between the\ntables are deﬁned when creating the database tables or\nﬁelds.In the “demographics” table, medical\nrecord\nnumber, “MRN,” is the key.For the “TreatmentCourse”\nand “Chemotherapy” tables,\nthe keys are “Treatment-\nCourse” and “ChemotherapyID,” respectively.Note that\n“TreatmentCourse 1” in the “TreatmentCourse” table\npertains to breast radiation therapy treatment.This, in\nis linked to 4 cycles of chemotherapy in the\nturn,\n“Chemotherapy” table, each of which is uniquely identi-\nﬁed in that table, in turn.When comparing Fig 3 (a database) to Fig 2c (a\nspreadsheet), note that Fig 3 contains the same informa-\ntion as Fig 2c without the addition of repetitious infor-\nmation (colored red in Fig 2c).Alternately,\nin a\nspreadsheet, the researcher could manually aggregate and\nsummarize the chemotherapy delivered into a single cell\nin a single row of the spreadsheet (ie, “ﬂatten” the data, to\nuse a data science term), but then some data would be\nlost.Using the chemotherapy administrations as an\nexample, if one were to “ﬂatten” the data down to a single\nstating “4 cycles of Adriamycin/\nspreadsheet cell\nCytoxan,” one loses the dates of administration.If one\nsummarizes the data as “4 cycles of Adriamycin/Cytoxan:\n<date1>, <date2>, <date3>, <date4>,” the dates and\nthe chemotherapy occupy the same cell and the data are\nretained but are no longer discrete; one loses the ability to\nﬁlter the spreadsheet by chemotherapy kind or by date.Conversely, a SQL database cleanly encapsulates these\nmultidimensional data (Fig 3).Each table is 2-dimensional\n\nin structure.But because it can contain multiple rows of\ndata on 1 patient (chemotherapy administrations, to follow\nthe same example), a multidimensional structure is created,\nas 4 chemotherapy cycles link to one of 2 courses of radi-\nation therapy (“TreatmentCourse” table) for 1 patient\n(“Demographics” table).Now, imagine a clinical database\nwith millions of rows of data spread across hundreds of\ntables, as in the real-life example described below.Clearly,\na spreadsheet would not be adequate.Additional Advantages of Relational Databases\n\n1.Each row of data in a table has a unique identiﬁer (a\nkey).Consequently, one cannot accidentally add a\nrow of data into a database table twice.2. Each ﬁeld in the database is speciﬁcally deﬁned as to\nwhat it contains (Fig 4).Consequently, if data are\nimported from some external source, the data types\nmust correspond or the import will fail.For example,\nif an entry contained an integer where a date was\nindicated, the database would signal that the variable\ncontained erroneous data.This feature helps maintain\nconsistency of data and minimize data errors. 3.Not only must the data types correspond, but the\ndata lengths must be observed.If the database\ndesign states that a ﬁeld is a decimal with 3 places to\nthe right of the decimal place, then a fourth decimal\nplace would be truncated at import.Alternately, the\ndatabase could declare an error, which might also\nimply that the ﬁeld contains erroneous data.Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1283\n\n4.A key from one table can be linked “backward” to a\nkey from another table (termed a “foreign key”).As\nan example (Fig 3), the database can be designed\nsuch that the MRN from “TreatmentCourse” must\nto an MRN already contained within the\nrefer\n“Demographics” table.If one tried to import data\ninto “TreatmentCourse” and it used an MRN not\nlisted in “Demographics,” the import would fail.Such a situation might imply, for instance, that the\nMRN was incorrect in the external data source (or in\nthe database).Or perhaps it relates to a patient who\nreceived prostate radiation therapy (but you have a\nbreast cancer database). 5.Foreign key relationships also work in the opposite\ndirection: If one realizes that a patient is represented\nin the database who should not be, one can delete\nthe patient from the “Demographics” table and the\ndatabase will delete all data about that patient from\nall the other data tables automatically.6. RDBS are speciﬁcally optimized to manage vast\namounts of data.Large spreadsheets (containing\nthousands of rows and hundreds of columns) are\nextremely slow and memory intensive.However, one\ncan query across or manipulate many gigabytes of data\nin fractions of a second in many RDBS, as the data\nstores are highly optimized and efﬁcient from both a\ncomputational and memory utilization perspective.7. RDBS are much more secure than spreadsheets.An\ninstitution’s IT team might allow one to access some\ntables within an institution’s data warehouse, but not\nothers.One’s access could be restricted to deﬁned\nsubsets of patients.One might have “read” access to\nthese data, but not “write” access (or “write” access to\nonly some subset of ﬁelds).Databases might likewise\nbe set up such that only users from speciﬁc IP ad-\ndresses or computers may access them.The login\nsystems set up by IT departments for these purposes\ntypically use state of the art encryption algorithms, 2-\nfactor authentication, and the like.In contrast, an\nExcel spreadsheet can be “locked” such that only\nsome ﬁelds are editable.But it is not possible to\nrestrict data access by user.Furthermore, this re-\nstriction is to “write” access only, not to “read” ac-\ncess.It is true that one can “hide” columns in a\nspreadsheet and then lock it, to prevent a given user\nfrom viewing them, but the spreadsheet maintainer\nmust do this manually before distributing the\nspreadsheet (time-consuming and prone to error).Beneﬁts of SQL\n\nAs described earlier, SQL is a deﬁned, standardized\nlanguage for composing queries within an RDBS, or to\n\nmanipulate and update these data.Some database systems\nprovide “extensions” to the SQL standard, to provide some\nadditional and speciﬁc functionality (details available in the\nvendors’ literature).It is beyond the scope of this article to\nteach SQL coding.However, many excellent online re-\nsources are available for the interested reader.Functionally,\nSQL allows one to search for any number of variables or\ncombinations of variables across any number of tables,\nsimultaneously.This can be extremely powerful and useful,\nboth for retrieving and for manipulating and updating data.Queries can be saved for reuse or modiﬁcation later.As\nstated above, these queries typically produce output in\nfractions of a second, even across vast pools of data.Our institution has a database of patients who have\nreceived radiation therapy to the lung, whether for pri-\nmary cancer or metastatic disease to the lung.4 The\ndatabase and some of its details of implementation are\ndescribed below, but ﬁrst, some “real-life” examples of\nwhat such an RDBS system can do (not possible when\nusing a spreadsheet):\n\n(cid:1) Real-life example 1: Find patients who might be\ncandidates for a certain lung cancer clinical trial.For\nthis particular study,\nthey must have previously\nreceived lung SBRT, have nonmetastatic disease, no\nevidence of recurrence, be alive (obviously), be at\nleast 2 years out from the end of the prior SBRT\ntreatment, and must have been seen in follow-up\nwithin the past 1.5 years.By constructing an\nappropriate SQL query, 135 patients were found (out\nof more than 4600 in the database) to pass along to\nthe PI for closer inspection.(cid:1) Real-life example 2: It takes only a few minutes to\nset up very complex queries.If one has a basic fa-\ncility with SQL, one can design a query such as:\n“Find all patients with stage II or III lung cancer\ntreated with concurrent chemoradiotherapy who\ndeveloped neutropenia during treatment, who are\nfemale, 70 years of age or older, and who take any\nantihypertensive medication (deﬁned in a certain\nlist).” Ultimately, such queries are only limited by\none’s imagination (and the richness or completeness\nof the data coming from the source systems).It is true that one can “ﬁlter” data in Excel to rapidly\nﬁnd subsets.However, this ﬁltering is limited to “true or\nfalse” matching.In this example, it would be impossible\nto discover the patients who developed neutropenia while\nundergoing radiation therapy unless one had a “neu-\ntropenia (yes or no)” column.But one cannot perform the\narithmetic “where date of neutropenia > Radiation-\nStartDate and < RadiationEndDate” to ﬁlter the data\nwithout writing code in Visual Basic, which is likely\nbeyond the ability of most.1284\n\nT.J. Dilling\n\nAdvances in Radiation Oncology: NovembereDecember 2020\n\nIn a relational database, data are stored in multiple tables, which are joined via deﬁned variables.In this ﬁctitious example,\nFigure 3\nnote that the patient only has one “DeathDate” to update.Furthermore, each course of treatment (“TreatmentCourse”) can have multiple\nchemotherapy cycles associated with it.Note, too, that medical record number (MRN) only appears in 2 of the 3 tables (it is not needed\nin the “Chemotherapy” table).If the researcher wishes to retrieve the MRN, it can be obtained via a SQL query, linking back to one of\nthe tables that contains it.Abbreviations: DOB Z date of birth.Disadvantage of SQL\n\nWith SQL, it is possible to create highly complex queries;\nit is a rich and powerful language.However, these can be\n\nquite complicated and obtuse to a nontechnical person.Some\nsystems do provide graphical tools to help build SQL queries,\nbut, even so, there are some users for whom all but the\nsimplest SQL queries will be beyond their technical skills.Figure 4 Note that each ﬁeld in this database table is speciﬁcally designed.It has a “type” (kind) and a “size” (length).When\nimporting data from numerous external sources, these deﬁnitions can prevent erroneous imports (for details, see text).Note that the\nﬁeld “MRN” is the key for this table.All the data in this table refer back to “MRN” via a one-to-one relationship.MRN can be used as\nthe key because no 2 patients have the same MRN.Abbreviations: DOB Z date of birth; MRN Z medical record number.Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1285\n\nDatabase Implementation\n\nDatabases may, and often do, contain many thousands\nof tables and millions of rows of data.(In other words,\nthey can contain data far in excess of the requirements of\nany one radiation oncologist or even any one radiation\noncology department).In fact, some systems allow even\nsingle tables to contain terabytes or even petabytes of\ndata.5 Consequently, there are numerous systems avail-\nable to accommodate any researcher’s needs.Some of the\nvery best are open source (free).Software is available\nacross a wide variety of operating systems.Wikipedia\nprovides an outstanding overview of the topic.5\n\nTo implement a database system, it is ﬁrst necessary to\nhave a discussion with the IT Department at your institu-\ntion.There is no single solution for creating a data re-\nresearchers across all\ntrue for\npository that holds\ninstitutions.The solution can vary, depending on the re-\nsources at your institution and the level of access the IT\nDepartment has into the underlying patient data source\nsystems (often deﬁned in the institutional contracts signed\nwith the individual vendors).Some large centers have\nelaborate data warehouse systems.Smaller centers might\nprovide access to data from individual source systems but\nmight not have compiled them into a single data warehouse.Some IT departments might have adequate resources to\nprovide output data from their data warehouse to individual\nresearchers, when needed.Others might not. Some might\nprovide a dedicated research server on which the researcher\ncan construct a database.Other researchers might need to\nrely instead upon existing servers within their department.I\ndo not recommend that one set up a database system on a\nfree-standing laptop or desktop machine, as there are Health\nInsurance Portability and Accountability Act concerns (the\ncomputer could be stolen).Data should be backed up across\na secured network electronically.Creation of a Lung Cancer Radiation Therapy\nDatabase\n\nI began my own database several years ago.My need\ngrew out of a sense of frustration regarding lack of access\nto clinical data.At the time, at my institution, it was a\ndifﬁcult (and somewhat mysterious) process to procure\ndata from the data warehouse.However, data from\nMosaiq (Elekta AB, Stockholm, Sweden), which is our\ndepartment’s record or verify system, were available.These data formed the nucleus of the original database.Basic demographic information and radiation therapy\nprescriptions, dates of treatment, dose delivered, tumor\nstage, and the like, were exported, using custom software.Research IT provided a Linux server, on which I imple-\nmented the database.I chose to use MariaDB (MariaDB\nis a powerful, well-regarded,\nFoundation, DE), as it\n\ncommercially supported, free, open-source database sys-\ntem whose SQL functions are congruent with those of\nOracle (which is a database system I had used previ-\nously).Because my institution could not support an\nimplementation of an Oracle, MariaDB was an excellent\nalternate option.MariaDB does include a Windows GUI\ndatabase administration tool for administering its data-\nbases (creating tables, writing SQL code, importing or\nexporting data, and the like).I had previously used a\nsimilar commercial database administration product called\nNavicat (Premium Cybertech Ltd, Hong Kong), which\nprovides similar functionality, so I elected to purchase\nthat.Similarly, I imported all data I had captured in\nresearch projects.More\nspreadsheets\nrecently, I have gained access to data from our data\nwarehouse and so have created numerous additional ta-\nbles to store the information.At present, the database\ncontains more than 3 million rows of data on approxi-\nmately 4800 patients, spread across more than 170 tables.for previous\n\nIncorporation of Data from Other\nInstitutional Data Systems\n\nTo import data from outside source systems requires a\nmultistep process, referred to as “ETL” (“Extraction,\nTransformation, and Loading”) in the data science liter-\nature.”6 The issues go far beyond the physical importation\nof data into the database; importing spreadsheets of data\nare a trivial task.There are numerous issues in ETL,\nwhich are critical to consider when designing a database\nand importing data into it.Furthermore, many of these\nissues are not inherently obvious.In fact, a large pro-\nportion of the time required to create a database and ﬁll it\nwith clinically useable data derives from the ETL\ninvolved.The oft-reproduced “Data Science Hierarchy of\nNeeds” illustrates this fact (Fig 1).Most of the discussion\nin this article addressed aspects of the bottom-most layer\nof the pyramid.ETL comprises the majority of the next 2\nlayers of the pyramid and is the topic of another article.References\n\n1. Codd ER. A relational model of data for large shared data banks.Commmunications of the ACM. 1970;13:377-387. 2. Wikipedia. SQL.Available at: https://en.wikipedia.org/wiki/SQL.Accessed February 14, 2020. 3. Wikipedia.IBM System R. Available at: https://en.wikipedia.org/\n\nwiki/IBM_System_R.Accessed February 14, 2020. 4. Dilling TJ.Artiﬁcial Intelligence (AI) for clinical analysis: Design\nand implementation of a suitable database resource.Int J Radiat\nOncol Biol Phys. 2019;105:E131-E132. 5. Wikipedia.Comparison of relational database managment systems.Available\nhttps://en.wikipedia.org/wiki/Comparison_of_\nrelational_database_management_systems.Accessed February 14,\n2020.\n\nat:\n\n6.Wikipedia. Extract, Transform, Load. Available at: https://en.wikipedia.org/wiki/Extract,_transform,_load. Accessed April 13,\n2020.",
          "time": 513.5705189704895,
          "input_token_size": 5737,
          "output_token_size": 87,
          "original_provenance_id": 0
        }
      ],
      "metadata": {
        "question_id": "database_design_article_5e0017ec",
        "created_at": 1749869556.2225907,
        "processing_time": 518.0727887153625,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs_prev1",
        "reason": "shorter_provenance",
        "sentence_count": 194,
        "provenance_count": 1,
        "alternatives": [
          {
            "source": "test_outputs_prev1",
            "sentence_count": 194,
            "provenance_count": 1,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.679675"
      }
    }
  },
  {
    "693a5c16": {
      "question": "What are the limitations of using spreadsheets for complex clinical data management?",
      "answer": "1. Spreadsheets are only capable of describing one-to-one (1:1) relationships.\n2. Spreadsheets are inefficient for managing one-to-many relationships.\n3. Maintenance of spreadsheets is cumbersome and prone to error.\n4. Updating data in spreadsheets can lead to inconsistencies and errors.\n5. Spreadsheets cannot efficiently handle large volumes of data.\n6. Spreadsheets lack the ability to enforce data types and lengths, leading to potential data errors.\n7. Spreadsheets do not provide unique identifiers for rows, allowing for duplicate entries.\n8. Spreadsheets are slow and memory intensive when handling large datasets.\n9. Spreadsheets do not offer robust security features compared to databases.\n10. Complex queries in spreadsheets are limited and often require advanced coding skills.",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            138,
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            165,
            166,
            167,
            168,
            169,
            170,
            171,
            172,
            173,
            174,
            175,
            176,
            177,
            178,
            179,
            180,
            181,
            182,
            183,
            184,
            185,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            193
          ],
          "provenance_ids": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            138,
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            165,
            166,
            167,
            168,
            169,
            170,
            171,
            172,
            173,
            174,
            175,
            176,
            177,
            178,
            179,
            180,
            181,
            182,
            183,
            184,
            185,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            193
          ],
          "provenance": "Advances in Radiation Oncology (2020) 5, 1280-1285\n\nScientiﬁc Article\nArtiﬁcial Intelligence Research: The Utility and\nDesign of a Relational Database System\n\nwww.advancesradonc.org\n\nThomas J. Dilling, MD*\n\nDepartment of Radiation Oncology, Mofﬁtt Cancer Center\n\nReceived 13 March 2020; revised 13 April 2020; accepted 11 June 2020\n\nAbstract\nAlthough many researchers talk about a “patient database,” they typically are not referring to a database at all, but instead to a spreadsheet of\ncurated facts about a cohort of patients.This article describes relational database systems and how they differ from spreadsheets.At their core,\nspreadsheets are only capable of describing one-to-one (1:1) relationships.However, this article demonstrates that clinical medical data\nencapsulate numerous one-to-many relationships.Consequently, spreadsheets are very inefﬁcient relative to relational database systems,\nwhich gracefully manage such data.Databases provide other advantages, in that the data ﬁelds are “typed” (that is, they contain speciﬁc\nkinds of data).This prevents users from entering spurious data during data import.Because each record contains a “key,” it becomes\nimpossible to add duplicate information (ie, add the same patient twice).Databases store data in very efﬁcient ways, minimizing space and\nmemory requirements on the host system.Likewise, databases can be queried or manipulated using a highly complex language called\nSQL.Consequently, it becomes trivial to cull large amounts of data from a vast number of data ﬁelds on very precise subsets of patients.Databases can be quite large (terabytes or more in size), yet still are highly efﬁcient to query.Consequently, with the explosion of data\navailable in electronic health records and other data sources, databases become increasingly important to contain or order these data.Ultimately, this will enable the clinical researcher to perform artiﬁcial intelligence analyses across vast amounts of clinical data in a way\nheretofore impossible.This article provides initial guidance in terms of creating a relational database system.(cid:1) 2020 Published by Elsevier Inc. on behalf of American Society for Radiation Oncology.This is an open access article under the CC BY-NC-\nND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).Introduction\n\nThis issue of Advances in Radiation Oncology presents\na series of articles around applications of artiﬁcial intel-\nligence (AI) in our ﬁeld.One of the potential beneﬁts of\nAI is that it can pore through large amounts of data to\ndiscover patterns not evident to clinicians.However, this\nvast volume of data cannot be accommodated within a\nsingle spreadsheet (which is how most clinical researchers\n\nResearch data are not available at this time. Sources of support: none.Disclosures: Dr Dilling reports personal fees and nonﬁnancial sup-\nport from NCCN, personal fees from Varian, personal fees and nonﬁ-\nnancial support from Harborside Press, nonﬁnancial support from Astra\nZeneca, all outside the submitted work.* Corresponding author: Thomas J. Dilling, MD; E-mail: Thomas.Dilling@mofﬁtt.org. work when conducting standard multivariable analyses).In fact, many researchers erroneously describe spread-\nsheets as databases.This article will demonstrate both\nwhat a relational database system is and how it is superior\nto a spreadsheet.It will also discuss considerations when\nimplementing a relational database system (RDBS) for\nyour own research purposes, using an actual lung cancer\nradiation therapy database as an example.I have also\nprovided some excellent Wikipedia references\nthat\ncontain abundant additional\ninformation, beyond what\ncan be encapsulated in a single article.(These, in turn,\nreference computer science literature for the very intrepid\nreader, but such references might extend beyond the level\nof understanding of all but the most technically inclined.)One might question why a database system is neces-\nsary for AI research.This article will demonstrate that a\ndatabase enables creation of a multidimensional structure\n\nhttps://doi.org/10.1016/j.adro.2020.06.027\n2452-1094/(cid:1) 2020 Published by Elsevier Inc. on behalf of American Society for Radiation Oncology.This is an open access article under the CC BY-\nNC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1281\n\nto cleanly and accurately contain these data.To perform\nAI analysis requires efﬁcient storage of hundreds or\nthousands of data points on a single patient or even on a\nsingle course of radiation therapy.There is a famous\nthe “data science hierarchy of needs”\nillustration of\n(Fig 1).To perform an AI analysis, one must ﬁrst create\nan RDBS to serve as the storage mechanism.This crea-\ntion of a system to store structured data entails a major\npart of the bottom row of the pyramid.To create a data-\nbase,\nthe reader down the path toward\nconducting AI research at their own institution.then, will set\n\nOrigin of Relational Databases\n\nThe concept of a RDBS was ﬁrst described in a sem-\ninal article in 1970.1 The theoretic construct was that all\ndata could be deﬁned or represented as a series of re-\nlations with or to other data.The article was quantitative\nin that it used relational algebra and tuple relational cal-\nculus to prove its points.2 IBM used this theoretic\nframework to design what became the initial SQL (pro-\nnounced “see-quell” or “ess-cue-ell”) language, which\nthey used to manipulate and retrieve data from IBM’s\noriginal RDBS.3 Since that time, the American National\nStandards Institute and the International Standards Orga-\nnization have deemed SQL to be the standard language in\nrelational database communication.2 Today, there are a\nwide variety of commercial and open-source relational\ndatabase systems available for use.These vary in their\nfeatures and relative strengths or weaknesses, but,\nfundamentally,\nthey all operate using the principles\ndeﬁned in the Codd article.1 The SQL language is well\ndeﬁned and is used to write code to query (or update) the\ndata within an RDBS.Fundamental Disadvantage of Spreadsheets\n\nSpreadsheets are designed to incorporate and analyze\none-to-one (1:1) relationships (Fig 2a).Each patient has a\nsingle birth date and a single death date.However, medical\nrecords are rife with “one-to-many” relationships (Fig 2b).A patient might receive multiple different courses of radi-\nation therapy treatment, as in the example provided, or\nmight have multiple chemotherapy administrations.To\naccommodate these data, a spreadsheet quickly balloons in\nsize (Fig 2c).Not only is this inefﬁcient (duplication of\ndata), but it also makes maintenance of the spreadsheet\nextremely cumbersome and prone to error.For instance, in\nthis example, when patient “12345” passes away, the\n“DeathDate” needs to be updated in 5 rows of the spread-\nsheet (because she had 2 courses of radiation therapy and 4\ncycles of chemotherapy).It is not difﬁcult to imagine that a\nresearcher could neglect to update the “DeathDate” in each\nplace, introducing errors.To further expound upon the\nissue, imagine a patient who takes numerous medications or\nhas variable numbers of comorbid illnesses;\nthe rows\nrequired to encapsulate 1 patient explode.To use a data\nscience term, the dimensionality of the data balloons.But,\nto reiterate the point, spreadsheets are only designed to\nencapsulate 1:1 relationships (2-dimensional data).But\npatient data are multidimensional.Fundamental Advantage of Relational\nDatabases\n\nRDBS gracefully manage one-to-many relationships.They can do so because a database is created of numerous\ndifferent tables, which are explicitly linked (Fig 3).Every\n\nFigure 1\nAbbreviation: AI Z artiﬁcial intelligence.The data science hierarchy of needs.Used with permission of Monica Rogati (aipyramid.com). For details, see text.1282\n\nT.J. Dilling\n\nAdvances in Radiation Oncology: NovembereDecember 2020\n\nFigure 2\n(a) Spreadsheets are useful where there is a one-to-one correspondence of data.For instance, each unique medical record\nnumber (MRN) represents a single patient, with a single birth/death date and a single ﬁrst and last name.(b) Spreadsheets “break down”\nwhen describing 1-to-many correspondences.In this example, 2 patients have a total of 5 courses of radiation therapy treatment between\nthem.(c) To accommodate all the data in our simple example, a spreadsheet needs to store redundant data (colored in red).The data\nstorage requirements quickly balloon.Furthermore, as additional traits and factors are added to the spreadsheet, it becomes impossible to\nfollow, as one patient will require untold numbers of rows to capture all relevant data concepts.Stated another way, the data are\nmultidimensional.Maintenance and updating of ﬁelds become error-prone (see text).Abbreviations: DOB Z date of birth; Lname Z\nlast name; Fname Z ﬁrst name; LUL Z upper lobe; MRN Z medical record number; RLL, right lower lobe; RUL Z right upper lobe;\nSBRT Z stereotactic body radiotherapy.table must also contain a key, which is a unique, required\nidentiﬁer for each row of data.Relationships between the\ntables are deﬁned when creating the database tables or\nﬁelds.In the “demographics” table, medical\nrecord\nnumber, “MRN,” is the key.For the “TreatmentCourse”\nand “Chemotherapy” tables,\nthe keys are “Treatment-\nCourse” and “ChemotherapyID,” respectively.Note that\n“TreatmentCourse 1” in the “TreatmentCourse” table\npertains to breast radiation therapy treatment.This, in\nis linked to 4 cycles of chemotherapy in the\nturn,\n“Chemotherapy” table, each of which is uniquely identi-\nﬁed in that table, in turn.When comparing Fig 3 (a database) to Fig 2c (a\nspreadsheet), note that Fig 3 contains the same informa-\ntion as Fig 2c without the addition of repetitious infor-\nmation (colored red in Fig 2c).Alternately,\nin a\nspreadsheet, the researcher could manually aggregate and\nsummarize the chemotherapy delivered into a single cell\nin a single row of the spreadsheet (ie, “ﬂatten” the data, to\nuse a data science term), but then some data would be\nlost.Using the chemotherapy administrations as an\nexample, if one were to “ﬂatten” the data down to a single\nstating “4 cycles of Adriamycin/\nspreadsheet cell\nCytoxan,” one loses the dates of administration.If one\nsummarizes the data as “4 cycles of Adriamycin/Cytoxan:\n<date1>, <date2>, <date3>, <date4>,” the dates and\nthe chemotherapy occupy the same cell and the data are\nretained but are no longer discrete; one loses the ability to\nﬁlter the spreadsheet by chemotherapy kind or by date.Conversely, a SQL database cleanly encapsulates these\nmultidimensional data (Fig 3).Each table is 2-dimensional\n\nin structure.But because it can contain multiple rows of\ndata on 1 patient (chemotherapy administrations, to follow\nthe same example), a multidimensional structure is created,\nas 4 chemotherapy cycles link to one of 2 courses of radi-\nation therapy (“TreatmentCourse” table) for 1 patient\n(“Demographics” table).Now, imagine a clinical database\nwith millions of rows of data spread across hundreds of\ntables, as in the real-life example described below.Clearly,\na spreadsheet would not be adequate.Additional Advantages of Relational Databases\n\n1.Each row of data in a table has a unique identiﬁer (a\nkey).Consequently, one cannot accidentally add a\nrow of data into a database table twice.2. Each ﬁeld in the database is speciﬁcally deﬁned as to\nwhat it contains (Fig 4).Consequently, if data are\nimported from some external source, the data types\nmust correspond or the import will fail.For example,\nif an entry contained an integer where a date was\nindicated, the database would signal that the variable\ncontained erroneous data.This feature helps maintain\nconsistency of data and minimize data errors. 3.Not only must the data types correspond, but the\ndata lengths must be observed.If the database\ndesign states that a ﬁeld is a decimal with 3 places to\nthe right of the decimal place, then a fourth decimal\nplace would be truncated at import.Alternately, the\ndatabase could declare an error, which might also\nimply that the ﬁeld contains erroneous data.Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1283\n\n4.A key from one table can be linked “backward” to a\nkey from another table (termed a “foreign key”).As\nan example (Fig 3), the database can be designed\nsuch that the MRN from “TreatmentCourse” must\nto an MRN already contained within the\nrefer\n“Demographics” table.If one tried to import data\ninto “TreatmentCourse” and it used an MRN not\nlisted in “Demographics,” the import would fail.Such a situation might imply, for instance, that the\nMRN was incorrect in the external data source (or in\nthe database).Or perhaps it relates to a patient who\nreceived prostate radiation therapy (but you have a\nbreast cancer database). 5.Foreign key relationships also work in the opposite\ndirection: If one realizes that a patient is represented\nin the database who should not be, one can delete\nthe patient from the “Demographics” table and the\ndatabase will delete all data about that patient from\nall the other data tables automatically.6. RDBS are speciﬁcally optimized to manage vast\namounts of data.Large spreadsheets (containing\nthousands of rows and hundreds of columns) are\nextremely slow and memory intensive.However, one\ncan query across or manipulate many gigabytes of data\nin fractions of a second in many RDBS, as the data\nstores are highly optimized and efﬁcient from both a\ncomputational and memory utilization perspective.7. RDBS are much more secure than spreadsheets.An\ninstitution’s IT team might allow one to access some\ntables within an institution’s data warehouse, but not\nothers.One’s access could be restricted to deﬁned\nsubsets of patients.One might have “read” access to\nthese data, but not “write” access (or “write” access to\nonly some subset of ﬁelds).Databases might likewise\nbe set up such that only users from speciﬁc IP ad-\ndresses or computers may access them.The login\nsystems set up by IT departments for these purposes\ntypically use state of the art encryption algorithms, 2-\nfactor authentication, and the like.In contrast, an\nExcel spreadsheet can be “locked” such that only\nsome ﬁelds are editable.But it is not possible to\nrestrict data access by user.Furthermore, this re-\nstriction is to “write” access only, not to “read” ac-\ncess.It is true that one can “hide” columns in a\nspreadsheet and then lock it, to prevent a given user\nfrom viewing them, but the spreadsheet maintainer\nmust do this manually before distributing the\nspreadsheet (time-consuming and prone to error).Beneﬁts of SQL\n\nAs described earlier, SQL is a deﬁned, standardized\nlanguage for composing queries within an RDBS, or to\n\nmanipulate and update these data.Some database systems\nprovide “extensions” to the SQL standard, to provide some\nadditional and speciﬁc functionality (details available in the\nvendors’ literature).It is beyond the scope of this article to\nteach SQL coding.However, many excellent online re-\nsources are available for the interested reader.Functionally,\nSQL allows one to search for any number of variables or\ncombinations of variables across any number of tables,\nsimultaneously.This can be extremely powerful and useful,\nboth for retrieving and for manipulating and updating data.Queries can be saved for reuse or modiﬁcation later.As\nstated above, these queries typically produce output in\nfractions of a second, even across vast pools of data.Our institution has a database of patients who have\nreceived radiation therapy to the lung, whether for pri-\nmary cancer or metastatic disease to the lung.4 The\ndatabase and some of its details of implementation are\ndescribed below, but ﬁrst, some “real-life” examples of\nwhat such an RDBS system can do (not possible when\nusing a spreadsheet):\n\n(cid:1) Real-life example 1: Find patients who might be\ncandidates for a certain lung cancer clinical trial.For\nthis particular study,\nthey must have previously\nreceived lung SBRT, have nonmetastatic disease, no\nevidence of recurrence, be alive (obviously), be at\nleast 2 years out from the end of the prior SBRT\ntreatment, and must have been seen in follow-up\nwithin the past 1.5 years.By constructing an\nappropriate SQL query, 135 patients were found (out\nof more than 4600 in the database) to pass along to\nthe PI for closer inspection.(cid:1) Real-life example 2: It takes only a few minutes to\nset up very complex queries.If one has a basic fa-\ncility with SQL, one can design a query such as:\n“Find all patients with stage II or III lung cancer\ntreated with concurrent chemoradiotherapy who\ndeveloped neutropenia during treatment, who are\nfemale, 70 years of age or older, and who take any\nantihypertensive medication (deﬁned in a certain\nlist).” Ultimately, such queries are only limited by\none’s imagination (and the richness or completeness\nof the data coming from the source systems).It is true that one can “ﬁlter” data in Excel to rapidly\nﬁnd subsets.However, this ﬁltering is limited to “true or\nfalse” matching.In this example, it would be impossible\nto discover the patients who developed neutropenia while\nundergoing radiation therapy unless one had a “neu-\ntropenia (yes or no)” column.But one cannot perform the\narithmetic “where date of neutropenia > Radiation-\nStartDate and < RadiationEndDate” to ﬁlter the data\nwithout writing code in Visual Basic, which is likely\nbeyond the ability of most.1284\n\nT.J. Dilling\n\nAdvances in Radiation Oncology: NovembereDecember 2020\n\nIn a relational database, data are stored in multiple tables, which are joined via deﬁned variables.In this ﬁctitious example,\nFigure 3\nnote that the patient only has one “DeathDate” to update.Furthermore, each course of treatment (“TreatmentCourse”) can have multiple\nchemotherapy cycles associated with it.Note, too, that medical record number (MRN) only appears in 2 of the 3 tables (it is not needed\nin the “Chemotherapy” table).If the researcher wishes to retrieve the MRN, it can be obtained via a SQL query, linking back to one of\nthe tables that contains it.Abbreviations: DOB Z date of birth.Disadvantage of SQL\n\nWith SQL, it is possible to create highly complex queries;\nit is a rich and powerful language.However, these can be\n\nquite complicated and obtuse to a nontechnical person.Some\nsystems do provide graphical tools to help build SQL queries,\nbut, even so, there are some users for whom all but the\nsimplest SQL queries will be beyond their technical skills.Figure 4 Note that each ﬁeld in this database table is speciﬁcally designed.It has a “type” (kind) and a “size” (length).When\nimporting data from numerous external sources, these deﬁnitions can prevent erroneous imports (for details, see text).Note that the\nﬁeld “MRN” is the key for this table.All the data in this table refer back to “MRN” via a one-to-one relationship.MRN can be used as\nthe key because no 2 patients have the same MRN.Abbreviations: DOB Z date of birth; MRN Z medical record number.Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1285\n\nDatabase Implementation\n\nDatabases may, and often do, contain many thousands\nof tables and millions of rows of data.(In other words,\nthey can contain data far in excess of the requirements of\nany one radiation oncologist or even any one radiation\noncology department).In fact, some systems allow even\nsingle tables to contain terabytes or even petabytes of\ndata.5 Consequently, there are numerous systems avail-\nable to accommodate any researcher’s needs.Some of the\nvery best are open source (free).Software is available\nacross a wide variety of operating systems.Wikipedia\nprovides an outstanding overview of the topic.5\n\nTo implement a database system, it is ﬁrst necessary to\nhave a discussion with the IT Department at your institu-\ntion.There is no single solution for creating a data re-\nresearchers across all\ntrue for\npository that holds\ninstitutions.The solution can vary, depending on the re-\nsources at your institution and the level of access the IT\nDepartment has into the underlying patient data source\nsystems (often deﬁned in the institutional contracts signed\nwith the individual vendors).Some large centers have\nelaborate data warehouse systems.Smaller centers might\nprovide access to data from individual source systems but\nmight not have compiled them into a single data warehouse.Some IT departments might have adequate resources to\nprovide output data from their data warehouse to individual\nresearchers, when needed.Others might not. Some might\nprovide a dedicated research server on which the researcher\ncan construct a database.Other researchers might need to\nrely instead upon existing servers within their department.I\ndo not recommend that one set up a database system on a\nfree-standing laptop or desktop machine, as there are Health\nInsurance Portability and Accountability Act concerns (the\ncomputer could be stolen).Data should be backed up across\na secured network electronically.Creation of a Lung Cancer Radiation Therapy\nDatabase\n\nI began my own database several years ago.My need\ngrew out of a sense of frustration regarding lack of access\nto clinical data.At the time, at my institution, it was a\ndifﬁcult (and somewhat mysterious) process to procure\ndata from the data warehouse.However, data from\nMosaiq (Elekta AB, Stockholm, Sweden), which is our\ndepartment’s record or verify system, were available.These data formed the nucleus of the original database.Basic demographic information and radiation therapy\nprescriptions, dates of treatment, dose delivered, tumor\nstage, and the like, were exported, using custom software.Research IT provided a Linux server, on which I imple-\nmented the database.I chose to use MariaDB (MariaDB\nis a powerful, well-regarded,\nFoundation, DE), as it\n\ncommercially supported, free, open-source database sys-\ntem whose SQL functions are congruent with those of\nOracle (which is a database system I had used previ-\nously).Because my institution could not support an\nimplementation of an Oracle, MariaDB was an excellent\nalternate option.MariaDB does include a Windows GUI\ndatabase administration tool for administering its data-\nbases (creating tables, writing SQL code, importing or\nexporting data, and the like).I had previously used a\nsimilar commercial database administration product called\nNavicat (Premium Cybertech Ltd, Hong Kong), which\nprovides similar functionality, so I elected to purchase\nthat.Similarly, I imported all data I had captured in\nresearch projects.More\nspreadsheets\nrecently, I have gained access to data from our data\nwarehouse and so have created numerous additional ta-\nbles to store the information.At present, the database\ncontains more than 3 million rows of data on approxi-\nmately 4800 patients, spread across more than 170 tables.for previous\n\nIncorporation of Data from Other\nInstitutional Data Systems\n\nTo import data from outside source systems requires a\nmultistep process, referred to as “ETL” (“Extraction,\nTransformation, and Loading”) in the data science liter-\nature.”6 The issues go far beyond the physical importation\nof data into the database; importing spreadsheets of data\nare a trivial task.There are numerous issues in ETL,\nwhich are critical to consider when designing a database\nand importing data into it.Furthermore, many of these\nissues are not inherently obvious.In fact, a large pro-\nportion of the time required to create a database and ﬁll it\nwith clinically useable data derives from the ETL\ninvolved.The oft-reproduced “Data Science Hierarchy of\nNeeds” illustrates this fact (Fig 1).Most of the discussion\nin this article addressed aspects of the bottom-most layer\nof the pyramid.ETL comprises the majority of the next 2\nlayers of the pyramid and is the topic of another article.References\n\n1. Codd ER. A relational model of data for large shared data banks.Commmunications of the ACM. 1970;13:377-387. 2. Wikipedia. SQL.Available at: https://en.wikipedia.org/wiki/SQL.Accessed February 14, 2020. 3. Wikipedia.IBM System R. Available at: https://en.wikipedia.org/\n\nwiki/IBM_System_R.Accessed February 14, 2020. 4. Dilling TJ.Artiﬁcial Intelligence (AI) for clinical analysis: Design\nand implementation of a suitable database resource.Int J Radiat\nOncol Biol Phys. 2019;105:E131-E132. 5. Wikipedia.Comparison of relational database managment systems.Available\nhttps://en.wikipedia.org/wiki/Comparison_of_\nrelational_database_management_systems.Accessed February 14,\n2020.\n\nat:\n\n6.Wikipedia. Extract, Transform, Load. Available at: https://en.wikipedia.org/wiki/Extract,_transform,_load. Accessed April 13,\n2020.",
          "time": 628.5974626541138,
          "input_token_size": 5723,
          "output_token_size": 243,
          "original_provenance_id": 0
        }
      ],
      "metadata": {
        "question_id": "database_design_article_693a5c16",
        "created_at": 1749768830.5765936,
        "processing_time": 635.746554851532,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs_prev1",
        "reason": "shorter_provenance",
        "sentence_count": 194,
        "provenance_count": 1,
        "alternatives": [
          {
            "source": "test_outputs_prev1",
            "sentence_count": 194,
            "provenance_count": 1,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.681072"
      }
    }
  },
  {
    "6b437176": {
      "question": "When was the article accepted for publication?",
      "answer": "11 June 2020",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            0,
            1,
            2
          ],
          "provenance_ids": [
            0
          ],
          "provenance": "Advances in Radiation Oncology (2020) 5, 1280-1285\n\nScientiﬁc Article\nArtiﬁcial Intelligence Research: The Utility and\nDesign of a Relational Database System\n\nwww.advancesradonc.org\n\nThomas J. Dilling, MD*\n\nDepartment of Radiation Oncology, Mofﬁtt Cancer Center\n\nReceived 13 March 2020; revised 13 April 2020; accepted 11 June 2020\n\nAbstract\nAlthough many researchers talk about a “patient database,” they typically are not referring to a database at all, but instead to a spreadsheet of\ncurated facts about a cohort of patients.",
          "time": 4.711727619171143,
          "input_token_size": 6299,
          "output_token_size": 31,
          "original_provenance_id": 0
        }
      ],
      "metadata": {
        "question_id": "database_design_article_6b437176",
        "created_at": 1749869510.4943755,
        "processing_time": 8.38311767578125,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs_prev1",
        "reason": "shorter_provenance",
        "sentence_count": 3,
        "provenance_count": 1,
        "alternatives": [
          {
            "source": "test_outputs_prev1",
            "sentence_count": 3,
            "provenance_count": 1,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.681072"
      }
    }
  },
  {
    "6d9b24b0": {
      "question": "What advantages do relational databases offer for AI research in radiation oncology?",
      "answer": "1. Efficient management of one-to-many relationships.\n2. Unique identifiers for each row of data, preventing duplicates.\n3. Specific data field definitions to maintain data consistency and minimize errors.\n4. Ability to link tables through foreign keys, ensuring data integrity.\n5. Automatic deletion of related data when a record is removed.\n6. Optimized for managing vast amounts of data, allowing for quick queries.\n7. Enhanced security features compared to spreadsheets, including restricted access and encryption.\n8. Ability to perform complex queries using SQL, enabling detailed data analysis.",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            138,
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            165,
            166,
            167,
            168,
            169,
            170,
            171,
            172,
            173,
            174,
            175,
            176,
            177,
            178,
            179,
            180,
            181,
            182,
            183,
            184,
            185,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            193
          ],
          "provenance_ids": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            138,
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            165,
            166,
            167,
            168,
            169,
            170,
            171,
            172,
            173,
            174,
            175,
            176,
            177,
            178,
            179,
            180,
            181,
            182,
            183,
            184,
            185,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            193
          ],
          "provenance": "Advances in Radiation Oncology (2020) 5, 1280-1285\n\nScientiﬁc Article\nArtiﬁcial Intelligence Research: The Utility and\nDesign of a Relational Database System\n\nwww.advancesradonc.org\n\nThomas J. Dilling, MD*\n\nDepartment of Radiation Oncology, Mofﬁtt Cancer Center\n\nReceived 13 March 2020; revised 13 April 2020; accepted 11 June 2020\n\nAbstract\nAlthough many researchers talk about a “patient database,” they typically are not referring to a database at all, but instead to a spreadsheet of\ncurated facts about a cohort of patients.This article describes relational database systems and how they differ from spreadsheets.At their core,\nspreadsheets are only capable of describing one-to-one (1:1) relationships.However, this article demonstrates that clinical medical data\nencapsulate numerous one-to-many relationships.Consequently, spreadsheets are very inefﬁcient relative to relational database systems,\nwhich gracefully manage such data.Databases provide other advantages, in that the data ﬁelds are “typed” (that is, they contain speciﬁc\nkinds of data).This prevents users from entering spurious data during data import.Because each record contains a “key,” it becomes\nimpossible to add duplicate information (ie, add the same patient twice).Databases store data in very efﬁcient ways, minimizing space and\nmemory requirements on the host system.Likewise, databases can be queried or manipulated using a highly complex language called\nSQL.Consequently, it becomes trivial to cull large amounts of data from a vast number of data ﬁelds on very precise subsets of patients.Databases can be quite large (terabytes or more in size), yet still are highly efﬁcient to query.Consequently, with the explosion of data\navailable in electronic health records and other data sources, databases become increasingly important to contain or order these data.Ultimately, this will enable the clinical researcher to perform artiﬁcial intelligence analyses across vast amounts of clinical data in a way\nheretofore impossible.This article provides initial guidance in terms of creating a relational database system.(cid:1) 2020 Published by Elsevier Inc. on behalf of American Society for Radiation Oncology.This is an open access article under the CC BY-NC-\nND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).Introduction\n\nThis issue of Advances in Radiation Oncology presents\na series of articles around applications of artiﬁcial intel-\nligence (AI) in our ﬁeld.One of the potential beneﬁts of\nAI is that it can pore through large amounts of data to\ndiscover patterns not evident to clinicians.However, this\nvast volume of data cannot be accommodated within a\nsingle spreadsheet (which is how most clinical researchers\n\nResearch data are not available at this time. Sources of support: none.Disclosures: Dr Dilling reports personal fees and nonﬁnancial sup-\nport from NCCN, personal fees from Varian, personal fees and nonﬁ-\nnancial support from Harborside Press, nonﬁnancial support from Astra\nZeneca, all outside the submitted work.* Corresponding author: Thomas J. Dilling, MD; E-mail: Thomas.Dilling@mofﬁtt.org. work when conducting standard multivariable analyses).In fact, many researchers erroneously describe spread-\nsheets as databases.This article will demonstrate both\nwhat a relational database system is and how it is superior\nto a spreadsheet.It will also discuss considerations when\nimplementing a relational database system (RDBS) for\nyour own research purposes, using an actual lung cancer\nradiation therapy database as an example.I have also\nprovided some excellent Wikipedia references\nthat\ncontain abundant additional\ninformation, beyond what\ncan be encapsulated in a single article.(These, in turn,\nreference computer science literature for the very intrepid\nreader, but such references might extend beyond the level\nof understanding of all but the most technically inclined.)One might question why a database system is neces-\nsary for AI research.This article will demonstrate that a\ndatabase enables creation of a multidimensional structure\n\nhttps://doi.org/10.1016/j.adro.2020.06.027\n2452-1094/(cid:1) 2020 Published by Elsevier Inc. on behalf of American Society for Radiation Oncology.This is an open access article under the CC BY-\nNC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1281\n\nto cleanly and accurately contain these data.To perform\nAI analysis requires efﬁcient storage of hundreds or\nthousands of data points on a single patient or even on a\nsingle course of radiation therapy.There is a famous\nthe “data science hierarchy of needs”\nillustration of\n(Fig 1).To perform an AI analysis, one must ﬁrst create\nan RDBS to serve as the storage mechanism.This crea-\ntion of a system to store structured data entails a major\npart of the bottom row of the pyramid.To create a data-\nbase,\nthe reader down the path toward\nconducting AI research at their own institution.then, will set\n\nOrigin of Relational Databases\n\nThe concept of a RDBS was ﬁrst described in a sem-\ninal article in 1970.1 The theoretic construct was that all\ndata could be deﬁned or represented as a series of re-\nlations with or to other data.The article was quantitative\nin that it used relational algebra and tuple relational cal-\nculus to prove its points.2 IBM used this theoretic\nframework to design what became the initial SQL (pro-\nnounced “see-quell” or “ess-cue-ell”) language, which\nthey used to manipulate and retrieve data from IBM’s\noriginal RDBS.3 Since that time, the American National\nStandards Institute and the International Standards Orga-\nnization have deemed SQL to be the standard language in\nrelational database communication.2 Today, there are a\nwide variety of commercial and open-source relational\ndatabase systems available for use.These vary in their\nfeatures and relative strengths or weaknesses, but,\nfundamentally,\nthey all operate using the principles\ndeﬁned in the Codd article.1 The SQL language is well\ndeﬁned and is used to write code to query (or update) the\ndata within an RDBS.Fundamental Disadvantage of Spreadsheets\n\nSpreadsheets are designed to incorporate and analyze\none-to-one (1:1) relationships (Fig 2a).Each patient has a\nsingle birth date and a single death date.However, medical\nrecords are rife with “one-to-many” relationships (Fig 2b).A patient might receive multiple different courses of radi-\nation therapy treatment, as in the example provided, or\nmight have multiple chemotherapy administrations.To\naccommodate these data, a spreadsheet quickly balloons in\nsize (Fig 2c).Not only is this inefﬁcient (duplication of\ndata), but it also makes maintenance of the spreadsheet\nextremely cumbersome and prone to error.For instance, in\nthis example, when patient “12345” passes away, the\n“DeathDate” needs to be updated in 5 rows of the spread-\nsheet (because she had 2 courses of radiation therapy and 4\ncycles of chemotherapy).It is not difﬁcult to imagine that a\nresearcher could neglect to update the “DeathDate” in each\nplace, introducing errors.To further expound upon the\nissue, imagine a patient who takes numerous medications or\nhas variable numbers of comorbid illnesses;\nthe rows\nrequired to encapsulate 1 patient explode.To use a data\nscience term, the dimensionality of the data balloons.But,\nto reiterate the point, spreadsheets are only designed to\nencapsulate 1:1 relationships (2-dimensional data).But\npatient data are multidimensional.Fundamental Advantage of Relational\nDatabases\n\nRDBS gracefully manage one-to-many relationships.They can do so because a database is created of numerous\ndifferent tables, which are explicitly linked (Fig 3).Every\n\nFigure 1\nAbbreviation: AI Z artiﬁcial intelligence.The data science hierarchy of needs.Used with permission of Monica Rogati (aipyramid.com). For details, see text.1282\n\nT.J. Dilling\n\nAdvances in Radiation Oncology: NovembereDecember 2020\n\nFigure 2\n(a) Spreadsheets are useful where there is a one-to-one correspondence of data.For instance, each unique medical record\nnumber (MRN) represents a single patient, with a single birth/death date and a single ﬁrst and last name.(b) Spreadsheets “break down”\nwhen describing 1-to-many correspondences.In this example, 2 patients have a total of 5 courses of radiation therapy treatment between\nthem.(c) To accommodate all the data in our simple example, a spreadsheet needs to store redundant data (colored in red).The data\nstorage requirements quickly balloon.Furthermore, as additional traits and factors are added to the spreadsheet, it becomes impossible to\nfollow, as one patient will require untold numbers of rows to capture all relevant data concepts.Stated another way, the data are\nmultidimensional.Maintenance and updating of ﬁelds become error-prone (see text).Abbreviations: DOB Z date of birth; Lname Z\nlast name; Fname Z ﬁrst name; LUL Z upper lobe; MRN Z medical record number; RLL, right lower lobe; RUL Z right upper lobe;\nSBRT Z stereotactic body radiotherapy.table must also contain a key, which is a unique, required\nidentiﬁer for each row of data.Relationships between the\ntables are deﬁned when creating the database tables or\nﬁelds.In the “demographics” table, medical\nrecord\nnumber, “MRN,” is the key.For the “TreatmentCourse”\nand “Chemotherapy” tables,\nthe keys are “Treatment-\nCourse” and “ChemotherapyID,” respectively.Note that\n“TreatmentCourse 1” in the “TreatmentCourse” table\npertains to breast radiation therapy treatment.This, in\nis linked to 4 cycles of chemotherapy in the\nturn,\n“Chemotherapy” table, each of which is uniquely identi-\nﬁed in that table, in turn.When comparing Fig 3 (a database) to Fig 2c (a\nspreadsheet), note that Fig 3 contains the same informa-\ntion as Fig 2c without the addition of repetitious infor-\nmation (colored red in Fig 2c).Alternately,\nin a\nspreadsheet, the researcher could manually aggregate and\nsummarize the chemotherapy delivered into a single cell\nin a single row of the spreadsheet (ie, “ﬂatten” the data, to\nuse a data science term), but then some data would be\nlost.Using the chemotherapy administrations as an\nexample, if one were to “ﬂatten” the data down to a single\nstating “4 cycles of Adriamycin/\nspreadsheet cell\nCytoxan,” one loses the dates of administration.If one\nsummarizes the data as “4 cycles of Adriamycin/Cytoxan:\n<date1>, <date2>, <date3>, <date4>,” the dates and\nthe chemotherapy occupy the same cell and the data are\nretained but are no longer discrete; one loses the ability to\nﬁlter the spreadsheet by chemotherapy kind or by date.Conversely, a SQL database cleanly encapsulates these\nmultidimensional data (Fig 3).Each table is 2-dimensional\n\nin structure.But because it can contain multiple rows of\ndata on 1 patient (chemotherapy administrations, to follow\nthe same example), a multidimensional structure is created,\nas 4 chemotherapy cycles link to one of 2 courses of radi-\nation therapy (“TreatmentCourse” table) for 1 patient\n(“Demographics” table).Now, imagine a clinical database\nwith millions of rows of data spread across hundreds of\ntables, as in the real-life example described below.Clearly,\na spreadsheet would not be adequate.Additional Advantages of Relational Databases\n\n1.Each row of data in a table has a unique identiﬁer (a\nkey).Consequently, one cannot accidentally add a\nrow of data into a database table twice.2. Each ﬁeld in the database is speciﬁcally deﬁned as to\nwhat it contains (Fig 4).Consequently, if data are\nimported from some external source, the data types\nmust correspond or the import will fail.For example,\nif an entry contained an integer where a date was\nindicated, the database would signal that the variable\ncontained erroneous data.This feature helps maintain\nconsistency of data and minimize data errors. 3.Not only must the data types correspond, but the\ndata lengths must be observed.If the database\ndesign states that a ﬁeld is a decimal with 3 places to\nthe right of the decimal place, then a fourth decimal\nplace would be truncated at import.Alternately, the\ndatabase could declare an error, which might also\nimply that the ﬁeld contains erroneous data.Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1283\n\n4.A key from one table can be linked “backward” to a\nkey from another table (termed a “foreign key”).As\nan example (Fig 3), the database can be designed\nsuch that the MRN from “TreatmentCourse” must\nto an MRN already contained within the\nrefer\n“Demographics” table.If one tried to import data\ninto “TreatmentCourse” and it used an MRN not\nlisted in “Demographics,” the import would fail.Such a situation might imply, for instance, that the\nMRN was incorrect in the external data source (or in\nthe database).Or perhaps it relates to a patient who\nreceived prostate radiation therapy (but you have a\nbreast cancer database). 5.Foreign key relationships also work in the opposite\ndirection: If one realizes that a patient is represented\nin the database who should not be, one can delete\nthe patient from the “Demographics” table and the\ndatabase will delete all data about that patient from\nall the other data tables automatically.6. RDBS are speciﬁcally optimized to manage vast\namounts of data.Large spreadsheets (containing\nthousands of rows and hundreds of columns) are\nextremely slow and memory intensive.However, one\ncan query across or manipulate many gigabytes of data\nin fractions of a second in many RDBS, as the data\nstores are highly optimized and efﬁcient from both a\ncomputational and memory utilization perspective.7. RDBS are much more secure than spreadsheets.An\ninstitution’s IT team might allow one to access some\ntables within an institution’s data warehouse, but not\nothers.One’s access could be restricted to deﬁned\nsubsets of patients.One might have “read” access to\nthese data, but not “write” access (or “write” access to\nonly some subset of ﬁelds).Databases might likewise\nbe set up such that only users from speciﬁc IP ad-\ndresses or computers may access them.The login\nsystems set up by IT departments for these purposes\ntypically use state of the art encryption algorithms, 2-\nfactor authentication, and the like.In contrast, an\nExcel spreadsheet can be “locked” such that only\nsome ﬁelds are editable.But it is not possible to\nrestrict data access by user.Furthermore, this re-\nstriction is to “write” access only, not to “read” ac-\ncess.It is true that one can “hide” columns in a\nspreadsheet and then lock it, to prevent a given user\nfrom viewing them, but the spreadsheet maintainer\nmust do this manually before distributing the\nspreadsheet (time-consuming and prone to error).Beneﬁts of SQL\n\nAs described earlier, SQL is a deﬁned, standardized\nlanguage for composing queries within an RDBS, or to\n\nmanipulate and update these data.Some database systems\nprovide “extensions” to the SQL standard, to provide some\nadditional and speciﬁc functionality (details available in the\nvendors’ literature).It is beyond the scope of this article to\nteach SQL coding.However, many excellent online re-\nsources are available for the interested reader.Functionally,\nSQL allows one to search for any number of variables or\ncombinations of variables across any number of tables,\nsimultaneously.This can be extremely powerful and useful,\nboth for retrieving and for manipulating and updating data.Queries can be saved for reuse or modiﬁcation later.As\nstated above, these queries typically produce output in\nfractions of a second, even across vast pools of data.Our institution has a database of patients who have\nreceived radiation therapy to the lung, whether for pri-\nmary cancer or metastatic disease to the lung.4 The\ndatabase and some of its details of implementation are\ndescribed below, but ﬁrst, some “real-life” examples of\nwhat such an RDBS system can do (not possible when\nusing a spreadsheet):\n\n(cid:1) Real-life example 1: Find patients who might be\ncandidates for a certain lung cancer clinical trial.For\nthis particular study,\nthey must have previously\nreceived lung SBRT, have nonmetastatic disease, no\nevidence of recurrence, be alive (obviously), be at\nleast 2 years out from the end of the prior SBRT\ntreatment, and must have been seen in follow-up\nwithin the past 1.5 years.By constructing an\nappropriate SQL query, 135 patients were found (out\nof more than 4600 in the database) to pass along to\nthe PI for closer inspection.(cid:1) Real-life example 2: It takes only a few minutes to\nset up very complex queries.If one has a basic fa-\ncility with SQL, one can design a query such as:\n“Find all patients with stage II or III lung cancer\ntreated with concurrent chemoradiotherapy who\ndeveloped neutropenia during treatment, who are\nfemale, 70 years of age or older, and who take any\nantihypertensive medication (deﬁned in a certain\nlist).” Ultimately, such queries are only limited by\none’s imagination (and the richness or completeness\nof the data coming from the source systems).It is true that one can “ﬁlter” data in Excel to rapidly\nﬁnd subsets.However, this ﬁltering is limited to “true or\nfalse” matching.In this example, it would be impossible\nto discover the patients who developed neutropenia while\nundergoing radiation therapy unless one had a “neu-\ntropenia (yes or no)” column.But one cannot perform the\narithmetic “where date of neutropenia > Radiation-\nStartDate and < RadiationEndDate” to ﬁlter the data\nwithout writing code in Visual Basic, which is likely\nbeyond the ability of most.1284\n\nT.J. Dilling\n\nAdvances in Radiation Oncology: NovembereDecember 2020\n\nIn a relational database, data are stored in multiple tables, which are joined via deﬁned variables.In this ﬁctitious example,\nFigure 3\nnote that the patient only has one “DeathDate” to update.Furthermore, each course of treatment (“TreatmentCourse”) can have multiple\nchemotherapy cycles associated with it.Note, too, that medical record number (MRN) only appears in 2 of the 3 tables (it is not needed\nin the “Chemotherapy” table).If the researcher wishes to retrieve the MRN, it can be obtained via a SQL query, linking back to one of\nthe tables that contains it.Abbreviations: DOB Z date of birth.Disadvantage of SQL\n\nWith SQL, it is possible to create highly complex queries;\nit is a rich and powerful language.However, these can be\n\nquite complicated and obtuse to a nontechnical person.Some\nsystems do provide graphical tools to help build SQL queries,\nbut, even so, there are some users for whom all but the\nsimplest SQL queries will be beyond their technical skills.Figure 4 Note that each ﬁeld in this database table is speciﬁcally designed.It has a “type” (kind) and a “size” (length).When\nimporting data from numerous external sources, these deﬁnitions can prevent erroneous imports (for details, see text).Note that the\nﬁeld “MRN” is the key for this table.All the data in this table refer back to “MRN” via a one-to-one relationship.MRN can be used as\nthe key because no 2 patients have the same MRN.Abbreviations: DOB Z date of birth; MRN Z medical record number.Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1285\n\nDatabase Implementation\n\nDatabases may, and often do, contain many thousands\nof tables and millions of rows of data.(In other words,\nthey can contain data far in excess of the requirements of\nany one radiation oncologist or even any one radiation\noncology department).In fact, some systems allow even\nsingle tables to contain terabytes or even petabytes of\ndata.5 Consequently, there are numerous systems avail-\nable to accommodate any researcher’s needs.Some of the\nvery best are open source (free).Software is available\nacross a wide variety of operating systems.Wikipedia\nprovides an outstanding overview of the topic.5\n\nTo implement a database system, it is ﬁrst necessary to\nhave a discussion with the IT Department at your institu-\ntion.There is no single solution for creating a data re-\nresearchers across all\ntrue for\npository that holds\ninstitutions.The solution can vary, depending on the re-\nsources at your institution and the level of access the IT\nDepartment has into the underlying patient data source\nsystems (often deﬁned in the institutional contracts signed\nwith the individual vendors).Some large centers have\nelaborate data warehouse systems.Smaller centers might\nprovide access to data from individual source systems but\nmight not have compiled them into a single data warehouse.Some IT departments might have adequate resources to\nprovide output data from their data warehouse to individual\nresearchers, when needed.Others might not. Some might\nprovide a dedicated research server on which the researcher\ncan construct a database.Other researchers might need to\nrely instead upon existing servers within their department.I\ndo not recommend that one set up a database system on a\nfree-standing laptop or desktop machine, as there are Health\nInsurance Portability and Accountability Act concerns (the\ncomputer could be stolen).Data should be backed up across\na secured network electronically.Creation of a Lung Cancer Radiation Therapy\nDatabase\n\nI began my own database several years ago.My need\ngrew out of a sense of frustration regarding lack of access\nto clinical data.At the time, at my institution, it was a\ndifﬁcult (and somewhat mysterious) process to procure\ndata from the data warehouse.However, data from\nMosaiq (Elekta AB, Stockholm, Sweden), which is our\ndepartment’s record or verify system, were available.These data formed the nucleus of the original database.Basic demographic information and radiation therapy\nprescriptions, dates of treatment, dose delivered, tumor\nstage, and the like, were exported, using custom software.Research IT provided a Linux server, on which I imple-\nmented the database.I chose to use MariaDB (MariaDB\nis a powerful, well-regarded,\nFoundation, DE), as it\n\ncommercially supported, free, open-source database sys-\ntem whose SQL functions are congruent with those of\nOracle (which is a database system I had used previ-\nously).Because my institution could not support an\nimplementation of an Oracle, MariaDB was an excellent\nalternate option.MariaDB does include a Windows GUI\ndatabase administration tool for administering its data-\nbases (creating tables, writing SQL code, importing or\nexporting data, and the like).I had previously used a\nsimilar commercial database administration product called\nNavicat (Premium Cybertech Ltd, Hong Kong), which\nprovides similar functionality, so I elected to purchase\nthat.Similarly, I imported all data I had captured in\nresearch projects.More\nspreadsheets\nrecently, I have gained access to data from our data\nwarehouse and so have created numerous additional ta-\nbles to store the information.At present, the database\ncontains more than 3 million rows of data on approxi-\nmately 4800 patients, spread across more than 170 tables.for previous\n\nIncorporation of Data from Other\nInstitutional Data Systems\n\nTo import data from outside source systems requires a\nmultistep process, referred to as “ETL” (“Extraction,\nTransformation, and Loading”) in the data science liter-\nature.”6 The issues go far beyond the physical importation\nof data into the database; importing spreadsheets of data\nare a trivial task.There are numerous issues in ETL,\nwhich are critical to consider when designing a database\nand importing data into it.Furthermore, many of these\nissues are not inherently obvious.In fact, a large pro-\nportion of the time required to create a database and ﬁll it\nwith clinically useable data derives from the ETL\ninvolved.The oft-reproduced “Data Science Hierarchy of\nNeeds” illustrates this fact (Fig 1).Most of the discussion\nin this article addressed aspects of the bottom-most layer\nof the pyramid.ETL comprises the majority of the next 2\nlayers of the pyramid and is the topic of another article.References\n\n1. Codd ER. A relational model of data for large shared data banks.Commmunications of the ACM. 1970;13:377-387. 2. Wikipedia. SQL.Available at: https://en.wikipedia.org/wiki/SQL.Accessed February 14, 2020. 3. Wikipedia.IBM System R. Available at: https://en.wikipedia.org/\n\nwiki/IBM_System_R.Accessed February 14, 2020. 4. Dilling TJ.Artiﬁcial Intelligence (AI) for clinical analysis: Design\nand implementation of a suitable database resource.Int J Radiat\nOncol Biol Phys. 2019;105:E131-E132. 5. Wikipedia.Comparison of relational database managment systems.Available\nhttps://en.wikipedia.org/wiki/Comparison_of_\nrelational_database_management_systems.Accessed February 14,\n2020.\n\nat:\n\n6.Wikipedia. Extract, Transform, Load. Available at: https://en.wikipedia.org/wiki/Extract,_transform,_load. Accessed April 13,\n2020.",
          "time": 433.6721341609955,
          "input_token_size": 5723,
          "output_token_size": 187,
          "original_provenance_id": 0
        }
      ],
      "metadata": {
        "question_id": "database_design_article_6d9b24b0",
        "created_at": 1749768844.1305892,
        "processing_time": 438.4602530002594,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs_prev1",
        "reason": "shorter_provenance",
        "sentence_count": 194,
        "provenance_count": 1,
        "alternatives": [
          {
            "source": "test_outputs_prev1",
            "sentence_count": 194,
            "provenance_count": 1,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.681791"
      }
    }
  },
  {
    "6ee15a18": {
      "question": "When was the concept of relational databases first introduced?",
      "answer": "1970",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            36,
            37,
            38
          ],
          "provenance_ids": [
            37
          ],
          "provenance": "then, will set\n\nOrigin of Relational Databases\n\nThe concept of a RDBS was ﬁrst described in a sem-\ninal article in 1970.1 The theoretic construct was that all\ndata could be deﬁned or represented as a series of re-\nlations with or to other data.",
          "time": 6.385191917419434,
          "input_token_size": 6674,
          "output_token_size": 12,
          "original_provenance_id": 0
        },
        {
          "provenance_id": 1,
          "input_sentence_ids": [
            181,
            182,
            183
          ],
          "provenance_ids": [
            181,
            182
          ],
          "provenance": "References\n\n1. Codd ER. A relational model of data for large shared data banks.Commmunications of the ACM. 1970;13:377-387. 2. Wikipedia. SQL.",
          "time": 15.872617244720459,
          "input_token_size": 14928,
          "output_token_size": 31,
          "original_provenance_id": 1
        }
      ],
      "metadata": {
        "question_id": "database_design_article_6ee15a18",
        "created_at": 1749665020.760708,
        "processing_time": 20.071972131729126,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs_prev",
        "reason": "shorter_provenance",
        "sentence_count": 6,
        "provenance_count": 2,
        "alternatives": [
          {
            "source": "test_outputs_prev",
            "sentence_count": 6,
            "provenance_count": 2,
            "has_answer": true
          },
          {
            "source": "test_outputs_prev1",
            "sentence_count": 6,
            "provenance_count": 2,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.683797"
      }
    }
  },
  {
    "748e5164": {
      "question": "What type of language is SQL as mentioned in the article?",
      "answer": "SQL is a highly complex language.",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11
          ],
          "provenance_ids": [
            0,
            4,
            5,
            6,
            7,
            9,
            10,
            11
          ],
          "provenance": "Advances in Radiation Oncology (2020) 5, 1280-1285\n\nScientiﬁc Article\nArtiﬁcial Intelligence Research: The Utility and\nDesign of a Relational Database System\n\nwww.advancesradonc.org\n\nThomas J. Dilling, MD*\n\nDepartment of Radiation Oncology, Mofﬁtt Cancer Center\n\nReceived 13 March 2020; revised 13 April 2020; accepted 11 June 2020\n\nAbstract\nAlthough many researchers talk about a “patient database,” they typically are not referring to a database at all, but instead to a spreadsheet of\ncurated facts about a cohort of patients.Consequently, spreadsheets are very inefﬁcient relative to relational database systems,\nwhich gracefully manage such data.Databases provide other advantages, in that the data ﬁelds are “typed” (that is, they contain speciﬁc\nkinds of data).This prevents users from entering spurious data during data import.Because each record contains a “key,” it becomes\nimpossible to add duplicate information (ie, add the same patient twice).Likewise, databases can be queried or manipulated using a highly complex language called\nSQL.Consequently, it becomes trivial to cull large amounts of data from a vast number of data ﬁelds on very precise subsets of patients.Databases can be quite large (terabytes or more in size), yet still are highly efﬁcient to query.",
          "time": 9.725712776184082,
          "input_token_size": 6182,
          "output_token_size": 33,
          "original_provenance_id": 0
        }
      ],
      "metadata": {
        "question_id": "database_design_article_748e5164",
        "created_at": 1750197196.6832864,
        "processing_time": 13.631444692611694,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs",
        "reason": "shorter_provenance",
        "sentence_count": 12,
        "provenance_count": 1,
        "alternatives": [
          {
            "source": "test_outputs",
            "sentence_count": 12,
            "provenance_count": 1,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.684797"
      }
    }
  },
  {
    "7cad3f3a": {
      "question": "What is the main topic of the article published in Advances in Radiation Oncology in 2020?",
      "answer": "The main topic of the article is the utility and design of a relational database system for artificial intelligence research in clinical medical data.",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            138,
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            165,
            166,
            167,
            168,
            169,
            170,
            171,
            172,
            173,
            174,
            175,
            176,
            177,
            178,
            179,
            180,
            181,
            182,
            183,
            184,
            185,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            193
          ],
          "provenance_ids": [
            0,
            158,
            159,
            173,
            174,
            187
          ],
          "provenance": "Advances in Radiation Oncology (2020) 5, 1280-1285\n\nScientiﬁc Article\nArtiﬁcial Intelligence Research: The Utility and\nDesign of a Relational Database System\n\nwww.advancesradonc.org\n\nThomas J. Dilling, MD*\n\nDepartment of Radiation Oncology, Mofﬁtt Cancer Center\n\nReceived 13 March 2020; revised 13 April 2020; accepted 11 June 2020\n\nAbstract\nAlthough many researchers talk about a “patient database,” they typically are not referring to a database at all, but instead to a spreadsheet of\ncurated facts about a cohort of patients.I\ndo not recommend that one set up a database system on a\nfree-standing laptop or desktop machine, as there are Health\nInsurance Portability and Accountability Act concerns (the\ncomputer could be stolen).Data should be backed up across\na secured network electronically.At present, the database\ncontains more than 3 million rows of data on approxi-\nmately 4800 patients, spread across more than 170 tables.for previous\n\nIncorporation of Data from Other\nInstitutional Data Systems\n\nTo import data from outside source systems requires a\nmultistep process, referred to as “ETL” (“Extraction,\nTransformation, and Loading”) in the data science liter-\nature.”6 The issues go far beyond the physical importation\nof data into the database; importing spreadsheets of data\nare a trivial task.Artiﬁcial Intelligence (AI) for clinical analysis: Design\nand implementation of a suitable database resource.",
          "time": 58.658623933792114,
          "input_token_size": 5735,
          "output_token_size": 42,
          "original_provenance_id": 0
        }
      ],
      "metadata": {
        "question_id": "database_design_article_7cad3f3a",
        "created_at": 1749665014.3282166,
        "processing_time": 62.36905646324158,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs_prev",
        "reason": "shorter_provenance",
        "sentence_count": 194,
        "provenance_count": 1,
        "alternatives": [
          {
            "source": "test_outputs_prev",
            "sentence_count": 194,
            "provenance_count": 1,
            "has_answer": true
          },
          {
            "source": "test_outputs_prev1",
            "sentence_count": 194,
            "provenance_count": 1,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.685805"
      }
    }
  },
  {
    "7d327260": {
      "question": "Where was the article 'Artificial Intelligence Research: The Utility and Design of a Relational Database System' published?",
      "answer": "Advances in Radiation Oncology",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            0,
            1,
            2
          ],
          "provenance_ids": [
            0
          ],
          "provenance": "Advances in Radiation Oncology (2020) 5, 1280-1285\n\nScientiﬁc Article\nArtiﬁcial Intelligence Research: The Utility and\nDesign of a Relational Database System\n\nwww.advancesradonc.org\n\nThomas J. Dilling, MD*\n\nDepartment of Radiation Oncology, Mofﬁtt Cancer Center\n\nReceived 13 March 2020; revised 13 April 2020; accepted 11 June 2020\n\nAbstract\nAlthough many researchers talk about a “patient database,” they typically are not referring to a database at all, but instead to a spreadsheet of\ncurated facts about a cohort of patients.",
          "time": 4.363168478012085,
          "input_token_size": 6397,
          "output_token_size": 31,
          "original_provenance_id": 0
        },
        {
          "provenance_id": 1,
          "input_sentence_ids": [
            15,
            16,
            17
          ],
          "provenance_ids": [
            16,
            17
          ],
          "provenance": "This is an open access article under the CC BY-NC-\nND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).Introduction\n\nThis issue of Advances in Radiation Oncology presents\na series of articles around applications of artiﬁcial intel-\nligence (AI) in our ﬁeld.",
          "time": 7.656366348266602,
          "input_token_size": 7290,
          "output_token_size": 47,
          "original_provenance_id": 1
        }
      ],
      "metadata": {
        "question_id": "database_design_article_7d327260",
        "created_at": 1749768810.751918,
        "processing_time": 12.008874893188477,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs_prev1",
        "reason": "shorter_provenance",
        "sentence_count": 6,
        "provenance_count": 2,
        "alternatives": [
          {
            "source": "test_outputs_prev",
            "sentence_count": 15,
            "provenance_count": 2,
            "has_answer": true
          },
          {
            "source": "test_outputs_prev1",
            "sentence_count": 6,
            "provenance_count": 2,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.686796"
      }
    }
  },
  {
    "85fbbc3e": {
      "question": "What system was the initial data for the lung cancer database taken from?",
      "answer": "Mosaiq (Elekta AB, Stockholm, Sweden)",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            163,
            164,
            165
          ],
          "provenance_ids": [
            163
          ],
          "provenance": "However, data from\nMosaiq (Elekta AB, Stockholm, Sweden), which is our\ndepartment’s record or verify system, were available.",
          "time": 4.544036626815796,
          "input_token_size": 5499,
          "output_token_size": 79,
          "original_provenance_id": 0
        }
      ],
      "metadata": {
        "question_id": "database_design_article_85fbbc3e",
        "created_at": 1750197235.7597997,
        "processing_time": 8.829805135726929,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs",
        "reason": "shorter_provenance",
        "sentence_count": 3,
        "provenance_count": 1,
        "alternatives": [
          {
            "source": "test_outputs",
            "sentence_count": 3,
            "provenance_count": 1,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.686796"
      }
    }
  },
  {
    "8e9431c0": {
      "question": "What process is referred to as 'ETL' in the creation of databases?",
      "answer": "ETL (Extraction, Transformation, and Loading)",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            172,
            173,
            174
          ],
          "provenance_ids": [
            174
          ],
          "provenance": "for previous\n\nIncorporation of Data from Other\nInstitutional Data Systems\n\nTo import data from outside source systems requires a\nmultistep process, referred to as “ETL” (“Extraction,\nTransformation, and Loading”) in the data science liter-\nature.”6 The issues go far beyond the physical importation\nof data into the database; importing spreadsheets of data\nare a trivial task.",
          "time": 4.05210542678833,
          "input_token_size": 5962,
          "output_token_size": 61,
          "original_provenance_id": 0
        }
      ],
      "metadata": {
        "question_id": "database_design_article_8e9431c0",
        "created_at": 1750197229.2731752,
        "processing_time": 6.9522340297698975,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs",
        "reason": "shorter_provenance",
        "sentence_count": 3,
        "provenance_count": 1,
        "alternatives": [
          {
            "source": "test_outputs",
            "sentence_count": 3,
            "provenance_count": 1,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.686796"
      }
    }
  },
  {
    "8ea270e1": {
      "question": "What year was the article 'Artificial Intelligence Research: The Utility and Design of a Relational Database System' published?",
      "answer": "2020",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            0,
            1,
            2
          ],
          "provenance_ids": [
            0
          ],
          "provenance": "Advances in Radiation Oncology (2020) 5, 1280-1285\n\nScientiﬁc Article\nArtiﬁcial Intelligence Research: The Utility and\nDesign of a Relational Database System\n\nwww.advancesradonc.org\n\nThomas J. Dilling, MD*\n\nDepartment of Radiation Oncology, Mofﬁtt Cancer Center\n\nReceived 13 March 2020; revised 13 April 2020; accepted 11 June 2020\n\nAbstract\nAlthough many researchers talk about a “patient database,” they typically are not referring to a database at all, but instead to a spreadsheet of\ncurated facts about a cohort of patients.",
          "time": 3.0905277729034424,
          "input_token_size": 6581,
          "output_token_size": 14,
          "original_provenance_id": 0
        },
        {
          "provenance_id": 1,
          "input_sentence_ids": [
            12,
            13,
            14,
            15,
            16,
            17
          ],
          "provenance_ids": [
            14,
            15
          ],
          "provenance": "This article provides initial guidance in terms of creating a relational database system.(cid:1) 2020 Published by Elsevier Inc. on behalf of American Society for Radiation Oncology.",
          "time": 8.010814905166626,
          "input_token_size": 7422,
          "output_token_size": 20,
          "original_provenance_id": 1
        },
        {
          "provenance_id": 2,
          "input_sentence_ids": [
            30,
            31,
            32
          ],
          "provenance_ids": [
            30,
            31
          ],
          "provenance": "This is an open access article under the CC BY-\nNC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1281\n\nto cleanly and accurately contain these data.",
          "time": 12.327388763427734,
          "input_token_size": 10018,
          "output_token_size": 31,
          "original_provenance_id": 2
        },
        {
          "provenance_id": 3,
          "input_sentence_ids": [
            27,
            28,
            29
          ],
          "provenance_ids": [
            29
          ],
          "provenance": "This article will demonstrate that a\ndatabase enables creation of a multidimensional structure\n\nhttps://doi.org/10.1016/j.adro.2020.06.027\n2452-1094/(cid:1) 2020 Published by Elsevier Inc. on behalf of American Society for Radiation Oncology.",
          "time": 13.58627462387085,
          "input_token_size": 10432,
          "output_token_size": 35,
          "original_provenance_id": 3
        },
        {
          "provenance_id": 4,
          "input_sentence_ids": [
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59
          ],
          "provenance_ids": [
            48,
            50,
            52,
            53,
            54,
            57
          ],
          "provenance": "To further expound upon the\nissue, imagine a patient who takes numerous medications or\nhas variable numbers of comorbid illnesses;\nthe rows\nrequired to encapsulate 1 patient explode.But,\nto reiterate the point, spreadsheets are only designed to\nencapsulate 1:1 relationships (2-dimensional data).Fundamental Advantage of Relational\nDatabases\n\nRDBS gracefully manage one-to-many relationships.They can do so because a database is created of numerous\ndifferent tables, which are explicitly linked (Fig 3).Every\n\nFigure 1\nAbbreviation: AI Z artiﬁcial intelligence.1282\n\nT.J. Dilling\n\nAdvances in Radiation Oncology: NovembereDecember 2020\n\nFigure 2\n(a) Spreadsheets are useful where there is a one-to-one correspondence of data.",
          "time": 23.203568935394287,
          "input_token_size": 14460,
          "output_token_size": 46,
          "original_provenance_id": 4
        }
      ],
      "metadata": {
        "question_id": "database_design_article_8ea270e1",
        "created_at": 1749869497.581582,
        "processing_time": 25.23073172569275,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs_prev1",
        "reason": "shorter_provenance",
        "sentence_count": 27,
        "provenance_count": 5,
        "alternatives": [
          {
            "source": "test_outputs",
            "sentence_count": 30,
            "provenance_count": 5,
            "has_answer": true
          },
          {
            "source": "test_outputs_prev1",
            "sentence_count": 27,
            "provenance_count": 5,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.686796"
      }
    }
  },
  {
    "ac9ac464": {
      "question": "What key feature do relational databases use to maintain data integrity?",
      "answer": "Unique identifiers (keys).",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96
          ],
          "provenance_ids": [
            0,
            8,
            10,
            11,
            44,
            45,
            60,
            66,
            67,
            69,
            74,
            75,
            76,
            77,
            78,
            79,
            81,
            82,
            83,
            84,
            85,
            87,
            88,
            89,
            90,
            91,
            92
          ],
          "provenance": "Advances in Radiation Oncology (2020) 5, 1280-1285\n\nScientiﬁc Article\nArtiﬁcial Intelligence Research: The Utility and\nDesign of a Relational Database System\n\nwww.advancesradonc.org\n\nThomas J. Dilling, MD*\n\nDepartment of Radiation Oncology, Mofﬁtt Cancer Center\n\nReceived 13 March 2020; revised 13 April 2020; accepted 11 June 2020\n\nAbstract\nAlthough many researchers talk about a “patient database,” they typically are not referring to a database at all, but instead to a spreadsheet of\ncurated facts about a cohort of patients.Databases store data in very efﬁcient ways, minimizing space and\nmemory requirements on the host system.Consequently, it becomes trivial to cull large amounts of data from a vast number of data ﬁelds on very precise subsets of patients.Databases can be quite large (terabytes or more in size), yet still are highly efﬁcient to query.To\naccommodate these data, a spreadsheet quickly balloons in\nsize (Fig 2c).Not only is this inefﬁcient (duplication of\ndata), but it also makes maintenance of the spreadsheet\nextremely cumbersome and prone to error.In this example, 2 patients have a total of 5 courses of radiation therapy treatment between\nthem.Abbreviations: DOB Z date of birth; Lname Z\nlast name; Fname Z ﬁrst name; LUL Z upper lobe; MRN Z medical record number; RLL, right lower lobe; RUL Z right upper lobe;\nSBRT Z stereotactic body radiotherapy.table must also contain a key, which is a unique, required\nidentiﬁer for each row of data.In the “demographics” table, medical\nrecord\nnumber, “MRN,” is the key.Alternately,\nin a\nspreadsheet, the researcher could manually aggregate and\nsummarize the chemotherapy delivered into a single cell\nin a single row of the spreadsheet (ie, “ﬂatten” the data, to\nuse a data science term), but then some data would be\nlost.Using the chemotherapy administrations as an\nexample, if one were to “ﬂatten” the data down to a single\nstating “4 cycles of Adriamycin/\nspreadsheet cell\nCytoxan,” one loses the dates of administration.If one\nsummarizes the data as “4 cycles of Adriamycin/Cytoxan:\n<date1>, <date2>, <date3>, <date4>,” the dates and\nthe chemotherapy occupy the same cell and the data are\nretained but are no longer discrete; one loses the ability to\nﬁlter the spreadsheet by chemotherapy kind or by date.Conversely, a SQL database cleanly encapsulates these\nmultidimensional data (Fig 3).Each table is 2-dimensional\n\nin structure.But because it can contain multiple rows of\ndata on 1 patient (chemotherapy administrations, to follow\nthe same example), a multidimensional structure is created,\nas 4 chemotherapy cycles link to one of 2 courses of radi-\nation therapy (“TreatmentCourse” table) for 1 patient\n(“Demographics” table).Clearly,\na spreadsheet would not be adequate.Additional Advantages of Relational Databases\n\n1.Each row of data in a table has a unique identiﬁer (a\nkey).Consequently, one cannot accidentally add a\nrow of data into a database table twice.2. Each ﬁeld in the database is speciﬁcally deﬁned as to\nwhat it contains (Fig 4).For example,\nif an entry contained an integer where a date was\nindicated, the database would signal that the variable\ncontained erroneous data.This feature helps maintain\nconsistency of data and minimize data errors. 3.Not only must the data types correspond, but the\ndata lengths must be observed.If the database\ndesign states that a ﬁeld is a decimal with 3 places to\nthe right of the decimal place, then a fourth decimal\nplace would be truncated at import.Alternately, the\ndatabase could declare an error, which might also\nimply that the ﬁeld contains erroneous data.Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1283\n\n4.",
          "time": 39.387489318847656,
          "input_token_size": 5997,
          "output_token_size": 20,
          "original_provenance_id": 0
        }
      ],
      "metadata": {
        "question_id": "database_design_article_ac9ac464",
        "created_at": 1750197216.1394815,
        "processing_time": 41.947049379348755,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs",
        "reason": "shorter_provenance",
        "sentence_count": 97,
        "provenance_count": 1,
        "alternatives": [
          {
            "source": "test_outputs",
            "sentence_count": 97,
            "provenance_count": 1,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.686796"
      }
    }
  },
  {
    "b58f24da": {
      "question": "What type of relationships are relational databases superior in managing compared to spreadsheets?",
      "answer": "One-to-many relationships.",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            42,
            43,
            44
          ],
          "provenance_ids": [
            42
          ],
          "provenance": "However, medical\nrecords are rife with “one-to-many” relationships (Fig 2b).",
          "time": 4.86420750617981,
          "input_token_size": 6553,
          "output_token_size": 31,
          "original_provenance_id": 0
        },
        {
          "provenance_id": 1,
          "input_sentence_ids": [
            3,
            4,
            5
          ],
          "provenance_ids": [
            3
          ],
          "provenance": "However, this article demonstrates that clinical medical data\nencapsulate numerous one-to-many relationships.",
          "time": 9.131318092346191,
          "input_token_size": 8862,
          "output_token_size": 70,
          "original_provenance_id": 1
        }
      ],
      "metadata": {
        "question_id": "database_design_article_b58f24da",
        "created_at": 1750197268.3524716,
        "processing_time": 14.199829339981079,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs",
        "reason": "shorter_provenance",
        "sentence_count": 6,
        "provenance_count": 2,
        "alternatives": [
          {
            "source": "test_outputs",
            "sentence_count": 6,
            "provenance_count": 2,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.686796"
      }
    }
  },
  {
    "be7afcd0": {
      "question": "Where does Thomas J. Dilling, MD, work?",
      "answer": "Department of Radiation Oncology, Moffitt Cancer Center",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "provenance_ids": [
            0
          ],
          "provenance": "Advances in Radiation Oncology (2020) 5, 1280-1285\n\nScientiﬁc Article\nArtiﬁcial Intelligence Research: The Utility and\nDesign of a Relational Database System\n\nwww.advancesradonc.org\n\nThomas J. Dilling, MD*\n\nDepartment of Radiation Oncology, Mofﬁtt Cancer Center\n\nReceived 13 March 2020; revised 13 April 2020; accepted 11 June 2020\n\nAbstract\nAlthough many researchers talk about a “patient database,” they typically are not referring to a database at all, but instead to a spreadsheet of\ncurated facts about a cohort of patients.",
          "time": 6.456368923187256,
          "input_token_size": 6327,
          "output_token_size": 56,
          "original_provenance_id": 0
        }
      ],
      "metadata": {
        "question_id": "database_design_article_be7afcd0",
        "created_at": 1750197170.183722,
        "processing_time": 10.34828495979309,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs",
        "reason": "shorter_provenance",
        "sentence_count": 6,
        "provenance_count": 1,
        "alternatives": [
          {
            "source": "test_outputs",
            "sentence_count": 6,
            "provenance_count": 1,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.686796"
      }
    }
  },
  {
    "c1783848": {
      "question": "What does the 'Data Science Hierarchy of Needs' illustrate?",
      "answer": "The 'Data Science Hierarchy of Needs' illustrates the foundational requirements for data science, emphasizing the importance of structured data storage and management before advanced analyses can be performed.",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            138,
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            165,
            166,
            167,
            168,
            169,
            170,
            171,
            172,
            173,
            174,
            175,
            176,
            177,
            178,
            179,
            180,
            181,
            182,
            183,
            184,
            185,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            193
          ],
          "provenance_ids": [
            0,
            2,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            23,
            24,
            25,
            33,
            34,
            35,
            53,
            54,
            55,
            56,
            57,
            68,
            69,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            86,
            91,
            92,
            94,
            95,
            98,
            99,
            101,
            102,
            106,
            107,
            111,
            113,
            114,
            122,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            138,
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            165,
            166,
            167,
            168,
            169,
            170,
            171,
            172,
            173,
            181,
            182,
            183,
            184,
            185,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            193
          ],
          "provenance": "Advances in Radiation Oncology (2020) 5, 1280-1285\n\nScientiﬁc Article\nArtiﬁcial Intelligence Research: The Utility and\nDesign of a Relational Database System\n\nwww.advancesradonc.org\n\nThomas J. Dilling, MD*\n\nDepartment of Radiation Oncology, Mofﬁtt Cancer Center\n\nReceived 13 March 2020; revised 13 April 2020; accepted 11 June 2020\n\nAbstract\nAlthough many researchers talk about a “patient database,” they typically are not referring to a database at all, but instead to a spreadsheet of\ncurated facts about a cohort of patients.At their core,\nspreadsheets are only capable of describing one-to-one (1:1) relationships.Databases provide other advantages, in that the data ﬁelds are “typed” (that is, they contain speciﬁc\nkinds of data).This prevents users from entering spurious data during data import.Because each record contains a “key,” it becomes\nimpossible to add duplicate information (ie, add the same patient twice).Databases store data in very efﬁcient ways, minimizing space and\nmemory requirements on the host system.Likewise, databases can be queried or manipulated using a highly complex language called\nSQL.Consequently, it becomes trivial to cull large amounts of data from a vast number of data ﬁelds on very precise subsets of patients.Databases can be quite large (terabytes or more in size), yet still are highly efﬁcient to query.In fact, many researchers erroneously describe spread-\nsheets as databases.This article will demonstrate both\nwhat a relational database system is and how it is superior\nto a spreadsheet.It will also discuss considerations when\nimplementing a relational database system (RDBS) for\nyour own research purposes, using an actual lung cancer\nradiation therapy database as an example.There is a famous\nthe “data science hierarchy of needs”\nillustration of\n(Fig 1).To perform an AI analysis, one must ﬁrst create\nan RDBS to serve as the storage mechanism.This crea-\ntion of a system to store structured data entails a major\npart of the bottom row of the pyramid.They can do so because a database is created of numerous\ndifferent tables, which are explicitly linked (Fig 3).Every\n\nFigure 1\nAbbreviation: AI Z artiﬁcial intelligence.The data science hierarchy of needs.Used with permission of Monica Rogati (aipyramid.com). For details, see text.1282\n\nT.J. Dilling\n\nAdvances in Radiation Oncology: NovembereDecember 2020\n\nFigure 2\n(a) Spreadsheets are useful where there is a one-to-one correspondence of data.Relationships between the\ntables are deﬁned when creating the database tables or\nﬁelds.In the “demographics” table, medical\nrecord\nnumber, “MRN,” is the key.If one\nsummarizes the data as “4 cycles of Adriamycin/Cytoxan:\n<date1>, <date2>, <date3>, <date4>,” the dates and\nthe chemotherapy occupy the same cell and the data are\nretained but are no longer discrete; one loses the ability to\nﬁlter the spreadsheet by chemotherapy kind or by date.Conversely, a SQL database cleanly encapsulates these\nmultidimensional data (Fig 3).Each table is 2-dimensional\n\nin structure.But because it can contain multiple rows of\ndata on 1 patient (chemotherapy administrations, to follow\nthe same example), a multidimensional structure is created,\nas 4 chemotherapy cycles link to one of 2 courses of radi-\nation therapy (“TreatmentCourse” table) for 1 patient\n(“Demographics” table).Now, imagine a clinical database\nwith millions of rows of data spread across hundreds of\ntables, as in the real-life example described below.Clearly,\na spreadsheet would not be adequate.Additional Advantages of Relational Databases\n\n1.Each row of data in a table has a unique identiﬁer (a\nkey).Consequently, one cannot accidentally add a\nrow of data into a database table twice.Consequently, if data are\nimported from some external source, the data types\nmust correspond or the import will fail.Alternately, the\ndatabase could declare an error, which might also\nimply that the ﬁeld contains erroneous data.Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1283\n\n4.As\nan example (Fig 3), the database can be designed\nsuch that the MRN from “TreatmentCourse” must\nto an MRN already contained within the\nrefer\n“Demographics” table.If one tried to import data\ninto “TreatmentCourse” and it used an MRN not\nlisted in “Demographics,” the import would fail.Foreign key relationships also work in the opposite\ndirection: If one realizes that a patient is represented\nin the database who should not be, one can delete\nthe patient from the “Demographics” table and the\ndatabase will delete all data about that patient from\nall the other data tables automatically.6. RDBS are speciﬁcally optimized to manage vast\namounts of data.However, one\ncan query across or manipulate many gigabytes of data\nin fractions of a second in many RDBS, as the data\nstores are highly optimized and efﬁcient from both a\ncomputational and memory utilization perspective.7. RDBS are much more secure than spreadsheets.Databases might likewise\nbe set up such that only users from speciﬁc IP ad-\ndresses or computers may access them.The login\nsystems set up by IT departments for these purposes\ntypically use state of the art encryption algorithms, 2-\nfactor authentication, and the like.It is true that one can “hide” columns in a\nspreadsheet and then lock it, to prevent a given user\nfrom viewing them, but the spreadsheet maintainer\nmust do this manually before distributing the\nspreadsheet (time-consuming and prone to error).Some database systems\nprovide “extensions” to the SQL standard, to provide some\nadditional and speciﬁc functionality (details available in the\nvendors’ literature).It is beyond the scope of this article to\nteach SQL coding.By constructing an\nappropriate SQL query, 135 patients were found (out\nof more than 4600 in the database) to pass along to\nthe PI for closer inspection.If one has a basic fa-\ncility with SQL, one can design a query such as:\n“Find all patients with stage II or III lung cancer\ntreated with concurrent chemoradiotherapy who\ndeveloped neutropenia during treatment, who are\nfemale, 70 years of age or older, and who take any\nantihypertensive medication (deﬁned in a certain\nlist).” Ultimately, such queries are only limited by\none’s imagination (and the richness or completeness\nof the data coming from the source systems).It is true that one can “ﬁlter” data in Excel to rapidly\nﬁnd subsets.However, this ﬁltering is limited to “true or\nfalse” matching.In this example, it would be impossible\nto discover the patients who developed neutropenia while\nundergoing radiation therapy unless one had a “neu-\ntropenia (yes or no)” column.But one cannot perform the\narithmetic “where date of neutropenia > Radiation-\nStartDate and < RadiationEndDate” to ﬁlter the data\nwithout writing code in Visual Basic, which is likely\nbeyond the ability of most.1284\n\nT.J. Dilling\n\nAdvances in Radiation Oncology: NovembereDecember 2020\n\nIn a relational database, data are stored in multiple tables, which are joined via deﬁned variables.In this ﬁctitious example,\nFigure 3\nnote that the patient only has one “DeathDate” to update.Furthermore, each course of treatment (“TreatmentCourse”) can have multiple\nchemotherapy cycles associated with it.Note, too, that medical record number (MRN) only appears in 2 of the 3 tables (it is not needed\nin the “Chemotherapy” table).If the researcher wishes to retrieve the MRN, it can be obtained via a SQL query, linking back to one of\nthe tables that contains it.Abbreviations: DOB Z date of birth.Disadvantage of SQL\n\nWith SQL, it is possible to create highly complex queries;\nit is a rich and powerful language.However, these can be\n\nquite complicated and obtuse to a nontechnical person.Some\nsystems do provide graphical tools to help build SQL queries,\nbut, even so, there are some users for whom all but the\nsimplest SQL queries will be beyond their technical skills.Figure 4 Note that each ﬁeld in this database table is speciﬁcally designed.It has a “type” (kind) and a “size” (length).When\nimporting data from numerous external sources, these deﬁnitions can prevent erroneous imports (for details, see text).Note that the\nﬁeld “MRN” is the key for this table.All the data in this table refer back to “MRN” via a one-to-one relationship.MRN can be used as\nthe key because no 2 patients have the same MRN.Abbreviations: DOB Z date of birth; MRN Z medical record number.Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1285\n\nDatabase Implementation\n\nDatabases may, and often do, contain many thousands\nof tables and millions of rows of data.(In other words,\nthey can contain data far in excess of the requirements of\nany one radiation oncologist or even any one radiation\noncology department).In fact, some systems allow even\nsingle tables to contain terabytes or even petabytes of\ndata.5 Consequently, there are numerous systems avail-\nable to accommodate any researcher’s needs.Some of the\nvery best are open source (free).Software is available\nacross a wide variety of operating systems.Wikipedia\nprovides an outstanding overview of the topic.5\n\nTo implement a database system, it is ﬁrst necessary to\nhave a discussion with the IT Department at your institu-\ntion.There is no single solution for creating a data re-\nresearchers across all\ntrue for\npository that holds\ninstitutions.The solution can vary, depending on the re-\nsources at your institution and the level of access the IT\nDepartment has into the underlying patient data source\nsystems (often deﬁned in the institutional contracts signed\nwith the individual vendors).Some large centers have\nelaborate data warehouse systems.Smaller centers might\nprovide access to data from individual source systems but\nmight not have compiled them into a single data warehouse.Some IT departments might have adequate resources to\nprovide output data from their data warehouse to individual\nresearchers, when needed.Others might not. Some might\nprovide a dedicated research server on which the researcher\ncan construct a database.Other researchers might need to\nrely instead upon existing servers within their department.I\ndo not recommend that one set up a database system on a\nfree-standing laptop or desktop machine, as there are Health\nInsurance Portability and Accountability Act concerns (the\ncomputer could be stolen).Data should be backed up across\na secured network electronically.Creation of a Lung Cancer Radiation Therapy\nDatabase\n\nI began my own database several years ago.My need\ngrew out of a sense of frustration regarding lack of access\nto clinical data.At the time, at my institution, it was a\ndifﬁcult (and somewhat mysterious) process to procure\ndata from the data warehouse.However, data from\nMosaiq (Elekta AB, Stockholm, Sweden), which is our\ndepartment’s record or verify system, were available.These data formed the nucleus of the original database.Basic demographic information and radiation therapy\nprescriptions, dates of treatment, dose delivered, tumor\nstage, and the like, were exported, using custom software.Research IT provided a Linux server, on which I imple-\nmented the database.I chose to use MariaDB (MariaDB\nis a powerful, well-regarded,\nFoundation, DE), as it\n\ncommercially supported, free, open-source database sys-\ntem whose SQL functions are congruent with those of\nOracle (which is a database system I had used previ-\nously).Because my institution could not support an\nimplementation of an Oracle, MariaDB was an excellent\nalternate option.MariaDB does include a Windows GUI\ndatabase administration tool for administering its data-\nbases (creating tables, writing SQL code, importing or\nexporting data, and the like).I had previously used a\nsimilar commercial database administration product called\nNavicat (Premium Cybertech Ltd, Hong Kong), which\nprovides similar functionality, so I elected to purchase\nthat.Similarly, I imported all data I had captured in\nresearch projects.More\nspreadsheets\nrecently, I have gained access to data from our data\nwarehouse and so have created numerous additional ta-\nbles to store the information.At present, the database\ncontains more than 3 million rows of data on approxi-\nmately 4800 patients, spread across more than 170 tables.References\n\n1. Codd ER. A relational model of data for large shared data banks.Commmunications of the ACM. 1970;13:377-387. 2. Wikipedia. SQL.Available at: https://en.wikipedia.org/wiki/SQL.Accessed February 14, 2020. 3. Wikipedia.IBM System R. Available at: https://en.wikipedia.org/\n\nwiki/IBM_System_R.Accessed February 14, 2020. 4. Dilling TJ.Artiﬁcial Intelligence (AI) for clinical analysis: Design\nand implementation of a suitable database resource.Int J Radiat\nOncol Biol Phys. 2019;105:E131-E132. 5. Wikipedia.Comparison of relational database managment systems.Available\nhttps://en.wikipedia.org/wiki/Comparison_of_\nrelational_database_management_systems.Accessed February 14,\n2020.\n\nat:\n\n6.Wikipedia. Extract, Transform, Load. Available at: https://en.wikipedia.org/wiki/Extract,_transform,_load. Accessed April 13,\n2020.",
          "time": 156.42407155036926,
          "input_token_size": 5723,
          "output_token_size": 64,
          "original_provenance_id": 0
        }
      ],
      "metadata": {
        "question_id": "database_design_article_c1783848",
        "created_at": 1750197242.2740467,
        "processing_time": 161.04240441322327,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs",
        "reason": "shorter_provenance",
        "sentence_count": 194,
        "provenance_count": 1,
        "alternatives": [
          {
            "source": "test_outputs",
            "sentence_count": 194,
            "provenance_count": 1,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.686796"
      }
    }
  },
  {
    "c7859fc2": {
      "question": "What is the role of SQL in relational database systems according to the document?",
      "answer": "SQL is used to query or manipulate data within a relational database system (RDBS). It allows for searching for variables or combinations of variables across multiple tables simultaneously, enabling efficient data retrieval and manipulation. SQL queries can be saved for reuse and typically produce output quickly, even across large datasets.",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            138,
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            165,
            166,
            167,
            168,
            169,
            170,
            171,
            172,
            173,
            174,
            175,
            176,
            177,
            178,
            179,
            180,
            181,
            182,
            183,
            184,
            185,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            193
          ],
          "provenance_ids": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            125,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            139,
            140,
            141,
            142,
            143,
            161,
            169,
            170,
            171,
            173,
            174,
            177,
            179,
            180,
            185,
            186,
            187,
            188,
            189,
            191,
            192,
            193
          ],
          "provenance": "Advances in Radiation Oncology (2020) 5, 1280-1285\n\nScientiﬁc Article\nArtiﬁcial Intelligence Research: The Utility and\nDesign of a Relational Database System\n\nwww.advancesradonc.org\n\nThomas J. Dilling, MD*\n\nDepartment of Radiation Oncology, Mofﬁtt Cancer Center\n\nReceived 13 March 2020; revised 13 April 2020; accepted 11 June 2020\n\nAbstract\nAlthough many researchers talk about a “patient database,” they typically are not referring to a database at all, but instead to a spreadsheet of\ncurated facts about a cohort of patients.This article describes relational database systems and how they differ from spreadsheets.At their core,\nspreadsheets are only capable of describing one-to-one (1:1) relationships.However, this article demonstrates that clinical medical data\nencapsulate numerous one-to-many relationships.Consequently, spreadsheets are very inefﬁcient relative to relational database systems,\nwhich gracefully manage such data.Databases provide other advantages, in that the data ﬁelds are “typed” (that is, they contain speciﬁc\nkinds of data).This prevents users from entering spurious data during data import.Because each record contains a “key,” it becomes\nimpossible to add duplicate information (ie, add the same patient twice).Databases store data in very efﬁcient ways, minimizing space and\nmemory requirements on the host system.Likewise, databases can be queried or manipulated using a highly complex language called\nSQL.Consequently, it becomes trivial to cull large amounts of data from a vast number of data ﬁelds on very precise subsets of patients.Databases can be quite large (terabytes or more in size), yet still are highly efﬁcient to query.Consequently, with the explosion of data\navailable in electronic health records and other data sources, databases become increasingly important to contain or order these data.Ultimately, this will enable the clinical researcher to perform artiﬁcial intelligence analyses across vast amounts of clinical data in a way\nheretofore impossible.This article provides initial guidance in terms of creating a relational database system.(cid:1) 2020 Published by Elsevier Inc. on behalf of American Society for Radiation Oncology.This is an open access article under the CC BY-NC-\nND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).Introduction\n\nThis issue of Advances in Radiation Oncology presents\na series of articles around applications of artiﬁcial intel-\nligence (AI) in our ﬁeld.One of the potential beneﬁts of\nAI is that it can pore through large amounts of data to\ndiscover patterns not evident to clinicians.However, this\nvast volume of data cannot be accommodated within a\nsingle spreadsheet (which is how most clinical researchers\n\nResearch data are not available at this time. Sources of support: none.Disclosures: Dr Dilling reports personal fees and nonﬁnancial sup-\nport from NCCN, personal fees from Varian, personal fees and nonﬁ-\nnancial support from Harborside Press, nonﬁnancial support from Astra\nZeneca, all outside the submitted work.* Corresponding author: Thomas J. Dilling, MD; E-mail: Thomas.Dilling@mofﬁtt.org. work when conducting standard multivariable analyses).In fact, many researchers erroneously describe spread-\nsheets as databases.It will also discuss considerations when\nimplementing a relational database system (RDBS) for\nyour own research purposes, using an actual lung cancer\nradiation therapy database as an example.I have also\nprovided some excellent Wikipedia references\nthat\ncontain abundant additional\ninformation, beyond what\ncan be encapsulated in a single article.(These, in turn,\nreference computer science literature for the very intrepid\nreader, but such references might extend beyond the level\nof understanding of all but the most technically inclined.)One might question why a database system is neces-\nsary for AI research.This article will demonstrate that a\ndatabase enables creation of a multidimensional structure\n\nhttps://doi.org/10.1016/j.adro.2020.06.027\n2452-1094/(cid:1) 2020 Published by Elsevier Inc. on behalf of American Society for Radiation Oncology.This is an open access article under the CC BY-\nNC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1281\n\nto cleanly and accurately contain these data.To perform\nAI analysis requires efﬁcient storage of hundreds or\nthousands of data points on a single patient or even on a\nsingle course of radiation therapy.There is a famous\nthe “data science hierarchy of needs”\nillustration of\n(Fig 1).To perform an AI analysis, one must ﬁrst create\nan RDBS to serve as the storage mechanism.This crea-\ntion of a system to store structured data entails a major\npart of the bottom row of the pyramid.To create a data-\nbase,\nthe reader down the path toward\nconducting AI research at their own institution.then, will set\n\nOrigin of Relational Databases\n\nThe concept of a RDBS was ﬁrst described in a sem-\ninal article in 1970.1 The theoretic construct was that all\ndata could be deﬁned or represented as a series of re-\nlations with or to other data.The article was quantitative\nin that it used relational algebra and tuple relational cal-\nculus to prove its points.2 IBM used this theoretic\nframework to design what became the initial SQL (pro-\nnounced “see-quell” or “ess-cue-ell”) language, which\nthey used to manipulate and retrieve data from IBM’s\noriginal RDBS.3 Since that time, the American National\nStandards Institute and the International Standards Orga-\nnization have deemed SQL to be the standard language in\nrelational database communication.2 Today, there are a\nwide variety of commercial and open-source relational\ndatabase systems available for use.These vary in their\nfeatures and relative strengths or weaknesses, but,\nfundamentally,\nthey all operate using the principles\ndeﬁned in the Codd article.1 The SQL language is well\ndeﬁned and is used to write code to query (or update) the\ndata within an RDBS.Fundamental Disadvantage of Spreadsheets\n\nSpreadsheets are designed to incorporate and analyze\none-to-one (1:1) relationships (Fig 2a).Each patient has a\nsingle birth date and a single death date.However, medical\nrecords are rife with “one-to-many” relationships (Fig 2b).A patient might receive multiple different courses of radi-\nation therapy treatment, as in the example provided, or\nmight have multiple chemotherapy administrations.To\naccommodate these data, a spreadsheet quickly balloons in\nsize (Fig 2c).Not only is this inefﬁcient (duplication of\ndata), but it also makes maintenance of the spreadsheet\nextremely cumbersome and prone to error.For instance, in\nthis example, when patient “12345” passes away, the\n“DeathDate” needs to be updated in 5 rows of the spread-\nsheet (because she had 2 courses of radiation therapy and 4\ncycles of chemotherapy).It is not difﬁcult to imagine that a\nresearcher could neglect to update the “DeathDate” in each\nplace, introducing errors.To further expound upon the\nissue, imagine a patient who takes numerous medications or\nhas variable numbers of comorbid illnesses;\nthe rows\nrequired to encapsulate 1 patient explode.To use a data\nscience term, the dimensionality of the data balloons.But,\nto reiterate the point, spreadsheets are only designed to\nencapsulate 1:1 relationships (2-dimensional data).But\npatient data are multidimensional.Fundamental Advantage of Relational\nDatabases\n\nRDBS gracefully manage one-to-many relationships.They can do so because a database is created of numerous\ndifferent tables, which are explicitly linked (Fig 3).Every\n\nFigure 1\nAbbreviation: AI Z artiﬁcial intelligence.The data science hierarchy of needs.Used with permission of Monica Rogati (aipyramid.com). For details, see text.1282\n\nT.J. Dilling\n\nAdvances in Radiation Oncology: NovembereDecember 2020\n\nFigure 2\n(a) Spreadsheets are useful where there is a one-to-one correspondence of data.For instance, each unique medical record\nnumber (MRN) represents a single patient, with a single birth/death date and a single ﬁrst and last name.(b) Spreadsheets “break down”\nwhen describing 1-to-many correspondences.In this example, 2 patients have a total of 5 courses of radiation therapy treatment between\nthem.(c) To accommodate all the data in our simple example, a spreadsheet needs to store redundant data (colored in red).The data\nstorage requirements quickly balloon.Furthermore, as additional traits and factors are added to the spreadsheet, it becomes impossible to\nfollow, as one patient will require untold numbers of rows to capture all relevant data concepts.Stated another way, the data are\nmultidimensional.Maintenance and updating of ﬁelds become error-prone (see text).Abbreviations: DOB Z date of birth; Lname Z\nlast name; Fname Z ﬁrst name; LUL Z upper lobe; MRN Z medical record number; RLL, right lower lobe; RUL Z right upper lobe;\nSBRT Z stereotactic body radiotherapy.table must also contain a key, which is a unique, required\nidentiﬁer for each row of data.Relationships between the\ntables are deﬁned when creating the database tables or\nﬁelds.In the “demographics” table, medical\nrecord\nnumber, “MRN,” is the key.This, in\nis linked to 4 cycles of chemotherapy in the\nturn,\n“Chemotherapy” table, each of which is uniquely identi-\nﬁed in that table, in turn.When comparing Fig 3 (a database) to Fig 2c (a\nspreadsheet), note that Fig 3 contains the same informa-\ntion as Fig 2c without the addition of repetitious infor-\nmation (colored red in Fig 2c).Alternately,\nin a\nspreadsheet, the researcher could manually aggregate and\nsummarize the chemotherapy delivered into a single cell\nin a single row of the spreadsheet (ie, “ﬂatten” the data, to\nuse a data science term), but then some data would be\nlost.Using the chemotherapy administrations as an\nexample, if one were to “ﬂatten” the data down to a single\nstating “4 cycles of Adriamycin/\nspreadsheet cell\nCytoxan,” one loses the dates of administration.If one\nsummarizes the data as “4 cycles of Adriamycin/Cytoxan:\n<date1>, <date2>, <date3>, <date4>,” the dates and\nthe chemotherapy occupy the same cell and the data are\nretained but are no longer discrete; one loses the ability to\nﬁlter the spreadsheet by chemotherapy kind or by date.Conversely, a SQL database cleanly encapsulates these\nmultidimensional data (Fig 3).Each table is 2-dimensional\n\nin structure.But because it can contain multiple rows of\ndata on 1 patient (chemotherapy administrations, to follow\nthe same example), a multidimensional structure is created,\nas 4 chemotherapy cycles link to one of 2 courses of radi-\nation therapy (“TreatmentCourse” table) for 1 patient\n(“Demographics” table).Now, imagine a clinical database\nwith millions of rows of data spread across hundreds of\ntables, as in the real-life example described below.Clearly,\na spreadsheet would not be adequate.Additional Advantages of Relational Databases\n\n1.Each row of data in a table has a unique identiﬁer (a\nkey).Consequently, one cannot accidentally add a\nrow of data into a database table twice.2. Each ﬁeld in the database is speciﬁcally deﬁned as to\nwhat it contains (Fig 4).Consequently, if data are\nimported from some external source, the data types\nmust correspond or the import will fail.This feature helps maintain\nconsistency of data and minimize data errors. 3.Not only must the data types correspond, but the\ndata lengths must be observed.If the database\ndesign states that a ﬁeld is a decimal with 3 places to\nthe right of the decimal place, then a fourth decimal\nplace would be truncated at import.Alternately, the\ndatabase could declare an error, which might also\nimply that the ﬁeld contains erroneous data.Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1283\n\n4.A key from one table can be linked “backward” to a\nkey from another table (termed a “foreign key”).As\nan example (Fig 3), the database can be designed\nsuch that the MRN from “TreatmentCourse” must\nto an MRN already contained within the\nrefer\n“Demographics” table.If one tried to import data\ninto “TreatmentCourse” and it used an MRN not\nlisted in “Demographics,” the import would fail.Such a situation might imply, for instance, that the\nMRN was incorrect in the external data source (or in\nthe database).Or perhaps it relates to a patient who\nreceived prostate radiation therapy (but you have a\nbreast cancer database). 5.Foreign key relationships also work in the opposite\ndirection: If one realizes that a patient is represented\nin the database who should not be, one can delete\nthe patient from the “Demographics” table and the\ndatabase will delete all data about that patient from\nall the other data tables automatically.6. RDBS are speciﬁcally optimized to manage vast\namounts of data.Large spreadsheets (containing\nthousands of rows and hundreds of columns) are\nextremely slow and memory intensive.However, one\ncan query across or manipulate many gigabytes of data\nin fractions of a second in many RDBS, as the data\nstores are highly optimized and efﬁcient from both a\ncomputational and memory utilization perspective.7. RDBS are much more secure than spreadsheets.An\ninstitution’s IT team might allow one to access some\ntables within an institution’s data warehouse, but not\nothers.One’s access could be restricted to deﬁned\nsubsets of patients.One might have “read” access to\nthese data, but not “write” access (or “write” access to\nonly some subset of ﬁelds).Databases might likewise\nbe set up such that only users from speciﬁc IP ad-\ndresses or computers may access them.The login\nsystems set up by IT departments for these purposes\ntypically use state of the art encryption algorithms, 2-\nfactor authentication, and the like.In contrast, an\nExcel spreadsheet can be “locked” such that only\nsome ﬁelds are editable.But it is not possible to\nrestrict data access by user.Furthermore, this re-\nstriction is to “write” access only, not to “read” ac-\ncess.It is true that one can “hide” columns in a\nspreadsheet and then lock it, to prevent a given user\nfrom viewing them, but the spreadsheet maintainer\nmust do this manually before distributing the\nspreadsheet (time-consuming and prone to error).Beneﬁts of SQL\n\nAs described earlier, SQL is a deﬁned, standardized\nlanguage for composing queries within an RDBS, or to\n\nmanipulate and update these data.Some database systems\nprovide “extensions” to the SQL standard, to provide some\nadditional and speciﬁc functionality (details available in the\nvendors’ literature).It is beyond the scope of this article to\nteach SQL coding.However, many excellent online re-\nsources are available for the interested reader.Functionally,\nSQL allows one to search for any number of variables or\ncombinations of variables across any number of tables,\nsimultaneously.This can be extremely powerful and useful,\nboth for retrieving and for manipulating and updating data.Queries can be saved for reuse or modiﬁcation later.As\nstated above, these queries typically produce output in\nfractions of a second, even across vast pools of data.It is true that one can “ﬁlter” data in Excel to rapidly\nﬁnd subsets.But one cannot perform the\narithmetic “where date of neutropenia > Radiation-\nStartDate and < RadiationEndDate” to ﬁlter the data\nwithout writing code in Visual Basic, which is likely\nbeyond the ability of most.1284\n\nT.J. Dilling\n\nAdvances in Radiation Oncology: NovembereDecember 2020\n\nIn a relational database, data are stored in multiple tables, which are joined via deﬁned variables.In this ﬁctitious example,\nFigure 3\nnote that the patient only has one “DeathDate” to update.Furthermore, each course of treatment (“TreatmentCourse”) can have multiple\nchemotherapy cycles associated with it.Note, too, that medical record number (MRN) only appears in 2 of the 3 tables (it is not needed\nin the “Chemotherapy” table).If the researcher wishes to retrieve the MRN, it can be obtained via a SQL query, linking back to one of\nthe tables that contains it.Abbreviations: DOB Z date of birth.Disadvantage of SQL\n\nWith SQL, it is possible to create highly complex queries;\nit is a rich and powerful language.However, these can be\n\nquite complicated and obtuse to a nontechnical person.Some\nsystems do provide graphical tools to help build SQL queries,\nbut, even so, there are some users for whom all but the\nsimplest SQL queries will be beyond their technical skills.It has a “type” (kind) and a “size” (length).When\nimporting data from numerous external sources, these deﬁnitions can prevent erroneous imports (for details, see text).Note that the\nﬁeld “MRN” is the key for this table.All the data in this table refer back to “MRN” via a one-to-one relationship.MRN can be used as\nthe key because no 2 patients have the same MRN.My need\ngrew out of a sense of frustration regarding lack of access\nto clinical data.MariaDB does include a Windows GUI\ndatabase administration tool for administering its data-\nbases (creating tables, writing SQL code, importing or\nexporting data, and the like).I had previously used a\nsimilar commercial database administration product called\nNavicat (Premium Cybertech Ltd, Hong Kong), which\nprovides similar functionality, so I elected to purchase\nthat.Similarly, I imported all data I had captured in\nresearch projects.At present, the database\ncontains more than 3 million rows of data on approxi-\nmately 4800 patients, spread across more than 170 tables.for previous\n\nIncorporation of Data from Other\nInstitutional Data Systems\n\nTo import data from outside source systems requires a\nmultistep process, referred to as “ETL” (“Extraction,\nTransformation, and Loading”) in the data science liter-\nature.”6 The issues go far beyond the physical importation\nof data into the database; importing spreadsheets of data\nare a trivial task.In fact, a large pro-\nportion of the time required to create a database and ﬁll it\nwith clinically useable data derives from the ETL\ninvolved.Most of the discussion\nin this article addressed aspects of the bottom-most layer\nof the pyramid.ETL comprises the majority of the next 2\nlayers of the pyramid and is the topic of another article.IBM System R. Available at: https://en.wikipedia.org/\n\nwiki/IBM_System_R.Accessed February 14, 2020. 4. Dilling TJ.Artiﬁcial Intelligence (AI) for clinical analysis: Design\nand implementation of a suitable database resource.Int J Radiat\nOncol Biol Phys. 2019;105:E131-E132. 5. Wikipedia.Comparison of relational database managment systems.Accessed February 14,\n2020.\n\nat:\n\n6.Wikipedia. Extract, Transform, Load. Available at: https://en.wikipedia.org/wiki/Extract,_transform,_load. Accessed April 13,\n2020.",
          "time": 274.75184416770935,
          "input_token_size": 5727,
          "output_token_size": 107,
          "original_provenance_id": 0
        }
      ],
      "metadata": {
        "question_id": "database_design_article_c7859fc2",
        "created_at": 1749768871.0833306,
        "processing_time": 277.67460227012634,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs_prev1",
        "reason": "shorter_provenance",
        "sentence_count": 194,
        "provenance_count": 1,
        "alternatives": [
          {
            "source": "test_outputs_prev1",
            "sentence_count": 194,
            "provenance_count": 1,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.686796"
      }
    }
  },
  {
    "c8e32a6b": {
      "question": "What example is given to demonstrate the use of RDBS in complex queries?",
      "answer": "1. Find patients who might be candidates for a certain lung cancer clinical trial.\n2. Find all patients with stage II or III lung cancer treated with concurrent chemoradiotherapy who developed neutropenia during treatment, who are female, 70 years of age or older, and who take any antihypertensive medication.",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            138,
            139,
            140,
            141,
            142,
            143,
            144
          ],
          "provenance_ids": [
            120,
            122,
            123,
            124
          ],
          "provenance": "Our institution has a database of patients who have\nreceived radiation therapy to the lung, whether for pri-\nmary cancer or metastatic disease to the lung.4 The\ndatabase and some of its details of implementation are\ndescribed below, but ﬁrst, some “real-life” examples of\nwhat such an RDBS system can do (not possible when\nusing a spreadsheet):\n\n(cid:1) Real-life example 1: Find patients who might be\ncandidates for a certain lung cancer clinical trial.By constructing an\nappropriate SQL query, 135 patients were found (out\nof more than 4600 in the database) to pass along to\nthe PI for closer inspection.(cid:1) Real-life example 2: It takes only a few minutes to\nset up very complex queries.If one has a basic fa-\ncility with SQL, one can design a query such as:\n“Find all patients with stage II or III lung cancer\ntreated with concurrent chemoradiotherapy who\ndeveloped neutropenia during treatment, who are\nfemale, 70 years of age or older, and who take any\nantihypertensive medication (deﬁned in a certain\nlist).” Ultimately, such queries are only limited by\none’s imagination (and the richness or completeness\nof the data coming from the source systems).",
          "time": 32.632922887802124,
          "input_token_size": 5806,
          "output_token_size": 199,
          "original_provenance_id": 0
        }
      ],
      "metadata": {
        "question_id": "database_design_article_c8e32a6b",
        "created_at": 1750197255.4195347,
        "processing_time": 38.160332679748535,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs",
        "reason": "shorter_provenance",
        "sentence_count": 48,
        "provenance_count": 1,
        "alternatives": [
          {
            "source": "test_outputs",
            "sentence_count": 48,
            "provenance_count": 1,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.693942"
      }
    }
  },
  {
    "cb652d08": {
      "question": "What does RDBS stand for in the context of the article?",
      "answer": "RDBS stands for Relational Database System.",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            51,
            52,
            53
          ],
          "provenance_ids": [
            52
          ],
          "provenance": "Fundamental Advantage of Relational\nDatabases\n\nRDBS gracefully manage one-to-many relationships.",
          "time": 4.123063802719116,
          "input_token_size": 5670,
          "output_token_size": 61,
          "original_provenance_id": 0
        },
        {
          "provenance_id": 1,
          "input_sentence_ids": [
            12,
            13,
            14
          ],
          "provenance_ids": [
            14
          ],
          "provenance": "This article provides initial guidance in terms of creating a relational database system.",
          "time": 11.021693229675293,
          "input_token_size": 11313,
          "output_token_size": 120,
          "original_provenance_id": 1
        },
        {
          "provenance_id": 2,
          "input_sentence_ids": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "provenance_ids": [
            1
          ],
          "provenance": "This article describes relational database systems and how they differ from spreadsheets.",
          "time": 16.252837419509888,
          "input_token_size": 12480,
          "output_token_size": 143,
          "original_provenance_id": 2
        }
      ],
      "metadata": {
        "question_id": "database_design_article_cb652d08",
        "created_at": 1750197183.516388,
        "processing_time": 19.569738626480103,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs",
        "reason": "shorter_provenance",
        "sentence_count": 12,
        "provenance_count": 3,
        "alternatives": [
          {
            "source": "test_outputs",
            "sentence_count": 12,
            "provenance_count": 3,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.693942"
      }
    }
  },
  {
    "d2d506c3": {
      "question": "What is the purpose of using foreign keys in relational databases?",
      "answer": "1. To establish relationships between tables.\n2. To ensure data integrity by preventing invalid data entries.\n3. To avoid duplication of data.\n4. To enable cascading updates and deletions across related tables.\n5. To enforce referential integrity within the database.",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            138,
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            165,
            166,
            167,
            168,
            169,
            170,
            171,
            172,
            173,
            174,
            175,
            176,
            177,
            178,
            179,
            180,
            181,
            182,
            183,
            184,
            185,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            193
          ],
          "provenance_ids": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            100,
            101,
            102,
            103,
            104,
            105,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            138,
            139,
            141,
            142,
            144,
            145,
            146,
            147,
            148,
            150,
            151,
            152,
            153,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            165,
            166,
            167,
            168,
            169,
            170,
            171,
            172,
            173,
            174,
            175,
            176,
            177,
            178,
            179,
            180,
            181,
            182,
            183,
            184,
            186,
            187,
            188,
            189,
            191,
            192,
            193
          ],
          "provenance": "Advances in Radiation Oncology (2020) 5, 1280-1285\n\nScientiﬁc Article\nArtiﬁcial Intelligence Research: The Utility and\nDesign of a Relational Database System\n\nwww.advancesradonc.org\n\nThomas J. Dilling, MD*\n\nDepartment of Radiation Oncology, Mofﬁtt Cancer Center\n\nReceived 13 March 2020; revised 13 April 2020; accepted 11 June 2020\n\nAbstract\nAlthough many researchers talk about a “patient database,” they typically are not referring to a database at all, but instead to a spreadsheet of\ncurated facts about a cohort of patients.This article describes relational database systems and how they differ from spreadsheets.At their core,\nspreadsheets are only capable of describing one-to-one (1:1) relationships.However, this article demonstrates that clinical medical data\nencapsulate numerous one-to-many relationships.Consequently, spreadsheets are very inefﬁcient relative to relational database systems,\nwhich gracefully manage such data.Databases provide other advantages, in that the data ﬁelds are “typed” (that is, they contain speciﬁc\nkinds of data).This prevents users from entering spurious data during data import.Because each record contains a “key,” it becomes\nimpossible to add duplicate information (ie, add the same patient twice).Databases store data in very efﬁcient ways, minimizing space and\nmemory requirements on the host system.Likewise, databases can be queried or manipulated using a highly complex language called\nSQL.Consequently, it becomes trivial to cull large amounts of data from a vast number of data ﬁelds on very precise subsets of patients.Databases can be quite large (terabytes or more in size), yet still are highly efﬁcient to query.Consequently, with the explosion of data\navailable in electronic health records and other data sources, databases become increasingly important to contain or order these data.Ultimately, this will enable the clinical researcher to perform artiﬁcial intelligence analyses across vast amounts of clinical data in a way\nheretofore impossible.This article provides initial guidance in terms of creating a relational database system.(cid:1) 2020 Published by Elsevier Inc. on behalf of American Society for Radiation Oncology.This is an open access article under the CC BY-NC-\nND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).Introduction\n\nThis issue of Advances in Radiation Oncology presents\na series of articles around applications of artiﬁcial intel-\nligence (AI) in our ﬁeld.One of the potential beneﬁts of\nAI is that it can pore through large amounts of data to\ndiscover patterns not evident to clinicians.However, this\nvast volume of data cannot be accommodated within a\nsingle spreadsheet (which is how most clinical researchers\n\nResearch data are not available at this time. Sources of support: none.Disclosures: Dr Dilling reports personal fees and nonﬁnancial sup-\nport from NCCN, personal fees from Varian, personal fees and nonﬁ-\nnancial support from Harborside Press, nonﬁnancial support from Astra\nZeneca, all outside the submitted work.* Corresponding author: Thomas J. Dilling, MD; E-mail: Thomas.Dilling@mofﬁtt.org. work when conducting standard multivariable analyses).In fact, many researchers erroneously describe spread-\nsheets as databases.This article will demonstrate both\nwhat a relational database system is and how it is superior\nto a spreadsheet.It will also discuss considerations when\nimplementing a relational database system (RDBS) for\nyour own research purposes, using an actual lung cancer\nradiation therapy database as an example.I have also\nprovided some excellent Wikipedia references\nthat\ncontain abundant additional\ninformation, beyond what\ncan be encapsulated in a single article.(These, in turn,\nreference computer science literature for the very intrepid\nreader, but such references might extend beyond the level\nof understanding of all but the most technically inclined.)One might question why a database system is neces-\nsary for AI research.This article will demonstrate that a\ndatabase enables creation of a multidimensional structure\n\nhttps://doi.org/10.1016/j.adro.2020.06.027\n2452-1094/(cid:1) 2020 Published by Elsevier Inc. on behalf of American Society for Radiation Oncology.This is an open access article under the CC BY-\nNC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1281\n\nto cleanly and accurately contain these data.To perform\nAI analysis requires efﬁcient storage of hundreds or\nthousands of data points on a single patient or even on a\nsingle course of radiation therapy.There is a famous\nthe “data science hierarchy of needs”\nillustration of\n(Fig 1).To perform an AI analysis, one must ﬁrst create\nan RDBS to serve as the storage mechanism.This crea-\ntion of a system to store structured data entails a major\npart of the bottom row of the pyramid.To create a data-\nbase,\nthe reader down the path toward\nconducting AI research at their own institution.then, will set\n\nOrigin of Relational Databases\n\nThe concept of a RDBS was ﬁrst described in a sem-\ninal article in 1970.1 The theoretic construct was that all\ndata could be deﬁned or represented as a series of re-\nlations with or to other data.The article was quantitative\nin that it used relational algebra and tuple relational cal-\nculus to prove its points.2 IBM used this theoretic\nframework to design what became the initial SQL (pro-\nnounced “see-quell” or “ess-cue-ell”) language, which\nthey used to manipulate and retrieve data from IBM’s\noriginal RDBS.3 Since that time, the American National\nStandards Institute and the International Standards Orga-\nnization have deemed SQL to be the standard language in\nrelational database communication.2 Today, there are a\nwide variety of commercial and open-source relational\ndatabase systems available for use.These vary in their\nfeatures and relative strengths or weaknesses, but,\nfundamentally,\nthey all operate using the principles\ndeﬁned in the Codd article.1 The SQL language is well\ndeﬁned and is used to write code to query (or update) the\ndata within an RDBS.Fundamental Disadvantage of Spreadsheets\n\nSpreadsheets are designed to incorporate and analyze\none-to-one (1:1) relationships (Fig 2a).Each patient has a\nsingle birth date and a single death date.However, medical\nrecords are rife with “one-to-many” relationships (Fig 2b).A patient might receive multiple different courses of radi-\nation therapy treatment, as in the example provided, or\nmight have multiple chemotherapy administrations.To\naccommodate these data, a spreadsheet quickly balloons in\nsize (Fig 2c).Not only is this inefﬁcient (duplication of\ndata), but it also makes maintenance of the spreadsheet\nextremely cumbersome and prone to error.For instance, in\nthis example, when patient “12345” passes away, the\n“DeathDate” needs to be updated in 5 rows of the spread-\nsheet (because she had 2 courses of radiation therapy and 4\ncycles of chemotherapy).It is not difﬁcult to imagine that a\nresearcher could neglect to update the “DeathDate” in each\nplace, introducing errors.To further expound upon the\nissue, imagine a patient who takes numerous medications or\nhas variable numbers of comorbid illnesses;\nthe rows\nrequired to encapsulate 1 patient explode.To use a data\nscience term, the dimensionality of the data balloons.But,\nto reiterate the point, spreadsheets are only designed to\nencapsulate 1:1 relationships (2-dimensional data).But\npatient data are multidimensional.Fundamental Advantage of Relational\nDatabases\n\nRDBS gracefully manage one-to-many relationships.They can do so because a database is created of numerous\ndifferent tables, which are explicitly linked (Fig 3).Every\n\nFigure 1\nAbbreviation: AI Z artiﬁcial intelligence.The data science hierarchy of needs.Used with permission of Monica Rogati (aipyramid.com). For details, see text.1282\n\nT.J. Dilling\n\nAdvances in Radiation Oncology: NovembereDecember 2020\n\nFigure 2\n(a) Spreadsheets are useful where there is a one-to-one correspondence of data.For instance, each unique medical record\nnumber (MRN) represents a single patient, with a single birth/death date and a single ﬁrst and last name.(b) Spreadsheets “break down”\nwhen describing 1-to-many correspondences.In this example, 2 patients have a total of 5 courses of radiation therapy treatment between\nthem.(c) To accommodate all the data in our simple example, a spreadsheet needs to store redundant data (colored in red).The data\nstorage requirements quickly balloon.Furthermore, as additional traits and factors are added to the spreadsheet, it becomes impossible to\nfollow, as one patient will require untold numbers of rows to capture all relevant data concepts.Stated another way, the data are\nmultidimensional.Maintenance and updating of ﬁelds become error-prone (see text).Abbreviations: DOB Z date of birth; Lname Z\nlast name; Fname Z ﬁrst name; LUL Z upper lobe; MRN Z medical record number; RLL, right lower lobe; RUL Z right upper lobe;\nSBRT Z stereotactic body radiotherapy.table must also contain a key, which is a unique, required\nidentiﬁer for each row of data.Relationships between the\ntables are deﬁned when creating the database tables or\nﬁelds.In the “demographics” table, medical\nrecord\nnumber, “MRN,” is the key.For the “TreatmentCourse”\nand “Chemotherapy” tables,\nthe keys are “Treatment-\nCourse” and “ChemotherapyID,” respectively.Note that\n“TreatmentCourse 1” in the “TreatmentCourse” table\npertains to breast radiation therapy treatment.This, in\nis linked to 4 cycles of chemotherapy in the\nturn,\n“Chemotherapy” table, each of which is uniquely identi-\nﬁed in that table, in turn.When comparing Fig 3 (a database) to Fig 2c (a\nspreadsheet), note that Fig 3 contains the same informa-\ntion as Fig 2c without the addition of repetitious infor-\nmation (colored red in Fig 2c).Alternately,\nin a\nspreadsheet, the researcher could manually aggregate and\nsummarize the chemotherapy delivered into a single cell\nin a single row of the spreadsheet (ie, “ﬂatten” the data, to\nuse a data science term), but then some data would be\nlost.Using the chemotherapy administrations as an\nexample, if one were to “ﬂatten” the data down to a single\nstating “4 cycles of Adriamycin/\nspreadsheet cell\nCytoxan,” one loses the dates of administration.If one\nsummarizes the data as “4 cycles of Adriamycin/Cytoxan:\n<date1>, <date2>, <date3>, <date4>,” the dates and\nthe chemotherapy occupy the same cell and the data are\nretained but are no longer discrete; one loses the ability to\nﬁlter the spreadsheet by chemotherapy kind or by date.Conversely, a SQL database cleanly encapsulates these\nmultidimensional data (Fig 3).Each table is 2-dimensional\n\nin structure.But because it can contain multiple rows of\ndata on 1 patient (chemotherapy administrations, to follow\nthe same example), a multidimensional structure is created,\nas 4 chemotherapy cycles link to one of 2 courses of radi-\nation therapy (“TreatmentCourse” table) for 1 patient\n(“Demographics” table).Now, imagine a clinical database\nwith millions of rows of data spread across hundreds of\ntables, as in the real-life example described below.Clearly,\na spreadsheet would not be adequate.Additional Advantages of Relational Databases\n\n1.Each row of data in a table has a unique identiﬁer (a\nkey).Consequently, one cannot accidentally add a\nrow of data into a database table twice.2. Each ﬁeld in the database is speciﬁcally deﬁned as to\nwhat it contains (Fig 4).Consequently, if data are\nimported from some external source, the data types\nmust correspond or the import will fail.For example,\nif an entry contained an integer where a date was\nindicated, the database would signal that the variable\ncontained erroneous data.This feature helps maintain\nconsistency of data and minimize data errors. 3.Not only must the data types correspond, but the\ndata lengths must be observed.If the database\ndesign states that a ﬁeld is a decimal with 3 places to\nthe right of the decimal place, then a fourth decimal\nplace would be truncated at import.Alternately, the\ndatabase could declare an error, which might also\nimply that the ﬁeld contains erroneous data.Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1283\n\n4.A key from one table can be linked “backward” to a\nkey from another table (termed a “foreign key”).As\nan example (Fig 3), the database can be designed\nsuch that the MRN from “TreatmentCourse” must\nto an MRN already contained within the\nrefer\n“Demographics” table.If one tried to import data\ninto “TreatmentCourse” and it used an MRN not\nlisted in “Demographics,” the import would fail.Such a situation might imply, for instance, that the\nMRN was incorrect in the external data source (or in\nthe database).Or perhaps it relates to a patient who\nreceived prostate radiation therapy (but you have a\nbreast cancer database). 5.Foreign key relationships also work in the opposite\ndirection: If one realizes that a patient is represented\nin the database who should not be, one can delete\nthe patient from the “Demographics” table and the\ndatabase will delete all data about that patient from\nall the other data tables automatically.Large spreadsheets (containing\nthousands of rows and hundreds of columns) are\nextremely slow and memory intensive.However, one\ncan query across or manipulate many gigabytes of data\nin fractions of a second in many RDBS, as the data\nstores are highly optimized and efﬁcient from both a\ncomputational and memory utilization perspective.7. RDBS are much more secure than spreadsheets.An\ninstitution’s IT team might allow one to access some\ntables within an institution’s data warehouse, but not\nothers.One’s access could be restricted to deﬁned\nsubsets of patients.One might have “read” access to\nthese data, but not “write” access (or “write” access to\nonly some subset of ﬁelds).But it is not possible to\nrestrict data access by user.Furthermore, this re-\nstriction is to “write” access only, not to “read” ac-\ncess.It is true that one can “hide” columns in a\nspreadsheet and then lock it, to prevent a given user\nfrom viewing them, but the spreadsheet maintainer\nmust do this manually before distributing the\nspreadsheet (time-consuming and prone to error).Beneﬁts of SQL\n\nAs described earlier, SQL is a deﬁned, standardized\nlanguage for composing queries within an RDBS, or to\n\nmanipulate and update these data.Some database systems\nprovide “extensions” to the SQL standard, to provide some\nadditional and speciﬁc functionality (details available in the\nvendors’ literature).It is beyond the scope of this article to\nteach SQL coding.However, many excellent online re-\nsources are available for the interested reader.Functionally,\nSQL allows one to search for any number of variables or\ncombinations of variables across any number of tables,\nsimultaneously.This can be extremely powerful and useful,\nboth for retrieving and for manipulating and updating data.Queries can be saved for reuse or modiﬁcation later.As\nstated above, these queries typically produce output in\nfractions of a second, even across vast pools of data.Our institution has a database of patients who have\nreceived radiation therapy to the lung, whether for pri-\nmary cancer or metastatic disease to the lung.4 The\ndatabase and some of its details of implementation are\ndescribed below, but ﬁrst, some “real-life” examples of\nwhat such an RDBS system can do (not possible when\nusing a spreadsheet):\n\n(cid:1) Real-life example 1: Find patients who might be\ncandidates for a certain lung cancer clinical trial.For\nthis particular study,\nthey must have previously\nreceived lung SBRT, have nonmetastatic disease, no\nevidence of recurrence, be alive (obviously), be at\nleast 2 years out from the end of the prior SBRT\ntreatment, and must have been seen in follow-up\nwithin the past 1.5 years.By constructing an\nappropriate SQL query, 135 patients were found (out\nof more than 4600 in the database) to pass along to\nthe PI for closer inspection.(cid:1) Real-life example 2: It takes only a few minutes to\nset up very complex queries.If one has a basic fa-\ncility with SQL, one can design a query such as:\n“Find all patients with stage II or III lung cancer\ntreated with concurrent chemoradiotherapy who\ndeveloped neutropenia during treatment, who are\nfemale, 70 years of age or older, and who take any\nantihypertensive medication (deﬁned in a certain\nlist).” Ultimately, such queries are only limited by\none’s imagination (and the richness or completeness\nof the data coming from the source systems).It is true that one can “ﬁlter” data in Excel to rapidly\nﬁnd subsets.However, this ﬁltering is limited to “true or\nfalse” matching.In this example, it would be impossible\nto discover the patients who developed neutropenia while\nundergoing radiation therapy unless one had a “neu-\ntropenia (yes or no)” column.But one cannot perform the\narithmetic “where date of neutropenia > Radiation-\nStartDate and < RadiationEndDate” to ﬁlter the data\nwithout writing code in Visual Basic, which is likely\nbeyond the ability of most.1284\n\nT.J. Dilling\n\nAdvances in Radiation Oncology: NovembereDecember 2020\n\nIn a relational database, data are stored in multiple tables, which are joined via deﬁned variables.In this ﬁctitious example,\nFigure 3\nnote that the patient only has one “DeathDate” to update.Furthermore, each course of treatment (“TreatmentCourse”) can have multiple\nchemotherapy cycles associated with it.Note, too, that medical record number (MRN) only appears in 2 of the 3 tables (it is not needed\nin the “Chemotherapy” table).If the researcher wishes to retrieve the MRN, it can be obtained via a SQL query, linking back to one of\nthe tables that contains it.Abbreviations: DOB Z date of birth.Disadvantage of SQL\n\nWith SQL, it is possible to create highly complex queries;\nit is a rich and powerful language.However, these can be\n\nquite complicated and obtuse to a nontechnical person.Some\nsystems do provide graphical tools to help build SQL queries,\nbut, even so, there are some users for whom all but the\nsimplest SQL queries will be beyond their technical skills.Figure 4 Note that each ﬁeld in this database table is speciﬁcally designed.It has a “type” (kind) and a “size” (length).Note that the\nﬁeld “MRN” is the key for this table.All the data in this table refer back to “MRN” via a one-to-one relationship.Abbreviations: DOB Z date of birth; MRN Z medical record number.Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1285\n\nDatabase Implementation\n\nDatabases may, and often do, contain many thousands\nof tables and millions of rows of data.(In other words,\nthey can contain data far in excess of the requirements of\nany one radiation oncologist or even any one radiation\noncology department).In fact, some systems allow even\nsingle tables to contain terabytes or even petabytes of\ndata.5 Consequently, there are numerous systems avail-\nable to accommodate any researcher’s needs.Some of the\nvery best are open source (free).Wikipedia\nprovides an outstanding overview of the topic.5\n\nTo implement a database system, it is ﬁrst necessary to\nhave a discussion with the IT Department at your institu-\ntion.There is no single solution for creating a data re-\nresearchers across all\ntrue for\npository that holds\ninstitutions.The solution can vary, depending on the re-\nsources at your institution and the level of access the IT\nDepartment has into the underlying patient data source\nsystems (often deﬁned in the institutional contracts signed\nwith the individual vendors).Some large centers have\nelaborate data warehouse systems.Others might not. Some might\nprovide a dedicated research server on which the researcher\ncan construct a database.Other researchers might need to\nrely instead upon existing servers within their department.I\ndo not recommend that one set up a database system on a\nfree-standing laptop or desktop machine, as there are Health\nInsurance Portability and Accountability Act concerns (the\ncomputer could be stolen).Data should be backed up across\na secured network electronically.Creation of a Lung Cancer Radiation Therapy\nDatabase\n\nI began my own database several years ago.My need\ngrew out of a sense of frustration regarding lack of access\nto clinical data.At the time, at my institution, it was a\ndifﬁcult (and somewhat mysterious) process to procure\ndata from the data warehouse.However, data from\nMosaiq (Elekta AB, Stockholm, Sweden), which is our\ndepartment’s record or verify system, were available.These data formed the nucleus of the original database.Basic demographic information and radiation therapy\nprescriptions, dates of treatment, dose delivered, tumor\nstage, and the like, were exported, using custom software.Research IT provided a Linux server, on which I imple-\nmented the database.I chose to use MariaDB (MariaDB\nis a powerful, well-regarded,\nFoundation, DE), as it\n\ncommercially supported, free, open-source database sys-\ntem whose SQL functions are congruent with those of\nOracle (which is a database system I had used previ-\nously).Because my institution could not support an\nimplementation of an Oracle, MariaDB was an excellent\nalternate option.MariaDB does include a Windows GUI\ndatabase administration tool for administering its data-\nbases (creating tables, writing SQL code, importing or\nexporting data, and the like).I had previously used a\nsimilar commercial database administration product called\nNavicat (Premium Cybertech Ltd, Hong Kong), which\nprovides similar functionality, so I elected to purchase\nthat.Similarly, I imported all data I had captured in\nresearch projects.More\nspreadsheets\nrecently, I have gained access to data from our data\nwarehouse and so have created numerous additional ta-\nbles to store the information.At present, the database\ncontains more than 3 million rows of data on approxi-\nmately 4800 patients, spread across more than 170 tables.for previous\n\nIncorporation of Data from Other\nInstitutional Data Systems\n\nTo import data from outside source systems requires a\nmultistep process, referred to as “ETL” (“Extraction,\nTransformation, and Loading”) in the data science liter-\nature.”6 The issues go far beyond the physical importation\nof data into the database; importing spreadsheets of data\nare a trivial task.There are numerous issues in ETL,\nwhich are critical to consider when designing a database\nand importing data into it.Furthermore, many of these\nissues are not inherently obvious.In fact, a large pro-\nportion of the time required to create a database and ﬁll it\nwith clinically useable data derives from the ETL\ninvolved.The oft-reproduced “Data Science Hierarchy of\nNeeds” illustrates this fact (Fig 1).Most of the discussion\nin this article addressed aspects of the bottom-most layer\nof the pyramid.ETL comprises the majority of the next 2\nlayers of the pyramid and is the topic of another article.References\n\n1. Codd ER. A relational model of data for large shared data banks.Commmunications of the ACM. 1970;13:377-387. 2. Wikipedia. SQL.Available at: https://en.wikipedia.org/wiki/SQL.Accessed February 14, 2020. 3. Wikipedia.Accessed February 14, 2020. 4. Dilling TJ.Artiﬁcial Intelligence (AI) for clinical analysis: Design\nand implementation of a suitable database resource.Int J Radiat\nOncol Biol Phys. 2019;105:E131-E132. 5. Wikipedia.Comparison of relational database managment systems.Accessed February 14,\n2020.\n\nat:\n\n6.Wikipedia. Extract, Transform, Load. Available at: https://en.wikipedia.org/wiki/Extract,_transform,_load. Accessed April 13,\n2020.",
          "time": 206.5483968257904,
          "input_token_size": 5721,
          "output_token_size": 35,
          "original_provenance_id": 0
        }
      ],
      "metadata": {
        "question_id": "database_design_article_d2d506c3",
        "created_at": 1750197274.8157938,
        "processing_time": 209.2404968738556,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs",
        "reason": "shorter_provenance",
        "sentence_count": 194,
        "provenance_count": 1,
        "alternatives": [
          {
            "source": "test_outputs",
            "sentence_count": 194,
            "provenance_count": 1,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.695354"
      }
    }
  },
  {
    "d5636ef8": {
      "question": "When was the concept of relational databases first introduced in a seminal article?",
      "answer": "1970",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            36,
            37,
            38
          ],
          "provenance_ids": [
            37
          ],
          "provenance": "then, will set\n\nOrigin of Relational Databases\n\nThe concept of a RDBS was ﬁrst described in a sem-\ninal article in 1970.1 The theoretic construct was that all\ndata could be deﬁned or represented as a series of re-\nlations with or to other data.",
          "time": 4.187015771865845,
          "input_token_size": 6698,
          "output_token_size": 12,
          "original_provenance_id": 0
        },
        {
          "provenance_id": 1,
          "input_sentence_ids": [
            181,
            182,
            183
          ],
          "provenance_ids": [
            182
          ],
          "provenance": "Commmunications of the ACM. 1970;13:377-387. 2. Wikipedia. SQL.",
          "time": 10.028984308242798,
          "input_token_size": 15004,
          "output_token_size": 31,
          "original_provenance_id": 1
        }
      ],
      "metadata": {
        "question_id": "database_design_article_d5636ef8",
        "created_at": 1750197163.6599429,
        "processing_time": 13.373478174209595,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs",
        "reason": "shorter_provenance",
        "sentence_count": 6,
        "provenance_count": 2,
        "alternatives": [
          {
            "source": "test_outputs",
            "sentence_count": 6,
            "provenance_count": 2,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.696360"
      }
    }
  },
  {
    "d869f06e": {
      "question": "How many rows of data does the lung cancer radiation therapy database contain?",
      "answer": "More than 3 million rows of data.",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            138,
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            165,
            166,
            167,
            168,
            169,
            170,
            171,
            172,
            173,
            174,
            175,
            176,
            177,
            178,
            179,
            180,
            181,
            182,
            183,
            184,
            185,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            193
          ],
          "provenance_ids": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            49,
            50,
            51,
            53,
            55,
            57,
            58,
            59,
            60,
            63,
            64,
            65,
            68,
            69,
            70,
            72,
            73,
            74,
            76,
            77,
            78,
            79,
            114,
            115,
            116,
            117,
            118,
            119,
            121,
            122,
            145,
            147,
            151,
            152,
            168,
            172,
            173,
            180,
            181,
            192
          ],
          "provenance": "Advances in Radiation Oncology (2020) 5, 1280-1285\n\nScientiﬁc Article\nArtiﬁcial Intelligence Research: The Utility and\nDesign of a Relational Database System\n\nwww.advancesradonc.org\n\nThomas J. Dilling, MD*\n\nDepartment of Radiation Oncology, Mofﬁtt Cancer Center\n\nReceived 13 March 2020; revised 13 April 2020; accepted 11 June 2020\n\nAbstract\nAlthough many researchers talk about a “patient database,” they typically are not referring to a database at all, but instead to a spreadsheet of\ncurated facts about a cohort of patients.This article describes relational database systems and how they differ from spreadsheets.At their core,\nspreadsheets are only capable of describing one-to-one (1:1) relationships.However, this article demonstrates that clinical medical data\nencapsulate numerous one-to-many relationships.Consequently, spreadsheets are very inefﬁcient relative to relational database systems,\nwhich gracefully manage such data.Databases provide other advantages, in that the data ﬁelds are “typed” (that is, they contain speciﬁc\nkinds of data).This prevents users from entering spurious data during data import.Because each record contains a “key,” it becomes\nimpossible to add duplicate information (ie, add the same patient twice).Databases store data in very efﬁcient ways, minimizing space and\nmemory requirements on the host system.Likewise, databases can be queried or manipulated using a highly complex language called\nSQL.Consequently, it becomes trivial to cull large amounts of data from a vast number of data ﬁelds on very precise subsets of patients.Databases can be quite large (terabytes or more in size), yet still are highly efﬁcient to query.Consequently, with the explosion of data\navailable in electronic health records and other data sources, databases become increasingly important to contain or order these data.Ultimately, this will enable the clinical researcher to perform artiﬁcial intelligence analyses across vast amounts of clinical data in a way\nheretofore impossible.This article provides initial guidance in terms of creating a relational database system.(cid:1) 2020 Published by Elsevier Inc. on behalf of American Society for Radiation Oncology.This is an open access article under the CC BY-NC-\nND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).Introduction\n\nThis issue of Advances in Radiation Oncology presents\na series of articles around applications of artiﬁcial intel-\nligence (AI) in our ﬁeld.One of the potential beneﬁts of\nAI is that it can pore through large amounts of data to\ndiscover patterns not evident to clinicians.However, this\nvast volume of data cannot be accommodated within a\nsingle spreadsheet (which is how most clinical researchers\n\nResearch data are not available at this time. Sources of support: none.Disclosures: Dr Dilling reports personal fees and nonﬁnancial sup-\nport from NCCN, personal fees from Varian, personal fees and nonﬁ-\nnancial support from Harborside Press, nonﬁnancial support from Astra\nZeneca, all outside the submitted work.* Corresponding author: Thomas J. Dilling, MD; E-mail: Thomas.Dilling@mofﬁtt.org. work when conducting standard multivariable analyses).In fact, many researchers erroneously describe spread-\nsheets as databases.This article will demonstrate both\nwhat a relational database system is and how it is superior\nto a spreadsheet.It will also discuss considerations when\nimplementing a relational database system (RDBS) for\nyour own research purposes, using an actual lung cancer\nradiation therapy database as an example.I have also\nprovided some excellent Wikipedia references\nthat\ncontain abundant additional\ninformation, beyond what\ncan be encapsulated in a single article.(These, in turn,\nreference computer science literature for the very intrepid\nreader, but such references might extend beyond the level\nof understanding of all but the most technically inclined.)One might question why a database system is neces-\nsary for AI research.This article will demonstrate that a\ndatabase enables creation of a multidimensional structure\n\nhttps://doi.org/10.1016/j.adro.2020.06.027\n2452-1094/(cid:1) 2020 Published by Elsevier Inc. on behalf of American Society for Radiation Oncology.This is an open access article under the CC BY-\nNC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1281\n\nto cleanly and accurately contain these data.To perform\nAI analysis requires efﬁcient storage of hundreds or\nthousands of data points on a single patient or even on a\nsingle course of radiation therapy.There is a famous\nthe “data science hierarchy of needs”\nillustration of\n(Fig 1).To perform an AI analysis, one must ﬁrst create\nan RDBS to serve as the storage mechanism.This crea-\ntion of a system to store structured data entails a major\npart of the bottom row of the pyramid.To create a data-\nbase,\nthe reader down the path toward\nconducting AI research at their own institution.then, will set\n\nOrigin of Relational Databases\n\nThe concept of a RDBS was ﬁrst described in a sem-\ninal article in 1970.1 The theoretic construct was that all\ndata could be deﬁned or represented as a series of re-\nlations with or to other data.The article was quantitative\nin that it used relational algebra and tuple relational cal-\nculus to prove its points.2 IBM used this theoretic\nframework to design what became the initial SQL (pro-\nnounced “see-quell” or “ess-cue-ell”) language, which\nthey used to manipulate and retrieve data from IBM’s\noriginal RDBS.3 Since that time, the American National\nStandards Institute and the International Standards Orga-\nnization have deemed SQL to be the standard language in\nrelational database communication.2 Today, there are a\nwide variety of commercial and open-source relational\ndatabase systems available for use.These vary in their\nfeatures and relative strengths or weaknesses, but,\nfundamentally,\nthey all operate using the principles\ndeﬁned in the Codd article.1 The SQL language is well\ndeﬁned and is used to write code to query (or update) the\ndata within an RDBS.Fundamental Disadvantage of Spreadsheets\n\nSpreadsheets are designed to incorporate and analyze\none-to-one (1:1) relationships (Fig 2a).Each patient has a\nsingle birth date and a single death date.However, medical\nrecords are rife with “one-to-many” relationships (Fig 2b).A patient might receive multiple different courses of radi-\nation therapy treatment, as in the example provided, or\nmight have multiple chemotherapy administrations.To\naccommodate these data, a spreadsheet quickly balloons in\nsize (Fig 2c).Not only is this inefﬁcient (duplication of\ndata), but it also makes maintenance of the spreadsheet\nextremely cumbersome and prone to error.For instance, in\nthis example, when patient “12345” passes away, the\n“DeathDate” needs to be updated in 5 rows of the spread-\nsheet (because she had 2 courses of radiation therapy and 4\ncycles of chemotherapy).It is not difﬁcult to imagine that a\nresearcher could neglect to update the “DeathDate” in each\nplace, introducing errors.To use a data\nscience term, the dimensionality of the data balloons.But,\nto reiterate the point, spreadsheets are only designed to\nencapsulate 1:1 relationships (2-dimensional data).But\npatient data are multidimensional.They can do so because a database is created of numerous\ndifferent tables, which are explicitly linked (Fig 3).The data science hierarchy of needs.1282\n\nT.J. Dilling\n\nAdvances in Radiation Oncology: NovembereDecember 2020\n\nFigure 2\n(a) Spreadsheets are useful where there is a one-to-one correspondence of data.For instance, each unique medical record\nnumber (MRN) represents a single patient, with a single birth/death date and a single ﬁrst and last name.(b) Spreadsheets “break down”\nwhen describing 1-to-many correspondences.In this example, 2 patients have a total of 5 courses of radiation therapy treatment between\nthem.Furthermore, as additional traits and factors are added to the spreadsheet, it becomes impossible to\nfollow, as one patient will require untold numbers of rows to capture all relevant data concepts.Stated another way, the data are\nmultidimensional.Maintenance and updating of ﬁelds become error-prone (see text).Relationships between the\ntables are deﬁned when creating the database tables or\nﬁelds.In the “demographics” table, medical\nrecord\nnumber, “MRN,” is the key.For the “TreatmentCourse”\nand “Chemotherapy” tables,\nthe keys are “Treatment-\nCourse” and “ChemotherapyID,” respectively.This, in\nis linked to 4 cycles of chemotherapy in the\nturn,\n“Chemotherapy” table, each of which is uniquely identi-\nﬁed in that table, in turn.When comparing Fig 3 (a database) to Fig 2c (a\nspreadsheet), note that Fig 3 contains the same informa-\ntion as Fig 2c without the addition of repetitious infor-\nmation (colored red in Fig 2c).Alternately,\nin a\nspreadsheet, the researcher could manually aggregate and\nsummarize the chemotherapy delivered into a single cell\nin a single row of the spreadsheet (ie, “ﬂatten” the data, to\nuse a data science term), but then some data would be\nlost.If one\nsummarizes the data as “4 cycles of Adriamycin/Cytoxan:\n<date1>, <date2>, <date3>, <date4>,” the dates and\nthe chemotherapy occupy the same cell and the data are\nretained but are no longer discrete; one loses the ability to\nﬁlter the spreadsheet by chemotherapy kind or by date.Conversely, a SQL database cleanly encapsulates these\nmultidimensional data (Fig 3).Each table is 2-dimensional\n\nin structure.But because it can contain multiple rows of\ndata on 1 patient (chemotherapy administrations, to follow\nthe same example), a multidimensional structure is created,\nas 4 chemotherapy cycles link to one of 2 courses of radi-\nation therapy (“TreatmentCourse” table) for 1 patient\n(“Demographics” table).It is beyond the scope of this article to\nteach SQL coding.However, many excellent online re-\nsources are available for the interested reader.Functionally,\nSQL allows one to search for any number of variables or\ncombinations of variables across any number of tables,\nsimultaneously.This can be extremely powerful and useful,\nboth for retrieving and for manipulating and updating data.Queries can be saved for reuse or modiﬁcation later.As\nstated above, these queries typically produce output in\nfractions of a second, even across vast pools of data.For\nthis particular study,\nthey must have previously\nreceived lung SBRT, have nonmetastatic disease, no\nevidence of recurrence, be alive (obviously), be at\nleast 2 years out from the end of the prior SBRT\ntreatment, and must have been seen in follow-up\nwithin the past 1.5 years.By constructing an\nappropriate SQL query, 135 patients were found (out\nof more than 4600 in the database) to pass along to\nthe PI for closer inspection.Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1285\n\nDatabase Implementation\n\nDatabases may, and often do, contain many thousands\nof tables and millions of rows of data.In fact, some systems allow even\nsingle tables to contain terabytes or even petabytes of\ndata.5 Consequently, there are numerous systems avail-\nable to accommodate any researcher’s needs.There is no single solution for creating a data re-\nresearchers across all\ntrue for\npository that holds\ninstitutions.The solution can vary, depending on the re-\nsources at your institution and the level of access the IT\nDepartment has into the underlying patient data source\nsystems (often deﬁned in the institutional contracts signed\nwith the individual vendors).Because my institution could not support an\nimplementation of an Oracle, MariaDB was an excellent\nalternate option.More\nspreadsheets\nrecently, I have gained access to data from our data\nwarehouse and so have created numerous additional ta-\nbles to store the information.At present, the database\ncontains more than 3 million rows of data on approxi-\nmately 4800 patients, spread across more than 170 tables.ETL comprises the majority of the next 2\nlayers of the pyramid and is the topic of another article.References\n\n1. Codd ER. A relational model of data for large shared data banks.Wikipedia. Extract, Transform, Load. Available at: https://en.",
          "time": 87.89741706848145,
          "input_token_size": 5725,
          "output_token_size": 8,
          "original_provenance_id": 0
        }
      ],
      "metadata": {
        "question_id": "database_design_article_d869f06e",
        "created_at": 1750197222.7925806,
        "processing_time": 89.49763417243958,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs",
        "reason": "shorter_provenance",
        "sentence_count": 194,
        "provenance_count": 1,
        "alternatives": [
          {
            "source": "test_outputs",
            "sentence_count": 194,
            "provenance_count": 1,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.697129"
      }
    }
  },
  {
    "e317842b": {
      "question": "How does the article define the difference between a spreadsheet and a relational database system?",
      "answer": "Spreadsheets are only capable of describing one-to-one (1:1) relationships, while relational database systems gracefully manage one-to-many relationships.",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96
          ],
          "provenance_ids": [
            0,
            2,
            46,
            52
          ],
          "provenance": "Advances in Radiation Oncology (2020) 5, 1280-1285\n\nScientiﬁc Article\nArtiﬁcial Intelligence Research: The Utility and\nDesign of a Relational Database System\n\nwww.advancesradonc.org\n\nThomas J. Dilling, MD*\n\nDepartment of Radiation Oncology, Mofﬁtt Cancer Center\n\nReceived 13 March 2020; revised 13 April 2020; accepted 11 June 2020\n\nAbstract\nAlthough many researchers talk about a “patient database,” they typically are not referring to a database at all, but instead to a spreadsheet of\ncurated facts about a cohort of patients.At their core,\nspreadsheets are only capable of describing one-to-one (1:1) relationships.For instance, in\nthis example, when patient “12345” passes away, the\n“DeathDate” needs to be updated in 5 rows of the spread-\nsheet (because she had 2 courses of radiation therapy and 4\ncycles of chemotherapy).Fundamental Advantage of Relational\nDatabases\n\nRDBS gracefully manage one-to-many relationships.",
          "time": 48.55340218544006,
          "input_token_size": 6009,
          "output_token_size": 108,
          "original_provenance_id": 0
        }
      ],
      "metadata": {
        "question_id": "database_design_article_e317842b",
        "created_at": 1749627022.299539,
        "processing_time": 52.47388291358948,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs_prev",
        "reason": "shorter_provenance",
        "sentence_count": 97,
        "provenance_count": 1,
        "alternatives": [
          {
            "source": "test_outputs_prev",
            "sentence_count": 97,
            "provenance_count": 1,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.698495"
      }
    }
  },
  {
    "eb094283": {
      "question": "Who should researchers collaborate with to implement a relational database system?",
      "answer": "IT Department at your institution",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            148,
            149,
            150
          ],
          "provenance_ids": [
            150
          ],
          "provenance": "Wikipedia\nprovides an outstanding overview of the topic.5\n\nTo implement a database system, it is ﬁrst necessary to\nhave a discussion with the IT Department at your institu-\ntion.",
          "time": 3.883507490158081,
          "input_token_size": 5532,
          "output_token_size": 35,
          "original_provenance_id": 0
        }
      ],
      "metadata": {
        "question_id": "database_design_article_eb094283",
        "created_at": 1750197261.8501222,
        "processing_time": 7.921039342880249,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs",
        "reason": "shorter_provenance",
        "sentence_count": 3,
        "provenance_count": 1,
        "alternatives": [
          {
            "source": "test_outputs",
            "sentence_count": 3,
            "provenance_count": 1,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.698495"
      }
    }
  },
  {
    "ec8a59a1": {
      "question": "What does the article suggest about data security in relational database systems compared to spreadsheets?",
      "answer": "Relational database systems are much more secure than spreadsheets. Databases allow for restricted access to specific tables and subsets of patients, with options for read and write access, while spreadsheets cannot restrict data access by user and only allow for limited write access.",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            138,
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            165,
            166,
            167,
            168,
            169,
            170,
            171,
            172,
            173,
            174,
            175,
            176,
            177,
            178,
            179,
            180,
            181,
            182,
            183,
            184,
            185,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            193
          ],
          "provenance_ids": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            115,
            165,
            183,
            184,
            185,
            193
          ],
          "provenance": "Advances in Radiation Oncology (2020) 5, 1280-1285\n\nScientiﬁc Article\nArtiﬁcial Intelligence Research: The Utility and\nDesign of a Relational Database System\n\nwww.advancesradonc.org\n\nThomas J. Dilling, MD*\n\nDepartment of Radiation Oncology, Mofﬁtt Cancer Center\n\nReceived 13 March 2020; revised 13 April 2020; accepted 11 June 2020\n\nAbstract\nAlthough many researchers talk about a “patient database,” they typically are not referring to a database at all, but instead to a spreadsheet of\ncurated facts about a cohort of patients.This article describes relational database systems and how they differ from spreadsheets.At their core,\nspreadsheets are only capable of describing one-to-one (1:1) relationships.However, this article demonstrates that clinical medical data\nencapsulate numerous one-to-many relationships.Consequently, spreadsheets are very inefﬁcient relative to relational database systems,\nwhich gracefully manage such data.Databases provide other advantages, in that the data ﬁelds are “typed” (that is, they contain speciﬁc\nkinds of data).This prevents users from entering spurious data during data import.Because each record contains a “key,” it becomes\nimpossible to add duplicate information (ie, add the same patient twice).Databases store data in very efﬁcient ways, minimizing space and\nmemory requirements on the host system.Likewise, databases can be queried or manipulated using a highly complex language called\nSQL.Consequently, it becomes trivial to cull large amounts of data from a vast number of data ﬁelds on very precise subsets of patients.Databases can be quite large (terabytes or more in size), yet still are highly efﬁcient to query.Consequently, with the explosion of data\navailable in electronic health records and other data sources, databases become increasingly important to contain or order these data.Ultimately, this will enable the clinical researcher to perform artiﬁcial intelligence analyses across vast amounts of clinical data in a way\nheretofore impossible.This article provides initial guidance in terms of creating a relational database system.(cid:1) 2020 Published by Elsevier Inc. on behalf of American Society for Radiation Oncology.This is an open access article under the CC BY-NC-\nND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).Introduction\n\nThis issue of Advances in Radiation Oncology presents\na series of articles around applications of artiﬁcial intel-\nligence (AI) in our ﬁeld.One of the potential beneﬁts of\nAI is that it can pore through large amounts of data to\ndiscover patterns not evident to clinicians.However, this\nvast volume of data cannot be accommodated within a\nsingle spreadsheet (which is how most clinical researchers\n\nResearch data are not available at this time. Sources of support: none.Disclosures: Dr Dilling reports personal fees and nonﬁnancial sup-\nport from NCCN, personal fees from Varian, personal fees and nonﬁ-\nnancial support from Harborside Press, nonﬁnancial support from Astra\nZeneca, all outside the submitted work.* Corresponding author: Thomas J. Dilling, MD; E-mail: Thomas.Dilling@mofﬁtt.org. work when conducting standard multivariable analyses).In fact, many researchers erroneously describe spread-\nsheets as databases.This article will demonstrate both\nwhat a relational database system is and how it is superior\nto a spreadsheet.It will also discuss considerations when\nimplementing a relational database system (RDBS) for\nyour own research purposes, using an actual lung cancer\nradiation therapy database as an example.I have also\nprovided some excellent Wikipedia references\nthat\ncontain abundant additional\ninformation, beyond what\ncan be encapsulated in a single article.(These, in turn,\nreference computer science literature for the very intrepid\nreader, but such references might extend beyond the level\nof understanding of all but the most technically inclined.)One might question why a database system is neces-\nsary for AI research.This article will demonstrate that a\ndatabase enables creation of a multidimensional structure\n\nhttps://doi.org/10.1016/j.adro.2020.06.027\n2452-1094/(cid:1) 2020 Published by Elsevier Inc. on behalf of American Society for Radiation Oncology.This is an open access article under the CC BY-\nNC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1281\n\nto cleanly and accurately contain these data.To perform\nAI analysis requires efﬁcient storage of hundreds or\nthousands of data points on a single patient or even on a\nsingle course of radiation therapy.There is a famous\nthe “data science hierarchy of needs”\nillustration of\n(Fig 1).To perform an AI analysis, one must ﬁrst create\nan RDBS to serve as the storage mechanism.This crea-\ntion of a system to store structured data entails a major\npart of the bottom row of the pyramid.To create a data-\nbase,\nthe reader down the path toward\nconducting AI research at their own institution.then, will set\n\nOrigin of Relational Databases\n\nThe concept of a RDBS was ﬁrst described in a sem-\ninal article in 1970.1 The theoretic construct was that all\ndata could be deﬁned or represented as a series of re-\nlations with or to other data.The article was quantitative\nin that it used relational algebra and tuple relational cal-\nculus to prove its points.2 IBM used this theoretic\nframework to design what became the initial SQL (pro-\nnounced “see-quell” or “ess-cue-ell”) language, which\nthey used to manipulate and retrieve data from IBM’s\noriginal RDBS.3 Since that time, the American National\nStandards Institute and the International Standards Orga-\nnization have deemed SQL to be the standard language in\nrelational database communication.2 Today, there are a\nwide variety of commercial and open-source relational\ndatabase systems available for use.These vary in their\nfeatures and relative strengths or weaknesses, but,\nfundamentally,\nthey all operate using the principles\ndeﬁned in the Codd article.1 The SQL language is well\ndeﬁned and is used to write code to query (or update) the\ndata within an RDBS.Fundamental Disadvantage of Spreadsheets\n\nSpreadsheets are designed to incorporate and analyze\none-to-one (1:1) relationships (Fig 2a).Each patient has a\nsingle birth date and a single death date.However, medical\nrecords are rife with “one-to-many” relationships (Fig 2b).A patient might receive multiple different courses of radi-\nation therapy treatment, as in the example provided, or\nmight have multiple chemotherapy administrations.To\naccommodate these data, a spreadsheet quickly balloons in\nsize (Fig 2c).Not only is this inefﬁcient (duplication of\ndata), but it also makes maintenance of the spreadsheet\nextremely cumbersome and prone to error.For instance, in\nthis example, when patient “12345” passes away, the\n“DeathDate” needs to be updated in 5 rows of the spread-\nsheet (because she had 2 courses of radiation therapy and 4\ncycles of chemotherapy).It is not difﬁcult to imagine that a\nresearcher could neglect to update the “DeathDate” in each\nplace, introducing errors.To further expound upon the\nissue, imagine a patient who takes numerous medications or\nhas variable numbers of comorbid illnesses;\nthe rows\nrequired to encapsulate 1 patient explode.To use a data\nscience term, the dimensionality of the data balloons.But,\nto reiterate the point, spreadsheets are only designed to\nencapsulate 1:1 relationships (2-dimensional data).But\npatient data are multidimensional.Fundamental Advantage of Relational\nDatabases\n\nRDBS gracefully manage one-to-many relationships.They can do so because a database is created of numerous\ndifferent tables, which are explicitly linked (Fig 3).Every\n\nFigure 1\nAbbreviation: AI Z artiﬁcial intelligence.The data science hierarchy of needs.Used with permission of Monica Rogati (aipyramid.com). For details, see text.1282\n\nT.J. Dilling\n\nAdvances in Radiation Oncology: NovembereDecember 2020\n\nFigure 2\n(a) Spreadsheets are useful where there is a one-to-one correspondence of data.For instance, each unique medical record\nnumber (MRN) represents a single patient, with a single birth/death date and a single ﬁrst and last name.(b) Spreadsheets “break down”\nwhen describing 1-to-many correspondences.In this example, 2 patients have a total of 5 courses of radiation therapy treatment between\nthem.(c) To accommodate all the data in our simple example, a spreadsheet needs to store redundant data (colored in red).The data\nstorage requirements quickly balloon.Furthermore, as additional traits and factors are added to the spreadsheet, it becomes impossible to\nfollow, as one patient will require untold numbers of rows to capture all relevant data concepts.Stated another way, the data are\nmultidimensional.Maintenance and updating of ﬁelds become error-prone (see text).Abbreviations: DOB Z date of birth; Lname Z\nlast name; Fname Z ﬁrst name; LUL Z upper lobe; MRN Z medical record number; RLL, right lower lobe; RUL Z right upper lobe;\nSBRT Z stereotactic body radiotherapy.table must also contain a key, which is a unique, required\nidentiﬁer for each row of data.Relationships between the\ntables are deﬁned when creating the database tables or\nﬁelds.In the “demographics” table, medical\nrecord\nnumber, “MRN,” is the key.For the “TreatmentCourse”\nand “Chemotherapy” tables,\nthe keys are “Treatment-\nCourse” and “ChemotherapyID,” respectively.Note that\n“TreatmentCourse 1” in the “TreatmentCourse” table\npertains to breast radiation therapy treatment.This, in\nis linked to 4 cycles of chemotherapy in the\nturn,\n“Chemotherapy” table, each of which is uniquely identi-\nﬁed in that table, in turn.When comparing Fig 3 (a database) to Fig 2c (a\nspreadsheet), note that Fig 3 contains the same informa-\ntion as Fig 2c without the addition of repetitious infor-\nmation (colored red in Fig 2c).Alternately,\nin a\nspreadsheet, the researcher could manually aggregate and\nsummarize the chemotherapy delivered into a single cell\nin a single row of the spreadsheet (ie, “ﬂatten” the data, to\nuse a data science term), but then some data would be\nlost.Using the chemotherapy administrations as an\nexample, if one were to “ﬂatten” the data down to a single\nstating “4 cycles of Adriamycin/\nspreadsheet cell\nCytoxan,” one loses the dates of administration.If one\nsummarizes the data as “4 cycles of Adriamycin/Cytoxan:\n<date1>, <date2>, <date3>, <date4>,” the dates and\nthe chemotherapy occupy the same cell and the data are\nretained but are no longer discrete; one loses the ability to\nﬁlter the spreadsheet by chemotherapy kind or by date.Conversely, a SQL database cleanly encapsulates these\nmultidimensional data (Fig 3).Each table is 2-dimensional\n\nin structure.But because it can contain multiple rows of\ndata on 1 patient (chemotherapy administrations, to follow\nthe same example), a multidimensional structure is created,\nas 4 chemotherapy cycles link to one of 2 courses of radi-\nation therapy (“TreatmentCourse” table) for 1 patient\n(“Demographics” table).Now, imagine a clinical database\nwith millions of rows of data spread across hundreds of\ntables, as in the real-life example described below.Clearly,\na spreadsheet would not be adequate.Additional Advantages of Relational Databases\n\n1.Each row of data in a table has a unique identiﬁer (a\nkey).Consequently, one cannot accidentally add a\nrow of data into a database table twice.2. Each ﬁeld in the database is speciﬁcally deﬁned as to\nwhat it contains (Fig 4).Consequently, if data are\nimported from some external source, the data types\nmust correspond or the import will fail.For example,\nif an entry contained an integer where a date was\nindicated, the database would signal that the variable\ncontained erroneous data.This feature helps maintain\nconsistency of data and minimize data errors. 3.Not only must the data types correspond, but the\ndata lengths must be observed.If the database\ndesign states that a ﬁeld is a decimal with 3 places to\nthe right of the decimal place, then a fourth decimal\nplace would be truncated at import.Alternately, the\ndatabase could declare an error, which might also\nimply that the ﬁeld contains erroneous data.Advances in Radiation Oncology: NovembereDecember 2020\n\nAI: Database utility and design\n\n1283\n\n4.A key from one table can be linked “backward” to a\nkey from another table (termed a “foreign key”).As\nan example (Fig 3), the database can be designed\nsuch that the MRN from “TreatmentCourse” must\nto an MRN already contained within the\nrefer\n“Demographics” table.If one tried to import data\ninto “TreatmentCourse” and it used an MRN not\nlisted in “Demographics,” the import would fail.Such a situation might imply, for instance, that the\nMRN was incorrect in the external data source (or in\nthe database).Or perhaps it relates to a patient who\nreceived prostate radiation therapy (but you have a\nbreast cancer database). 5.Foreign key relationships also work in the opposite\ndirection: If one realizes that a patient is represented\nin the database who should not be, one can delete\nthe patient from the “Demographics” table and the\ndatabase will delete all data about that patient from\nall the other data tables automatically.However, one\ncan query across or manipulate many gigabytes of data\nin fractions of a second in many RDBS, as the data\nstores are highly optimized and efﬁcient from both a\ncomputational and memory utilization perspective.7. RDBS are much more secure than spreadsheets.An\ninstitution’s IT team might allow one to access some\ntables within an institution’s data warehouse, but not\nothers.One’s access could be restricted to deﬁned\nsubsets of patients.One might have “read” access to\nthese data, but not “write” access (or “write” access to\nonly some subset of ﬁelds).Databases might likewise\nbe set up such that only users from speciﬁc IP ad-\ndresses or computers may access them.The login\nsystems set up by IT departments for these purposes\ntypically use state of the art encryption algorithms, 2-\nfactor authentication, and the like.In contrast, an\nExcel spreadsheet can be “locked” such that only\nsome ﬁelds are editable.But it is not possible to\nrestrict data access by user.Furthermore, this re-\nstriction is to “write” access only, not to “read” ac-\ncess.It is true that one can “hide” columns in a\nspreadsheet and then lock it, to prevent a given user\nfrom viewing them, but the spreadsheet maintainer\nmust do this manually before distributing the\nspreadsheet (time-consuming and prone to error).However, many excellent online re-\nsources are available for the interested reader.Basic demographic information and radiation therapy\nprescriptions, dates of treatment, dose delivered, tumor\nstage, and the like, were exported, using custom software.Available at: https://en.wikipedia.org/wiki/SQL.Accessed February 14, 2020. 3. Wikipedia.IBM System R. Available at: https://en.wikipedia.org/\n\nwiki/IBM_System_R.wikipedia.org/wiki/Extract,_transform,_load. Accessed April 13,\n2020.",
          "time": 188.3399167060852,
          "input_token_size": 5729,
          "output_token_size": 113,
          "original_provenance_id": 0
        }
      ],
      "metadata": {
        "question_id": "database_design_article_ec8a59a1",
        "created_at": 1749869569.7053735,
        "processing_time": 190.63631653785706,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs_prev1",
        "reason": "shorter_provenance",
        "sentence_count": 194,
        "provenance_count": 1,
        "alternatives": [
          {
            "source": "test_outputs_prev1",
            "sentence_count": 194,
            "provenance_count": 1,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.699498"
      }
    }
  },
  {
    "edcd7678": {
      "question": "Which system is used as an example for creating a relational database in the article?",
      "answer": "Lung cancer radiation therapy database",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            24,
            25,
            26
          ],
          "provenance_ids": [
            25
          ],
          "provenance": "It will also discuss considerations when\nimplementing a relational database system (RDBS) for\nyour own research purposes, using an actual lung cancer\nradiation therapy database as an example.",
          "time": 6.215090036392212,
          "input_token_size": 6464,
          "output_token_size": 33,
          "original_provenance_id": 0
        }
      ],
      "metadata": {
        "question_id": "database_design_article_edcd7678",
        "created_at": 1750197190.052177,
        "processing_time": 10.452869892120361,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs",
        "reason": "shorter_provenance",
        "sentence_count": 3,
        "provenance_count": 1,
        "alternatives": [
          {
            "source": "test_outputs",
            "sentence_count": 3,
            "provenance_count": 1,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.700539"
      }
    }
  },
  {
    "f5a6c5d1": {
      "question": "What is emphasized as inadequate for handling complex medical data in the 2020 article?",
      "answer": "Spreadsheets are emphasized as inadequate for handling complex medical data.",
      "provenance": [
        {
          "provenance_id": 0,
          "input_sentence_ids": [
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96
          ],
          "provenance_ids": [
            59
          ],
          "provenance": "(b) Spreadsheets “break down”\nwhen describing 1-to-many correspondences.",
          "time": 10.98032832145691,
          "input_token_size": 5835,
          "output_token_size": 70,
          "original_provenance_id": 0
        }
      ],
      "metadata": {
        "question_id": "database_design_article_f5a6c5d1",
        "created_at": 1750197176.767527,
        "processing_time": 15.008067607879639,
        "processing_complete": true,
        "max_provenances": 5
      },
      "source_info": {
        "selected_from": "test_outputs",
        "reason": "shorter_provenance",
        "sentence_count": 49,
        "provenance_count": 1,
        "alternatives": [
          {
            "source": "test_outputs",
            "sentence_count": 49,
            "provenance_count": 1,
            "has_answer": true
          }
        ],
        "selection_timestamp": "2025-06-17T16:48:52.700539"
      }
    }
  }
]
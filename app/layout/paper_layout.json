{
  "sentences": [
    {
      "sentence_id": 0,
      "text": "4\n2\n0\n2\n \nt\nc\nO\n \n7\n \n \n]\nI\n\nA\n. s\nc\n[\n \n \n1\nv\n3\n5\n7\n4\n0\n.",
      "layout_matches": [],
      "page_spans": [],
      "primary_page": 1,
      "bounding_boxes": []
    },
    {
      "sentence_id": 1,
      "text": "0\n1\n4\n2\n:\nv\ni\nX\nr\na\n\nIMPROVER: AGENT-BASED AUTOMATED\nPROOF OPTIMIZATION\n\nRiyaz Ahuja\nCarnegie Mellon University\n\nJeremy Avigad Prasad Tetali Sean Welleck\n\nABSTRACT\n\nLarge language models (LLMs) have been used to generate formal proofs of math-\nematical theorems in proofs assistants such as Lean.",
      "layout_matches": [
        {
          "text": "Large language models (LLMs) have been used to generate formal proofs of math-\nematical theorems in proofs assistants such as Lean. However, we often want to\noptimize a formal proof with respect to various criteria, depending on its down-\nstream use. For example, we may want a proof to adhere to a certain style, or to be\nreadable, concise, or modularly structured. Having suitably optimized proofs is\nalso important for learning tasks, especially since human-written proofs may not\noptimal for that purpose. To this end, we study a new problem of automated proof\noptimization: rewriting a proof so that it is correct and optimizes for an arbitrary\ncriterion, such as length or readability. As a ﬁrst method for automated proof opti-\nmization, we present ImProver, a large-language-model agent that rewrites proofs\nto optimize arbitrary user-deﬁned metrics in Lean. We ﬁnd that naively applying\nLLMs to proof optimization falls short, and we incorporate various improvements\ninto ImProver, such as the use of symbolic Lean context in a novel Chain-of-\nStates technique, as well as error-correction and retrieval. We test ImProver on\nrewriting real-world undergraduate, competition, and research-level mathematics\ntheorems, ﬁnding that ImProver is capable of rewriting proofs so that they are\nsubstantially shorter, more modular, and more readable.",
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "width": 326.1175505972419,
          "height": 185.2821399999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.425531914893617,
          "match_type": "word_overlap",
          "common_words_count": 25
        }
      ],
      "page_spans": [
        1
      ],
      "primary_page": 1,
      "bounding_boxes": [
        {
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "confidence": 0.425531914893617,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 2,
      "text": "However, we often want to\noptimize a formal proof with respect to various criteria, depending on its down-\nstream use.",
      "layout_matches": [
        {
          "text": "optimize a formal proof with respect to various criteria, depending on its down-",
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 536.86854448,
          "x1": 469.99729059724183,
          "y1": 546.8311844799999,
          "width": 326.1175505972419,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.6129310344827587,
          "match_type": "substring_match"
        },
        {
          "text": "To this end, we study a new problem of automated proof optimization: rewriting a proof so that it is\ncorrect and optimizes a criterion such as length or readability. We ﬁnd that naively applying LLMs\nto proof optimization falls short, often resulting in incorrect or poorly optimized proofs. We develop\nvarious improvements that can be applied on top of a black-box language model, including Chain-\nof-States prompting–an analogy to chain-of-thought prompting (Wei et al., 2022) that shows inter-\nmediate proof states–along with error-correction and retrieval. We incorporate these into ImProver:\na large language model agent that rewrites proofs to optimize arbitrary user-deﬁned metrics in Lean.",
          "page": 1,
          "x0": 107.639684,
          "y0": 59.98934448000002,
          "x1": 505.89002930702276,
          "y1": 135.82117352,
          "width": 398.25034530702277,
          "height": 75.83182903999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.36000000000000004,
          "match_type": "word_overlap",
          "common_words_count": 9
        }
      ],
      "page_spans": [
        1
      ],
      "primary_page": 1,
      "bounding_boxes": [
        {
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 536.86854448,
          "x1": 469.99729059724183,
          "y1": 546.8311844799999,
          "confidence": 0.6129310344827587,
          "match_type": "substring_match"
        },
        {
          "page": 1,
          "x0": 107.639684,
          "y0": 59.98934448000002,
          "x1": 505.89002930702276,
          "y1": 135.82117352,
          "confidence": 0.36000000000000004,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 3,
      "text": "For example, we may want a proof to adhere to a certain style, or to be\nreadable, concise, or modularly structured.",
      "layout_matches": [
        {
          "text": "stream use. For example, we may want a proof to adhere to a certain style, or to be",
          "page": 1,
          "x0": 143.87973999999997,
          "y0": 525.94824448,
          "x1": 468.2231814752958,
          "y1": 535.9108844799999,
          "width": 324.34344147529583,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.49523809523809526,
          "match_type": "word_overlap",
          "common_words_count": 13
        }
      ],
      "page_spans": [
        1
      ],
      "primary_page": 1,
      "bounding_boxes": [
        {
          "page": 1,
          "x0": 143.87973999999997,
          "y0": 525.94824448,
          "x1": 468.2231814752958,
          "y1": 535.9108844799999,
          "confidence": 0.49523809523809526,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 4,
      "text": "Having suitably optimized proofs is\nalso important for learning tasks, especially since human-written proofs may not\noptimal for that purpose.",
      "layout_matches": [
        {
          "text": "also important for learning tasks, especially since human-written proofs may not",
          "page": 1,
          "x0": 143.87974,
          "y0": 503.98854448,
          "x1": 468.2494683758459,
          "y1": 513.9511844799999,
          "width": 324.36972837584585,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.5042553191489362,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        1
      ],
      "primary_page": 1,
      "bounding_boxes": [
        {
          "page": 1,
          "x0": 143.87974,
          "y0": 503.98854448,
          "x1": 468.2494683758459,
          "y1": 513.9511844799999,
          "confidence": 0.5042553191489362,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 5,
      "text": "To this end, we study a new problem of automated proof\noptimization: rewriting a proof so that it is correct and optimizes for an arbitrary\ncriterion, such as length or readability.",
      "layout_matches": [
        {
          "text": "To this end, we study a new problem of automated proof optimization: rewriting a proof so that it is\ncorrect and optimizes a criterion such as length or readability. We ﬁnd that naively applying LLMs\nto proof optimization falls short, often resulting in incorrect or poorly optimized proofs. We develop\nvarious improvements that can be applied on top of a black-box language model, including Chain-\nof-States prompting–an analogy to chain-of-thought prompting (Wei et al., 2022) that shows inter-\nmediate proof states–along with error-correction and retrieval. We incorporate these into ImProver:\na large language model agent that rewrites proofs to optimize arbitrary user-deﬁned metrics in Lean.",
          "page": 1,
          "x0": 107.639684,
          "y0": 59.98934448000002,
          "x1": 505.89002930702276,
          "y1": 135.82117352,
          "width": 398.25034530702277,
          "height": 75.83182903999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6967741935483871,
          "match_type": "word_overlap",
          "common_words_count": 27
        }
      ],
      "page_spans": [
        1
      ],
      "primary_page": 1,
      "bounding_boxes": [
        {
          "page": 1,
          "x0": 107.639684,
          "y0": 59.98934448000002,
          "x1": 505.89002930702276,
          "y1": 135.82117352,
          "confidence": 0.6967741935483871,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 6,
      "text": "As a ﬁrst method for automated proof opti-\nmization, we present ImProver, a large-language-model agent that rewrites proofs\nto optimize arbitrary user-deﬁned metrics in Lean.",
      "layout_matches": [
        {
          "text": "To this end, we study a new problem of automated proof optimization: rewriting a proof so that it is\ncorrect and optimizes a criterion such as length or readability. We ﬁnd that naively applying LLMs\nto proof optimization falls short, often resulting in incorrect or poorly optimized proofs. We develop\nvarious improvements that can be applied on top of a black-box language model, including Chain-\nof-States prompting–an analogy to chain-of-thought prompting (Wei et al., 2022) that shows inter-\nmediate proof states–along with error-correction and retrieval. We incorporate these into ImProver:\na large language model agent that rewrites proofs to optimize arbitrary user-deﬁned metrics in Lean.",
          "page": 1,
          "x0": 107.639684,
          "y0": 59.98934448000002,
          "x1": 505.89002930702276,
          "y1": 135.82117352,
          "width": 398.25034530702277,
          "height": 75.83182903999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.544,
          "match_type": "word_overlap",
          "common_words_count": 17
        }
      ],
      "page_spans": [
        1
      ],
      "primary_page": 1,
      "bounding_boxes": [
        {
          "page": 1,
          "x0": 107.639684,
          "y0": 59.98934448000002,
          "x1": 505.89002930702276,
          "y1": 135.82117352,
          "confidence": 0.544,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 7,
      "text": "We ﬁnd that naively applying\nLLMs to proof optimization falls short, and we incorporate various improvements\ninto ImProver, such as the use of symbolic Lean context in a novel Chain-of-\nStates technique, as well as error-correction and retrieval.",
      "layout_matches": [
        {
          "text": "To this end, we study a new problem of automated proof optimization: rewriting a proof so that it is\ncorrect and optimizes a criterion such as length or readability. We ﬁnd that naively applying LLMs\nto proof optimization falls short, often resulting in incorrect or poorly optimized proofs. We develop\nvarious improvements that can be applied on top of a black-box language model, including Chain-\nof-States prompting–an analogy to chain-of-thought prompting (Wei et al., 2022) that shows inter-\nmediate proof states–along with error-correction and retrieval. We incorporate these into ImProver:\na large language model agent that rewrites proofs to optimize arbitrary user-deﬁned metrics in Lean.",
          "page": 1,
          "x0": 107.639684,
          "y0": 59.98934448000002,
          "x1": 505.89002930702276,
          "y1": 135.82117352,
          "width": 398.25034530702277,
          "height": 75.83182903999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.5052631578947369,
          "match_type": "word_overlap",
          "common_words_count": 24
        }
      ],
      "page_spans": [
        1
      ],
      "primary_page": 1,
      "bounding_boxes": [
        {
          "page": 1,
          "x0": 107.639684,
          "y0": 59.98934448000002,
          "x1": 505.89002930702276,
          "y1": 135.82117352,
          "confidence": 0.5052631578947369,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 8,
      "text": "We test ImProver on\nrewriting real-world undergraduate, competition, and research-level mathematics\ntheorems, ﬁnding that ImProver is capable of rewriting proofs so that they are\nsubstantially shorter, more modular, and more readable.",
      "layout_matches": [
        {
          "text": "We test ImProver on rewriting real-world undergraduate theorems, competition problems, and\nresearch-level mathematics, ﬁnding that ImProver is capable of rewriting proofs so that they are\nsubstantially shorter, more readable, and more declarative in style.1",
          "page": 2,
          "x0": 107.52,
          "y0": 676.06804448,
          "x1": 504.1036773971082,
          "y1": 707.99078448,
          "width": 396.5836773971082,
          "height": 31.922739999999976,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6193548387096774,
          "match_type": "word_overlap",
          "common_words_count": 24
        }
      ],
      "page_spans": [
        2
      ],
      "primary_page": 2,
      "bounding_boxes": [
        {
          "page": 2,
          "x0": 107.52,
          "y0": 676.06804448,
          "x1": 504.1036773971082,
          "y1": 707.99078448,
          "confidence": 0.6193548387096774,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 9,
      "text": "1\n\nINTRODUCTION\n\nThe fundamental virtue of a mathematical proof is that it provides certainty: a deductive argument\nshows that the assumptions of a mathematical statement logically guarantee the conclusion.",
      "layout_matches": [
        {
          "text": "The fundamental virtue of a mathematical proof is that it provides certainty: a deductive argument\nshows that the assumptions of a mathematical statement logically guarantee the conclusion.\nIn\npractice, however, informal, natural-language proofs are prone to imprecision, ambiguity, and error.\nUsing a formal language such as Lean (Moura & Ullrich, 2021) removes ambiguity and precision\nand enables a proof assistant to verify correctness down to the primitives of a formal axiomatic\nsystem.",
          "page": 1,
          "x0": 107.63983999999999,
          "y0": 236.26904448000005,
          "x1": 505.8906872255797,
          "y1": 301.07138448000006,
          "width": 398.2508472255797,
          "height": 64.80234000000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.5517241379310346,
          "match_type": "word_overlap",
          "common_words_count": 20
        }
      ],
      "page_spans": [
        1
      ],
      "primary_page": 1,
      "bounding_boxes": [
        {
          "page": 1,
          "x0": 107.63983999999999,
          "y0": 236.26904448000005,
          "x1": 505.8906872255797,
          "y1": 301.07138448000006,
          "confidence": 0.5517241379310346,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 10,
      "text": "In\npractice, however, informal, natural-language proofs are prone to imprecision, ambiguity, and error.",
      "layout_matches": [
        {
          "text": "practice, however, informal, natural-language proofs are prone to imprecision, ambiguity, and error.",
          "page": 1,
          "x0": 107.99984000000003,
          "y0": 269.14864448000003,
          "x1": 505.8906872255797,
          "y1": 279.11128448000005,
          "width": 397.8908472255797,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.8724489795918368,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        1
      ],
      "primary_page": 1,
      "bounding_boxes": [
        {
          "page": 1,
          "x0": 107.99984000000003,
          "y0": 269.14864448000003,
          "x1": 505.8906872255797,
          "y1": 279.11128448000005,
          "confidence": 0.8724489795918368,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 11,
      "text": "Using a formal language such as Lean (Moura & Ullrich, 2021) removes ambiguity and precision\nand enables a proof assistant to verify correctness down to the primitives of a formal axiomatic\nsystem.",
      "layout_matches": [
        {
          "text": "and enables a proof assistant to verify correctness down to the primitives of a formal axiomatic",
          "page": 1,
          "x0": 107.99984,
          "y0": 247.30884448000003,
          "x1": 504.2222583394943,
          "y1": 257.27148448,
          "width": 396.2224183394943,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.44766839378238343,
          "match_type": "substring_match"
        },
        {
          "text": "Using a formal language such as Lean (Moura & Ullrich, 2021) removes ambiguity and precision",
          "page": 1,
          "x0": 107.99984,
          "y0": 258.22874448000005,
          "x1": 504.1814633377553,
          "y1": 268.19138448000007,
          "width": 396.1816233377553,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.41036269430051814,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        1
      ],
      "primary_page": 1,
      "bounding_boxes": [
        {
          "page": 1,
          "x0": 107.99984,
          "y0": 247.30884448000003,
          "x1": 504.2222583394943,
          "y1": 257.27148448,
          "confidence": 0.44766839378238343,
          "match_type": "substring_match"
        },
        {
          "page": 1,
          "x0": 107.99984,
          "y0": 258.22874448000005,
          "x1": 504.1814633377553,
          "y1": 268.19138448000007,
          "confidence": 0.41036269430051814,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 12,
      "text": "Formal proofs, however, can be hard to read and often suffer from low reusability or excessive detail.",
      "layout_matches": [
        {
          "text": "Formal proofs, however, can be hard to read and often suffer from low reusability or excessive detail.",
          "page": 1,
          "x0": 107.99984,
          "y0": 219.34874448000005,
          "x1": 505.7707390897186,
          "y1": 229.31138448000007,
          "width": 397.77089908971857,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.9,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        1
      ],
      "primary_page": 1,
      "bounding_boxes": [
        {
          "page": 1,
          "x0": 107.99984,
          "y0": 219.34874448000005,
          "x1": 505.7707390897186,
          "y1": 229.31138448000007,
          "confidence": 0.9,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 13,
      "text": "For example, formal proofs in Lean’s extensive mathematical library, Mathlib (mathlib Community,\n2020), are generally designed to be concise and very general, often at the expense of readability.",
      "layout_matches": [
        {
          "text": "2020), are generally designed to be concise and very general, often at the expense of readability.",
          "page": 1,
          "x0": 107.99984,
          "y0": 197.50894448000003,
          "x1": 506.0108944908015,
          "y1": 207.47158448000005,
          "width": 398.0110544908015,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.45721925133689845,
          "match_type": "substring_match"
        },
        {
          "text": "For example, formal proofs in Lean’s extensive mathematical library, Mathlib (mathlib Community,",
          "page": 1,
          "x0": 107.99983999999998,
          "y0": 208.42884448000004,
          "x1": 505.29085162962537,
          "y1": 218.39148448000006,
          "width": 397.29101162962536,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.4379679144385027,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        1
      ],
      "primary_page": 1,
      "bounding_boxes": [
        {
          "page": 1,
          "x0": 107.99984,
          "y0": 197.50894448000003,
          "x1": 506.0108944908015,
          "y1": 207.47158448000005,
          "confidence": 0.45721925133689845,
          "match_type": "substring_match"
        },
        {
          "page": 1,
          "x0": 107.99983999999998,
          "y0": 208.42884448000004,
          "x1": 505.29085162962537,
          "y1": 218.39148448000006,
          "confidence": 0.4379679144385027,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 14,
      "text": "Formal proofs in an expository text, in contrast, may include detailed calculations steps, making\nthem readable but verbose.",
      "layout_matches": [
        {
          "text": "Formal proofs in an expository text, in contrast, may include detailed calculations steps, making",
          "page": 1,
          "x0": 107.99983999999998,
          "y0": 186.46914448,
          "x1": 504.1813883785421,
          "y1": 196.43178448000003,
          "width": 396.1815483785422,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.6991735537190082,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        1
      ],
      "primary_page": 1,
      "bounding_boxes": [
        {
          "page": 1,
          "x0": 107.99983999999998,
          "y0": 186.46914448,
          "x1": 504.1813883785421,
          "y1": 196.43178448000003,
          "confidence": 0.6991735537190082,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 15,
      "text": "Machine learning systems trained on such proofs learn to mimic these\nvaried conventions (Hu et al., 2024), which may not be the optimal use of the limited supply of\nhuman-written proofs.",
      "layout_matches": [
        {
          "text": "varied conventions (Hu et al., 2024), which may not be the optimal use of the limited supply of",
          "page": 1,
          "x0": 107.75983999999997,
          "y0": 164.62894448,
          "x1": 504.07713509310844,
          "y1": 174.59158448000002,
          "width": 396.31729509310844,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.45,
          "match_type": "substring_match"
        },
        {
          "text": "Large language models (LLMs) have been used to generate formal proofs of math-\nematical theorems in proofs assistants such as Lean. However, we often want to\noptimize a formal proof with respect to various criteria, depending on its down-\nstream use. For example, we may want a proof to adhere to a certain style, or to be\nreadable, concise, or modularly structured. Having suitably optimized proofs is\nalso important for learning tasks, especially since human-written proofs may not\noptimal for that purpose. To this end, we study a new problem of automated proof\noptimization: rewriting a proof so that it is correct and optimizes for an arbitrary\ncriterion, such as length or readability. As a ﬁrst method for automated proof opti-\nmization, we present ImProver, a large-language-model agent that rewrites proofs\nto optimize arbitrary user-deﬁned metrics in Lean. We ﬁnd that naively applying\nLLMs to proof optimization falls short, and we incorporate various improvements\ninto ImProver, such as the use of symbolic Lean context in a novel Chain-of-\nStates technique, as well as error-correction and retrieval. We test ImProver on\nrewriting real-world undergraduate, competition, and research-level mathematics\ntheorems, ﬁnding that ImProver is capable of rewriting proofs so that they are\nsubstantially shorter, more modular, and more readable.",
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "width": 326.1175505972419,
          "height": 185.2821399999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.33548387096774196,
          "match_type": "word_overlap",
          "common_words_count": 13
        }
      ],
      "page_spans": [
        1
      ],
      "primary_page": 1,
      "bounding_boxes": [
        {
          "page": 1,
          "x0": 107.75983999999997,
          "y0": 164.62894448,
          "x1": 504.07713509310844,
          "y1": 174.59158448000002,
          "confidence": 0.45,
          "match_type": "substring_match"
        },
        {
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "confidence": 0.33548387096774196,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 16,
      "text": "As a result, we would like to be able to automatically refactor proofs to meet\na secondary objective such as length or readability.",
      "layout_matches": [
        {
          "text": "human-written proofs. As a result, we would like to be able to automatically refactor proofs to meet",
          "page": 1,
          "x0": 107.99984,
          "y0": 153.58914448000002,
          "x1": 504.1291051066311,
          "y1": 163.55178448000004,
          "width": 396.12926510663107,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.45217391304347826,
          "match_type": "word_overlap",
          "common_words_count": 13
        },
        {
          "text": "a secondary objective such as length or readability.",
          "page": 1,
          "x0": 107.99984,
          "y0": 142.66924448,
          "x1": 310.890528302351,
          "y1": 152.63188448000002,
          "width": 202.890688302351,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.36000000000000004,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        1
      ],
      "primary_page": 1,
      "bounding_boxes": [
        {
          "page": 1,
          "x0": 107.99984,
          "y0": 153.58914448000002,
          "x1": 504.1291051066311,
          "y1": 163.55178448000004,
          "confidence": 0.45217391304347826,
          "match_type": "word_overlap"
        },
        {
          "page": 1,
          "x0": 107.99984,
          "y0": 142.66924448,
          "x1": 310.890528302351,
          "y1": 152.63188448000002,
          "confidence": 0.36000000000000004,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 17,
      "text": "To this end, we study a new problem of automated proof optimization: rewriting a proof so that it is\ncorrect and optimizes a criterion such as length or readability.",
      "layout_matches": [
        {
          "text": "Large language models (LLMs) have been used to generate formal proofs of math-\nematical theorems in proofs assistants such as Lean. However, we often want to\noptimize a formal proof with respect to various criteria, depending on its down-\nstream use. For example, we may want a proof to adhere to a certain style, or to be\nreadable, concise, or modularly structured. Having suitably optimized proofs is\nalso important for learning tasks, especially since human-written proofs may not\noptimal for that purpose. To this end, we study a new problem of automated proof\noptimization: rewriting a proof so that it is correct and optimizes for an arbitrary\ncriterion, such as length or readability. As a ﬁrst method for automated proof opti-\nmization, we present ImProver, a large-language-model agent that rewrites proofs\nto optimize arbitrary user-deﬁned metrics in Lean. We ﬁnd that naively applying\nLLMs to proof optimization falls short, and we incorporate various improvements\ninto ImProver, such as the use of symbolic Lean context in a novel Chain-of-\nStates technique, as well as error-correction and retrieval. We test ImProver on\nrewriting real-world undergraduate, competition, and research-level mathematics\ntheorems, ﬁnding that ImProver is capable of rewriting proofs so that they are\nsubstantially shorter, more modular, and more readable.",
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "width": 326.1175505972419,
          "height": 185.2821399999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.7172413793103449,
          "match_type": "word_overlap",
          "common_words_count": 26
        }
      ],
      "page_spans": [
        1
      ],
      "primary_page": 1,
      "bounding_boxes": [
        {
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "confidence": 0.7172413793103449,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 18,
      "text": "We ﬁnd that naively applying LLMs\nto proof optimization falls short, often resulting in incorrect or poorly optimized proofs.",
      "layout_matches": [
        {
          "text": "Large language models (LLMs) have been used to generate formal proofs of math-\nematical theorems in proofs assistants such as Lean. However, we often want to\noptimize a formal proof with respect to various criteria, depending on its down-\nstream use. For example, we may want a proof to adhere to a certain style, or to be\nreadable, concise, or modularly structured. Having suitably optimized proofs is\nalso important for learning tasks, especially since human-written proofs may not\noptimal for that purpose. To this end, we study a new problem of automated proof\noptimization: rewriting a proof so that it is correct and optimizes for an arbitrary\ncriterion, such as length or readability. As a ﬁrst method for automated proof opti-\nmization, we present ImProver, a large-language-model agent that rewrites proofs\nto optimize arbitrary user-deﬁned metrics in Lean. We ﬁnd that naively applying\nLLMs to proof optimization falls short, and we incorporate various improvements\ninto ImProver, such as the use of symbolic Lean context in a novel Chain-of-\nStates technique, as well as error-correction and retrieval. We test ImProver on\nrewriting real-world undergraduate, competition, and research-level mathematics\ntheorems, ﬁnding that ImProver is capable of rewriting proofs so that they are\nsubstantially shorter, more modular, and more readable.",
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "width": 326.1175505972419,
          "height": 185.2821399999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6315789473684211,
          "match_type": "word_overlap",
          "common_words_count": 15
        }
      ],
      "page_spans": [
        1
      ],
      "primary_page": 1,
      "bounding_boxes": [
        {
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "confidence": 0.6315789473684211,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 19,
      "text": "We develop\nvarious improvements that can be applied on top of a black-box language model, including Chain-\nof-States prompting–an analogy to chain-of-thought prompting (Wei et al., 2022) that shows inter-\nmediate proof states–along with error-correction and retrieval.",
      "layout_matches": [
        {
          "text": "To this end, we study a new problem of automated proof optimization: rewriting a proof so that it is\ncorrect and optimizes a criterion such as length or readability. We ﬁnd that naively applying LLMs\nto proof optimization falls short, often resulting in incorrect or poorly optimized proofs. We develop\nvarious improvements that can be applied on top of a black-box language model, including Chain-\nof-States prompting–an analogy to chain-of-thought prompting (Wei et al., 2022) that shows inter-\nmediate proof states–along with error-correction and retrieval. We incorporate these into ImProver:\na large language model agent that rewrites proofs to optimize arbitrary user-deﬁned metrics in Lean.",
          "page": 1,
          "x0": 107.639684,
          "y0": 59.98934448000002,
          "x1": 505.89002930702276,
          "y1": 135.82117352,
          "width": 398.25034530702277,
          "height": 75.83182903999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.34323144104803494,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        1
      ],
      "primary_page": 1,
      "bounding_boxes": [
        {
          "page": 1,
          "x0": 107.639684,
          "y0": 59.98934448000002,
          "x1": 505.89002930702276,
          "y1": 135.82117352,
          "confidence": 0.34323144104803494,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 20,
      "text": "We incorporate these into ImProver:\na large language model agent that rewrites proofs to optimize arbitrary user-deﬁned metrics in Lean.",
      "layout_matches": [
        {
          "text": "Large language models (LLMs) have been used to generate formal proofs of math-\nematical theorems in proofs assistants such as Lean. However, we often want to\noptimize a formal proof with respect to various criteria, depending on its down-\nstream use. For example, we may want a proof to adhere to a certain style, or to be\nreadable, concise, or modularly structured. Having suitably optimized proofs is\nalso important for learning tasks, especially since human-written proofs may not\noptimal for that purpose. To this end, we study a new problem of automated proof\noptimization: rewriting a proof so that it is correct and optimizes for an arbitrary\ncriterion, such as length or readability. As a ﬁrst method for automated proof opti-\nmization, we present ImProver, a large-language-model agent that rewrites proofs\nto optimize arbitrary user-deﬁned metrics in Lean. We ﬁnd that naively applying\nLLMs to proof optimization falls short, and we incorporate various improvements\ninto ImProver, such as the use of symbolic Lean context in a novel Chain-of-\nStates technique, as well as error-correction and retrieval. We test ImProver on\nrewriting real-world undergraduate, competition, and research-level mathematics\ntheorems, ﬁnding that ImProver is capable of rewriting proofs so that they are\nsubstantially shorter, more modular, and more readable.",
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "width": 326.1175505972419,
          "height": 185.2821399999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.7200000000000001,
          "match_type": "word_overlap",
          "common_words_count": 18
        }
      ],
      "page_spans": [
        1
      ],
      "primary_page": 1,
      "bounding_boxes": [
        {
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "confidence": 0.7200000000000001,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 21,
      "text": "1\n\n\fWe test ImProver on rewriting real-world undergraduate theorems, competition problems, and\nresearch-level mathematics, ﬁnding that ImProver is capable of rewriting proofs so that they are\nsubstantially shorter, more readable, and more declarative in style.1\n\nOriginal (human-written)\nlemma lemma0 {α : Type} {p : α → α → Prop}\n\nImProver (length-optimized)\n\nlemma lemma0 {α : Type} {p : α → α → Prop}\n\n(h1 : ∀ x, ∃!",
      "layout_matches": [
        {
          "text": "We test ImProver on rewriting real-world undergraduate theorems, competition problems, and\nresearch-level mathematics, ﬁnding that ImProver is capable of rewriting proofs so that they are\nsubstantially shorter, more readable, and more declarative in style.1",
          "page": 2,
          "x0": 107.52,
          "y0": 676.06804448,
          "x1": 504.1036773971082,
          "y1": 707.99078448,
          "width": 396.5836773971082,
          "height": 31.922739999999976,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.5968421052631578,
          "match_type": "substring_match"
        },
        {
          "text": "Large language models (LLMs) have been used to generate formal proofs of math-\nematical theorems in proofs assistants such as Lean. However, we often want to\noptimize a formal proof with respect to various criteria, depending on its down-\nstream use. For example, we may want a proof to adhere to a certain style, or to be\nreadable, concise, or modularly structured. Having suitably optimized proofs is\nalso important for learning tasks, especially since human-written proofs may not\noptimal for that purpose. To this end, we study a new problem of automated proof\noptimization: rewriting a proof so that it is correct and optimizes for an arbitrary\ncriterion, such as length or readability. As a ﬁrst method for automated proof opti-\nmization, we present ImProver, a large-language-model agent that rewrites proofs\nto optimize arbitrary user-deﬁned metrics in Lean. We ﬁnd that naively applying\nLLMs to proof optimization falls short, and we incorporate various improvements\ninto ImProver, such as the use of symbolic Lean context in a novel Chain-of-\nStates technique, as well as error-correction and retrieval. We test ImProver on\nrewriting real-world undergraduate, competition, and research-level mathematics\ntheorems, ﬁnding that ImProver is capable of rewriting proofs so that they are\nsubstantially shorter, more modular, and more readable.",
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "width": 326.1175505972419,
          "height": 185.2821399999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.37894736842105264,
          "match_type": "word_overlap",
          "common_words_count": 27
        }
      ],
      "page_spans": [
        1,
        2
      ],
      "primary_page": 1,
      "bounding_boxes": [
        {
          "page": 2,
          "x0": 107.52,
          "y0": 676.06804448,
          "x1": 504.1036773971082,
          "y1": 707.99078448,
          "confidence": 0.5968421052631578,
          "match_type": "substring_match"
        },
        {
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "confidence": 0.37894736842105264,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 22,
      "text": "y, p x y)\n(h2 : ∀ x y, p x y ↔ p y x) :\n∀ x, Classical.choose\n\n(h1 (Classical.choose (h1\n\nx).exists)).exists=x := by\n\n-- PROOF START\nintro x\nobtain hy, h1e, h1ui := h1 x\nrw [h1u _ (Classical.choose_spec _)]\nobtain hw, h1e', h1u'i := h1 y\nrw [h1u' _ ((h2 _ _).mpr h1e)]\nexact h1u' _ (Classical.choose_spec _)\n\n(h1 : ∀ x, ∃!",
      "layout_matches": [
        {
          "text": "-- PROOF START\nintro x\nobtain hy, h1e, h1ui := h1 x\nrw [h1u _ (Classical.choose_spec _)]\nobtain hw, h1e', h1u'i := h1 y\nrw [h1u' _ ((h2 _ _).mpr h1e)]\nexact h1u' _ (Classical.choose_spec _)",
          "page": 2,
          "x0": 317.16,
          "y0": 535.4628639,
          "x1": 476.26451837791603,
          "y1": 591.37529455,
          "width": 159.104518377916,
          "height": 55.91243065000003,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.5561797752808989,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        2
      ],
      "primary_page": 2,
      "bounding_boxes": [
        {
          "page": 2,
          "x0": 317.16,
          "y0": 535.4628639,
          "x1": 476.26451837791603,
          "y1": 591.37529455,
          "confidence": 0.5561797752808989,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 23,
      "text": "y, p x y)\n(h2 : ∀ x y, p x y ↔ p y x) :\n∀ x, Classical.choose\n\n(h1 (Classical.choose (h1\n\nx).exists)).exists=x := by\n\n-- PROOF START\nintro x\nobtain hy, h1e, h1ui := h1 x\nhave h2' : Classical.choose (h1 x).exists =\n\ny :=\nh1u _ (Classical.choose_spec (h1\nx).exists)\n\nrw [h2']\nobtain hw, h1e', h1u'i := h1 y\nhave h4 := Classical.choose_spec (h1\n\nhave hxw : x = w := by\n\ny).exists\n\napply h1u'\nrw [h2]\nexact h1e\n\nrw [hxw]\nexact h1u' _ h4\n\nFigure 1: ImProver automatically rewrites formal proofs to optimize a criterion such as length\nor readability while remaining correct.",
      "layout_matches": [],
      "page_spans": [],
      "primary_page": 1,
      "bounding_boxes": []
    },
    {
      "sentence_id": 24,
      "text": "In this example, ImProver optimizes a human-written\nlemma (right) from the 2022 International Math Olympiad (Question 2, solution from Comp-\nﬁles (David Renshaw, 2024)) for length.",
      "layout_matches": [
        {
          "text": "lemma (right) from the 2022 International Math Olympiad (Question 2, solution from Comp-",
          "page": 2,
          "x0": 108.0,
          "y0": 415.06824448000003,
          "x1": 505.75748049890035,
          "y1": 425.03088448000005,
          "width": 397.75748049890035,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.4421052631578947,
          "match_type": "substring_match"
        },
        {
          "text": "Figure 1: ImProver automatically rewrites formal proofs to optimize a criterion such as length\nor readability while remaining correct.\nIn this example, ImProver optimizes a human-written\nlemma (right) from the 2022 International Math Olympiad (Question 2, solution from Comp-\nﬁles (David Renshaw, 2024)) for length. ImProver’s optimized proof is correct and more concise.",
          "page": 2,
          "x0": 107.99990000000003,
          "y0": 403.70924,
          "x1": 505.75748049890035,
          "y1": 446.87068448,
          "width": 397.7575804989003,
          "height": 43.16144448,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.4275,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        2
      ],
      "primary_page": 2,
      "bounding_boxes": [
        {
          "page": 2,
          "x0": 108.0,
          "y0": 415.06824448000003,
          "x1": 505.75748049890035,
          "y1": 425.03088448000005,
          "confidence": 0.4421052631578947,
          "match_type": "substring_match"
        },
        {
          "page": 2,
          "x0": 107.99990000000003,
          "y0": 403.70924,
          "x1": 505.75748049890035,
          "y1": 446.87068448,
          "confidence": 0.4275,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 25,
      "text": "ImProver’s optimized proof is correct and more concise.",
      "layout_matches": [
        {
          "text": "Large language models (LLMs) have been used to generate formal proofs of math-\nematical theorems in proofs assistants such as Lean. However, we often want to\noptimize a formal proof with respect to various criteria, depending on its down-\nstream use. For example, we may want a proof to adhere to a certain style, or to be\nreadable, concise, or modularly structured. Having suitably optimized proofs is\nalso important for learning tasks, especially since human-written proofs may not\noptimal for that purpose. To this end, we study a new problem of automated proof\noptimization: rewriting a proof so that it is correct and optimizes for an arbitrary\ncriterion, such as length or readability. As a ﬁrst method for automated proof opti-\nmization, we present ImProver, a large-language-model agent that rewrites proofs\nto optimize arbitrary user-deﬁned metrics in Lean. We ﬁnd that naively applying\nLLMs to proof optimization falls short, and we incorporate various improvements\ninto ImProver, such as the use of symbolic Lean context in a novel Chain-of-\nStates technique, as well as error-correction and retrieval. We test ImProver on\nrewriting real-world undergraduate, competition, and research-level mathematics\ntheorems, ﬁnding that ImProver is capable of rewriting proofs so that they are\nsubstantially shorter, more modular, and more readable.",
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "width": 326.1175505972419,
          "height": 185.2821399999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6000000000000001,
          "match_type": "word_overlap",
          "common_words_count": 6
        }
      ],
      "page_spans": [
        1
      ],
      "primary_page": 1,
      "bounding_boxes": [
        {
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "confidence": 0.6000000000000001,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 26,
      "text": "2 RELATED WORK\n\nRecently there has been wide interest in automating theorem proving in interactive proof assistants;\nsee (Lu et al., 2023; Li et al., 2024) for surveys.",
      "layout_matches": [
        {
          "text": "Recently there has been wide interest in automating theorem proving in interactive proof assistants;\nsee (Lu et al., 2023; Li et al., 2024) for surveys.",
          "page": 2,
          "x0": 107.99999999999994,
          "y0": 334.78824448,
          "x1": 504.72936206245674,
          "y1": 355.79068448000004,
          "width": 396.7293620624568,
          "height": 21.002440000000036,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.8161490683229814,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        2
      ],
      "primary_page": 2,
      "bounding_boxes": [
        {
          "page": 2,
          "x0": 107.99999999999994,
          "y0": 334.78824448,
          "x1": 504.72936206245674,
          "y1": 355.79068448000004,
          "confidence": 0.8161490683229814,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 27,
      "text": "A typical approach (Polu & Sutskever, 2020) is to train on a large corpus of mathematical proofs\nsuch as Lean’s Mathlib (mathlib Community, 2020; Han et al., 2022; Polu et al., 2022; Lample et al.,\n2022; Yang et al., 2023; Hu et al., 2024).",
      "layout_matches": [
        {
          "text": "A typical approach (Polu & Sutskever, 2020) is to train on a large corpus of mathematical proofs",
          "page": 2,
          "x0": 107.63984399999994,
          "y0": 317.86794448,
          "x1": 504.2752605431605,
          "y1": 327.83058448,
          "width": 396.6354165431606,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.372972972972973,
          "match_type": "substring_match"
        },
        {
          "text": "such as Lean’s Mathlib (mathlib Community, 2020; Han et al., 2022; Polu et al., 2022; Lample et al.,",
          "page": 2,
          "x0": 107.99984399999994,
          "y0": 306.94804448,
          "x1": 505.2909145521398,
          "y1": 316.91068448000004,
          "width": 397.29107055213984,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.3689189189189189,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        2
      ],
      "primary_page": 2,
      "bounding_boxes": [
        {
          "page": 2,
          "x0": 107.63984399999994,
          "y0": 317.86794448,
          "x1": 504.2752605431605,
          "y1": 327.83058448,
          "confidence": 0.372972972972973,
          "match_type": "substring_match"
        },
        {
          "page": 2,
          "x0": 107.99984399999994,
          "y0": 306.94804448,
          "x1": 505.2909145521398,
          "y1": 316.91068448000004,
          "confidence": 0.3689189189189189,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 28,
      "text": "A model learns from the distribution of proofs in the cor-\npus, such as Mathlib-style proofs.",
      "layout_matches": [
        {
          "text": "2022; Yang et al., 2023; Hu et al., 2024). A model learns from the distribution of proofs in the cor-",
          "page": 2,
          "x0": 107.99984399999991,
          "y0": 296.02814448000004,
          "x1": 505.7572543228158,
          "y1": 305.99078448000006,
          "width": 397.7574103228159,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.5,
          "match_type": "word_overlap",
          "common_words_count": 10
        }
      ],
      "page_spans": [
        2
      ],
      "primary_page": 2,
      "bounding_boxes": [
        {
          "page": 2,
          "x0": 107.99984399999991,
          "y0": 296.02814448000004,
          "x1": 505.7572543228158,
          "y1": 305.99078448000006,
          "confidence": 0.5,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 29,
      "text": "Recently, the AlphaProof (AlphaProof & Teams, 2024) system\nwas shown to produce proofs with an arcane, non-human structure and syntax.",
      "layout_matches": [
        {
          "text": "was shown to produce proofs with an arcane, non-human structure and syntax. We consider the",
          "page": 2,
          "x0": 107.6398439999999,
          "y0": 274.06844448000004,
          "x1": 504.1031417397853,
          "y1": 284.03108448000006,
          "width": 396.4632977397854,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.5473684210526316,
          "match_type": "word_overlap",
          "common_words_count": 13
        }
      ],
      "page_spans": [
        2
      ],
      "primary_page": 2,
      "bounding_boxes": [
        {
          "page": 2,
          "x0": 107.6398439999999,
          "y0": 274.06844448000004,
          "x1": 504.1031417397853,
          "y1": 284.03108448000006,
          "confidence": 0.5473684210526316,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 30,
      "text": "We consider the\nnew problem of rewriting a proof to optimize a metric, such as rewriting a proof into a more read-\nable or more concise one.",
      "layout_matches": [
        {
          "text": "new problem of rewriting a proof to optimize a metric, such as rewriting a proof into a more read-",
          "page": 2,
          "x0": 107.99984399999994,
          "y0": 263.14814448000004,
          "x1": 505.7578007086814,
          "y1": 273.11078448000006,
          "width": 397.75795670868143,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.6280575539568345,
          "match_type": "substring_match"
        },
        {
          "text": "Large language models (LLMs) have been used to generate formal proofs of math-\nematical theorems in proofs assistants such as Lean. However, we often want to\noptimize a formal proof with respect to various criteria, depending on its down-\nstream use. For example, we may want a proof to adhere to a certain style, or to be\nreadable, concise, or modularly structured. Having suitably optimized proofs is\nalso important for learning tasks, especially since human-written proofs may not\noptimal for that purpose. To this end, we study a new problem of automated proof\noptimization: rewriting a proof so that it is correct and optimizes for an arbitrary\ncriterion, such as length or readability. As a ﬁrst method for automated proof opti-\nmization, we present ImProver, a large-language-model agent that rewrites proofs\nto optimize arbitrary user-deﬁned metrics in Lean. We ﬁnd that naively applying\nLLMs to proof optimization falls short, and we incorporate various improvements\ninto ImProver, such as the use of symbolic Lean context in a novel Chain-of-\nStates technique, as well as error-correction and retrieval. We test ImProver on\nrewriting real-world undergraduate, competition, and research-level mathematics\ntheorems, ﬁnding that ImProver is capable of rewriting proofs so that they are\nsubstantially shorter, more modular, and more readable.",
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "width": 326.1175505972419,
          "height": 185.2821399999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.4740740740740741,
          "match_type": "word_overlap",
          "common_words_count": 16
        }
      ],
      "page_spans": [
        1,
        2
      ],
      "primary_page": 1,
      "bounding_boxes": [
        {
          "page": 2,
          "x0": 107.99984399999994,
          "y0": 263.14814448000004,
          "x1": 505.7578007086814,
          "y1": 273.11078448000006,
          "confidence": 0.6280575539568345,
          "match_type": "substring_match"
        },
        {
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "confidence": 0.4740740740740741,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 31,
      "text": "Proof optimization is more general than theorem proving, since we can\nalso rewrite an empty proof to optimize correctness.",
      "layout_matches": [
        {
          "text": "able or more concise one. Proof optimization is more general than theorem proving, since we can",
          "page": 2,
          "x0": 107.99984399999994,
          "y0": 252.10834448000003,
          "x1": 504.0617410612135,
          "y1": 262.07098448000005,
          "width": 396.0618970612136,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.46315789473684216,
          "match_type": "word_overlap",
          "common_words_count": 11
        }
      ],
      "page_spans": [
        2
      ],
      "primary_page": 2,
      "bounding_boxes": [
        {
          "page": 2,
          "x0": 107.99984399999994,
          "y0": 252.10834448000003,
          "x1": 504.0617410612135,
          "y1": 262.07098448000005,
          "confidence": 0.46315789473684216,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 32,
      "text": "Finally, there is a rich literature on the var-\nied styles of (human) formal proofs (e.g., (Autexier & Dietrich, 2010; Wiedijk, 2004)).",
      "layout_matches": [
        {
          "text": "ied styles of (human) formal proofs (e.g., (Autexier & Dietrich, 2010; Wiedijk, 2004)). Our model,",
          "page": 2,
          "x0": 107.99984399999994,
          "y0": 230.26854448,
          "x1": 505.41029078731316,
          "y1": 240.23118448000002,
          "width": 397.4104467873132,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.45714285714285713,
          "match_type": "word_overlap",
          "common_words_count": 12
        },
        {
          "text": "also rewrite an empty proof to optimize correctness. Finally, there is a rich literature on the var-",
          "page": 2,
          "x0": 107.99984399999991,
          "y0": 241.18844448000002,
          "x1": 505.7578581933911,
          "y1": 251.15108448000004,
          "width": 397.7580141933912,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.34285714285714286,
          "match_type": "word_overlap",
          "common_words_count": 9
        }
      ],
      "page_spans": [
        2
      ],
      "primary_page": 2,
      "bounding_boxes": [
        {
          "page": 2,
          "x0": 107.99984399999994,
          "y0": 230.26854448,
          "x1": 505.41029078731316,
          "y1": 240.23118448000002,
          "confidence": 0.45714285714285713,
          "match_type": "word_overlap"
        },
        {
          "page": 2,
          "x0": 107.99984399999991,
          "y0": 241.18844448000002,
          "x1": 505.7578581933911,
          "y1": 251.15108448000004,
          "confidence": 0.34285714285714286,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 33,
      "text": "Our model,\nImProver, builds on neural theorem proving techniques including full proof generation (Jiang et al.,\n2023; First et al., 2023), conditioning on example proofs (Jiang et al., 2023), retrieval (Yang et al.,\n2023; Thakur et al., 2024), and preceding ﬁle context (First et al., 2023; Hu et al., 2024), as well as\nerror correction (Madaan et al., 2023; Chen et al., 2023) and documentation retrieval (Zhou et al.,\n2023) from code generation.",
      "layout_matches": [],
      "page_spans": [],
      "primary_page": 1,
      "bounding_boxes": []
    },
    {
      "sentence_id": 34,
      "text": "ImProver brings these code generation techniques, along with new\nChain-of-States prompting and meta-programmed contextual information, into a uniﬁed proof opti-\nmization agent.",
      "layout_matches": [
        {
          "text": "Chain-of-States prompting and meta-programmed contextual information, into a uniﬁed proof opti-",
          "page": 2,
          "x0": 108.00054399999999,
          "y0": 164.50854447999996,
          "x1": 505.7580729187221,
          "y1": 174.47118447999998,
          "width": 397.75752891872213,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.48620689655172417,
          "match_type": "substring_match"
        },
        {
          "text": "Large language models (LLMs) have been used to generate formal proofs of math-\nematical theorems in proofs assistants such as Lean. However, we often want to\noptimize a formal proof with respect to various criteria, depending on its down-\nstream use. For example, we may want a proof to adhere to a certain style, or to be\nreadable, concise, or modularly structured. Having suitably optimized proofs is\nalso important for learning tasks, especially since human-written proofs may not\noptimal for that purpose. To this end, we study a new problem of automated proof\noptimization: rewriting a proof so that it is correct and optimizes for an arbitrary\ncriterion, such as length or readability. As a ﬁrst method for automated proof opti-\nmization, we present ImProver, a large-language-model agent that rewrites proofs\nto optimize arbitrary user-deﬁned metrics in Lean. We ﬁnd that naively applying\nLLMs to proof optimization falls short, and we incorporate various improvements\ninto ImProver, such as the use of symbolic Lean context in a novel Chain-of-\nStates technique, as well as error-correction and retrieval. We test ImProver on\nrewriting real-world undergraduate, competition, and research-level mathematics\ntheorems, ﬁnding that ImProver is capable of rewriting proofs so that they are\nsubstantially shorter, more modular, and more readable.",
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "width": 326.1175505972419,
          "height": 185.2821399999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.3272727272727273,
          "match_type": "word_overlap",
          "common_words_count": 9
        }
      ],
      "page_spans": [
        1,
        2
      ],
      "primary_page": 1,
      "bounding_boxes": [
        {
          "page": 2,
          "x0": 108.00054399999999,
          "y0": 164.50854447999996,
          "x1": 505.7580729187221,
          "y1": 174.47118447999998,
          "confidence": 0.48620689655172417,
          "match_type": "substring_match"
        },
        {
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "confidence": 0.3272727272727273,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 35,
      "text": "3 AUTOMATED PROOF OPTIMIZATION WITH ImProver\n\nAutomated Proof Optimization.",
      "layout_matches": [
        {
          "text": "3 AUTOMATED PROOF OPTIMIZATION WITH ImProver",
          "page": 2,
          "x0": 108.240388,
          "y0": 124.23436639999996,
          "x1": 389.98439468364796,
          "y1": 138.67624799999996,
          "width": 281.74400668364797,
          "height": 14.441881600000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.5351351351351352,
          "match_type": "substring_match"
        },
        {
          "text": "Large language models (LLMs) have been used to generate formal proofs of math-\nematical theorems in proofs assistants such as Lean. However, we often want to\noptimize a formal proof with respect to various criteria, depending on its down-\nstream use. For example, we may want a proof to adhere to a certain style, or to be\nreadable, concise, or modularly structured. Having suitably optimized proofs is\nalso important for learning tasks, especially since human-written proofs may not\noptimal for that purpose. To this end, we study a new problem of automated proof\noptimization: rewriting a proof so that it is correct and optimizes for an arbitrary\ncriterion, such as length or readability. As a ﬁrst method for automated proof opti-\nmization, we present ImProver, a large-language-model agent that rewrites proofs\nto optimize arbitrary user-deﬁned metrics in Lean. We ﬁnd that naively applying\nLLMs to proof optimization falls short, and we incorporate various improvements\ninto ImProver, such as the use of symbolic Lean context in a novel Chain-of-\nStates technique, as well as error-correction and retrieval. We test ImProver on\nrewriting real-world undergraduate, competition, and research-level mathematics\ntheorems, ﬁnding that ImProver is capable of rewriting proofs so that they are\nsubstantially shorter, more modular, and more readable.",
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "width": 326.1175505972419,
          "height": 185.2821399999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.4444444444444445,
          "match_type": "word_overlap",
          "common_words_count": 5
        }
      ],
      "page_spans": [
        1,
        2
      ],
      "primary_page": 1,
      "bounding_boxes": [
        {
          "page": 2,
          "x0": 108.240388,
          "y0": 124.23436639999996,
          "x1": 389.98439468364796,
          "y1": 138.67624799999996,
          "confidence": 0.5351351351351352,
          "match_type": "substring_match"
        },
        {
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "confidence": 0.4444444444444445,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 36,
      "text": "Given a theorem statement x, additional context c, and an initial\nproof y0, proof optimization consists of generating a new proof y that is correct and minimizes (or\nmaximizes) a metric µ(x, c, y0, y) → R.\n\n1Code is available at https://github.com/riyazahuja/ImProver.",
      "layout_matches": [
        {
          "text": "Automated Proof Optimization. Given a theorem statement x, additional context c, and an initial\nproof y0, proof optimization consists of generating a new proof y that is correct and minimizes (or\nmaximizes) a metric µ(x, c, y0, y) → R.",
          "page": 2,
          "x0": 108.00118799999998,
          "y0": 78.18388134999995,
          "x1": 504.3204630560572,
          "y1": 111.11073615999995,
          "width": 396.3192750560572,
          "height": 32.926854809999995,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.5463414634146342,
          "match_type": "word_overlap",
          "common_words_count": 28
        }
      ],
      "page_spans": [
        2
      ],
      "primary_page": 2,
      "bounding_boxes": [
        {
          "page": 2,
          "x0": 108.00118799999998,
          "y0": 78.18388134999995,
          "x1": 504.3204630560572,
          "y1": 111.11073615999995,
          "confidence": 0.5463414634146342,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 37,
      "text": "2\n\n\fBy varying the metric, we can perform tasks such as shortening proofs, making them more readable,\nor even automated proving.",
      "layout_matches": [
        {
          "text": "By varying the metric, we can perform tasks such as shortening proofs, making them more readable,\nor even automated proving. We consider 3 metrics:",
          "page": 3,
          "x0": 108.0,
          "y0": 686.98834448,
          "x1": 505.41030037860736,
          "y1": 707.99078448,
          "width": 397.41030037860736,
          "height": 21.00243999999998,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.7619047619047619,
          "match_type": "word_overlap",
          "common_words_count": 20
        }
      ],
      "page_spans": [
        3
      ],
      "primary_page": 3,
      "bounding_boxes": [
        {
          "page": 3,
          "x0": 108.0,
          "y0": 686.98834448,
          "x1": 505.41030037860736,
          "y1": 707.99078448,
          "confidence": 0.7619047619047619,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 38,
      "text": "We consider 3 metrics:\n\nLength Metric: The length metric measures the number of tactic invocations in the tactic proof,\naiming to reduce the proof’s length while ensuring its correctness.",
      "layout_matches": [
        {
          "text": "Length Metric: The length metric measures the number of tactic invocations in the tactic proof,\naiming to reduce the proof’s length while ensuring its correctness. Note that shorter proofs often\nrepresent more efﬁcient proofs.",
          "page": 3,
          "x0": 108.00000000000003,
          "y0": 648.2282444800001,
          "x1": 505.53082666285553,
          "y1": 680.1502361600001,
          "width": 397.5308266628555,
          "height": 31.92199168000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.4965517241379311,
          "match_type": "word_overlap",
          "common_words_count": 18
        }
      ],
      "page_spans": [
        3
      ],
      "primary_page": 3,
      "bounding_boxes": [
        {
          "page": 3,
          "x0": 108.00000000000003,
          "y0": 648.2282444800001,
          "x1": 505.53082666285553,
          "y1": 680.1502361600001,
          "confidence": 0.4965517241379311,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 39,
      "text": "Note that shorter proofs often\nrepresent more efﬁcient proofs.",
      "layout_matches": [
        {
          "text": "represent more efﬁcient proofs.",
          "page": 3,
          "x0": 108.0007,
          "y0": 648.2282444800001,
          "x1": 233.0115970711861,
          "y1": 658.19088448,
          "width": 125.0108970711861,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.45,
          "match_type": "substring_match"
        },
        {
          "text": "Large language models (LLMs) have been used to generate formal proofs of math-\nematical theorems in proofs assistants such as Lean. However, we often want to\noptimize a formal proof with respect to various criteria, depending on its down-\nstream use. For example, we may want a proof to adhere to a certain style, or to be\nreadable, concise, or modularly structured. Having suitably optimized proofs is\nalso important for learning tasks, especially since human-written proofs may not\noptimal for that purpose. To this end, we study a new problem of automated proof\noptimization: rewriting a proof so that it is correct and optimizes for an arbitrary\ncriterion, such as length or readability. As a ﬁrst method for automated proof opti-\nmization, we present ImProver, a large-language-model agent that rewrites proofs\nto optimize arbitrary user-deﬁned metrics in Lean. We ﬁnd that naively applying\nLLMs to proof optimization falls short, and we incorporate various improvements\ninto ImProver, such as the use of symbolic Lean context in a novel Chain-of-\nStates technique, as well as error-correction and retrieval. We test ImProver on\nrewriting real-world undergraduate, competition, and research-level mathematics\ntheorems, ﬁnding that ImProver is capable of rewriting proofs so that they are\nsubstantially shorter, more modular, and more readable.",
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "width": 326.1175505972419,
          "height": 185.2821399999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.4444444444444445,
          "match_type": "word_overlap",
          "common_words_count": 5
        }
      ],
      "page_spans": [
        1,
        3
      ],
      "primary_page": 1,
      "bounding_boxes": [
        {
          "page": 3,
          "x0": 108.0007,
          "y0": 648.2282444800001,
          "x1": 233.0115970711861,
          "y1": 658.19088448,
          "confidence": 0.45,
          "match_type": "substring_match"
        },
        {
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "confidence": 0.4444444444444445,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 40,
      "text": "Readability Metric: We consider a proof to be readable if it\nis written in a declarative\nstyle (Autexier & Dietrich, 2010; Wiedijk, 2004), which is related to the number of independent\nsubproofs in a proof.",
      "layout_matches": [
        {
          "text": "Readability Metric: We consider a proof to be readable if it\nis written in a declarative\nstyle (Autexier & Dietrich, 2010; Wiedijk, 2004), which is related to the number of independent\nsubproofs in a proof. Concretely, we evaluate this using the ratio of number of explicitly typed\nhave tactics to total number of tactic invocations.",
          "page": 3,
          "x0": 108.0007,
          "y0": 598.4279444800001,
          "x1": 504.3707425656763,
          "y1": 641.3901361600001,
          "width": 396.37004256567633,
          "height": 42.962191680000046,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.55,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        3
      ],
      "primary_page": 3,
      "bounding_boxes": [
        {
          "page": 3,
          "x0": 108.0007,
          "y0": 598.4279444800001,
          "x1": 504.3707425656763,
          "y1": 641.3901361600001,
          "confidence": 0.55,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 41,
      "text": "Concretely, we evaluate this using the ratio of number of explicitly typed\nhave tactics to total number of tactic invocations.",
      "layout_matches": [
        {
          "text": "subproofs in a proof. Concretely, we evaluate this using the ratio of number of explicitly typed",
          "page": 3,
          "x0": 108.00079999999994,
          "y0": 609.34784448,
          "x1": 504.1819937060196,
          "y1": 619.31048448,
          "width": 396.1811937060197,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.44000000000000006,
          "match_type": "word_overlap",
          "common_words_count": 11
        }
      ],
      "page_spans": [
        3
      ],
      "primary_page": 3,
      "bounding_boxes": [
        {
          "page": 3,
          "x0": 108.00079999999994,
          "y0": 609.34784448,
          "x1": 504.1819937060196,
          "y1": 619.31048448,
          "confidence": 0.44000000000000006,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 42,
      "text": "Completion Metric: The completion of a proof simply describes its correctness.",
      "layout_matches": [
        {
          "text": "Completion Metric: The completion of a proof simply describes its correctness. This is a trivial",
          "page": 3,
          "x0": 108.00079999999994,
          "y0": 581.38814448,
          "x1": 504.130404100415,
          "y1": 591.4703361600001,
          "width": 396.129604100415,
          "height": 10.08219168000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.7294736842105263,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        3
      ],
      "primary_page": 3,
      "bounding_boxes": [
        {
          "page": 3,
          "x0": 108.00079999999994,
          "y0": 581.38814448,
          "x1": 504.130404100415,
          "y1": 591.4703361600001,
          "confidence": 0.7294736842105263,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 43,
      "text": "This is a trivial\nmetric which measures the number of errors present.",
      "layout_matches": [
        {
          "text": "metric which measures the number of errors present. The completion metric is used for concretely",
          "page": 3,
          "x0": 108.00089999999994,
          "y0": 570.4682444800001,
          "x1": 504.5422952814268,
          "y1": 580.43088448,
          "width": 396.54139528142684,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.6000000000000001,
          "match_type": "word_overlap",
          "common_words_count": 9
        }
      ],
      "page_spans": [
        3
      ],
      "primary_page": 3,
      "bounding_boxes": [
        {
          "page": 3,
          "x0": 108.00089999999994,
          "y0": 570.4682444800001,
          "x1": 504.5422952814268,
          "y1": 580.43088448,
          "confidence": 0.6000000000000001,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 44,
      "text": "The completion metric is used for concretely\nviewing proof optimization as a generalization of neural theorem proving.",
      "layout_matches": [
        {
          "text": "viewing proof optimization as a generalization of neural theorem proving.",
          "page": 3,
          "x0": 107.76089999999994,
          "y0": 559.5479444800001,
          "x1": 402.6916499648349,
          "y1": 569.51058448,
          "width": 294.93074996483494,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.5567796610169492,
          "match_type": "substring_match"
        },
        {
          "text": "A typical approach (Polu & Sutskever, 2020) is to train on a large corpus of mathematical proofs\nsuch as Lean’s Mathlib (mathlib Community, 2020; Han et al., 2022; Polu et al., 2022; Lample et al.,\n2022; Yang et al., 2023; Hu et al., 2024). A model learns from the distribution of proofs in the cor-\npus, such as Mathlib-style proofs. Recently, the AlphaProof (AlphaProof & Teams, 2024) system\nwas shown to produce proofs with an arcane, non-human structure and syntax. We consider the\nnew problem of rewriting a proof to optimize a metric, such as rewriting a proof into a more read-\nable or more concise one. Proof optimization is more general than theorem proving, since we can\nalso rewrite an empty proof to optimize correctness. Finally, there is a rich literature on the var-\nied styles of (human) formal proofs (e.g., (Autexier & Dietrich, 2010; Wiedijk, 2004)). Our model,\nImProver, builds on neural theorem proving techniques including full proof generation (Jiang et al.,\n2023; First et al., 2023), conditioning on example proofs (Jiang et al., 2023), retrieval (Yang et al.,\n2023; Thakur et al., 2024), and preceding ﬁle context (First et al., 2023; Hu et al., 2024), as well as\nerror correction (Madaan et al., 2023; Chen et al., 2023) and documentation retrieval (Zhou et al.,\n2023) from code generation. ImProver brings these code generation techniques, along with new\nChain-of-States prompting and meta-programmed contextual information, into a uniﬁed proof opti-\nmization agent.",
          "page": 2,
          "x0": 107.6398439999999,
          "y0": 153.46874447999994,
          "x1": 505.7580729187221,
          "y1": 327.83058448,
          "width": 398.11822891872225,
          "height": 174.3618400000001,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.4705882352941177,
          "match_type": "word_overlap",
          "common_words_count": 10
        }
      ],
      "page_spans": [
        2,
        3
      ],
      "primary_page": 2,
      "bounding_boxes": [
        {
          "page": 3,
          "x0": 107.76089999999994,
          "y0": 559.5479444800001,
          "x1": 402.6916499648349,
          "y1": 569.51058448,
          "confidence": 0.5567796610169492,
          "match_type": "substring_match"
        },
        {
          "page": 2,
          "x0": 107.6398439999999,
          "y0": 153.46874447999994,
          "x1": 505.7580729187221,
          "y1": 327.83058448,
          "confidence": 0.4705882352941177,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 45,
      "text": "3.1\n\nIMPROVER\n\nWe develop several improvements that can be applied to a black-box LLM generator yout ∼\nG(·|xin), such as GPT-4 (OpenAI et al., 2024), and specify ImProver with respect to these pa-\nrameters.",
      "layout_matches": [
        {
          "text": "We develop several improvements that can be applied to a black-box LLM generator yout ∼\nG(·|xin), such as GPT-4 (OpenAI et al., 2024), and specify ImProver with respect to these pa-\nrameters. The explicit prompts and templates that are sent to the LLM can be found in (§A).",
          "page": 3,
          "x0": 107.52099999999992,
          "y0": 489.1081444800001,
          "x1": 505.7586358685687,
          "y1": 521.0508097600001,
          "width": 398.2376358685688,
          "height": 31.94266528000003,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.7272727272727273,
          "match_type": "word_overlap",
          "common_words_count": 30
        }
      ],
      "page_spans": [
        3
      ],
      "primary_page": 3,
      "bounding_boxes": [
        {
          "page": 3,
          "x0": 107.52099999999992,
          "y0": 489.1081444800001,
          "x1": 505.7586358685687,
          "y1": 521.0508097600001,
          "confidence": 0.7272727272727273,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 46,
      "text": "The explicit prompts and templates that are sent to the LLM can be found in (§A).",
      "layout_matches": [
        {
          "text": "rameters. The explicit prompts and templates that are sent to the LLM can be found in (§A).",
          "page": 3,
          "x0": 108.0008299999999,
          "y0": 489.1081444800001,
          "x1": 475.411331382389,
          "y1": 499.0707844800001,
          "width": 367.4105013823891,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.7977272727272727,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        3
      ],
      "primary_page": 3,
      "bounding_boxes": [
        {
          "page": 3,
          "x0": 108.0008299999999,
          "y0": 489.1081444800001,
          "x1": 475.411331382389,
          "y1": 499.0707844800001,
          "confidence": 0.7977272727272727,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 47,
      "text": "3.1.1 CHAIN-OF-STATES PROMPTING\n\nTypical formal proofs are a sequence of tactics (akin to steps) and states that show the hypotheses and\ngoals at each step.",
      "layout_matches": [
        {
          "text": "Typical formal proofs are a sequence of tactics (akin to steps) and states that show the hypotheses and\ngoals at each step. The intermediate states often contain valuable information (e.g., an expression\nafter it has been simpliﬁed) that is not present in the tactics. To allow the model to reason about\nthese intermediate goals and hypotheses, we use tools from Lean metaprogramming to automatically\nannotate each proof state as a comment prior to each tactic. We refer to this method as Chain-of-\nStates (CoS) prompting since it makes intermediate states explicit, akin to how chain-of-thought\nprompting (Wei et al., 2022) makes intermediate steps of a solution explicit.",
          "page": 3,
          "x0": 107.64090999999993,
          "y0": 377.6282444800001,
          "x1": 505.8784075979707,
          "y1": 453.4604735200001,
          "width": 398.2374975979708,
          "height": 75.83222904000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.7040000000000001,
          "match_type": "word_overlap",
          "common_words_count": 22
        }
      ],
      "page_spans": [
        3
      ],
      "primary_page": 3,
      "bounding_boxes": [
        {
          "page": 3,
          "x0": 107.64090999999993,
          "y0": 377.6282444800001,
          "x1": 505.8784075979707,
          "y1": 453.4604735200001,
          "confidence": 0.7040000000000001,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 48,
      "text": "The intermediate states often contain valuable information (e.g., an expression\nafter it has been simpliﬁed) that is not present in the tactics.",
      "layout_matches": [
        {
          "text": "after it has been simpliﬁed) that is not present in the tactics. To allow the model to reason about",
          "page": 3,
          "x0": 108.00081,
          "y0": 421.42814448000007,
          "x1": 504.251082265823,
          "y1": 431.3907844800001,
          "width": 396.250272265823,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.43636363636363634,
          "match_type": "word_overlap",
          "common_words_count": 12
        }
      ],
      "page_spans": [
        3
      ],
      "primary_page": 3,
      "bounding_boxes": [
        {
          "page": 3,
          "x0": 108.00081,
          "y0": 421.42814448000007,
          "x1": 504.251082265823,
          "y1": 431.3907844800001,
          "confidence": 0.43636363636363634,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 49,
      "text": "To allow the model to reason about\nthese intermediate goals and hypotheses, we use tools from Lean metaprogramming to automatically\nannotate each proof state as a comment prior to each tactic.",
      "layout_matches": [
        {
          "text": "these intermediate goals and hypotheses, we use tools from Lean metaprogramming to automatically",
          "page": 3,
          "x0": 108.00080999999997,
          "y0": 410.5082444800001,
          "x1": 504.5422383807192,
          "y1": 420.4708844800001,
          "width": 396.54142838071925,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.4476439790575917,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        3
      ],
      "primary_page": 3,
      "bounding_boxes": [
        {
          "page": 3,
          "x0": 108.00080999999997,
          "y0": 410.5082444800001,
          "x1": 504.5422383807192,
          "y1": 420.4708844800001,
          "confidence": 0.4476439790575917,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 50,
      "text": "We refer to this method as Chain-of-\nStates (CoS) prompting since it makes intermediate states explicit, akin to how chain-of-thought\nprompting (Wei et al., 2022) makes intermediate steps of a solution explicit.",
      "layout_matches": [
        {
          "text": "States (CoS) prompting since it makes intermediate states explicit, akin to how chain-of-thought",
          "page": 3,
          "x0": 107.76080999999994,
          "y0": 388.5481444800001,
          "x1": 504.6107776177024,
          "y1": 398.6203735200001,
          "width": 396.8499676177025,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.4082926829268293,
          "match_type": "substring_match"
        },
        {
          "text": "To this end, we study a new problem of automated proof optimization: rewriting a proof so that it is\ncorrect and optimizes a criterion such as length or readability. We ﬁnd that naively applying LLMs\nto proof optimization falls short, often resulting in incorrect or poorly optimized proofs. We develop\nvarious improvements that can be applied on top of a black-box language model, including Chain-\nof-States prompting–an analogy to chain-of-thought prompting (Wei et al., 2022) that shows inter-\nmediate proof states–along with error-correction and retrieval. We incorporate these into ImProver:\na large language model agent that rewrites proofs to optimize arbitrary user-deﬁned metrics in Lean.",
          "page": 1,
          "x0": 107.639684,
          "y0": 59.98934448000002,
          "x1": 505.89002930702276,
          "y1": 135.82117352,
          "width": 398.25034530702277,
          "height": 75.83182903999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.325,
          "match_type": "word_overlap",
          "common_words_count": 13
        }
      ],
      "page_spans": [
        1,
        3
      ],
      "primary_page": 1,
      "bounding_boxes": [
        {
          "page": 3,
          "x0": 107.76080999999994,
          "y0": 388.5481444800001,
          "x1": 504.6107776177024,
          "y1": 398.6203735200001,
          "confidence": 0.4082926829268293,
          "match_type": "substring_match"
        },
        {
          "page": 1,
          "x0": 107.639684,
          "y0": 59.98934448000002,
          "x1": 505.89002930702276,
          "y1": 135.82117352,
          "confidence": 0.325,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 51,
      "text": "These states are extracted directly and symbolically from the underlying Lean compilation steps\nusing Lean’s rich metaprogramming suite.",
      "layout_matches": [
        {
          "text": "These states are extracted directly and symbolically from the underlying Lean compilation steps",
          "page": 3,
          "x0": 107.64000999999993,
          "y0": 360.7083444800001,
          "x1": 504.0352944527564,
          "y1": 370.67098448000013,
          "width": 396.3952844527564,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.6333333333333334,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        3
      ],
      "primary_page": 3,
      "bounding_boxes": [
        {
          "page": 3,
          "x0": 107.64000999999993,
          "y0": 360.7083444800001,
          "x1": 504.0352944527564,
          "y1": 370.67098448000013,
          "confidence": 0.6333333333333334,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 52,
      "text": "The implementation of this extraction system is mod-\neled from the work (Kim Morrison, 2024).",
      "layout_matches": [
        {
          "text": "using Lean’s rich metaprogramming suite. The implementation of this extraction system is mod-",
          "page": 3,
          "x0": 108.00000999999992,
          "y0": 349.7884444800001,
          "x1": 505.8777839804396,
          "y1": 359.75108448000015,
          "width": 397.87777398043966,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.4266666666666667,
          "match_type": "word_overlap",
          "common_words_count": 8
        }
      ],
      "page_spans": [
        3
      ],
      "primary_page": 3,
      "bounding_boxes": [
        {
          "page": 3,
          "x0": 108.00000999999992,
          "y0": 349.7884444800001,
          "x1": 505.8777839804396,
          "y1": 359.75108448000015,
          "confidence": 0.4266666666666667,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 53,
      "text": "Speciﬁcally, in the compiler’s elaboration and eval-\nuation stages – where the parsed theorem code is ﬁrst converted into concrete syntax trees (in\npractice, Syntax objects) and abstract syntax trees (Expr objects) – we convert the CST and\nAST output objects into the relevant proof data and proof states in the form of proof trees\n(Lean.Elab.InfoTree).",
      "layout_matches": [
        {
          "text": "These states are extracted directly and symbolically from the underlying Lean compilation steps\nusing Lean’s rich metaprogramming suite. The implementation of this extraction system is mod-\neled from the work (Kim Morrison, 2024). Speciﬁcally, in the compiler’s elaboration and eval-\nuation stages – where the parsed theorem code is ﬁrst converted into concrete syntax trees (in\npractice, Syntax objects) and abstract syntax trees (Expr objects) – we convert the CST and\nAST output objects into the relevant proof data and proof states in the form of proof trees\n(Lean.Elab.InfoTree). These proof trees contain detailed context and information on a tactic-\nby-tactic level relating to the modiﬁcation of the proof state, metavariable context, and proof cor-\nrectness.",
          "page": 3,
          "x0": 107.63990999999987,
          "y0": 272.9886444800001,
          "x1": 505.8777839804396,
          "y1": 370.67098448000013,
          "width": 398.2378739804397,
          "height": 97.68234000000001,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.41040000000000004,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        3
      ],
      "primary_page": 3,
      "bounding_boxes": [
        {
          "page": 3,
          "x0": 107.63990999999987,
          "y0": 272.9886444800001,
          "x1": 505.8777839804396,
          "y1": 370.67098448000013,
          "confidence": 0.41040000000000004,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 54,
      "text": "These proof trees contain detailed context and information on a tactic-\nby-tactic level relating to the modiﬁcation of the proof state, metavariable context, and proof cor-\nrectness.",
      "layout_matches": [
        {
          "text": "by-tactic level relating to the modiﬁcation of the proof state, metavariable context, and proof cor-",
          "page": 3,
          "x0": 108.00006999999988,
          "y0": 284.02844448000013,
          "x1": 505.75776376357663,
          "y1": 293.99108448000015,
          "width": 397.75769376357675,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.49,
          "match_type": "substring_match"
        },
        {
          "text": "A typical approach (Polu & Sutskever, 2020) is to train on a large corpus of mathematical proofs\nsuch as Lean’s Mathlib (mathlib Community, 2020; Han et al., 2022; Polu et al., 2022; Lample et al.,\n2022; Yang et al., 2023; Hu et al., 2024). A model learns from the distribution of proofs in the cor-\npus, such as Mathlib-style proofs. Recently, the AlphaProof (AlphaProof & Teams, 2024) system\nwas shown to produce proofs with an arcane, non-human structure and syntax. We consider the\nnew problem of rewriting a proof to optimize a metric, such as rewriting a proof into a more read-\nable or more concise one. Proof optimization is more general than theorem proving, since we can\nalso rewrite an empty proof to optimize correctness. Finally, there is a rich literature on the var-\nied styles of (human) formal proofs (e.g., (Autexier & Dietrich, 2010; Wiedijk, 2004)). Our model,\nImProver, builds on neural theorem proving techniques including full proof generation (Jiang et al.,\n2023; First et al., 2023), conditioning on example proofs (Jiang et al., 2023), retrieval (Yang et al.,\n2023; Thakur et al., 2024), and preceding ﬁle context (First et al., 2023; Hu et al., 2024), as well as\nerror correction (Madaan et al., 2023; Chen et al., 2023) and documentation retrieval (Zhou et al.,\n2023) from code generation. ImProver brings these code generation techniques, along with new\nChain-of-States prompting and meta-programmed contextual information, into a uniﬁed proof opti-\nmization agent.",
          "page": 2,
          "x0": 107.6398439999999,
          "y0": 153.46874447999994,
          "x1": 505.7580729187221,
          "y1": 327.83058448,
          "width": 398.11822891872225,
          "height": 174.3618400000001,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.32592592592592595,
          "match_type": "word_overlap",
          "common_words_count": 11
        }
      ],
      "page_spans": [
        2,
        3
      ],
      "primary_page": 2,
      "bounding_boxes": [
        {
          "page": 3,
          "x0": 108.00006999999988,
          "y0": 284.02844448000013,
          "x1": 505.75776376357663,
          "y1": 293.99108448000015,
          "confidence": 0.49,
          "match_type": "substring_match"
        },
        {
          "page": 2,
          "x0": 107.6398439999999,
          "y0": 153.46874447999994,
          "x1": 505.7580729187221,
          "y1": 327.83058448,
          "confidence": 0.32592592592592595,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 55,
      "text": "After state extraction is completed and cached for efﬁcient future access, we annotate the proof text\nitself to contain the intermediate states in the form as comments.",
      "layout_matches": [
        {
          "text": "After state extraction is completed and cached for efﬁcient future access, we annotate the proof text\nitself to contain the intermediate states in the form as comments. Figure 2 shows an example.",
          "page": 3,
          "x0": 107.63991399999988,
          "y0": 245.14844448000014,
          "x1": 504.12977128106695,
          "y1": 266.03138448000016,
          "width": 396.4898572810671,
          "height": 20.88294000000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.7747422680412371,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        3
      ],
      "primary_page": 3,
      "bounding_boxes": [
        {
          "page": 3,
          "x0": 107.63991399999988,
          "y0": 245.14844448000014,
          "x1": 504.12977128106695,
          "y1": 266.03138448000016,
          "confidence": 0.7747422680412371,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 56,
      "text": "Figure 2 shows an example. This explicit reasoning aims to help the generator model construct more optimized proofs via addi-\ntional symbolic data.",
      "layout_matches": [
        {
          "text": "This explicit reasoning aims to help the generator model construct more optimized proofs via addi-\ntional symbolic data.",
          "page": 3,
          "x0": 107.63991399999989,
          "y0": 217.18874448000014,
          "x1": 505.7576245668118,
          "y1": 238.19118448000017,
          "width": 398.11771056681187,
          "height": 21.002440000000036,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.7346938775510204,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        3
      ],
      "primary_page": 3,
      "bounding_boxes": [
        {
          "page": 3,
          "x0": 107.63991399999989,
          "y0": 217.18874448000014,
          "x1": 505.7576245668118,
          "y1": 238.19118448000017,
          "confidence": 0.7346938775510204,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 57,
      "text": "3.1.2 OUTPUT FORMATTING. LLM outputs often contain ancillary and syntactically invalid content, especially before and after\nthe actual proof.",
      "layout_matches": [
        {
          "text": "LLM outputs often contain ancillary and syntactically invalid content, especially before and after\nthe actual proof. Additionally, by applying additional structure to the LLM outputs, we may hope to\ngenerate more structured proofs. To analyze this hypothesis, we introduce two additional output for-\nmats to the standard str output: flat and structured. The former enforces a tactic sequence\noutput as a list of strings, and the latter enforces a proof tree output as a tree of strings.",
          "page": 3,
          "x0": 108.00115799999986,
          "y0": 127.66894448000012,
          "x1": 505.7582681161254,
          "y1": 181.43148448000017,
          "width": 397.75711011612555,
          "height": 53.762540000000044,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6736842105263158,
          "match_type": "word_overlap",
          "common_words_count": 16
        }
      ],
      "page_spans": [
        3
      ],
      "primary_page": 3,
      "bounding_boxes": [
        {
          "page": 3,
          "x0": 108.00115799999986,
          "y0": 127.66894448000012,
          "x1": 505.7582681161254,
          "y1": 181.43148448000017,
          "confidence": 0.6736842105263158,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 58,
      "text": "Additionally, by applying additional structure to the LLM outputs, we may hope to\ngenerate more structured proofs.",
      "layout_matches": [
        {
          "text": "the actual proof. Additionally, by applying additional structure to the LLM outputs, we may hope to",
          "page": 3,
          "x0": 108.00115799999986,
          "y0": 160.54854448000015,
          "x1": 503.9418198800777,
          "y1": 170.51118448000017,
          "width": 395.9406618800778,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.5647058823529413,
          "match_type": "word_overlap",
          "common_words_count": 12
        }
      ],
      "page_spans": [
        3
      ],
      "primary_page": 3,
      "bounding_boxes": [
        {
          "page": 3,
          "x0": 108.00115799999986,
          "y0": 160.54854448000015,
          "x1": 503.9418198800777,
          "y1": 170.51118448000017,
          "confidence": 0.5647058823529413,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 59,
      "text": "To analyze this hypothesis, we introduce two additional output for-\nmats to the standard str output: flat and structured.",
      "layout_matches": [
        {
          "text": "generate more structured proofs. To analyze this hypothesis, we introduce two additional output for-",
          "page": 3,
          "x0": 108.00115799999989,
          "y0": 149.50874448000013,
          "x1": 505.7582681161254,
          "y1": 159.47138448000015,
          "width": 397.75711011612555,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.42105263157894735,
          "match_type": "word_overlap",
          "common_words_count": 10
        }
      ],
      "page_spans": [
        3
      ],
      "primary_page": 3,
      "bounding_boxes": [
        {
          "page": 3,
          "x0": 108.00115799999989,
          "y0": 149.50874448000013,
          "x1": 505.7582681161254,
          "y1": 159.47138448000015,
          "confidence": 0.42105263157894735,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 60,
      "text": "The former enforces a tactic sequence\noutput as a list of strings, and the latter enforces a proof tree output as a tree of strings.",
      "layout_matches": [
        {
          "text": "output as a list of strings, and the latter enforces a proof tree output as a tree of strings.",
          "page": 3,
          "x0": 108.00135799999987,
          "y0": 127.66894448000012,
          "x1": 452.85231701609246,
          "y1": 137.63158448000013,
          "width": 344.8509590160926,
          "height": 9.962640000000007,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.6389312977099236,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        3
      ],
      "primary_page": 3,
      "bounding_boxes": [
        {
          "page": 3,
          "x0": 108.00135799999987,
          "y0": 127.66894448000012,
          "x1": 452.85231701609246,
          "y1": 137.63158448000013,
          "confidence": 0.6389312977099236,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 61,
      "text": "3.1.3 SAMPLING METHOD\n\nWe also introduce different methods of sampling between many (sequential or parallel) LLM infer-\nence calls, involving best-of-n and iterative reﬁnement implementations, as well as combinations\nthereof.",
      "layout_matches": [
        {
          "text": "We also introduce different methods of sampling between many (sequential or parallel) LLM infer-\nence calls, involving best-of-n and iterative reﬁnement implementations, as well as combinations\nthereof.",
          "page": 3,
          "x0": 107.52141799999987,
          "y0": 59.98894448000012,
          "x1": 505.75902962373283,
          "y1": 91.79138448000012,
          "width": 398.23761162373296,
          "height": 31.802439999999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.81,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        3
      ],
      "primary_page": 3,
      "bounding_boxes": [
        {
          "page": 3,
          "x0": 107.52141799999987,
          "y0": 59.98894448000012,
          "x1": 505.75902962373283,
          "y1": 91.79138448000012,
          "confidence": 0.81,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 62,
      "text": "3\n\n\fWithout Chain-of-States\n\nWith Chain-of-States\n\nexample : s ∩ t ∪ s ∩ u ⊆ s ∩ (t ∪ u) := by\n\nexample : s ∩ t ∪ s ∩ u ⊆ s ∩ (t ∪ u)\n\n:= by\n\nrintro x (hxs, xti | hxs, xui)\n· use xs; left; exact xt\n.",
      "layout_matches": [
        {
          "text": "rintro x (hxs, xti | hxs, xui)\n/-\ncase inl.intro\nα : Type u_1\ns t u : Set α\nx : α\nxs : x ∈ s\nxt : x ∈ t\n⊢ x ∈ s ∩ (t ∪ u)\ncase inr.intro\nα : Type u_1\ns t u : Set α\nx : α\nxs : x ∈ s\nxu : x ∈ u\n⊢ x ∈ s ∩ (t ∪ u)\n-/\n· use xs; left; exact xt\n/-\nGoals Solved!\n-/\n. use xs; right; exact xu\n/-\nGoals Solved!\n-/",
          "page": 4,
          "x0": 317.1599600000001,
          "y0": 485.1827139,
          "x1": 437.02407000000005,
          "y1": 683.4367139,
          "width": 119.86410999999993,
          "height": 198.25399999999996,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.32000000000000006,
          "match_type": "word_overlap",
          "common_words_count": 14
        }
      ],
      "page_spans": [
        4
      ],
      "primary_page": 4,
      "bounding_boxes": [
        {
          "page": 4,
          "x0": 317.1599600000001,
          "y0": 485.1827139,
          "x1": 437.02407000000005,
          "y1": 683.4367139,
          "confidence": 0.32000000000000006,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 63,
      "text": "use xs; right; exact xu\n\nrintro x (hxs, xti | hxs, xui)\n/-\ncase inl.intro\nα : Type u_1\ns t u : Set α\nx : α\nxs : x ∈ s\nxt : x ∈ t\n⊢ x ∈ s ∩ (t ∪ u)\ncase inr.intro\nα : Type u_1\ns t u : Set α\nx : α\nxs : x ∈ s\nxu : x ∈ u\n⊢ x ∈ s ∩ (t ∪ u)\n-/\n· use xs; left; exact xt\n/-\nGoals Solved!",
      "layout_matches": [
        {
          "text": "rintro x (hxs, xti | hxs, xui)\n/-\ncase inl.intro\nα : Type u_1\ns t u : Set α\nx : α\nxs : x ∈ s\nxt : x ∈ t\n⊢ x ∈ s ∩ (t ∪ u)\ncase inr.intro\nα : Type u_1\ns t u : Set α\nx : α\nxs : x ∈ s\nxu : x ∈ u\n⊢ x ∈ s ∩ (t ∪ u)\n-/\n· use xs; left; exact xt\n/-\nGoals Solved!\n-/\n. use xs; right; exact xu\n/-\nGoals Solved!\n-/",
          "page": 4,
          "x0": 317.1599600000001,
          "y0": 485.1827139,
          "x1": 437.02407000000005,
          "y1": 683.4367139,
          "width": 119.86410999999993,
          "height": 198.25399999999996,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.3076923076923077,
          "match_type": "word_overlap",
          "common_words_count": 25
        }
      ],
      "page_spans": [
        4
      ],
      "primary_page": 4,
      "bounding_boxes": [
        {
          "page": 4,
          "x0": 317.1599600000001,
          "y0": 485.1827139,
          "x1": 437.02407000000005,
          "y1": 683.4367139,
          "confidence": 0.3076923076923077,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 64,
      "text": "-/\n. use xs; right; exact xu\n/-\nGoals Solved!",
      "layout_matches": [
        {
          "text": ". use xs; right; exact xu",
          "page": 4,
          "x0": 116.39979999999998,
          "y0": 660.9828639,
          "x1": 221.024318275827,
          "y1": 667.9568739,
          "width": 104.62451827582701,
          "height": 6.974010000000021,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.5175,
          "match_type": "substring_match"
        },
        {
          "text": "rintro x (hxs, xti | hxs, xui)\n· use xs; left; exact xt\n. use xs; right; exact xu",
          "page": 4,
          "x0": 116.39977999999994,
          "y0": 660.9828639,
          "x1": 236.26408999999995,
          "y1": 683.9167139,
          "width": 119.86431000000002,
          "height": 22.933850000000007,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.48,
          "match_type": "word_overlap",
          "common_words_count": 6
        }
      ],
      "page_spans": [
        4
      ],
      "primary_page": 4,
      "bounding_boxes": [
        {
          "page": 4,
          "x0": 116.39979999999998,
          "y0": 660.9828639,
          "x1": 221.024318275827,
          "y1": 667.9568739,
          "confidence": 0.5175,
          "match_type": "substring_match"
        },
        {
          "page": 4,
          "x0": 116.39977999999994,
          "y0": 660.9828639,
          "x1": 236.26408999999995,
          "y1": 683.9167139,
          "confidence": 0.48,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 65,
      "text": "-/\n\nFigure 2: A Lean proof (left) with Chain-of-States prompting annotations (right).",
      "layout_matches": [
        {
          "text": "Figure 2: A Lean proof (left) with Chain-of-States prompting annotations (right).",
          "page": 4,
          "x0": 144.24,
          "y0": 467.50814448,
          "x1": 467.9705957554711,
          "y1": 477.47078448,
          "width": 323.7305957554711,
          "height": 9.962640000000022,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.8769230769230769,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        4
      ],
      "primary_page": 4,
      "bounding_boxes": [
        {
          "page": 4,
          "x0": 144.24,
          "y0": 467.50814448,
          "x1": 467.9705957554711,
          "y1": 477.47078448,
          "confidence": 0.8769230769230769,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 66,
      "text": "Best-of-n The best-of-n technique generates multiple (n) calls to the language model and selects\nthe “best” via a simple selection policy that ﬁrst prioritizes output correctness, and secondly priori-\ntizes the evaluated metric delta score.",
      "layout_matches": [
        {
          "text": "Best-of-n The best-of-n technique generates multiple (n) calls to the language model and selects\nthe “best” via a simple selection policy that ﬁrst prioritizes output correctness, and secondly priori-\ntizes the evaluated metric delta score. More speciﬁcally, our scoring function is given by the 2-ary\ncomparison function S, whose arguments are output objects y, y′.",
          "page": 4,
          "x0": 107.99974000000009,
          "y0": 410.62814448,
          "x1": 505.87772938225885,
          "y1": 453.59033616,
          "width": 397.87798938225876,
          "height": 42.96219167999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.592436974789916,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        4
      ],
      "primary_page": 4,
      "bounding_boxes": [
        {
          "page": 4,
          "x0": 107.99974000000009,
          "y0": 410.62814448,
          "x1": 505.87772938225885,
          "y1": 453.59033616,
          "confidence": 0.592436974789916,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 67,
      "text": "More speciﬁcally, our scoring function is given by the 2-ary\ncomparison function S, whose arguments are output objects y, y′.",
      "layout_matches": [
        {
          "text": "comparison function S, whose arguments are output objects y, y′.",
          "page": 4,
          "x0": 107.99974000000009,
          "y0": 410.62814448,
          "x1": 369.57085000000006,
          "y1": 421.63038750000004,
          "width": 261.57111,
          "height": 11.002243020000037,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.4537190082644628,
          "match_type": "substring_match"
        },
        {
          "text": "tizes the evaluated metric delta score. More speciﬁcally, our scoring function is given by the 2-ary",
          "page": 4,
          "x0": 107.99990000000003,
          "y0": 421.22924,
          "x1": 504.54105530558564,
          "y1": 431.51068448,
          "width": 396.5411553055856,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.4,
          "match_type": "word_overlap",
          "common_words_count": 10
        }
      ],
      "page_spans": [
        4
      ],
      "primary_page": 4,
      "bounding_boxes": [
        {
          "page": 4,
          "x0": 107.99974000000009,
          "y0": 410.62814448,
          "x1": 369.57085000000006,
          "y1": 421.63038750000004,
          "confidence": 0.4537190082644628,
          "match_type": "substring_match"
        },
        {
          "page": 4,
          "x0": 107.99990000000003,
          "y0": 421.22924,
          "x1": 504.54105530558564,
          "y1": 431.51068448,
          "confidence": 0.4,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 68,
      "text": "max(y, y′, key: x 7→ µ(x)), E(y) = E(y′) = 0\ny,\ny′,\nmin(y, y′, key: x 7→ E(x)), E(y) = E(y′) > 0\n\nE(y) = 0, E(y′) > 0\nE(y) > 0, E(y′) = 0\n\nS(y, y′) =\n\n\n\n\n\n\nWhere µ(x) is the metric score of x, and E(x) is the number of errors in x.",
      "layout_matches": [
        {
          "text": "Where µ(x) is the metric score of x, and E(x) is the number of errors in x.",
          "page": 4,
          "x0": 107.51939999999985,
          "y0": 315.50926,
          "x1": 407.60865999999976,
          "y1": 325.81062976,
          "width": 300.0892599999999,
          "height": 10.30136976,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.3865030674846626,
          "match_type": "substring_match"
        },
        {
          "text": "max(y, y′, key: x 7→ µ(x)), E(y) = E(y′) = 0\ny,\ny′,\nmin(y, y′, key: x 7→ E(x)), E(y) = E(y′) > 0",
          "page": 4,
          "x0": 228.83921999999995,
          "y0": 340.82916,
          "x1": 426.7807199999998,
          "y1": 391.6303275,
          "width": 197.94149999999985,
          "height": 50.80116750000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.3257668711656442,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        4
      ],
      "primary_page": 4,
      "bounding_boxes": [
        {
          "page": 4,
          "x0": 107.51939999999985,
          "y0": 315.50926,
          "x1": 407.60865999999976,
          "y1": 325.81062976,
          "confidence": 0.3865030674846626,
          "match_type": "substring_match"
        },
        {
          "page": 4,
          "x0": 228.83921999999995,
          "y0": 340.82916,
          "x1": 426.7807199999998,
          "y1": 391.6303275,
          "confidence": 0.3257668711656442,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 69,
      "text": "This comparison function can be extended to evaluate the best output of any ﬁnite n via induction.",
      "layout_matches": [
        {
          "text": "This comparison function can be extended to evaluate the best output of any ﬁnite n via induction.",
          "page": 4,
          "x0": 107.63899999999978,
          "y0": 298.90816448,
          "x1": 499.7701493362105,
          "y1": 308.89072976,
          "width": 392.13114933621074,
          "height": 9.982565280000017,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.9,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        4
      ],
      "primary_page": 4,
      "bounding_boxes": [
        {
          "page": 4,
          "x0": 107.63899999999978,
          "y0": 298.90816448,
          "x1": 499.7701493362105,
          "y1": 308.89072976,
          "confidence": 0.9,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 70,
      "text": "This best-of-n technique is implemented as a curried function such that each of the n calls can be\nhandled by any arbitrary sampling method, or just a single standard prompt at user discretion.",
      "layout_matches": [
        {
          "text": "This best-of-n technique is implemented as a curried function such that each of the n calls can be",
          "page": 4,
          "x0": 107.6381999999997,
          "y0": 281.98826448,
          "x1": 504.1014176856576,
          "y1": 291.97082976,
          "width": 396.4632176856579,
          "height": 9.982565280000017,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.459375,
          "match_type": "substring_match"
        },
        {
          "text": "This best-of-n technique is implemented as a curried function such that each of the n calls can be\nhandled by any arbitrary sampling method, or just a single standard prompt at user discretion. It\nutilizes thread-based parallelism to speed up the relatively large number of calls to the language\nmodel, as well as process-based parallelism for the n evaluation calls to the Lean language server.",
          "page": 4,
          "x0": 107.6381999999997,
          "y0": 249.10826447999997,
          "x1": 504.2223621634564,
          "y1": 291.97082976,
          "width": 396.5841621634567,
          "height": 42.86256528000004,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.4396946564885496,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        4
      ],
      "primary_page": 4,
      "bounding_boxes": [
        {
          "page": 4,
          "x0": 107.6381999999997,
          "y0": 281.98826448,
          "x1": 504.1014176856576,
          "y1": 291.97082976,
          "confidence": 0.459375,
          "match_type": "substring_match"
        },
        {
          "page": 4,
          "x0": 107.6381999999997,
          "y0": 249.10826447999997,
          "x1": 504.2223621634564,
          "y1": 291.97082976,
          "confidence": 0.4396946564885496,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 71,
      "text": "It\nutilizes thread-based parallelism to speed up the relatively large number of calls to the language\nmodel, as well as process-based parallelism for the n evaluation calls to the Lean language server.",
      "layout_matches": [
        {
          "text": "This best-of-n technique is implemented as a curried function such that each of the n calls can be\nhandled by any arbitrary sampling method, or just a single standard prompt at user discretion. It\nutilizes thread-based parallelism to speed up the relatively large number of calls to the language\nmodel, as well as process-based parallelism for the n evaluation calls to the Lean language server.",
          "page": 4,
          "x0": 107.6381999999997,
          "y0": 249.10826447999997,
          "x1": 504.2223621634564,
          "y1": 291.97082976,
          "width": 396.5841621634567,
          "height": 42.86256528000004,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.4580152671755725,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        4
      ],
      "primary_page": 4,
      "bounding_boxes": [
        {
          "page": 4,
          "x0": 107.6381999999997,
          "y0": 249.10826447999997,
          "x1": 504.2223621634564,
          "y1": 291.97082976,
          "confidence": 0.4580152671755725,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 72,
      "text": "Error correction and Reﬁnement\nInspired by self-debugging techniques in code genera-\ntion (Madaan et al., 2023; Chen et al., 2023), ImProver identiﬁes and corrects errors in the gen-\nerated proofs by iteratively reﬁning its outputs.",
      "layout_matches": [
        {
          "text": "Error correction and Reﬁnement\nInspired by self-debugging techniques in code genera-\ntion (Madaan et al., 2023; Chen et al., 2023), ImProver identiﬁes and corrects errors in the gen-\nerated proofs by iteratively reﬁning its outputs. The reﬁnement process relies on user-deﬁned pa-\nrameters n and prev_num to specify the number of iterations and the number of previous iteration\ninfo to forward, respectively. Each iteration carries information on the last prev_num iterations,\nincluding input, output, metric score, correctness, and error messages.",
          "page": 4,
          "x0": 107.9976399999997,
          "y0": 168.46856447999997,
          "x1": 505.8756471734309,
          "y1": 233.39045615999999,
          "width": 397.8780071734312,
          "height": 64.92189168000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.3794776119402985,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        4
      ],
      "primary_page": 4,
      "bounding_boxes": [
        {
          "page": 4,
          "x0": 107.9976399999997,
          "y0": 168.46856447999997,
          "x1": 505.8756471734309,
          "y1": 233.39045615999999,
          "confidence": 0.3794776119402985,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 73,
      "text": "The reﬁnement process relies on user-deﬁned pa-\nrameters n and prev_num to specify the number of iterations and the number of previous iteration\ninfo to forward, respectively.",
      "layout_matches": [
        {
          "text": "rameters n and prev_num to specify the number of iterations and the number of previous iteration",
          "page": 4,
          "x0": 107.99783999999971,
          "y0": 190.42826447999997,
          "x1": 504.05924837410896,
          "y1": 200.70970895999997,
          "width": 396.06140837410925,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.496551724137931,
          "match_type": "substring_match"
        },
        {
          "text": "The reﬁnement technique iteratively improves the prompt output by feeding back the results into\nthe prompt function, additionally forwarding errors and metric scores. Similar to the best-of-n tech-\nnique, it relies on an argument n for the number of reﬁnement steps, and is curried such that each\nreﬁnement step can be handled by any other prompting function. However, unlike best-of-n, there is\nno opportunity for parallelism as each iteration is dependent on information from the previous call.",
          "page": 4,
          "x0": 107.63663999999969,
          "y0": 107.74836447999996,
          "x1": 505.7544687190605,
          "y1": 161.51090448,
          "width": 398.11782871906087,
          "height": 53.76254000000003,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.32592592592592595,
          "match_type": "word_overlap",
          "common_words_count": 11
        }
      ],
      "page_spans": [
        4
      ],
      "primary_page": 4,
      "bounding_boxes": [
        {
          "page": 4,
          "x0": 107.99783999999971,
          "y0": 190.42826447999997,
          "x1": 504.05924837410896,
          "y1": 200.70970895999997,
          "confidence": 0.496551724137931,
          "match_type": "substring_match"
        },
        {
          "page": 4,
          "x0": 107.63663999999969,
          "y0": 107.74836447999996,
          "x1": 505.7544687190605,
          "y1": 161.51090448,
          "confidence": 0.32592592592592595,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 74,
      "text": "Each iteration carries information on the last prev_num iterations,\nincluding input, output, metric score, correctness, and error messages.",
      "layout_matches": [
        {
          "text": "including input, output, metric score, correctness, and error messages.",
          "page": 4,
          "x0": 107.9976399999997,
          "y0": 168.46856447999997,
          "x1": 386.7284757207013,
          "y1": 178.43120448,
          "width": 278.7308357207016,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.45,
          "match_type": "substring_match"
        },
        {
          "text": "info to forward, respectively. Each iteration carries information on the last prev_num iterations,",
          "page": 4,
          "x0": 107.99783999999977,
          "y0": 179.38846447999998,
          "x1": 505.40828901778815,
          "y1": 189.66990896,
          "width": 397.4104490177884,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.4,
          "match_type": "word_overlap",
          "common_words_count": 9
        }
      ],
      "page_spans": [
        4
      ],
      "primary_page": 4,
      "bounding_boxes": [
        {
          "page": 4,
          "x0": 107.9976399999997,
          "y0": 168.46856447999997,
          "x1": 386.7284757207013,
          "y1": 178.43120448,
          "confidence": 0.45,
          "match_type": "substring_match"
        },
        {
          "page": 4,
          "x0": 107.99783999999977,
          "y0": 179.38846447999998,
          "x1": 505.40828901778815,
          "y1": 189.66990896,
          "confidence": 0.4,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 75,
      "text": "The reﬁnement technique iteratively improves the prompt output by feeding back the results into\nthe prompt function, additionally forwarding errors and metric scores.",
      "layout_matches": [
        {
          "text": "The reﬁnement technique iteratively improves the prompt output by feeding back the results into",
          "page": 4,
          "x0": 107.63663999999969,
          "y0": 151.54826447999997,
          "x1": 504.0578409407092,
          "y1": 161.51090448,
          "width": 396.42120094070947,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.5181818181818182,
          "match_type": "substring_match"
        },
        {
          "text": "the prompt function, additionally forwarding errors and metric scores. Similar to the best-of-n tech-",
          "page": 4,
          "x0": 107.9966399999997,
          "y0": 140.62836447999996,
          "x1": 505.7544687190605,
          "y1": 150.59100447999998,
          "width": 397.75782871906085,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.3130434782608696,
          "match_type": "word_overlap",
          "common_words_count": 9
        }
      ],
      "page_spans": [
        4
      ],
      "primary_page": 4,
      "bounding_boxes": [
        {
          "page": 4,
          "x0": 107.63663999999969,
          "y0": 151.54826447999997,
          "x1": 504.0578409407092,
          "y1": 161.51090448,
          "confidence": 0.5181818181818182,
          "match_type": "substring_match"
        },
        {
          "page": 4,
          "x0": 107.9966399999997,
          "y0": 140.62836447999996,
          "x1": 505.7544687190605,
          "y1": 150.59100447999998,
          "confidence": 0.3130434782608696,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 76,
      "text": "Similar to the best-of-n tech-\nnique, it relies on an argument n for the number of reﬁnement steps, and is curried such that each\nreﬁnement step can be handled by any other prompting function.",
      "layout_matches": [
        {
          "text": "nique, it relies on an argument n for the number of reﬁnement steps, and is curried such that each",
          "page": 4,
          "x0": 107.9966399999997,
          "y0": 129.58856447999995,
          "x1": 504.0581025209789,
          "y1": 139.57112975999996,
          "width": 396.06146252097915,
          "height": 9.982565280000017,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.45473684210526316,
          "match_type": "substring_match"
        },
        {
          "text": "This best-of-n technique is implemented as a curried function such that each of the n calls can be\nhandled by any arbitrary sampling method, or just a single standard prompt at user discretion. It\nutilizes thread-based parallelism to speed up the relatively large number of calls to the language\nmodel, as well as process-based parallelism for the n evaluation calls to the Lean language server.",
          "page": 4,
          "x0": 107.6381999999997,
          "y0": 249.10826447999997,
          "x1": 504.2223621634564,
          "y1": 291.97082976,
          "width": 396.5841621634567,
          "height": 42.86256528000004,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.42352941176470593,
          "match_type": "word_overlap",
          "common_words_count": 18
        }
      ],
      "page_spans": [
        4
      ],
      "primary_page": 4,
      "bounding_boxes": [
        {
          "page": 4,
          "x0": 107.9966399999997,
          "y0": 129.58856447999995,
          "x1": 504.0581025209789,
          "y1": 139.57112975999996,
          "confidence": 0.45473684210526316,
          "match_type": "substring_match"
        },
        {
          "page": 4,
          "x0": 107.6381999999997,
          "y0": 249.10826447999997,
          "x1": 504.2223621634564,
          "y1": 291.97082976,
          "confidence": 0.42352941176470593,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 77,
      "text": "However, unlike best-of-n, there is\nno opportunity for parallelism as each iteration is dependent on information from the previous call.",
      "layout_matches": [
        {
          "text": "no opportunity for parallelism as each iteration is dependent on information from the previous call.",
          "page": 4,
          "x0": 107.9967199999997,
          "y0": 107.74836447999996,
          "x1": 502.04734526069643,
          "y1": 117.71100447999996,
          "width": 394.05062526069673,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.6716417910447762,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        4
      ],
      "primary_page": 4,
      "bounding_boxes": [
        {
          "page": 4,
          "x0": 107.9967199999997,
          "y0": 107.74836447999996,
          "x1": 502.04734526069643,
          "y1": 117.71100447999996,
          "confidence": 0.6716417910447762,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 78,
      "text": "Combination Sampling and Compound Prompt Functions Compound prompt functions utilize\nthe curried nature of the implementations of best-of-n and reﬁnement to nest these techniques within\none another.",
      "layout_matches": [
        {
          "text": "Combination Sampling and Compound Prompt Functions Compound prompt functions utilize\nthe curried nature of the implementations of best-of-n and reﬁnement to nest these techniques within\none another. For example:",
          "page": 4,
          "x0": 107.9967199999997,
          "y0": 59.98866447999996,
          "x1": 504.0582670980756,
          "y1": 91.91065615999996,
          "width": 396.0615470980759,
          "height": 31.921991679999998,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.8485714285714285,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        4
      ],
      "primary_page": 4,
      "bounding_boxes": [
        {
          "page": 4,
          "x0": 107.9967199999997,
          "y0": 59.98866447999996,
          "x1": 504.0582670980756,
          "y1": 91.91065615999996,
          "confidence": 0.8485714285714285,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 79,
      "text": "For example:\n\n4\n\n\fbest_of_n((refinement,m),n) is a compound sampling method that run a best-of-n,\nwhere each call is a m-step reﬁnement.",
      "layout_matches": [
        {
          "text": "best_of_n((refinement,m),n) is a compound sampling method that run a best-of-n,\nwhere each call is a m-step reﬁnement.",
          "page": 5,
          "x0": 107.63999999999999,
          "y0": 686.98834448,
          "x1": 505.53065999999995,
          "y1": 708.30958896,
          "width": 397.89065999999997,
          "height": 21.32124448000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.7992,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        5
      ],
      "primary_page": 5,
      "bounding_boxes": [
        {
          "page": 5,
          "x0": 107.63999999999999,
          "y0": 686.98834448,
          "x1": 505.53065999999995,
          "y1": 708.30958896,
          "confidence": 0.7992,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 80,
      "text": "refinement((best_of_n,m),n) is a compound sampling method that runs a n-step reﬁne-\nment, where each call is a best-of-m call to the LLM.",
      "layout_matches": [
        {
          "text": "refinement((best_of_n,m),n) is a compound sampling method that runs a n-step reﬁne-\nment, where each call is a best-of-m call to the LLM.",
          "page": 5,
          "x0": 108.00016,
          "y0": 659.14814448,
          "x1": 505.7577751482061,
          "y1": 680.34948896,
          "width": 397.7576151482061,
          "height": 21.20134447999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.9,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        5
      ],
      "primary_page": 5,
      "bounding_boxes": [
        {
          "page": 5,
          "x0": 108.00016,
          "y0": 659.14814448,
          "x1": 505.7577751482061,
          "y1": 680.34948896,
          "confidence": 0.9,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 81,
      "text": "Note that with each of these compound prompt functions, there are always a total of mn iterations.",
      "layout_matches": [
        {
          "text": "Note that with each of these compound prompt functions, there are always a total of mn iterations.",
          "page": 5,
          "x0": 107.99996000000002,
          "y0": 642.2282444800001,
          "x1": 501.69040901778845,
          "y1": 652.2108097600001,
          "width": 393.6904490177884,
          "height": 9.982565280000017,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.9,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        5
      ],
      "primary_page": 5,
      "bounding_boxes": [
        {
          "page": 5,
          "x0": 107.99996000000002,
          "y0": 642.2282444800001,
          "x1": 501.69040901778845,
          "y1": 652.2108097600001,
          "confidence": 0.9,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 82,
      "text": "3.1.4 RETRIEVAL\n\nImProver uses MMR (Maximum Marginal Relevance)-based (Carbonell & Goldstein, 1998)\nretrieval-augmented generation to select relevant examples and documents.",
      "layout_matches": [
        {
          "text": "ImProver uses MMR (Maximum Marginal Relevance)-based (Carbonell & Goldstein, 1998)\nretrieval-augmented generation to select relevant examples and documents.",
          "page": 5,
          "x0": 107.99996000000004,
          "y0": 587.26814448,
          "x1": 504.6775328351137,
          "y1": 608.27098448,
          "width": 396.67757283511366,
          "height": 21.002839999999992,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.8132530120481928,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        5
      ],
      "primary_page": 5,
      "bounding_boxes": [
        {
          "page": 5,
          "x0": 107.99996000000004,
          "y0": 587.26814448,
          "x1": 504.6775328351137,
          "y1": 608.27098448,
          "confidence": 0.8132530120481928,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 83,
      "text": "More speciﬁcally, example retrieval selects the most relevant user-generated examples of proof op-\ntimization on a speciﬁc metric.",
      "layout_matches": [
        {
          "text": "More speciﬁcally, example retrieval selects the most relevant user-generated examples of proof op-",
          "page": 5,
          "x0": 107.99996000000002,
          "y0": 570.3482444800001,
          "x1": 505.7580654165121,
          "y1": 580.31088448,
          "width": 397.7581054165121,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.6767441860465117,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        5
      ],
      "primary_page": 5,
      "bounding_boxes": [
        {
          "page": 5,
          "x0": 107.99996000000002,
          "y0": 570.3482444800001,
          "x1": 505.7580654165121,
          "y1": 580.31088448,
          "confidence": 0.6767441860465117,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 84,
      "text": "Namely, each metric is loaded with a cached (vector) database\npopulated with human-made examples of preoptimized and postoptimized pairs of Lean theorems.",
      "layout_matches": [
        {
          "text": "populated with human-made examples of preoptimized and postoptimized pairs of Lean theorems.",
          "page": 5,
          "x0": 107.99996000000004,
          "y0": 548.5084444800001,
          "x1": 505.8907092130482,
          "y1": 558.4710844800001,
          "width": 397.89074921304814,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.5483443708609271,
          "match_type": "substring_match"
        },
        {
          "text": "More speciﬁcally, example retrieval selects the most relevant user-generated examples of proof op-\ntimization on a speciﬁc metric. Namely, each metric is loaded with a cached (vector) database\npopulated with human-made examples of preoptimized and postoptimized pairs of Lean theorems.\nThe number of examples that are retrieved is user-speciﬁed.",
          "page": 5,
          "x0": 107.63996000000003,
          "y0": 537.4686444800001,
          "x1": 505.8907092130482,
          "y1": 580.31088448,
          "width": 398.25074921304815,
          "height": 42.84223999999995,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.398533724340176,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        5
      ],
      "primary_page": 5,
      "bounding_boxes": [
        {
          "page": 5,
          "x0": 107.99996000000004,
          "y0": 548.5084444800001,
          "x1": 505.8907092130482,
          "y1": 558.4710844800001,
          "confidence": 0.5483443708609271,
          "match_type": "substring_match"
        },
        {
          "page": 5,
          "x0": 107.63996000000003,
          "y0": 537.4686444800001,
          "x1": 505.8907092130482,
          "y1": 580.31088448,
          "confidence": 0.398533724340176,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 85,
      "text": "The number of examples that are retrieved is user-speciﬁed.",
      "layout_matches": [
        {
          "text": "The number of examples that are retrieved is user-speciﬁed.",
          "page": 5,
          "x0": 107.63996000000003,
          "y0": 537.4686444800001,
          "x1": 345.9302013431251,
          "y1": 547.43128448,
          "width": 238.29024134312505,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.9,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        5
      ],
      "primary_page": 5,
      "bounding_boxes": [
        {
          "page": 5,
          "x0": 107.63996000000003,
          "y0": 537.4686444800001,
          "x1": 345.9302013431251,
          "y1": 547.43128448,
          "confidence": 0.9,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 86,
      "text": "Document retrieval extracts information using MMR from a pair of ﬁxed (vector) databases.",
      "layout_matches": [
        {
          "text": "Document retrieval extracts information using MMR from a pair of ﬁxed (vector) databases. The",
          "page": 5,
          "x0": 108.00011600000003,
          "y0": 520.5483444800001,
          "x1": 504.1035135286009,
          "y1": 530.51098448,
          "width": 396.10339752860085,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.8604395604395605,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        5
      ],
      "primary_page": 5,
      "bounding_boxes": [
        {
          "page": 5,
          "x0": 108.00011600000003,
          "y0": 520.5483444800001,
          "x1": 504.1035135286009,
          "y1": 530.51098448,
          "confidence": 0.8604395604395605,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 87,
      "text": "The\ndatabases store semantically chunked data from the Theorem Proving in Lean (TPiL) handbook –\ncontaining syntax guides and tactic explanations – and the Mathlib mathematics libary – containing\nthousands of theorems and lemmas.",
      "layout_matches": [
        {
          "text": "containing syntax guides and tactic explanations – and the Mathlib mathematics libary – containing",
          "page": 5,
          "x0": 108.00011600000002,
          "y0": 498.7085444800001,
          "x1": 504.1816561357268,
          "y1": 508.67118448000014,
          "width": 396.1815401357268,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.3857142857142857,
          "match_type": "substring_match"
        },
        {
          "text": "Document retrieval extracts information using MMR from a pair of ﬁxed (vector) databases. The\ndatabases store semantically chunked data from the Theorem Proving in Lean (TPiL) handbook –\ncontaining syntax guides and tactic explanations – and the Mathlib mathematics libary – containing\nthousands of theorems and lemmas. The chunking is handled by a recursive character splitter, which\nsplits the TPiL markdown ﬁles at on its headers and Mathlib ﬁles at the start of theorems, examples,\nlemmas, and deﬁnitions – with chunk sizes of 1000 characters with a 200 character overlap.",
          "page": 5,
          "x0": 108.00011600000002,
          "y0": 465.8285444800001,
          "x1": 505.50199106958246,
          "y1": 530.51098448,
          "width": 397.5018750695824,
          "height": 64.68243999999993,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.3574468085106383,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        5
      ],
      "primary_page": 5,
      "bounding_boxes": [
        {
          "page": 5,
          "x0": 108.00011600000002,
          "y0": 498.7085444800001,
          "x1": 504.1816561357268,
          "y1": 508.67118448000014,
          "confidence": 0.3857142857142857,
          "match_type": "substring_match"
        },
        {
          "page": 5,
          "x0": 108.00011600000002,
          "y0": 465.8285444800001,
          "x1": 505.50199106958246,
          "y1": 530.51098448,
          "confidence": 0.3574468085106383,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 88,
      "text": "The chunking is handled by a recursive character splitter, which\nsplits the TPiL markdown ﬁles at on its headers and Mathlib ﬁles at the start of theorems, examples,\nlemmas, and deﬁnitions – with chunk sizes of 1000 characters with a 200 character overlap.",
      "layout_matches": [
        {
          "text": "Document retrieval extracts information using MMR from a pair of ﬁxed (vector) databases. The\ndatabases store semantically chunked data from the Theorem Proving in Lean (TPiL) handbook –\ncontaining syntax guides and tactic explanations – and the Mathlib mathematics libary – containing\nthousands of theorems and lemmas. The chunking is handled by a recursive character splitter, which\nsplits the TPiL markdown ﬁles at on its headers and Mathlib ﬁles at the start of theorems, examples,\nlemmas, and deﬁnitions – with chunk sizes of 1000 characters with a 200 character overlap.",
          "page": 5,
          "x0": 108.00011600000002,
          "y0": 465.8285444800001,
          "x1": 505.50199106958246,
          "y1": 530.51098448,
          "width": 397.5018750695824,
          "height": 64.68243999999993,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.40053191489361706,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        5
      ],
      "primary_page": 5,
      "bounding_boxes": [
        {
          "page": 5,
          "x0": 108.00011600000002,
          "y0": 465.8285444800001,
          "x1": 505.50199106958246,
          "y1": 530.51098448,
          "confidence": 0.40053191489361706,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 89,
      "text": "The Mathlib retriever ﬁnds the top k documents that score the highest MMR score against the current\ntheorem, the TPiL retriever ﬁnds the top k documents that score the highest MMR score against the\ncurrent theorem in context and all current error messages.",
      "layout_matches": [
        {
          "text": "The Mathlib retriever ﬁnds the top k documents that score the highest MMR score against the current\ntheorem, the TPiL retriever ﬁnds the top k documents that score the highest MMR score against the\ncurrent theorem in context and all current error messages. This retrieval process helps in generating\nmore contextually accurate prompts that allow the language model to better correct its own errors as\nwell as ﬁnd useful lemmas to reference.",
          "page": 5,
          "x0": 107.63887600000018,
          "y0": 404.9888444800001,
          "x1": 504.30061880236303,
          "y1": 458.7713097600001,
          "width": 396.6617428023628,
          "height": 53.78246528,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.5227790432801822,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        5
      ],
      "primary_page": 5,
      "bounding_boxes": [
        {
          "page": 5,
          "x0": 107.63887600000018,
          "y0": 404.9888444800001,
          "x1": 504.30061880236303,
          "y1": 458.7713097600001,
          "confidence": 0.5227790432801822,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 90,
      "text": "This retrieval process helps in generating\nmore contextually accurate prompts that allow the language model to better correct its own errors as\nwell as ﬁnd useful lemmas to reference.",
      "layout_matches": [
        {
          "text": "more contextually accurate prompts that allow the language model to better correct its own errors as",
          "page": 5,
          "x0": 107.99887600000017,
          "y0": 415.9087444800001,
          "x1": 504.03479249608876,
          "y1": 425.87138448000013,
          "width": 396.0359164960886,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.49180327868852464,
          "match_type": "substring_match"
        },
        {
          "text": "The Mathlib retriever ﬁnds the top k documents that score the highest MMR score against the current\ntheorem, the TPiL retriever ﬁnds the top k documents that score the highest MMR score against the\ncurrent theorem in context and all current error messages. This retrieval process helps in generating\nmore contextually accurate prompts that allow the language model to better correct its own errors as\nwell as ﬁnd useful lemmas to reference.",
          "page": 5,
          "x0": 107.63887600000018,
          "y0": 404.9888444800001,
          "x1": 504.30061880236303,
          "y1": 458.7713097600001,
          "width": 396.6617428023628,
          "height": 53.78246528,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.3751708428246014,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        5
      ],
      "primary_page": 5,
      "bounding_boxes": [
        {
          "page": 5,
          "x0": 107.99887600000017,
          "y0": 415.9087444800001,
          "x1": 504.03479249608876,
          "y1": 425.87138448000013,
          "confidence": 0.49180327868852464,
          "match_type": "substring_match"
        },
        {
          "page": 5,
          "x0": 107.63887600000018,
          "y0": 404.9888444800001,
          "x1": 504.30061880236303,
          "y1": 458.7713097600001,
          "confidence": 0.3751708428246014,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 91,
      "text": "4 EXPERIMENTS\n\nWe test ImProver on rewriting real-world undergraduate theorems, competition problems, and\nresearch-level mathematics and compare its results to those of the base GPT-4o and GPT-4o-mini\nmodels.",
      "layout_matches": [
        {
          "text": "We test ImProver on rewriting real-world undergraduate theorems, competition problems, and\nresearch-level mathematics and compare its results to those of the base GPT-4o and GPT-4o-mini\nmodels. We examine the optimization capabilities of ImProver for the length and readability met-\nrics - studying the effectiveness in maintaining the correctness of the tactic proof while making it\nmore concise, as well as making it more declarative in style and readable in practice.",
          "page": 5,
          "x0": 107.51897600000018,
          "y0": 307.4288444800002,
          "x1": 505.7563586841628,
          "y1": 361.1913844800002,
          "width": 398.23738268416264,
          "height": 53.76254,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6857142857142857,
          "match_type": "word_overlap",
          "common_words_count": 24
        }
      ],
      "page_spans": [
        5
      ],
      "primary_page": 5,
      "bounding_boxes": [
        {
          "page": 5,
          "x0": 107.51897600000018,
          "y0": 307.4288444800002,
          "x1": 505.7563586841628,
          "y1": 361.1913844800002,
          "confidence": 0.6857142857142857,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 92,
      "text": "We examine the optimization capabilities of ImProver for the length and readability met-\nrics - studying the effectiveness in maintaining the correctness of the tactic proof while making it\nmore concise, as well as making it more declarative in style and readable in practice.",
      "layout_matches": [
        {
          "text": "We test ImProver on rewriting real-world undergraduate theorems, competition problems, and\nresearch-level mathematics and compare its results to those of the base GPT-4o and GPT-4o-mini\nmodels. We examine the optimization capabilities of ImProver for the length and readability met-\nrics - studying the effectiveness in maintaining the correctness of the tactic proof while making it\nmore concise, as well as making it more declarative in style and readable in practice.",
          "page": 5,
          "x0": 107.51897600000018,
          "y0": 307.4288444800002,
          "x1": 505.7563586841628,
          "y1": 361.1913844800002,
          "width": 398.23738268416264,
          "height": 53.76254,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.5299785867237687,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        5
      ],
      "primary_page": 5,
      "bounding_boxes": [
        {
          "page": 5,
          "x0": 107.51897600000018,
          "y0": 307.4288444800002,
          "x1": 505.7563586841628,
          "y1": 361.1913844800002,
          "confidence": 0.5299785867237687,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 93,
      "text": "4.1 SETUP\n\nOur experimentation is split into three distinct stages.",
      "layout_matches": [
        {
          "text": "Our experimentation is split into three distinct stages. We ﬁrst perform ablation testing on the\nImProver model parameters (§3.1) to ensure that ImProver’s parameter speciﬁcation is the optimal\none with respect to correctness and metric optimization score. We then evaluate this optimal param-\neter combination on datasets of varying complexity and analyze the performance and results thereof.\nLastly, we note the performance of ImProver in NTP applications in comparison to the base GPT-4o\nand GPT-4o-mini models.",
          "page": 5,
          "x0": 107.99887600000008,
          "y0": 205.90904448000015,
          "x1": 506.0095274203015,
          "y1": 270.71138448000016,
          "width": 398.01065142030143,
          "height": 64.80234000000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6400000000000001,
          "match_type": "word_overlap",
          "common_words_count": 8
        }
      ],
      "page_spans": [
        5
      ],
      "primary_page": 5,
      "bounding_boxes": [
        {
          "page": 5,
          "x0": 107.99887600000008,
          "y0": 205.90904448000015,
          "x1": 506.0095274203015,
          "y1": 270.71138448000016,
          "confidence": 0.6400000000000001,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 94,
      "text": "We ﬁrst perform ablation testing on the\nImProver model parameters (§3.1) to ensure that ImProver’s parameter speciﬁcation is the optimal\none with respect to correctness and metric optimization score.",
      "layout_matches": [
        {
          "text": "ImProver model parameters (§3.1) to ensure that ImProver’s parameter speciﬁcation is the optimal",
          "page": 5,
          "x0": 107.99897600000014,
          "y0": 249.51004000000015,
          "x1": 504.1287780955339,
          "y1": 259.7914844800001,
          "width": 396.12980209553376,
          "height": 10.281444479999976,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.4246153846153846,
          "match_type": "substring_match"
        },
        {
          "text": "Large language models (LLMs) have been used to generate formal proofs of math-\nematical theorems in proofs assistants such as Lean. However, we often want to\noptimize a formal proof with respect to various criteria, depending on its down-\nstream use. For example, we may want a proof to adhere to a certain style, or to be\nreadable, concise, or modularly structured. Having suitably optimized proofs is\nalso important for learning tasks, especially since human-written proofs may not\noptimal for that purpose. To this end, we study a new problem of automated proof\noptimization: rewriting a proof so that it is correct and optimizes for an arbitrary\ncriterion, such as length or readability. As a ﬁrst method for automated proof opti-\nmization, we present ImProver, a large-language-model agent that rewrites proofs\nto optimize arbitrary user-deﬁned metrics in Lean. We ﬁnd that naively applying\nLLMs to proof optimization falls short, and we incorporate various improvements\ninto ImProver, such as the use of symbolic Lean context in a novel Chain-of-\nStates technique, as well as error-correction and retrieval. We test ImProver on\nrewriting real-world undergraduate, competition, and research-level mathematics\ntheorems, ﬁnding that ImProver is capable of rewriting proofs so that they are\nsubstantially shorter, more modular, and more readable.",
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "width": 326.1175505972419,
          "height": 185.2821399999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.35862068965517246,
          "match_type": "word_overlap",
          "common_words_count": 13
        }
      ],
      "page_spans": [
        1,
        5
      ],
      "primary_page": 1,
      "bounding_boxes": [
        {
          "page": 5,
          "x0": 107.99897600000014,
          "y0": 249.51004000000015,
          "x1": 504.1287780955339,
          "y1": 259.7914844800001,
          "confidence": 0.4246153846153846,
          "match_type": "substring_match"
        },
        {
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "confidence": 0.35862068965517246,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 95,
      "text": "We then evaluate this optimal param-\neter combination on datasets of varying complexity and analyze the performance and results thereof.",
      "layout_matches": [
        {
          "text": "eter combination on datasets of varying complexity and analyze the performance and results thereof.",
          "page": 5,
          "x0": 107.99887600000008,
          "y0": 227.86914448000013,
          "x1": 506.0095274203015,
          "y1": 237.83178448000015,
          "width": 398.01065142030143,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.6551470588235294,
          "match_type": "substring_match"
        },
        {
          "text": "With the previous optimal parameters ﬁxed, run the ablation on the value of n and model. By\nTable 11, we see that the optimal combination in this testing group is GPT-4o with n = 15. Fix this\nvalue for all future tests.",
          "page": 17,
          "x0": 107.52,
          "y0": 312.94794448,
          "x1": 504.3010950511259,
          "y1": 344.77070976,
          "width": 396.78109505112593,
          "height": 31.82276528,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.32000000000000006,
          "match_type": "word_overlap",
          "common_words_count": 8
        }
      ],
      "page_spans": [
        17,
        5
      ],
      "primary_page": 17,
      "bounding_boxes": [
        {
          "page": 5,
          "x0": 107.99887600000008,
          "y0": 227.86914448000013,
          "x1": 506.0095274203015,
          "y1": 237.83178448000015,
          "confidence": 0.6551470588235294,
          "match_type": "substring_match"
        },
        {
          "page": 17,
          "x0": 107.52,
          "y0": 312.94794448,
          "x1": 504.3010950511259,
          "y1": 344.77070976,
          "confidence": 0.32000000000000006,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 96,
      "text": "Lastly, we note the performance of ImProver in NTP applications in comparison to the base GPT-4o\nand GPT-4o-mini models.",
      "layout_matches": [
        {
          "text": "Lastly, we note the performance of ImProver in NTP applications in comparison to the base GPT-4o",
          "page": 5,
          "x0": 107.99887600000008,
          "y0": 216.63004000000015,
          "x1": 504.0602798026822,
          "y1": 226.91148448000015,
          "width": 396.0614038026821,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.7184873949579833,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        5
      ],
      "primary_page": 5,
      "bounding_boxes": [
        {
          "page": 5,
          "x0": 107.99887600000008,
          "y0": 216.63004000000015,
          "x1": 504.0602798026822,
          "y1": 226.91148448000015,
          "confidence": 0.7184873949579833,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 97,
      "text": "Datasets. We evaluate ImProver on subsets of the following datasets.",
      "layout_matches": [
        {
          "text": "Datasets. We evaluate ImProver on subsets of the following datasets.",
          "page": 5,
          "x0": 107.99887600000011,
          "y0": 181.23004000000017,
          "x1": 394.41024662762976,
          "y1": 191.63103616000018,
          "width": 286.41137062762965,
          "height": 10.400996160000005,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.9,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        5
      ],
      "primary_page": 5,
      "bounding_boxes": [
        {
          "page": 5,
          "x0": 107.99887600000011,
          "y0": 181.23004000000017,
          "x1": 394.41024662762976,
          "y1": 191.63103616000018,
          "confidence": 0.9,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 98,
      "text": "Mathematics in Lean (MIL) (leanprover-community, 2024):\nthis dataset contains pedagogical so-\nlutions of common undergraduate-level exercises, and as such contains many readable, yet verbose\nand inefﬁcient proofs.",
      "layout_matches": [
        {
          "text": "lutions of common undergraduate-level exercises, and as such contains many readable, yet verbose",
          "page": 5,
          "x0": 107.99837600000009,
          "y0": 153.58914448000013,
          "x1": 504.2224958392537,
          "y1": 163.55178448000015,
          "width": 396.2241198392536,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.4126829268292683,
          "match_type": "substring_match"
        },
        {
          "text": "Mathematics in Lean (MIL) (leanprover-community, 2024):\nthis dataset contains pedagogical so-\nlutions of common undergraduate-level exercises, and as such contains many readable, yet verbose\nand inefﬁcient proofs. We use exercise solutions from set theory, elementary number theory, group\ntheory, topology, differential calculus, and integration & measure theory. This dataset contains the-\norems at an undergraduate-level of complexity. For our main results, we evaluated on 72 theorems\nfrom exercise solutions from MIL chapters 4, 5, 8, 9, and 10.",
          "page": 5,
          "x0": 107.63837600000008,
          "y0": 109.47044000000012,
          "x1": 505.75602891524295,
          "y1": 174.70117352000014,
          "width": 398.11765291524284,
          "height": 65.23073352000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.34811320754716985,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        5
      ],
      "primary_page": 5,
      "bounding_boxes": [
        {
          "page": 5,
          "x0": 107.99837600000009,
          "y0": 153.58914448000013,
          "x1": 504.2224958392537,
          "y1": 163.55178448000015,
          "confidence": 0.4126829268292683,
          "match_type": "substring_match"
        },
        {
          "page": 5,
          "x0": 107.63837600000008,
          "y0": 109.47044000000012,
          "x1": 505.75602891524295,
          "y1": 174.70117352000014,
          "confidence": 0.34811320754716985,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 99,
      "text": "We use exercise solutions from set theory, elementary number theory, group\ntheory, topology, differential calculus, and integration & measure theory.",
      "layout_matches": [
        {
          "text": "and inefﬁcient proofs. We use exercise solutions from set theory, elementary number theory, group",
          "page": 5,
          "x0": 107.99837600000006,
          "y0": 142.66924448000012,
          "x1": 504.1797256459753,
          "y1": 152.63188448000014,
          "width": 396.1813496459752,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.46315789473684216,
          "match_type": "word_overlap",
          "common_words_count": 11
        },
        {
          "text": "theory, topology, differential calculus, and integration & measure theory. This dataset contains the-",
          "page": 5,
          "x0": 107.99837600000004,
          "y0": 131.74894448000012,
          "x1": 505.75602891524295,
          "y1": 141.71158448000014,
          "width": 397.75765291524294,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.3368421052631579,
          "match_type": "word_overlap",
          "common_words_count": 8
        }
      ],
      "page_spans": [
        5
      ],
      "primary_page": 5,
      "bounding_boxes": [
        {
          "page": 5,
          "x0": 107.99837600000006,
          "y0": 142.66924448000012,
          "x1": 504.1797256459753,
          "y1": 152.63188448000014,
          "confidence": 0.46315789473684216,
          "match_type": "word_overlap"
        },
        {
          "page": 5,
          "x0": 107.99837600000004,
          "y0": 131.74894448000012,
          "x1": 505.75602891524295,
          "y1": 141.71158448000014,
          "confidence": 0.3368421052631579,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 100,
      "text": "This dataset contains the-\norems at an undergraduate-level of complexity.",
      "layout_matches": [
        {
          "text": "orems at an undergraduate-level of complexity. For our main results, we evaluated on 72 theorems",
          "page": 5,
          "x0": 107.99837600000006,
          "y0": 120.39034000000012,
          "x1": 504.2737849624574,
          "y1": 130.67178448000013,
          "width": 396.27540896245733,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.48,
          "match_type": "word_overlap",
          "common_words_count": 6
        }
      ],
      "page_spans": [
        5
      ],
      "primary_page": 5,
      "bounding_boxes": [
        {
          "page": 5,
          "x0": 107.99837600000006,
          "y0": 120.39034000000012,
          "x1": 504.2737849624574,
          "y1": 130.67178448000013,
          "confidence": 0.48,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 101,
      "text": "For our main results, we evaluated on 72 theorems\nfrom exercise solutions from MIL chapters 4, 5, 8, 9, and 10.",
      "layout_matches": [
        {
          "text": "from exercise solutions from MIL chapters 4, 5, 8, 9, and 10.",
          "page": 5,
          "x0": 107.99827600000009,
          "y0": 109.47044000000012,
          "x1": 349.40765600000026,
          "y1": 119.77180976000012,
          "width": 241.40938000000017,
          "height": 10.30136976,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.4839622641509434,
          "match_type": "substring_match"
        },
        {
          "text": "orems at an undergraduate-level of complexity. For our main results, we evaluated on 72 theorems",
          "page": 5,
          "x0": 107.99837600000006,
          "y0": 120.39034000000012,
          "x1": 504.2737849624574,
          "y1": 130.67178448000013,
          "width": 396.27540896245733,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.34285714285714286,
          "match_type": "word_overlap",
          "common_words_count": 9
        }
      ],
      "page_spans": [
        5
      ],
      "primary_page": 5,
      "bounding_boxes": [
        {
          "page": 5,
          "x0": 107.99827600000009,
          "y0": 109.47044000000012,
          "x1": 349.40765600000026,
          "y1": 119.77180976000012,
          "confidence": 0.4839622641509434,
          "match_type": "substring_match"
        },
        {
          "page": 5,
          "x0": 107.99837600000006,
          "y0": 120.39034000000012,
          "x1": 504.2737849624574,
          "y1": 130.67178448000013,
          "confidence": 0.34285714285714286,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 102,
      "text": "Compﬁles (David Renshaw, 2024): Solutions of International Mathematics Olympiad (IMO) and\nAmerican Mathematics Olympiad (USAMO) competition problems from 2016 to 2024.",
      "layout_matches": [
        {
          "text": "Compﬁles (David Renshaw, 2024): Solutions of International Mathematics Olympiad (IMO) and",
          "page": 5,
          "x0": 107.63799600000027,
          "y0": 92.86934448000014,
          "x1": 504.05925989213324,
          "y1": 102.94157352000013,
          "width": 396.42126389213297,
          "height": 10.072229039999996,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.469811320754717,
          "match_type": "substring_match"
        },
        {
          "text": "concepts only at a high-school level, the logical complexity of internationally-renowned competi-\ntion results is far above that. For our main results, we used all 26 theorems and lemmas from the\nCompﬁles database of complete solutions to the International Mathematics Olympiad (IMO) and\nthe American Mathematics Olympiad (USAMO) from 2016-2024.",
          "page": 6,
          "x0": 108.0,
          "y0": 665.14814448,
          "x1": 505.8776140704941,
          "y1": 707.99078448,
          "width": 397.8776140704941,
          "height": 42.84263999999996,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.45714285714285713,
          "match_type": "word_overlap",
          "common_words_count": 12
        }
      ],
      "page_spans": [
        5,
        6
      ],
      "primary_page": 6,
      "bounding_boxes": [
        {
          "page": 5,
          "x0": 107.63799600000027,
          "y0": 92.86934448000014,
          "x1": 504.05925989213324,
          "y1": 102.94157352000013,
          "confidence": 0.469811320754717,
          "match_type": "substring_match"
        },
        {
          "page": 6,
          "x0": 108.0,
          "y0": 665.14814448,
          "x1": 505.8776140704941,
          "y1": 707.99078448,
          "confidence": 0.45714285714285713,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 103,
      "text": "This is a\ndataset of internationally-renowned competitive math problems, many of which are readable, yet\nquite verbose.",
      "layout_matches": [
        {
          "text": "dataset of internationally-renowned competitive math problems, many of which are readable, yet",
          "page": 5,
          "x0": 107.99799600000023,
          "y0": 70.90924448000014,
          "x1": 504.12831276114935,
          "y1": 80.87188448000013,
          "width": 396.1303167611491,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.7076923076923077,
          "match_type": "substring_match"
        },
        {
          "text": "quite verbose. This dataset contains theorems of a competitive format, and although they contain",
          "page": 5,
          "x0": 107.99799600000023,
          "y0": 59.989344480000135,
          "x1": 504.17955663607745,
          "y1": 69.95198448000014,
          "width": 396.1815606360772,
          "height": 9.96264,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.32941176470588235,
          "match_type": "word_overlap",
          "common_words_count": 7
        }
      ],
      "page_spans": [
        5
      ],
      "primary_page": 5,
      "bounding_boxes": [
        {
          "page": 5,
          "x0": 107.99799600000023,
          "y0": 70.90924448000014,
          "x1": 504.12831276114935,
          "y1": 80.87188448000013,
          "confidence": 0.7076923076923077,
          "match_type": "substring_match"
        },
        {
          "page": 5,
          "x0": 107.99799600000023,
          "y0": 59.989344480000135,
          "x1": 504.17955663607745,
          "y1": 69.95198448000014,
          "confidence": 0.32941176470588235,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 104,
      "text": "This dataset contains theorems of a competitive format, and although they contain\n\n5\n\n\fconcepts only at a high-school level, the logical complexity of internationally-renowned competi-\ntion results is far above that.",
      "layout_matches": [
        {
          "text": "concepts only at a high-school level, the logical complexity of internationally-renowned competi-\ntion results is far above that. For our main results, we used all 26 theorems and lemmas from the\nCompﬁles database of complete solutions to the International Mathematics Olympiad (IMO) and\nthe American Mathematics Olympiad (USAMO) from 2016-2024.",
          "page": 6,
          "x0": 108.0,
          "y0": 665.14814448,
          "x1": 505.8776140704941,
          "y1": 707.99078448,
          "width": 397.8776140704941,
          "height": 42.84263999999996,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.5161290322580645,
          "match_type": "word_overlap",
          "common_words_count": 20
        }
      ],
      "page_spans": [
        6
      ],
      "primary_page": 6,
      "bounding_boxes": [
        {
          "page": 6,
          "x0": 108.0,
          "y0": 665.14814448,
          "x1": 505.8776140704941,
          "y1": 707.99078448,
          "confidence": 0.5161290322580645,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 105,
      "text": "For our main results, we used all 26 theorems and lemmas from the\nCompﬁles database of complete solutions to the International Mathematics Olympiad (IMO) and\nthe American Mathematics Olympiad (USAMO) from 2016-2024.",
      "layout_matches": [
        {
          "text": "concepts only at a high-school level, the logical complexity of internationally-renowned competi-\ntion results is far above that. For our main results, we used all 26 theorems and lemmas from the\nCompﬁles database of complete solutions to the International Mathematics Olympiad (IMO) and\nthe American Mathematics Olympiad (USAMO) from 2016-2024.",
          "page": 6,
          "x0": 108.0,
          "y0": 665.14814448,
          "x1": 505.8776140704941,
          "y1": 707.99078448,
          "width": 397.8776140704941,
          "height": 42.84263999999996,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.5575221238938053,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        6
      ],
      "primary_page": 6,
      "bounding_boxes": [
        {
          "page": 6,
          "x0": 108.0,
          "y0": 665.14814448,
          "x1": 505.8776140704941,
          "y1": 707.99078448,
          "confidence": 0.5575221238938053,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 106,
      "text": "Mathlib (mathlib Community, 2020): Mathlib contains many advanced results at the forefront of\nmathematics, and has been at the center of research-level formalizations.",
      "layout_matches": [
        {
          "text": "Mathlib (mathlib Community, 2020): Mathlib contains many advanced results at the forefront of",
          "page": 6,
          "x0": 107.64011400000003,
          "y0": 648.2282444800001,
          "x1": 504.07783852878293,
          "y1": 658.3004735200001,
          "width": 396.4377245287829,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.49444444444444446,
          "match_type": "substring_match"
        },
        {
          "text": "Mathlib (mathlib Community, 2020): Mathlib contains many advanced results at the forefront of\nmathematics, and has been at the center of research-level formalizations. These proofs are extremely\nefﬁcient, concise, and generalized - which often comes at the cost of readability and understandabil-\nity. These results and theorems often are at the cutting edge of research.",
          "page": 6,
          "x0": 107.64011400000003,
          "y0": 615.3482444800001,
          "x1": 505.99782161884633,
          "y1": 658.3004735200001,
          "width": 398.3577076188463,
          "height": 42.95222904000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.4005494505494505,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        6
      ],
      "primary_page": 6,
      "bounding_boxes": [
        {
          "page": 6,
          "x0": 107.64011400000003,
          "y0": 648.2282444800001,
          "x1": 504.07783852878293,
          "y1": 658.3004735200001,
          "confidence": 0.49444444444444446,
          "match_type": "substring_match"
        },
        {
          "page": 6,
          "x0": 107.64011400000003,
          "y0": 615.3482444800001,
          "x1": 505.99782161884633,
          "y1": 658.3004735200001,
          "confidence": 0.4005494505494505,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 107,
      "text": "These proofs are extremely\nefﬁcient, concise, and generalized - which often comes at the cost of readability and understandabil-\nity.",
      "layout_matches": [
        {
          "text": "efﬁcient, concise, and generalized - which often comes at the cost of readability and understandabil-",
          "page": 6,
          "x0": 108.000114,
          "y0": 626.26814448,
          "x1": 505.99782161884633,
          "y1": 636.23078448,
          "width": 397.99770761884633,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.6801526717557252,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        6
      ],
      "primary_page": 6,
      "bounding_boxes": [
        {
          "page": 6,
          "x0": 108.000114,
          "y0": 626.26814448,
          "x1": 505.99782161884633,
          "y1": 636.23078448,
          "confidence": 0.6801526717557252,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 108,
      "text": "These results and theorems often are at the cutting edge of research.",
      "layout_matches": [
        {
          "text": "ity. These results and theorems often are at the cutting edge of research.",
          "page": 6,
          "x0": 108.00011399999997,
          "y0": 615.3482444800001,
          "x1": 394.1707731598944,
          "y1": 625.31088448,
          "width": 286.1706591598944,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.8391891891891893,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        6
      ],
      "primary_page": 6,
      "bounding_boxes": [
        {
          "page": 6,
          "x0": 108.00011399999997,
          "y0": 615.3482444800001,
          "x1": 394.1707731598944,
          "y1": 625.31088448,
          "confidence": 0.8391891891891893,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 109,
      "text": "For our main results, we evaluated our methods on 43 advanced research-level proofs from\nMathlib/AlgebraicTopology/FundamentalGroupoid.",
      "layout_matches": [
        {
          "text": "For our main results, we evaluated our methods on 43 advanced research-level proofs from\nMathlib/AlgebraicTopology/FundamentalGroupoid. This is the most difﬁcult dataset.",
          "page": 6,
          "x0": 108.00001399999991,
          "y0": 587.3885444800001,
          "x1": 504.1911852513554,
          "y1": 608.39098448,
          "width": 396.1911712513555,
          "height": 21.00243999999998,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.7113772455089821,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        6
      ],
      "primary_page": 6,
      "bounding_boxes": [
        {
          "page": 6,
          "x0": 108.00001399999991,
          "y0": 587.3885444800001,
          "x1": 504.1911852513554,
          "y1": 608.39098448,
          "confidence": 0.7113772455089821,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 110,
      "text": "This is the most difﬁcult dataset. Models.",
      "layout_matches": [
        {
          "text": "For our main results, we evaluated our methods on 43 advanced research-level proofs from\nMathlib/AlgebraicTopology/FundamentalGroupoid. This is the most difﬁcult dataset.",
          "page": 6,
          "x0": 108.00001399999991,
          "y0": 587.3885444800001,
          "x1": 504.1911852513554,
          "y1": 608.39098448,
          "width": 396.1911712513555,
          "height": 21.00243999999998,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6857142857142857,
          "match_type": "word_overlap",
          "common_words_count": 6
        }
      ],
      "page_spans": [
        6
      ],
      "primary_page": 6,
      "bounding_boxes": [
        {
          "page": 6,
          "x0": 108.00001399999991,
          "y0": 587.3885444800001,
          "x1": 504.1911852513554,
          "y1": 608.39098448,
          "confidence": 0.6857142857142857,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 111,
      "text": "Our base generator uses GPT-4o (OpenAI et al., 2024).",
      "layout_matches": [
        {
          "text": "Models. Our base generator uses GPT-4o (OpenAI et al., 2024). Since no prior methods currently",
          "page": 6,
          "x0": 108.00001399999991,
          "y0": 562.5483444800001,
          "x1": 504.54112183719246,
          "y1": 572.6305361600001,
          "width": 396.54110783719256,
          "height": 10.08219168000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.4945054945054946,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        6
      ],
      "primary_page": 6,
      "bounding_boxes": [
        {
          "page": 6,
          "x0": 108.00001399999991,
          "y0": 562.5483444800001,
          "x1": 504.54112183719246,
          "y1": 572.6305361600001,
          "confidence": 0.4945054945054946,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 112,
      "text": "Since no prior methods currently\nexist for automated proof optimization, we consider a prompted GPT-4o without the improvements\ndescribed in (§3.1) as our baseline.",
      "layout_matches": [
        {
          "text": "exist for automated proof optimization, we consider a prompted GPT-4o without the improvements",
          "page": 6,
          "x0": 107.9998139999999,
          "y0": 551.6284444800001,
          "x1": 504.3958104248987,
          "y1": 561.5910844800001,
          "width": 396.3959964248988,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.5231250000000001,
          "match_type": "substring_match"
        },
        {
          "text": "Large language models (LLMs) have been used to generate formal proofs of math-\nematical theorems in proofs assistants such as Lean. However, we often want to\noptimize a formal proof with respect to various criteria, depending on its down-\nstream use. For example, we may want a proof to adhere to a certain style, or to be\nreadable, concise, or modularly structured. Having suitably optimized proofs is\nalso important for learning tasks, especially since human-written proofs may not\noptimal for that purpose. To this end, we study a new problem of automated proof\noptimization: rewriting a proof so that it is correct and optimizes for an arbitrary\ncriterion, such as length or readability. As a ﬁrst method for automated proof opti-\nmization, we present ImProver, a large-language-model agent that rewrites proofs\nto optimize arbitrary user-deﬁned metrics in Lean. We ﬁnd that naively applying\nLLMs to proof optimization falls short, and we incorporate various improvements\ninto ImProver, such as the use of symbolic Lean context in a novel Chain-of-\nStates technique, as well as error-correction and retrieval. We test ImProver on\nrewriting real-world undergraduate, competition, and research-level mathematics\ntheorems, ﬁnding that ImProver is capable of rewriting proofs so that they are\nsubstantially shorter, more modular, and more readable.",
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "width": 326.1175505972419,
          "height": 185.2821399999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.3666666666666667,
          "match_type": "word_overlap",
          "common_words_count": 11
        }
      ],
      "page_spans": [
        1,
        6
      ],
      "primary_page": 1,
      "bounding_boxes": [
        {
          "page": 6,
          "x0": 107.9998139999999,
          "y0": 551.6284444800001,
          "x1": 504.3958104248987,
          "y1": 561.5910844800001,
          "confidence": 0.5231250000000001,
          "match_type": "substring_match"
        },
        {
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "confidence": 0.3666666666666667,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 113,
      "text": "Additionally, for a given metric, we write a prompt that brieﬂy\ndescribes the metric and the proof optimization task.",
      "layout_matches": [
        {
          "text": "described in (§3.1) as our baseline. Additionally, for a given metric, we write a prompt that brieﬂy",
          "page": 6,
          "x0": 107.9998139999999,
          "y0": 540.7085444800001,
          "x1": 504.4213096063522,
          "y1": 550.6711844800001,
          "width": 396.4214956063523,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.42105263157894735,
          "match_type": "word_overlap",
          "common_words_count": 10
        }
      ],
      "page_spans": [
        6
      ],
      "primary_page": 6,
      "bounding_boxes": [
        {
          "page": 6,
          "x0": 107.9998139999999,
          "y0": 540.7085444800001,
          "x1": 504.4213096063522,
          "y1": 550.6711844800001,
          "confidence": 0.42105263157894735,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 114,
      "text": "We also provide instructions, context, and in-\nformation depending on the features selected, and add the theorem and proof to the prompt.",
      "layout_matches": [
        {
          "text": "formation depending on the features selected, and add the theorem and proof to the prompt. Speciﬁc",
          "page": 6,
          "x0": 107.99981399999987,
          "y0": 518.7484444800001,
          "x1": 504.10370836754777,
          "y1": 528.7110844800001,
          "width": 396.1038943675479,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.43636363636363634,
          "match_type": "word_overlap",
          "common_words_count": 12
        },
        {
          "text": "Large language models (LLMs) have been used to generate formal proofs of math-\nematical theorems in proofs assistants such as Lean. However, we often want to\noptimize a formal proof with respect to various criteria, depending on its down-\nstream use. For example, we may want a proof to adhere to a certain style, or to be\nreadable, concise, or modularly structured. Having suitably optimized proofs is\nalso important for learning tasks, especially since human-written proofs may not\noptimal for that purpose. To this end, we study a new problem of automated proof\noptimization: rewriting a proof so that it is correct and optimizes for an arbitrary\ncriterion, such as length or readability. As a ﬁrst method for automated proof opti-\nmization, we present ImProver, a large-language-model agent that rewrites proofs\nto optimize arbitrary user-deﬁned metrics in Lean. We ﬁnd that naively applying\nLLMs to proof optimization falls short, and we incorporate various improvements\ninto ImProver, such as the use of symbolic Lean context in a novel Chain-of-\nStates technique, as well as error-correction and retrieval. We test ImProver on\nrewriting real-world undergraduate, competition, and research-level mathematics\ntheorems, ﬁnding that ImProver is capable of rewriting proofs so that they are\nsubstantially shorter, more modular, and more readable.",
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "width": 326.1175505972419,
          "height": 185.2821399999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.3272727272727273,
          "match_type": "word_overlap",
          "common_words_count": 9
        }
      ],
      "page_spans": [
        1,
        6
      ],
      "primary_page": 1,
      "bounding_boxes": [
        {
          "page": 6,
          "x0": 107.99981399999987,
          "y0": 518.7484444800001,
          "x1": 504.10370836754777,
          "y1": 528.7110844800001,
          "confidence": 0.43636363636363634,
          "match_type": "word_overlap"
        },
        {
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "confidence": 0.3272727272727273,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 115,
      "text": "Speciﬁc\nprompt information is detailed in (§A)\n\nPerformance metrics.",
      "layout_matches": [
        {
          "text": "Models. Our base generator uses GPT-4o (OpenAI et al., 2024). Since no prior methods currently\nexist for automated proof optimization, we consider a prompted GPT-4o without the improvements\ndescribed in (§3.1) as our baseline. Additionally, for a given metric, we write a prompt that brieﬂy\ndescribes the metric and the proof optimization task. We also provide instructions, context, and in-\nformation depending on the features selected, and add the theorem and proof to the prompt. Speciﬁc\nprompt information is detailed in (§A)",
          "page": 6,
          "x0": 107.99981399999987,
          "y0": 507.8285444800001,
          "x1": 505.75748846892975,
          "y1": 572.6305361600001,
          "width": 397.75767446892985,
          "height": 64.80199168000001,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6222222222222222,
          "match_type": "word_overlap",
          "common_words_count": 7
        }
      ],
      "page_spans": [
        6
      ],
      "primary_page": 6,
      "bounding_boxes": [
        {
          "page": 6,
          "x0": 107.99981399999987,
          "y0": 507.8285444800001,
          "x1": 505.75748846892975,
          "y1": 572.6305361600001,
          "confidence": 0.6222222222222222,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 116,
      "text": "Since proof optimization is a new task, we deﬁne four performance metrics\nfor measuring aspects of correctness and improvement.",
      "layout_matches": [
        {
          "text": "Performance metrics. Since proof optimization is a new task, we deﬁne four performance metrics\nfor measuring aspects of correctness and improvement.",
          "page": 6,
          "x0": 107.99981399999987,
          "y0": 471.94854448000007,
          "x1": 504.15423306190814,
          "y1": 493.0709361600001,
          "width": 396.15441906190824,
          "height": 21.12239168000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.7714285714285714,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        6
      ],
      "primary_page": 6,
      "bounding_boxes": [
        {
          "page": 6,
          "x0": 107.99981399999987,
          "y0": 471.94854448000007,
          "x1": 504.15423306190814,
          "y1": 493.0709361600001,
          "confidence": 0.7714285714285714,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 117,
      "text": "First, we deﬁne improvement for length as percentage change in length, µlen(y0)−µlen(y)\n× 100.",
      "layout_matches": [
        {
          "text": "First, we deﬁne improvement for length as percentage change in length, µlen(y0)−µlen(y)",
          "page": 6,
          "x0": 107.9998139999999,
          "y0": 452.7485444800001,
          "x1": 456.2299110999999,
          "y1": 465.30820840000007,
          "width": 348.2300971,
          "height": 12.559663919999991,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.8372093023255814,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        6
      ],
      "primary_page": 6,
      "bounding_boxes": [
        {
          "page": 6,
          "x0": 107.9998139999999,
          "y0": 452.7485444800001,
          "x1": 456.2299110999999,
          "y1": 465.30820840000007,
          "confidence": 0.8372093023255814,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 118,
      "text": "For\nreadability, we use the difference, µread(y)−µread(yo).",
      "layout_matches": [
        {
          "text": "readability, we use the difference, µread(y)−µread(yo). If no correct output is generated by the model",
          "page": 6,
          "x0": 108.00002999999998,
          "y0": 438.39944070000007,
          "x1": 504.13010556031975,
          "y1": 449.17067976000004,
          "width": 396.13007556031977,
          "height": 10.77123905999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.6857142857142857,
          "match_type": "word_overlap",
          "common_words_count": 6
        }
      ],
      "page_spans": [
        6
      ],
      "primary_page": 6,
      "bounding_boxes": [
        {
          "page": 6,
          "x0": 108.00002999999998,
          "y0": 438.39944070000007,
          "x1": 504.13010556031975,
          "y1": 449.17067976000004,
          "confidence": 0.6857142857142857,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 119,
      "text": "If no correct output is generated by the model\nfor a speciﬁc theorem, improvement is deﬁned to be zero.",
      "layout_matches": [
        {
          "text": "Readability optimization. Readability optimization is similar, with ImProver outperforming\nGPT-4o by 423%. Moreover, the accuracy, improved accuracy, and nonempty improvement dis-\nparities for readability parallel those of the length tests. However, it should be noted that for both\nGPT-4o and ImProver, the accuracy and improved accuracy scores were markedly smaller for read-\nability than length optimization. This suggests that for both models, it was generally more “difﬁcult”\nto generate a correct output, and moreover, generate a correct output with a better metric score\nthan the input, for readability optimization than length optimization. In other words, optimizing for\nreadability is more difﬁcult for the underlying generator than optimizing for length. However, we\nspeculate with higher-quality prompts, descriptions of the metric, and examples, this disparity can\nbe minimized. Regardless, we note that different metrics can be less likely to be correctly optimized,\nand that model performance is correlated with the metric it seeks to optimize – both for GPT-4o and\nImProver.",
          "page": 8,
          "x0": 108.0,
          "y0": 387.74924,
          "x1": 505.9043360336227,
          "y1": 518.75033616,
          "width": 397.9043360336227,
          "height": 131.00109615999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.46315789473684216,
          "match_type": "word_overlap",
          "common_words_count": 11
        }
      ],
      "page_spans": [
        8
      ],
      "primary_page": 8,
      "bounding_boxes": [
        {
          "page": 8,
          "x0": 108.0,
          "y0": 387.74924,
          "x1": 505.9043360336227,
          "y1": 518.75033616,
          "confidence": 0.46315789473684216,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 120,
      "text": "We deﬁne nonempty improvement as\nthe improvement restricted to theorems for which some output has nonzero improvement.",
      "layout_matches": [
        {
          "text": "the improvement restricted to theorems for which some output has nonzero improvement.",
          "page": 6,
          "x0": 107.99999999999989,
          "y0": 417.22801448,
          "x1": 465.3309743012943,
          "y1": 427.19065448000003,
          "width": 357.3309743012944,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.6483050847457626,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        6
      ],
      "primary_page": 6,
      "bounding_boxes": [
        {
          "page": 6,
          "x0": 107.99999999999989,
          "y0": 417.22801448,
          "x1": 465.3309743012943,
          "y1": 427.19065448000003,
          "confidence": 0.6483050847457626,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 121,
      "text": "µlen(y0)\n\nIntuitively, improvement is the expected improvement in metric score from the input to output, ac-\ncounting for errors in the generation.",
      "layout_matches": [
        {
          "text": "Intuitively, improvement is the expected improvement in metric score from the input to output, ac-\ncounting for errors in the generation. The nonempty improvement score is the expected improvement\nin metric score, given that there are no errors in the generation. Similar improvement scores can be\ndeﬁned for other metrics using a binary function of the metric assigned to the original and optimized\nproofs.",
          "page": 6,
          "x0": 107.99999999999983,
          "y0": 356.50821448000005,
          "x1": 505.63790622069877,
          "y1": 410.27075448000005,
          "width": 397.63790622069894,
          "height": 53.76254,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6181818181818182,
          "match_type": "word_overlap",
          "common_words_count": 17
        }
      ],
      "page_spans": [
        6
      ],
      "primary_page": 6,
      "bounding_boxes": [
        {
          "page": 6,
          "x0": 107.99999999999983,
          "y0": 356.50821448000005,
          "x1": 505.63790622069877,
          "y1": 410.27075448000005,
          "confidence": 0.6181818181818182,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 122,
      "text": "The nonempty improvement score is the expected improvement\nin metric score, given that there are no errors in the generation.",
      "layout_matches": [
        {
          "text": "in metric score, given that there are no errors in the generation. Similar improvement scores can be",
          "page": 6,
          "x0": 107.99999999999986,
          "y0": 378.34801448,
          "x1": 504.10428473284344,
          "y1": 388.31065448000004,
          "width": 396.10428473284355,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.48,
          "match_type": "word_overlap",
          "common_words_count": 12
        }
      ],
      "page_spans": [
        6
      ],
      "primary_page": 6,
      "bounding_boxes": [
        {
          "page": 6,
          "x0": 107.99999999999986,
          "y0": 378.34801448,
          "x1": 504.10428473284344,
          "y1": 388.31065448000004,
          "confidence": 0.48,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 123,
      "text": "Similar improvement scores can be\ndeﬁned for other metrics using a binary function of the metric assigned to the original and optimized\nproofs.",
      "layout_matches": [
        {
          "text": "deﬁned for other metrics using a binary function of the metric assigned to the original and optimized",
          "page": 6,
          "x0": 107.99999999999986,
          "y0": 367.42811448000003,
          "x1": 504.1827252729163,
          "y1": 377.39075448000006,
          "width": 396.1827252729164,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.6356643356643357,
          "match_type": "substring_match"
        },
        {
          "text": "Readability optimization. Readability optimization is similar, with ImProver outperforming\nGPT-4o by 423%. Moreover, the accuracy, improved accuracy, and nonempty improvement dis-\nparities for readability parallel those of the length tests. However, it should be noted that for both\nGPT-4o and ImProver, the accuracy and improved accuracy scores were markedly smaller for read-\nability than length optimization. This suggests that for both models, it was generally more “difﬁcult”\nto generate a correct output, and moreover, generate a correct output with a better metric score\nthan the input, for readability optimization than length optimization. In other words, optimizing for\nreadability is more difﬁcult for the underlying generator than optimizing for length. However, we\nspeculate with higher-quality prompts, descriptions of the metric, and examples, this disparity can\nbe minimized. Regardless, we note that different metrics can be less likely to be correctly optimized,\nand that model performance is correlated with the metric it seeks to optimize – both for GPT-4o and\nImProver.",
          "page": 8,
          "x0": 108.0,
          "y0": 387.74924,
          "x1": 505.9043360336227,
          "y1": 518.75033616,
          "width": 397.9043360336227,
          "height": 131.00109615999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.5217391304347826,
          "match_type": "word_overlap",
          "common_words_count": 15
        }
      ],
      "page_spans": [
        8,
        6
      ],
      "primary_page": 8,
      "bounding_boxes": [
        {
          "page": 6,
          "x0": 107.99999999999986,
          "y0": 367.42811448000003,
          "x1": 504.1827252729163,
          "y1": 377.39075448000006,
          "confidence": 0.6356643356643357,
          "match_type": "substring_match"
        },
        {
          "page": 8,
          "x0": 108.0,
          "y0": 387.74924,
          "x1": 505.9043360336227,
          "y1": 518.75033616,
          "confidence": 0.5217391304347826,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 124,
      "text": "Additionally, the accuracy is the percentage of theorems in the dataset which the model was able to\ngenerate a correct output for.",
      "layout_matches": [
        {
          "text": "Additionally, the accuracy is the percentage of theorems in the dataset which the model was able to",
          "page": 6,
          "x0": 107.63984399999983,
          "y0": 339.4680144800001,
          "x1": 503.94145127749135,
          "y1": 349.5502061600001,
          "width": 396.30160727749154,
          "height": 10.082191679999994,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.6837209302325582,
          "match_type": "substring_match"
        },
        {
          "text": "generate a correct output for. The improved accuracy is the percentage of theorems in the dataset",
          "page": 6,
          "x0": 107.99984399999983,
          "y0": 328.5481144800001,
          "x1": 504.00973783510534,
          "y1": 338.6303061600001,
          "width": 396.0098938351055,
          "height": 10.082191679999994,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.4727272727272728,
          "match_type": "word_overlap",
          "common_words_count": 13
        }
      ],
      "page_spans": [
        6
      ],
      "primary_page": 6,
      "bounding_boxes": [
        {
          "page": 6,
          "x0": 107.63984399999983,
          "y0": 339.4680144800001,
          "x1": 503.94145127749135,
          "y1": 349.5502061600001,
          "confidence": 0.6837209302325582,
          "match_type": "substring_match"
        },
        {
          "page": 6,
          "x0": 107.99984399999983,
          "y0": 328.5481144800001,
          "x1": 504.00973783510534,
          "y1": 338.6303061600001,
          "confidence": 0.4727272727272728,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 125,
      "text": "The improved accuracy is the percentage of theorems in the dataset\nwhich the model was able to generate a correct output for, as well as improve the metric to be\nnonzero.",
      "layout_matches": [
        {
          "text": "Additionally, the accuracy is the percentage of theorems in the dataset which the model was able to\ngenerate a correct output for. The improved accuracy is the percentage of theorems in the dataset\nwhich the model was able to generate a correct output for, as well as improve the metric to be\nnonzero.",
          "page": 6,
          "x0": 107.63964399999983,
          "y0": 306.5884144800001,
          "x1": 504.10319602643284,
          "y1": 349.5502061600001,
          "width": 396.46355202643304,
          "height": 42.961791679999976,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.508695652173913,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        6
      ],
      "primary_page": 6,
      "bounding_boxes": [
        {
          "page": 6,
          "x0": 107.63964399999983,
          "y0": 306.5884144800001,
          "x1": 504.10319602643284,
          "y1": 349.5502061600001,
          "confidence": 0.508695652173913,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 126,
      "text": "4.1.1 ABLATIONS\n\nWhen performing our ablation studies, we used a ﬁxed dataset (MIL) and metric (length) and varied\nthe parameters of all the features to ﬁnd the optimal combination.",
      "layout_matches": [
        {
          "text": "When performing our ablation studies, we used a ﬁxed dataset (MIL) and metric (length) and varied\nthe parameters of all the features to ﬁnd the optimal combination. However, as there are over 8640\npossible combinations, it is inefﬁcient to test all combinations at once. As such, we evaluate using a\nfactorial testing method.",
          "page": 6,
          "x0": 107.5195879999999,
          "y0": 229.3084144800001,
          "x1": 504.41999103684384,
          "y1": 272.15105448000014,
          "width": 396.90040303684395,
          "height": 42.842640000000046,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6620689655172414,
          "match_type": "word_overlap",
          "common_words_count": 24
        }
      ],
      "page_spans": [
        6
      ],
      "primary_page": 6,
      "bounding_boxes": [
        {
          "page": 6,
          "x0": 107.5195879999999,
          "y0": 229.3084144800001,
          "x1": 504.41999103684384,
          "y1": 272.15105448000014,
          "confidence": 0.6620689655172414,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 127,
      "text": "However, as there are over 8640\npossible combinations, it is inefﬁcient to test all combinations at once.",
      "layout_matches": [
        {
          "text": "possible combinations, it is inefﬁcient to test all combinations at once. As such, we evaluate using a",
          "page": 6,
          "x0": 107.99958799999985,
          "y0": 240.2283144800001,
          "x1": 503.9829686906184,
          "y1": 250.19095448000013,
          "width": 395.98338069061856,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.5176470588235295,
          "match_type": "word_overlap",
          "common_words_count": 11
        }
      ],
      "page_spans": [
        6
      ],
      "primary_page": 6,
      "bounding_boxes": [
        {
          "page": 6,
          "x0": 107.99958799999985,
          "y0": 240.2283144800001,
          "x1": 503.9829686906184,
          "y1": 250.19095448000013,
          "confidence": 0.5176470588235295,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 128,
      "text": "As such, we evaluate using a\nfactorial testing method. Testing Groups.",
      "layout_matches": [
        {
          "text": "When performing our ablation studies, we used a ﬁxed dataset (MIL) and metric (length) and varied\nthe parameters of all the features to ﬁnd the optimal combination. However, as there are over 8640\npossible combinations, it is inefﬁcient to test all combinations at once. As such, we evaluate using a\nfactorial testing method.",
          "page": 6,
          "x0": 107.5195879999999,
          "y0": 229.3084144800001,
          "x1": 504.41999103684384,
          "y1": 272.15105448000014,
          "width": 396.90040303684395,
          "height": 42.842640000000046,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6545454545454547,
          "match_type": "word_overlap",
          "common_words_count": 9
        }
      ],
      "page_spans": [
        6
      ],
      "primary_page": 6,
      "bounding_boxes": [
        {
          "page": 6,
          "x0": 107.5195879999999,
          "y0": 229.3084144800001,
          "x1": 504.41999103684384,
          "y1": 272.15105448000014,
          "confidence": 0.6545454545454547,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 129,
      "text": "We deﬁne the following testing groups with the speciﬁed parameter combina-\ntions:\n\nGPT-4o-mini/GPT-4o: This varies the GPT-4o model, outputting a string with no other features.",
      "layout_matches": [
        {
          "text": "GPT-4o-mini/GPT-4o: This varies the GPT-4o model, outputting a string with no other features.",
          "page": 6,
          "x0": 107.64013199999978,
          "y0": 176.5085144800001,
          "x1": 503.6096399383534,
          "y1": 186.7899589600001,
          "width": 395.9695079383536,
          "height": 10.281444480000005,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.47368421052631576,
          "match_type": "substring_match"
        },
        {
          "text": "Testing Groups. We deﬁne the following testing groups with the speciﬁed parameter combina-\ntions:",
          "page": 6,
          "x0": 107.99958799999985,
          "y0": 193.4284144800001,
          "x1": 505.87691611300284,
          "y1": 214.5508061600001,
          "width": 397.877328113003,
          "height": 21.122391679999993,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.35200000000000004,
          "match_type": "word_overlap",
          "common_words_count": 11
        }
      ],
      "page_spans": [
        6
      ],
      "primary_page": 6,
      "bounding_boxes": [
        {
          "page": 6,
          "x0": 107.64013199999978,
          "y0": 176.5085144800001,
          "x1": 503.6096399383534,
          "y1": 186.7899589600001,
          "confidence": 0.47368421052631576,
          "match_type": "substring_match"
        },
        {
          "page": 6,
          "x0": 107.99958799999985,
          "y0": 193.4284144800001,
          "x1": 505.87691611300284,
          "y1": 214.5508061600001,
          "confidence": 0.35200000000000004,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 130,
      "text": "Output and CoS: We evaluate the effects of different output formatting styles (string, string\nlist, string tree) and CoS (True, False), with the model ﬁxed as GPT-4o, with no other\nfeatures enabled.",
      "layout_matches": [
        {
          "text": "Output and CoS: We evaluate the effects of different output formatting styles (string, string\nlist, string tree) and CoS (True, False), with the model ﬁxed as GPT-4o, with no other\nfeatures enabled.",
          "page": 6,
          "x0": 107.63983199999973,
          "y0": 137.6285144800001,
          "x1": 504.3185624191795,
          "y1": 169.8700589600001,
          "width": 396.6787304191798,
          "height": 32.241544480000016,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.9,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        6
      ],
      "primary_page": 6,
      "bounding_boxes": [
        {
          "page": 6,
          "x0": 107.63983199999973,
          "y0": 137.6285144800001,
          "x1": 504.3185624191795,
          "y1": 169.8700589600001,
          "confidence": 0.9,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 131,
      "text": "Example Retrieval: We evaluate the effects of increasing the number of examples provided (multi-\nshot prompting) in the range of 0, 3, 5, 7, and 10, with the model ﬁxed as GPT-4o, CoS and output\nformatting ﬁxed as the best combination from the previous test, and no other features enabled.",
      "layout_matches": [
        {
          "text": "Example Retrieval: We evaluate the effects of increasing the number of examples provided (multi-\nshot prompting) in the range of 0, 3, 5, 7, and 10, with the model ﬁxed as GPT-4o, CoS and output\nformatting ﬁxed as the best combination from the previous test, and no other features enabled.",
          "page": 6,
          "x0": 107.63981599999973,
          "y0": 98.86881448000011,
          "x1": 505.75723539263777,
          "y1": 130.7808435200001,
          "width": 398.11741939263806,
          "height": 31.912029039999993,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.9,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        6
      ],
      "primary_page": 6,
      "bounding_boxes": [
        {
          "page": 6,
          "x0": 107.63981599999973,
          "y0": 98.86881448000011,
          "x1": 505.75723539263777,
          "y1": 130.7808435200001,
          "confidence": 0.9,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 132,
      "text": "Sampling Method: Here, we evaluate the effects of best-of-n and reﬁnement for a ﬁxed n = 5.",
      "layout_matches": [
        {
          "text": "Sampling Method: Here, we evaluate the effects of best-of-n and reﬁnement for a ﬁxed n = 5.",
          "page": 6,
          "x0": 107.7599759999998,
          "y0": 81.5098100000001,
          "x1": 505.7700359999998,
          "y1": 91.90084352000011,
          "width": 398.01005999999995,
          "height": 10.391033520000008,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.9,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        6
      ],
      "primary_page": 6,
      "bounding_boxes": [
        {
          "page": 6,
          "x0": 107.7599759999998,
          "y0": 81.5098100000001,
          "x1": 505.7700359999998,
          "y1": 91.90084352000011,
          "confidence": 0.9,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 133,
      "text": "Additionally we test on the reﬁnement cases if forwarding the most recent iteration result, or all\nprevious iteration results is the best, and if we should keep the best out of the iterations, or the most\n\n6\n\n\fMetric\n\nModel\n\nImprovement Nonempty Improvement Accuracy\n\nImproved Acc.",
      "layout_matches": [
        {
          "text": "Sampling Method: Here, we evaluate the effects of best-of-n and reﬁnement for a ﬁxed n = 5.\nAdditionally we test on the reﬁnement cases if forwarding the most recent iteration result, or all\nprevious iteration results is the best, and if we should keep the best out of the iterations, or the most",
          "page": 6,
          "x0": 107.64037599999978,
          "y0": 59.98881448000011,
          "x1": 505.7700359999998,
          "y1": 91.90084352000011,
          "width": 398.12966,
          "height": 31.91202904,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.4444444444444445,
          "match_type": "word_overlap",
          "common_words_count": 25
        }
      ],
      "page_spans": [
        6
      ],
      "primary_page": 6,
      "bounding_boxes": [
        {
          "page": 6,
          "x0": 107.64037599999978,
          "y0": 59.98881448000011,
          "x1": 505.7700359999998,
          "y1": 91.90084352000011,
          "confidence": 0.4444444444444445,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 134,
      "text": "Table 1: Average Proof optimization results.",
      "layout_matches": [
        {
          "text": "Table 1: Average Proof optimization results.",
          "page": 7,
          "x0": 217.68,
          "y0": 691.30814448,
          "x1": 394.29080263737893,
          "y1": 701.27078448,
          "width": 176.61080263737892,
          "height": 9.962639999999965,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.9,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        7
      ],
      "primary_page": 7,
      "bounding_boxes": [
        {
          "page": 7,
          "x0": 217.68,
          "y0": 691.30814448,
          "x1": 394.29080263737893,
          "y1": 701.27078448,
          "confidence": 0.9,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 135,
      "text": "Length\n\nReadability\n\nGPT-4o\nImProver\n\nGPT-4o\nImProver\n\nMetric\n\nModel\n\nLength\n\nReadability\n\nGPT-4o\nImProver\n\nGPT-4o\nImProver\n\n3.7\n20.96\n\n2.21\n9.34\n\n6.25\n30.54\n\n4.18\n13.45\n\n15.15\n55.29\n\n8.02\n30.53\n\n18.58\n56.56\n\n14.48\n30.97\n\n26.36%\n100.0%\n\n18.75%\n100.0%\n\n8.31%\n35.44%\n\n6.13 %\n24.56%\n\n37.5%\n100.0%\n\n28.85%\n100.0%\n\n14.42%\n50.0%\n\n11.54%\n34.21%\n\nTable 2: MIL Proof optimization results.",
      "layout_matches": [],
      "page_spans": [],
      "primary_page": 1,
      "bounding_boxes": []
    },
    {
      "sentence_id": 136,
      "text": "Improvement Nonempty Improvement Accuracy\n\nImproved Acc. recent.",
      "layout_matches": [
        {
          "text": "Improvement Nonempty Improvement Accuracy",
          "page": 7,
          "x0": 228.96,
          "y0": 677.60532916,
          "x1": 423.28322653078993,
          "y1": 686.57170916,
          "width": 194.32322653078992,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.5857142857142857,
          "match_type": "substring_match"
        },
        {
          "text": "Readability optimization. Readability optimization is similar, with ImProver outperforming\nGPT-4o by 423%. Moreover, the accuracy, improved accuracy, and nonempty improvement dis-\nparities for readability parallel those of the length tests. However, it should be noted that for both\nGPT-4o and ImProver, the accuracy and improved accuracy scores were markedly smaller for read-\nability than length optimization. This suggests that for both models, it was generally more “difﬁcult”\nto generate a correct output, and moreover, generate a correct output with a better metric score\nthan the input, for readability optimization than length optimization. In other words, optimizing for\nreadability is more difﬁcult for the underlying generator than optimizing for length. However, we\nspeculate with higher-quality prompts, descriptions of the metric, and examples, this disparity can\nbe minimized. Regardless, we note that different metrics can be less likely to be correctly optimized,\nand that model performance is correlated with the metric it seeks to optimize – both for GPT-4o and\nImProver.",
          "page": 8,
          "x0": 108.0,
          "y0": 387.74924,
          "x1": 505.9043360336227,
          "y1": 518.75033616,
          "width": 397.9043360336227,
          "height": 131.00109615999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.45714285714285713,
          "match_type": "word_overlap",
          "common_words_count": 4
        }
      ],
      "page_spans": [
        8,
        7
      ],
      "primary_page": 8,
      "bounding_boxes": [
        {
          "page": 7,
          "x0": 228.96,
          "y0": 677.60532916,
          "x1": 423.28322653078993,
          "y1": 686.57170916,
          "confidence": 0.5857142857142857,
          "match_type": "substring_match"
        },
        {
          "page": 8,
          "x0": 108.0,
          "y0": 387.74924,
          "x1": 505.9043360336227,
          "y1": 518.75033616,
          "confidence": 0.45714285714285713,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 137,
      "text": "The model is ﬁxed as GPT-4o, CoS, output formatting, and examples are ﬁxed as the best\ncombination from the previous test, and no other features enabled.",
      "layout_matches": [
        {
          "text": "recent. The model is ﬁxed as GPT-4o, CoS, output formatting, and examples are ﬁxed as the best\ncombination from the previous test, and no other features enabled.",
          "page": 7,
          "x0": 108.0,
          "y0": 490.66834448,
          "x1": 504.0104218579451,
          "y1": 511.67078448,
          "width": 396.0104218579451,
          "height": 21.002440000000036,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.8541401273885351,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        7
      ],
      "primary_page": 7,
      "bounding_boxes": [
        {
          "page": 7,
          "x0": 108.0,
          "y0": 490.66834448,
          "x1": 504.0104218579451,
          "y1": 511.67078448,
          "confidence": 0.8541401273885351,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 138,
      "text": "n and Model: Here, we evaluate the effects of larger n values and different models.",
      "layout_matches": [
        {
          "text": "n and Model: Here, we evaluate the effects of larger n values and different models. We test n =",
          "page": 7,
          "x0": 108.0,
          "y0": 473.42924,
          "x1": 503.94089128,
          "y1": 483.82027352,
          "width": 395.94089128,
          "height": 10.391033520000008,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.801098901098901,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        7
      ],
      "primary_page": 7,
      "bounding_boxes": [
        {
          "page": 7,
          "x0": 108.0,
          "y0": 473.42924,
          "x1": 503.94089128,
          "y1": 483.82027352,
          "confidence": 0.801098901098901,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 139,
      "text": "We test n =\n3, 5, 7, 10, 15 on GPT-4o and GPT-4o-mini, as well as n = 20 for GPT-4o-mini (as it is of a far\nlower token cost).",
      "layout_matches": [
        {
          "text": "3, 5, 7, 10, 15 on GPT-4o and GPT-4o-mini, as well as n = 20 for GPT-4o-mini (as it is of a far",
          "page": 7,
          "x0": 107.76092,
          "y0": 462.50934,
          "x1": 504.1973667914619,
          "y1": 472.81070976,
          "width": 396.4364467914619,
          "height": 10.30136976,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.676923076923077,
          "match_type": "substring_match"
        },
        {
          "text": "Fixing these parameters, we now vary the number of examples retrieved, noting that prompting\nwith 10 examples maximizes the improvement score. Fixing this parameter, we vary the sampling\nmethods (excluding compound methods and ﬁxing n = 5) and observe that best-of-n is the best\nparameter combination. Now, as GPT-4o-mini is signiﬁcantly less computationally expensive than\nits GPT-4o counterpart, we test both models with the sample method ﬁxed to best-of-n, and vary\nn = 1, 3, 5, 7, 10, 15, and for GPT-4o-mini, also n = 20. We conclude that GPT-4o with n = 15\nis the most effective. Fixing these parameters, we consider all mixed compound sampling methods\nwith and without document retrieval enabled, concluding that a 5-step reﬁnement with best-of-3 on\neach iteration, with RAG enabled, is the optimal combination.",
          "page": 9,
          "x0": 107.63949999999991,
          "y0": 358.42844448,
          "x1": 504.4218815566269,
          "y1": 456.11078448,
          "width": 396.782381556627,
          "height": 97.68234000000001,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.4857142857142857,
          "match_type": "word_overlap",
          "common_words_count": 17
        }
      ],
      "page_spans": [
        9,
        7
      ],
      "primary_page": 9,
      "bounding_boxes": [
        {
          "page": 7,
          "x0": 107.76092,
          "y0": 462.50934,
          "x1": 504.1973667914619,
          "y1": 472.81070976,
          "confidence": 0.676923076923077,
          "match_type": "substring_match"
        },
        {
          "page": 9,
          "x0": 107.63949999999991,
          "y0": 358.42844448,
          "x1": 504.4218815566269,
          "y1": 456.11078448,
          "confidence": 0.4857142857142857,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 140,
      "text": "CoS, output formatting, examples, and sampling method are ﬁxed as the best\ncombination from the previous test, and no other features enabled.",
      "layout_matches": [
        {
          "text": "recent. The model is ﬁxed as GPT-4o, CoS, output formatting, and examples are ﬁxed as the best\ncombination from the previous test, and no other features enabled.",
          "page": 7,
          "x0": 108.0,
          "y0": 490.66834448,
          "x1": 504.0104218579451,
          "y1": 511.67078448,
          "width": 396.0104218579451,
          "height": 21.002440000000036,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6545454545454547,
          "match_type": "word_overlap",
          "common_words_count": 18
        }
      ],
      "page_spans": [
        7
      ],
      "primary_page": 7,
      "bounding_boxes": [
        {
          "page": 7,
          "x0": 108.0,
          "y0": 490.66834448,
          "x1": 504.0104218579451,
          "y1": 511.67078448,
          "confidence": 0.6545454545454547,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 141,
      "text": "Combos and RAG: We evaluate combination methods refinement(best_of_m',m) and\nbest_of_m'(refinement(m)), for m 6= m′ with mm′ equal to the optimal value m from\nthe previous test.",
      "layout_matches": [
        {
          "text": "Combos and RAG: We evaluate combination methods refinement(best_of_m',m) and\nbest_of_m'(refinement(m)), for m 6= m′ with mm′ equal to the optimal value m from\nthe previous test. We also test the effect of enabling document retrieval. Model, CoS, output for-\nmatting, examples, n, and sampling method are ﬁxed as the best combination from the previous\ntest.",
          "page": 7,
          "x0": 107.64059999999995,
          "y0": 380.14824448,
          "x1": 505.7583662150179,
          "y1": 434.22958896,
          "width": 398.1177662150179,
          "height": 54.081344479999984,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.43531157270029674,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        7
      ],
      "primary_page": 7,
      "bounding_boxes": [
        {
          "page": 7,
          "x0": 107.64059999999995,
          "y0": 380.14824448,
          "x1": 505.7583662150179,
          "y1": 434.22958896,
          "confidence": 0.43531157270029674,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 142,
      "text": "We also test the effect of enabling document retrieval.",
      "layout_matches": [
        {
          "text": "Large language models (LLMs) have been used to generate formal proofs of math-\nematical theorems in proofs assistants such as Lean. However, we often want to\noptimize a formal proof with respect to various criteria, depending on its down-\nstream use. For example, we may want a proof to adhere to a certain style, or to be\nreadable, concise, or modularly structured. Having suitably optimized proofs is\nalso important for learning tasks, especially since human-written proofs may not\noptimal for that purpose. To this end, we study a new problem of automated proof\noptimization: rewriting a proof so that it is correct and optimizes for an arbitrary\ncriterion, such as length or readability. As a ﬁrst method for automated proof opti-\nmization, we present ImProver, a large-language-model agent that rewrites proofs\nto optimize arbitrary user-deﬁned metrics in Lean. We ﬁnd that naively applying\nLLMs to proof optimization falls short, and we incorporate various improvements\ninto ImProver, such as the use of symbolic Lean context in a novel Chain-of-\nStates technique, as well as error-correction and retrieval. We test ImProver on\nrewriting real-world undergraduate, competition, and research-level mathematics\ntheorems, ﬁnding that ImProver is capable of rewriting proofs so that they are\nsubstantially shorter, more modular, and more readable.",
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "width": 326.1175505972419,
          "height": 185.2821399999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.5333333333333333,
          "match_type": "word_overlap",
          "common_words_count": 6
        }
      ],
      "page_spans": [
        1
      ],
      "primary_page": 1,
      "bounding_boxes": [
        {
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "confidence": 0.5333333333333333,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 143,
      "text": "Model, CoS, output for-\nmatting, examples, n, and sampling method are ﬁxed as the best combination from the previous\ntest.",
      "layout_matches": [
        {
          "text": "matting, examples, n, and sampling method are ﬁxed as the best combination from the previous",
          "page": 7,
          "x0": 108.00088999999988,
          "y0": 391.06814448,
          "x1": 504.2763621451157,
          "y1": 401.05070976,
          "width": 396.2754721451158,
          "height": 9.982565280000017,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.6846153846153846,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        7
      ],
      "primary_page": 7,
      "bounding_boxes": [
        {
          "page": 7,
          "x0": 108.00088999999988,
          "y0": 391.06814448,
          "x1": 504.2763621451157,
          "y1": 401.05070976,
          "confidence": 0.6846153846153846,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 144,
      "text": "Ablation data. We evaluate our ablations on a subset of MIL.",
      "layout_matches": [
        {
          "text": "Ablation data. We evaluate our ablations on a subset of MIL. However, due to the increase in",
          "page": 7,
          "x0": 108.00088999999991,
          "y0": 356.14824448,
          "x1": 503.942491755481,
          "y1": 366.23043616,
          "width": 395.9416017554811,
          "height": 10.082191679999994,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.5934065934065934,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        7
      ],
      "primary_page": 7,
      "bounding_boxes": [
        {
          "page": 7,
          "x0": 108.00088999999991,
          "y0": 356.14824448,
          "x1": 503.942491755481,
          "y1": 366.23043616,
          "confidence": 0.5934065934065934,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 145,
      "text": "However, due to the increase in\nmodel calls for larger n values, we switch a representative sample of this subset for some test groups.",
      "layout_matches": [
        {
          "text": "model calls for larger n values, we switch a representative sample of this subset for some test groups.",
          "page": 7,
          "x0": 108.00108999999992,
          "y0": 345.22834448000003,
          "x1": 506.0117768458276,
          "y1": 355.21090976000005,
          "width": 398.0106868458277,
          "height": 9.982565280000017,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.6902255639097744,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        7
      ],
      "primary_page": 7,
      "bounding_boxes": [
        {
          "page": 7,
          "x0": 108.00108999999992,
          "y0": 345.22834448000003,
          "x1": 506.0117768458276,
          "y1": 355.21090976000005,
          "confidence": 0.6902255639097744,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 146,
      "text": "Namely,\n\nGPT-4o-mini, GPT-4o, Output and Cos, Example Retrieval, and Sampling Method are tested\non the 133 theorems in the solutions of C03_Logic, C04_Sets_and_Functions, and\nC05_Elementary_Number_Theory.",
      "layout_matches": [
        {
          "text": "GPT-4o-mini, GPT-4o, Output and Cos, Example Retrieval, and Sampling Method are tested\non the 133 theorems in the solutions of C03_Logic, C04_Sets_and_Functions, and\nC05_Elementary_Number_Theory.",
          "page": 7,
          "x0": 108.0008299999999,
          "y0": 295.30854448,
          "x1": 504.0623453677191,
          "y1": 327.23088448000004,
          "width": 396.0615153677192,
          "height": 31.92234000000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.8678571428571429,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        7
      ],
      "primary_page": 7,
      "bounding_boxes": [
        {
          "page": 7,
          "x0": 108.0008299999999,
          "y0": 295.30854448,
          "x1": 504.0623453677191,
          "y1": 327.23088448000004,
          "confidence": 0.8678571428571429,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 147,
      "text": "n and Model are tested on 55 theorems from a representative sample of the aforementioned, and\nCombos and RAG are tested on a representative sample of 32 theorems from the aforementioned.",
      "layout_matches": [
        {
          "text": "n and Model are tested on 55 theorems from a representative sample of the aforementioned, and\nCombos and RAG are tested on a representative sample of 32 theorems from the aforementioned.",
          "page": 7,
          "x0": 108.00108999999992,
          "y0": 267.1499400000001,
          "x1": 504.06246661155507,
          "y1": 288.37120976000006,
          "width": 396.06137661155515,
          "height": 21.221269759999984,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.9,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        7
      ],
      "primary_page": 7,
      "bounding_boxes": [
        {
          "page": 7,
          "x0": 108.00108999999992,
          "y0": 267.1499400000001,
          "x1": 504.06246661155507,
          "y1": 288.37120976000006,
          "confidence": 0.9,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 148,
      "text": "4.2 RESULTS\n\nImProver is capable of optimizing proofs in all settings.",
      "layout_matches": [
        {
          "text": "ImProver is capable of optimizing proofs in all settings. From Table 2, Table 3, and Table 4,\nwe can see that ImProver is capable of optimizing proofs on all datasets for both the length and\nreadability metrics. Furthermore, Table 1 shows that across all metrics, ImProver signiﬁcantly\noutperforms GPT-4o on proof optimization tasks on every experimental measure – aggregated from\nall datasets. Additionally, from Table 2, Table 3, and Table 4, we can see that ImProver outperforms\nGPT-4o on each dataset as well.",
          "page": 7,
          "x0": 107.64224999999993,
          "y0": 166.66894448000002,
          "x1": 505.29405673157197,
          "y1": 231.59083616000004,
          "width": 397.65180673157204,
          "height": 64.92189168000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6545454545454547,
          "match_type": "word_overlap",
          "common_words_count": 9
        }
      ],
      "page_spans": [
        7
      ],
      "primary_page": 7,
      "bounding_boxes": [
        {
          "page": 7,
          "x0": 107.64224999999993,
          "y0": 166.66894448000002,
          "x1": 505.29405673157197,
          "y1": 231.59083616000004,
          "confidence": 0.6545454545454547,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 149,
      "text": "From Table 2, Table 3, and Table 4,\nwe can see that ImProver is capable of optimizing proofs on all datasets for both the length and\nreadability metrics.",
      "layout_matches": [
        {
          "text": "we can see that ImProver is capable of optimizing proofs on all datasets for both the length and",
          "page": 7,
          "x0": 107.64224999999993,
          "y0": 210.15004000000005,
          "x1": 504.0637562161789,
          "y1": 220.43148448000005,
          "width": 396.42150621617895,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.5760000000000001,
          "match_type": "substring_match"
        },
        {
          "text": "Optimization varies based on dataset difﬁculty. Additionally noting Table 2, Table 3, and\nTable 4, we observe that the improvement score for both metrics for both GPT-4o and ImProver\nis highest for the MIL dataset, lower for Compﬁles, and the lowest on the Mathlib theorems. This\nsuggests that the expected improvement in metric score decreases with higher difﬁcultly – with\nundergraduate-level theorems having a signiﬁcantly higher expected improvement than research-\nlevel theorems. However, it should be noted that for both metrics, the nonempty improvement of\nImProver stayed consistent, whereas for GPT-4o, it followed the aforementioned trend of decreas-\ning with difﬁculty. Similarly, the accuracy and improved accuracy scores for both metrics and\nmodels decreased with higher difﬁculty datasets (disregarding ImProver’s accuracy scores, as they\nare ensured to be 100%). This suggests that although the base GPT-4o generator is less likely to\ngenerate a correct output for higher difﬁculty datasets, the improvements that ImProver makes to\nthe base generator allows it to maintain its improvement in the metric score whenever a correct out-\nput is generated. As such, we can speculate that the bottleneck in the improvement score is not the\nmodel’s ability to optimize the proof for a metric, but rather its ability to generate a new correct\nproof at all. As such, we conjecture that with more capable generator models, the accuracy – and\nthus, the improvement score – in optimization tasks will continue to increase, until the improvement\nscores match the nonempty improvement.",
          "page": 8,
          "x0": 107.63940000000011,
          "y0": 187.54854447999998,
          "x1": 505.87730038476985,
          "y1": 372.95023616,
          "width": 398.2379003847698,
          "height": 185.40169168,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.4857142857142857,
          "match_type": "word_overlap",
          "common_words_count": 17
        }
      ],
      "page_spans": [
        8,
        7
      ],
      "primary_page": 8,
      "bounding_boxes": [
        {
          "page": 7,
          "x0": 107.64224999999993,
          "y0": 210.15004000000005,
          "x1": 504.0637562161789,
          "y1": 220.43148448000005,
          "confidence": 0.5760000000000001,
          "match_type": "substring_match"
        },
        {
          "page": 8,
          "x0": 107.63940000000011,
          "y0": 187.54854447999998,
          "x1": 505.87730038476985,
          "y1": 372.95023616,
          "confidence": 0.4857142857142857,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 150,
      "text": "Furthermore, Table 1 shows that across all metrics, ImProver signiﬁcantly\noutperforms GPT-4o on proof optimization tasks on every experimental measure – aggregated from\nall datasets.",
      "layout_matches": [
        {
          "text": "outperforms GPT-4o on proof optimization tasks on every experimental measure – aggregated from",
          "page": 7,
          "x0": 108.00204999999988,
          "y0": 188.62864448000002,
          "x1": 504.1928152085863,
          "y1": 198.59128448000004,
          "width": 396.1907652085864,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.46759776536312847,
          "match_type": "substring_match"
        },
        {
          "text": "We evaluate ImProver’s neural theorem proving (NTP) performance using the completion metric.\nWe evaluate on 23 exercises in group theory (12) and set theory (11) from MIL, with an empty input\nproof. Table 7 shows the accuracy on the dataset split by topic for both ImProver and GPT-4o.\nImProver substantially outperforms GPT-4o across all topics, with an 80% increase in accuracy\ncompared to the base model, showing that proof optimization systems are easily extendable to NTP\nsystems.",
          "page": 9,
          "x0": 107.51794000000012,
          "y0": 59.989144480000014,
          "x1": 505.8896684068557,
          "y1": 124.67158448,
          "width": 398.3717284068556,
          "height": 64.68243999999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.4,
          "match_type": "word_overlap",
          "common_words_count": 12
        }
      ],
      "page_spans": [
        9,
        7
      ],
      "primary_page": 9,
      "bounding_boxes": [
        {
          "page": 7,
          "x0": 108.00204999999988,
          "y0": 188.62864448000002,
          "x1": 504.1928152085863,
          "y1": 198.59128448000004,
          "confidence": 0.46759776536312847,
          "match_type": "substring_match"
        },
        {
          "page": 9,
          "x0": 107.51794000000012,
          "y0": 59.989144480000014,
          "x1": 505.8896684068557,
          "y1": 124.67158448,
          "confidence": 0.4,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 151,
      "text": "Additionally, from Table 2, Table 3, and Table 4, we can see that ImProver outperforms\nGPT-4o on each dataset as well.",
      "layout_matches": [
        {
          "text": "Optimization varies based on dataset difﬁculty. Additionally noting Table 2, Table 3, and\nTable 4, we observe that the improvement score for both metrics for both GPT-4o and ImProver\nis highest for the MIL dataset, lower for Compﬁles, and the lowest on the Mathlib theorems. This\nsuggests that the expected improvement in metric score decreases with higher difﬁcultly – with\nundergraduate-level theorems having a signiﬁcantly higher expected improvement than research-\nlevel theorems. However, it should be noted that for both metrics, the nonempty improvement of\nImProver stayed consistent, whereas for GPT-4o, it followed the aforementioned trend of decreas-\ning with difﬁculty. Similarly, the accuracy and improved accuracy scores for both metrics and\nmodels decreased with higher difﬁculty datasets (disregarding ImProver’s accuracy scores, as they\nare ensured to be 100%). This suggests that although the base GPT-4o generator is less likely to\ngenerate a correct output for higher difﬁculty datasets, the improvements that ImProver makes to\nthe base generator allows it to maintain its improvement in the metric score whenever a correct out-\nput is generated. As such, we can speculate that the bottleneck in the improvement score is not the\nmodel’s ability to optimize the proof for a metric, but rather its ability to generate a new correct\nproof at all. As such, we conjecture that with more capable generator models, the accuracy – and\nthus, the improvement score – in optimization tasks will continue to increase, until the improvement\nscores match the nonempty improvement.",
          "page": 8,
          "x0": 107.63940000000011,
          "y0": 187.54854447999998,
          "x1": 505.87730038476985,
          "y1": 372.95023616,
          "width": 398.2379003847698,
          "height": 185.40169168,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.5333333333333333,
          "match_type": "word_overlap",
          "common_words_count": 14
        }
      ],
      "page_spans": [
        8
      ],
      "primary_page": 8,
      "bounding_boxes": [
        {
          "page": 8,
          "x0": 107.63940000000011,
          "y0": 187.54854447999998,
          "x1": 505.87730038476985,
          "y1": 372.95023616,
          "confidence": 0.5333333333333333,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 152,
      "text": "We proceed to analyze this data and its implications. Length optimization.",
      "layout_matches": [
        {
          "text": "We proceed to analyze this data and its implications.",
          "page": 7,
          "x0": 107.52217199999988,
          "y0": 149.74864448000002,
          "x1": 316.89311235211875,
          "y1": 159.71128448000005,
          "width": 209.37094035211885,
          "height": 9.962640000000022,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6445945945945947,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        7
      ],
      "primary_page": 7,
      "bounding_boxes": [
        {
          "page": 7,
          "x0": 107.52217199999988,
          "y0": 149.74864448000002,
          "x1": 316.89311235211875,
          "y1": 159.71128448000005,
          "confidence": 0.6445945945945947,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 153,
      "text": "First focusing on the length metric, we see that ImProver outperforms GPT-\n4o with respect to the improvement score by 566% (aggregated over all datasets).",
      "layout_matches": [
        {
          "text": "4o with respect to the improvement score by 566% (aggregated over all datasets). Additionally, we",
          "page": 7,
          "x0": 107.6421499999999,
          "y0": 114.39004000000003,
          "x1": 503.9852753320631,
          "y1": 124.67148448000003,
          "width": 396.3431253320632,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.44800000000000006,
          "match_type": "word_overlap",
          "common_words_count": 14
        },
        {
          "text": "Length optimization. First focusing on the length metric, we see that ImProver outperforms GPT-",
          "page": 7,
          "x0": 108.00224999999989,
          "y0": 125.42984000000003,
          "x1": 505.63969289308153,
          "y1": 135.83083616000005,
          "width": 397.63744289308164,
          "height": 10.40099616000002,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.384,
          "match_type": "word_overlap",
          "common_words_count": 12
        }
      ],
      "page_spans": [
        7
      ],
      "primary_page": 7,
      "bounding_boxes": [
        {
          "page": 7,
          "x0": 107.6421499999999,
          "y0": 114.39004000000003,
          "x1": 503.9852753320631,
          "y1": 124.67148448000003,
          "confidence": 0.44800000000000006,
          "match_type": "word_overlap"
        },
        {
          "page": 7,
          "x0": 108.00224999999989,
          "y0": 125.42984000000003,
          "x1": 505.63969289308153,
          "y1": 135.83083616000005,
          "confidence": 0.384,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 154,
      "text": "Additionally, we\nare guaranteed that ImProver produces a correct output, although that output may just be the same\nas the input.",
      "layout_matches": [
        {
          "text": "are guaranteed that ImProver produces a correct output, although that output may just be the same",
          "page": 7,
          "x0": 108.00204999999991,
          "y0": 103.47014000000003,
          "x1": 503.9854416052255,
          "y1": 113.75158448000003,
          "width": 395.9833916052256,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.6857142857142857,
          "match_type": "substring_match"
        },
        {
          "text": "Optimization varies based on dataset difﬁculty. Additionally noting Table 2, Table 3, and\nTable 4, we observe that the improvement score for both metrics for both GPT-4o and ImProver\nis highest for the MIL dataset, lower for Compﬁles, and the lowest on the Mathlib theorems. This\nsuggests that the expected improvement in metric score decreases with higher difﬁcultly – with\nundergraduate-level theorems having a signiﬁcantly higher expected improvement than research-\nlevel theorems. However, it should be noted that for both metrics, the nonempty improvement of\nImProver stayed consistent, whereas for GPT-4o, it followed the aforementioned trend of decreas-\ning with difﬁculty. Similarly, the accuracy and improved accuracy scores for both metrics and\nmodels decreased with higher difﬁculty datasets (disregarding ImProver’s accuracy scores, as they\nare ensured to be 100%). This suggests that although the base GPT-4o generator is less likely to\ngenerate a correct output for higher difﬁculty datasets, the improvements that ImProver makes to\nthe base generator allows it to maintain its improvement in the metric score whenever a correct out-\nput is generated. As such, we can speculate that the bottleneck in the improvement score is not the\nmodel’s ability to optimize the proof for a metric, but rather its ability to generate a new correct\nproof at all. As such, we conjecture that with more capable generator models, the accuracy – and\nthus, the improvement score – in optimization tasks will continue to increase, until the improvement\nscores match the nonempty improvement.",
          "page": 8,
          "x0": 107.63940000000011,
          "y0": 187.54854447999998,
          "x1": 505.87730038476985,
          "y1": 372.95023616,
          "width": 398.2379003847698,
          "height": 185.40169168,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.45714285714285713,
          "match_type": "word_overlap",
          "common_words_count": 12
        }
      ],
      "page_spans": [
        8,
        7
      ],
      "primary_page": 8,
      "bounding_boxes": [
        {
          "page": 7,
          "x0": 108.00204999999991,
          "y0": 103.47014000000003,
          "x1": 503.9854416052255,
          "y1": 113.75158448000003,
          "confidence": 0.6857142857142857,
          "match_type": "substring_match"
        },
        {
          "page": 8,
          "x0": 107.63940000000011,
          "y0": 187.54854447999998,
          "x1": 505.87730038476985,
          "y1": 372.95023616,
          "confidence": 0.45714285714285713,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 155,
      "text": "However, 35.44% of the time, it generates a correct output that is not the same length\nas the input, and in that case, we expect an average of a 55.29% reduction in length.",
      "layout_matches": [
        {
          "text": "as the input. However, 35.44% of the time, it generates a correct output that is not the same length",
          "page": 7,
          "x0": 108.00184999999988,
          "y0": 92.55024000000003,
          "x1": 504.0632560810442,
          "y1": 102.85160976000003,
          "width": 396.0614060810443,
          "height": 10.30136976,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.38787878787878793,
          "match_type": "word_overlap",
          "common_words_count": 16
        },
        {
          "text": "as the input, and in that case, we expect an average of a 55.29% reduction in length. Comparing",
          "page": 7,
          "x0": 108.00190999999984,
          "y0": 81.51004000000003,
          "x1": 504.18256256880153,
          "y1": 91.81140976000003,
          "width": 396.1806525688017,
          "height": 10.30136976,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.38787878787878793,
          "match_type": "word_overlap",
          "common_words_count": 16
        }
      ],
      "page_spans": [
        7
      ],
      "primary_page": 7,
      "bounding_boxes": [
        {
          "page": 7,
          "x0": 108.00184999999988,
          "y0": 92.55024000000003,
          "x1": 504.0632560810442,
          "y1": 102.85160976000003,
          "confidence": 0.38787878787878793,
          "match_type": "word_overlap"
        },
        {
          "page": 7,
          "x0": 108.00190999999984,
          "y0": 81.51004000000003,
          "x1": 504.18256256880153,
          "y1": 91.81140976000003,
          "confidence": 0.38787878787878793,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 156,
      "text": "Comparing\nthis with GPT-4o, we conclude that not only can ImProver optimize at a higher level on arbitrary\ntheorems, but its ability to generate nontrivial correct outputs is far greater in comparison to GPT-4o.",
      "layout_matches": [
        {
          "text": "Optimization varies based on dataset difﬁculty. Additionally noting Table 2, Table 3, and\nTable 4, we observe that the improvement score for both metrics for both GPT-4o and ImProver\nis highest for the MIL dataset, lower for Compﬁles, and the lowest on the Mathlib theorems. This\nsuggests that the expected improvement in metric score decreases with higher difﬁcultly – with\nundergraduate-level theorems having a signiﬁcantly higher expected improvement than research-\nlevel theorems. However, it should be noted that for both metrics, the nonempty improvement of\nImProver stayed consistent, whereas for GPT-4o, it followed the aforementioned trend of decreas-\ning with difﬁculty. Similarly, the accuracy and improved accuracy scores for both metrics and\nmodels decreased with higher difﬁculty datasets (disregarding ImProver’s accuracy scores, as they\nare ensured to be 100%). This suggests that although the base GPT-4o generator is less likely to\ngenerate a correct output for higher difﬁculty datasets, the improvements that ImProver makes to\nthe base generator allows it to maintain its improvement in the metric score whenever a correct out-\nput is generated. As such, we can speculate that the bottleneck in the improvement score is not the\nmodel’s ability to optimize the proof for a metric, but rather its ability to generate a new correct\nproof at all. As such, we conjecture that with more capable generator models, the accuracy – and\nthus, the improvement score – in optimization tasks will continue to increase, until the improvement\nscores match the nonempty improvement.",
          "page": 8,
          "x0": 107.63940000000011,
          "y0": 187.54854447999998,
          "x1": 505.87730038476985,
          "y1": 372.95023616,
          "width": 398.2379003847698,
          "height": 185.40169168,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.5411764705882354,
          "match_type": "word_overlap",
          "common_words_count": 23
        }
      ],
      "page_spans": [
        8
      ],
      "primary_page": 8,
      "bounding_boxes": [
        {
          "page": 8,
          "x0": 107.63940000000011,
          "y0": 187.54854447999998,
          "x1": 505.87730038476985,
          "y1": 372.95023616,
          "confidence": 0.5411764705882354,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 157,
      "text": "7\n\n\fMetric\n\nModel\n\nImprovement Nonempty Improvement Accuracy\n\nImproved Acc.",
      "layout_matches": [
        {
          "text": "Readability optimization. Readability optimization is similar, with ImProver outperforming\nGPT-4o by 423%. Moreover, the accuracy, improved accuracy, and nonempty improvement dis-\nparities for readability parallel those of the length tests. However, it should be noted that for both\nGPT-4o and ImProver, the accuracy and improved accuracy scores were markedly smaller for read-\nability than length optimization. This suggests that for both models, it was generally more “difﬁcult”\nto generate a correct output, and moreover, generate a correct output with a better metric score\nthan the input, for readability optimization than length optimization. In other words, optimizing for\nreadability is more difﬁcult for the underlying generator than optimizing for length. However, we\nspeculate with higher-quality prompts, descriptions of the metric, and examples, this disparity can\nbe minimized. Regardless, we note that different metrics can be less likely to be correctly optimized,\nand that model performance is correlated with the metric it seeks to optimize – both for GPT-4o and\nImProver.",
          "page": 8,
          "x0": 108.0,
          "y0": 387.74924,
          "x1": 505.9043360336227,
          "y1": 518.75033616,
          "width": 397.9043360336227,
          "height": 131.00109615999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.5333333333333333,
          "match_type": "word_overlap",
          "common_words_count": 6
        }
      ],
      "page_spans": [
        8
      ],
      "primary_page": 8,
      "bounding_boxes": [
        {
          "page": 8,
          "x0": 108.0,
          "y0": 387.74924,
          "x1": 505.9043360336227,
          "y1": 518.75033616,
          "confidence": 0.5333333333333333,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 158,
      "text": "Table 3: Compﬁles Proof optimization results.",
      "layout_matches": [
        {
          "text": "Table 3: Compﬁles Proof optimization results.",
          "page": 8,
          "x0": 213.72,
          "y0": 691.30814448,
          "x1": 398.3706434436555,
          "y1": 701.27078448,
          "width": 184.65064344365553,
          "height": 9.962639999999965,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.9,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        8
      ],
      "primary_page": 8,
      "bounding_boxes": [
        {
          "page": 8,
          "x0": 213.72,
          "y0": 691.30814448,
          "x1": 398.3706434436555,
          "y1": 701.27078448,
          "confidence": 0.9,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 159,
      "text": "Length\n\nReadability\n\nGPT-4o\nImProver\n\nGPT-4o\nImProver\n\nLength\n\nReadability\n\nGPT-4o\nImProver\n\nGPT-4o\nImProver\n\n2.75\n18.86\n\n0.39\n5.74\n\n0.0\n6.19\n\n0.0\n4.63\n\n30.7\n54.48\n\n3.38\n24.89\n\n0.0\n53.65\n\n0.0\n33.19\n\n11.54%\n100.0%\n\n14.1%\n100.0%\n\n5.13%\n34.62%\n\n1.28%\n19.23%\n\n16.67%\n100.0%\n\n4.65%\n100.0%\n\n0.0%\n11.54%\n\n0.0%\n11.63%\n\nMetric\n\nModel\n\nImprovement Nonempty Improvement Accuracy\n\nImproved Acc.",
      "layout_matches": [],
      "page_spans": [],
      "primary_page": 1,
      "bounding_boxes": []
    },
    {
      "sentence_id": 160,
      "text": "Table 4: Mathlib Proof optimization results. Readability optimization.",
      "layout_matches": [
        {
          "text": "Table 4: Mathlib Proof optimization results.",
          "page": 8,
          "x0": 218.4,
          "y0": 600.58814448,
          "x1": 393.69090593326786,
          "y1": 610.55078448,
          "width": 175.29090593326785,
          "height": 9.962639999999965,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.5608695652173913,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        8
      ],
      "primary_page": 8,
      "bounding_boxes": [
        {
          "page": 8,
          "x0": 218.4,
          "y0": 600.58814448,
          "x1": 393.69090593326786,
          "y1": 610.55078448,
          "confidence": 0.5608695652173913,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 161,
      "text": "Readability optimization is similar, with ImProver outperforming\nGPT-4o by 423%.",
      "layout_matches": [
        {
          "text": "Readability optimization. Readability optimization is similar, with ImProver outperforming",
          "page": 8,
          "x0": 108.0,
          "y0": 508.34934,
          "x1": 504.42135880210265,
          "y1": 518.75033616,
          "width": 396.42135880210265,
          "height": 10.400996159999977,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.5599999999999999,
          "match_type": "word_overlap",
          "common_words_count": 7
        }
      ],
      "page_spans": [
        8
      ],
      "primary_page": 8,
      "bounding_boxes": [
        {
          "page": 8,
          "x0": 108.0,
          "y0": 508.34934,
          "x1": 504.42135880210265,
          "y1": 518.75033616,
          "confidence": 0.5599999999999999,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 162,
      "text": "Moreover, the accuracy, improved accuracy, and nonempty improvement dis-\nparities for readability parallel those of the length tests.",
      "layout_matches": [
        {
          "text": "parities for readability parallel those of the length tests. However, it should be noted that for both",
          "page": 8,
          "x0": 108.0002,
          "y0": 486.70804447999996,
          "x1": 504.06121899800644,
          "y1": 496.67068448,
          "width": 396.06101899800643,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.4,
          "match_type": "word_overlap",
          "common_words_count": 9
        }
      ],
      "page_spans": [
        8
      ],
      "primary_page": 8,
      "bounding_boxes": [
        {
          "page": 8,
          "x0": 108.0002,
          "y0": 486.70804447999996,
          "x1": 504.06121899800644,
          "y1": 496.67068448,
          "confidence": 0.4,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 163,
      "text": "However, it should be noted that for both\nGPT-4o and ImProver, the accuracy and improved accuracy scores were markedly smaller for read-\nability than length optimization.",
      "layout_matches": [
        {
          "text": "Optimization varies based on dataset difﬁculty. Additionally noting Table 2, Table 3, and\nTable 4, we observe that the improvement score for both metrics for both GPT-4o and ImProver\nis highest for the MIL dataset, lower for Compﬁles, and the lowest on the Mathlib theorems. This\nsuggests that the expected improvement in metric score decreases with higher difﬁcultly – with\nundergraduate-level theorems having a signiﬁcantly higher expected improvement than research-\nlevel theorems. However, it should be noted that for both metrics, the nonempty improvement of\nImProver stayed consistent, whereas for GPT-4o, it followed the aforementioned trend of decreas-\ning with difﬁculty. Similarly, the accuracy and improved accuracy scores for both metrics and\nmodels decreased with higher difﬁculty datasets (disregarding ImProver’s accuracy scores, as they\nare ensured to be 100%). This suggests that although the base GPT-4o generator is less likely to\ngenerate a correct output for higher difﬁculty datasets, the improvements that ImProver makes to\nthe base generator allows it to maintain its improvement in the metric score whenever a correct out-\nput is generated. As such, we can speculate that the bottleneck in the improvement score is not the\nmodel’s ability to optimize the proof for a metric, but rather its ability to generate a new correct\nproof at all. As such, we conjecture that with more capable generator models, the accuracy – and\nthus, the improvement score – in optimization tasks will continue to increase, until the improvement\nscores match the nonempty improvement.",
          "page": 8,
          "x0": 107.63940000000011,
          "y0": 187.54854447999998,
          "x1": 505.87730038476985,
          "y1": 372.95023616,
          "width": 398.2379003847698,
          "height": 185.40169168,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.5230769230769231,
          "match_type": "word_overlap",
          "common_words_count": 17
        }
      ],
      "page_spans": [
        8
      ],
      "primary_page": 8,
      "bounding_boxes": [
        {
          "page": 8,
          "x0": 107.63940000000011,
          "y0": 187.54854447999998,
          "x1": 505.87730038476985,
          "y1": 372.95023616,
          "confidence": 0.5230769230769231,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 164,
      "text": "This suggests that for both models, it was generally more “difﬁcult”\nto generate a correct output, and moreover, generate a correct output with a better metric score\nthan the input, for readability optimization than length optimization.",
      "layout_matches": [
        {
          "text": "Optimization varies based on dataset difﬁculty. Additionally noting Table 2, Table 3, and\nTable 4, we observe that the improvement score for both metrics for both GPT-4o and ImProver\nis highest for the MIL dataset, lower for Compﬁles, and the lowest on the Mathlib theorems. This\nsuggests that the expected improvement in metric score decreases with higher difﬁcultly – with\nundergraduate-level theorems having a signiﬁcantly higher expected improvement than research-\nlevel theorems. However, it should be noted that for both metrics, the nonempty improvement of\nImProver stayed consistent, whereas for GPT-4o, it followed the aforementioned trend of decreas-\ning with difﬁculty. Similarly, the accuracy and improved accuracy scores for both metrics and\nmodels decreased with higher difﬁculty datasets (disregarding ImProver’s accuracy scores, as they\nare ensured to be 100%). This suggests that although the base GPT-4o generator is less likely to\ngenerate a correct output for higher difﬁculty datasets, the improvements that ImProver makes to\nthe base generator allows it to maintain its improvement in the metric score whenever a correct out-\nput is generated. As such, we can speculate that the bottleneck in the improvement score is not the\nmodel’s ability to optimize the proof for a metric, but rather its ability to generate a new correct\nproof at all. As such, we conjecture that with more capable generator models, the accuracy – and\nthus, the improvement score – in optimization tasks will continue to increase, until the improvement\nscores match the nonempty improvement.",
          "page": 8,
          "x0": 107.63940000000011,
          "y0": 187.54854447999998,
          "x1": 505.87730038476985,
          "y1": 372.95023616,
          "width": 398.2379003847698,
          "height": 185.40169168,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.4444444444444445,
          "match_type": "word_overlap",
          "common_words_count": 20
        }
      ],
      "page_spans": [
        8
      ],
      "primary_page": 8,
      "bounding_boxes": [
        {
          "page": 8,
          "x0": 107.63940000000011,
          "y0": 187.54854447999998,
          "x1": 505.87730038476985,
          "y1": 372.95023616,
          "confidence": 0.4444444444444445,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 165,
      "text": "In other words, optimizing for\nreadability is more difﬁcult for the underlying generator than optimizing for length.",
      "layout_matches": [
        {
          "text": "readability is more difﬁcult for the underlying generator than optimizing for length. However, we",
          "page": 8,
          "x0": 108.00040000000007,
          "y0": 431.86834447999996,
          "x1": 503.98287659481537,
          "y1": 441.83098448,
          "width": 395.9824765948153,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.5176470588235295,
          "match_type": "word_overlap",
          "common_words_count": 11
        }
      ],
      "page_spans": [
        8
      ],
      "primary_page": 8,
      "bounding_boxes": [
        {
          "page": 8,
          "x0": 108.00040000000007,
          "y0": 431.86834447999996,
          "x1": 503.98287659481537,
          "y1": 441.83098448,
          "confidence": 0.5176470588235295,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 166,
      "text": "However, we\nspeculate with higher-quality prompts, descriptions of the metric, and examples, this disparity can\nbe minimized.",
      "layout_matches": [
        {
          "text": "speculate with higher-quality prompts, descriptions of the metric, and examples, this disparity can",
          "page": 8,
          "x0": 108.0004000000001,
          "y0": 420.94804447999996,
          "x1": 504.0617994774524,
          "y1": 430.91068448,
          "width": 396.06139947745226,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.7140495867768596,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        8
      ],
      "primary_page": 8,
      "bounding_boxes": [
        {
          "page": 8,
          "x0": 108.0004000000001,
          "y0": 420.94804447999996,
          "x1": 504.0617994774524,
          "y1": 430.91068448,
          "confidence": 0.7140495867768596,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 167,
      "text": "Regardless, we note that different metrics can be less likely to be correctly optimized,\nand that model performance is correlated with the metric it seeks to optimize – both for GPT-4o and\nImProver.",
      "layout_matches": [
        {
          "text": "and that model performance is correlated with the metric it seeks to optimize – both for GPT-4o and",
          "page": 8,
          "x0": 108.00040000000013,
          "y0": 398.98834447999997,
          "x1": 504.06167889046867,
          "y1": 408.95098448,
          "width": 396.06127889046854,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.4523076923076923,
          "match_type": "substring_match"
        },
        {
          "text": "Optimization varies based on dataset difﬁculty. Additionally noting Table 2, Table 3, and\nTable 4, we observe that the improvement score for both metrics for both GPT-4o and ImProver\nis highest for the MIL dataset, lower for Compﬁles, and the lowest on the Mathlib theorems. This\nsuggests that the expected improvement in metric score decreases with higher difﬁcultly – with\nundergraduate-level theorems having a signiﬁcantly higher expected improvement than research-\nlevel theorems. However, it should be noted that for both metrics, the nonempty improvement of\nImProver stayed consistent, whereas for GPT-4o, it followed the aforementioned trend of decreas-\ning with difﬁculty. Similarly, the accuracy and improved accuracy scores for both metrics and\nmodels decreased with higher difﬁculty datasets (disregarding ImProver’s accuracy scores, as they\nare ensured to be 100%). This suggests that although the base GPT-4o generator is less likely to\ngenerate a correct output for higher difﬁculty datasets, the improvements that ImProver makes to\nthe base generator allows it to maintain its improvement in the metric score whenever a correct out-\nput is generated. As such, we can speculate that the bottleneck in the improvement score is not the\nmodel’s ability to optimize the proof for a metric, but rather its ability to generate a new correct\nproof at all. As such, we conjecture that with more capable generator models, the accuracy – and\nthus, the improvement score – in optimization tasks will continue to increase, until the improvement\nscores match the nonempty improvement.",
          "page": 8,
          "x0": 107.63940000000011,
          "y0": 187.54854447999998,
          "x1": 505.87730038476985,
          "y1": 372.95023616,
          "width": 398.2379003847698,
          "height": 185.40169168,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.45,
          "match_type": "word_overlap",
          "common_words_count": 18
        }
      ],
      "page_spans": [
        8
      ],
      "primary_page": 8,
      "bounding_boxes": [
        {
          "page": 8,
          "x0": 108.00040000000013,
          "y0": 398.98834447999997,
          "x1": 504.06167889046867,
          "y1": 408.95098448,
          "confidence": 0.4523076923076923,
          "match_type": "substring_match"
        },
        {
          "page": 8,
          "x0": 107.63940000000011,
          "y0": 187.54854447999998,
          "x1": 505.87730038476985,
          "y1": 372.95023616,
          "confidence": 0.45,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 168,
      "text": "Optimization varies based on dataset difﬁculty.",
      "layout_matches": [
        {
          "text": "Optimization varies based on dataset difﬁculty. Additionally noting Table 2, Table 3, and",
          "page": 8,
          "x0": 108.0004000000001,
          "y0": 362.86804448,
          "x1": 504.06187413881497,
          "y1": 372.95023616,
          "width": 396.0614741388149,
          "height": 10.082191679999994,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.48620689655172417,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        8
      ],
      "primary_page": 8,
      "bounding_boxes": [
        {
          "page": 8,
          "x0": 108.0004000000001,
          "y0": 362.86804448,
          "x1": 504.06187413881497,
          "y1": 372.95023616,
          "confidence": 0.48620689655172417,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 169,
      "text": "Additionally noting Table 2, Table 3, and\nTable 4, we observe that the improvement score for both metrics for both GPT-4o and ImProver\nis highest for the MIL dataset, lower for Compﬁles, and the lowest on the Mathlib theorems.",
      "layout_matches": [
        {
          "text": "Table 4, we observe that the improvement score for both metrics for both GPT-4o and ImProver",
          "page": 8,
          "x0": 107.63940000000011,
          "y0": 351.62934,
          "x1": 504.4159172502265,
          "y1": 361.91078448,
          "width": 396.77651725022645,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.37058823529411766,
          "match_type": "substring_match"
        },
        {
          "text": "ImProver is capable of optimizing proofs in all settings. From Table 2, Table 3, and Table 4,\nwe can see that ImProver is capable of optimizing proofs on all datasets for both the length and\nreadability metrics. Furthermore, Table 1 shows that across all metrics, ImProver signiﬁcantly\noutperforms GPT-4o on proof optimization tasks on every experimental measure – aggregated from\nall datasets. Additionally, from Table 2, Table 3, and Table 4, we can see that ImProver outperforms\nGPT-4o on each dataset as well.",
          "page": 7,
          "x0": 107.64224999999993,
          "y0": 166.66894448000002,
          "x1": 505.29405673157197,
          "y1": 231.59083616000004,
          "width": 397.65180673157204,
          "height": 64.92189168000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.34871794871794876,
          "match_type": "word_overlap",
          "common_words_count": 17
        }
      ],
      "page_spans": [
        8,
        7
      ],
      "primary_page": 7,
      "bounding_boxes": [
        {
          "page": 8,
          "x0": 107.63940000000011,
          "y0": 351.62934,
          "x1": 504.4159172502265,
          "y1": 361.91078448,
          "confidence": 0.37058823529411766,
          "match_type": "substring_match"
        },
        {
          "page": 7,
          "x0": 107.64224999999993,
          "y0": 166.66894448000002,
          "x1": 505.29405673157197,
          "y1": 231.59083616000004,
          "confidence": 0.34871794871794876,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 170,
      "text": "This\nsuggests that the expected improvement in metric score decreases with higher difﬁcultly – with\nundergraduate-level theorems having a signiﬁcantly higher expected improvement than research-\nlevel theorems.",
      "layout_matches": [
        {
          "text": "suggests that the expected improvement in metric score decreases with higher difﬁcultly – with",
          "page": 8,
          "x0": 107.99960000000019,
          "y0": 329.98844448,
          "x1": 503.94111508398623,
          "y1": 339.95108448,
          "width": 395.941515083986,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.40240384615384617,
          "match_type": "substring_match"
        },
        {
          "text": "undergraduate-level theorems having a signiﬁcantly higher expected improvement than research-",
          "page": 8,
          "x0": 107.99960000000019,
          "y0": 319.06814448,
          "x1": 505.87730038476985,
          "y1": 329.03078448,
          "width": 397.8777003847697,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.40240384615384617,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        8
      ],
      "primary_page": 8,
      "bounding_boxes": [
        {
          "page": 8,
          "x0": 107.99960000000019,
          "y0": 329.98844448,
          "x1": 503.94111508398623,
          "y1": 339.95108448,
          "confidence": 0.40240384615384617,
          "match_type": "substring_match"
        },
        {
          "page": 8,
          "x0": 107.99960000000019,
          "y0": 319.06814448,
          "x1": 505.87730038476985,
          "y1": 329.03078448,
          "confidence": 0.40240384615384617,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 171,
      "text": "However, it should be noted that for both metrics, the nonempty improvement of\nImProver stayed consistent, whereas for GPT-4o, it followed the aforementioned trend of decreas-\ning with difﬁculty.",
      "layout_matches": [
        {
          "text": "ImProver stayed consistent, whereas for GPT-4o, it followed the aforementioned trend of decreas-",
          "page": 8,
          "x0": 107.99960000000019,
          "y0": 296.78964,
          "x1": 505.7570425277632,
          "y1": 307.07108448,
          "width": 397.75744252776303,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.4429319371727749,
          "match_type": "substring_match"
        },
        {
          "text": "Readability optimization. Readability optimization is similar, with ImProver outperforming\nGPT-4o by 423%. Moreover, the accuracy, improved accuracy, and nonempty improvement dis-\nparities for readability parallel those of the length tests. However, it should be noted that for both\nGPT-4o and ImProver, the accuracy and improved accuracy scores were markedly smaller for read-\nability than length optimization. This suggests that for both models, it was generally more “difﬁcult”\nto generate a correct output, and moreover, generate a correct output with a better metric score\nthan the input, for readability optimization than length optimization. In other words, optimizing for\nreadability is more difﬁcult for the underlying generator than optimizing for length. However, we\nspeculate with higher-quality prompts, descriptions of the metric, and examples, this disparity can\nbe minimized. Regardless, we note that different metrics can be less likely to be correctly optimized,\nand that model performance is correlated with the metric it seeks to optimize – both for GPT-4o and\nImProver.",
          "page": 8,
          "x0": 108.0,
          "y0": 387.74924,
          "x1": 505.9043360336227,
          "y1": 518.75033616,
          "width": 397.9043360336227,
          "height": 131.00109615999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.4413793103448276,
          "match_type": "word_overlap",
          "common_words_count": 16
        }
      ],
      "page_spans": [
        8
      ],
      "primary_page": 8,
      "bounding_boxes": [
        {
          "page": 8,
          "x0": 107.99960000000019,
          "y0": 296.78964,
          "x1": 505.7570425277632,
          "y1": 307.07108448,
          "confidence": 0.4429319371727749,
          "match_type": "substring_match"
        },
        {
          "page": 8,
          "x0": 108.0,
          "y0": 387.74924,
          "x1": 505.9043360336227,
          "y1": 518.75033616,
          "confidence": 0.4413793103448276,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 172,
      "text": "Similarly, the accuracy and improved accuracy scores for both metrics and\nmodels decreased with higher difﬁculty datasets (disregarding ImProver’s accuracy scores, as they\nare ensured to be 100%).",
      "layout_matches": [
        {
          "text": "models decreased with higher difﬁculty datasets (disregarding ImProver’s accuracy scores, as they",
          "page": 8,
          "x0": 107.99940000000015,
          "y0": 274.94984000000005,
          "x1": 504.4207106431254,
          "y1": 285.23128448000006,
          "width": 396.42131064312525,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.44526315789473686,
          "match_type": "substring_match"
        },
        {
          "text": "Readability optimization. Readability optimization is similar, with ImProver outperforming\nGPT-4o by 423%. Moreover, the accuracy, improved accuracy, and nonempty improvement dis-\nparities for readability parallel those of the length tests. However, it should be noted that for both\nGPT-4o and ImProver, the accuracy and improved accuracy scores were markedly smaller for read-\nability than length optimization. This suggests that for both models, it was generally more “difﬁcult”\nto generate a correct output, and moreover, generate a correct output with a better metric score\nthan the input, for readability optimization than length optimization. In other words, optimizing for\nreadability is more difﬁcult for the underlying generator than optimizing for length. However, we\nspeculate with higher-quality prompts, descriptions of the metric, and examples, this disparity can\nbe minimized. Regardless, we note that different metrics can be less likely to be correctly optimized,\nand that model performance is correlated with the metric it seeks to optimize – both for GPT-4o and\nImProver.",
          "page": 8,
          "x0": 108.0,
          "y0": 387.74924,
          "x1": 505.9043360336227,
          "y1": 518.75033616,
          "width": 397.9043360336227,
          "height": 131.00109615999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.34285714285714286,
          "match_type": "word_overlap",
          "common_words_count": 12
        }
      ],
      "page_spans": [
        8
      ],
      "primary_page": 8,
      "bounding_boxes": [
        {
          "page": 8,
          "x0": 107.99940000000015,
          "y0": 274.94984000000005,
          "x1": 504.4207106431254,
          "y1": 285.23128448000006,
          "confidence": 0.44526315789473686,
          "match_type": "substring_match"
        },
        {
          "page": 8,
          "x0": 108.0,
          "y0": 387.74924,
          "x1": 505.9043360336227,
          "y1": 518.75033616,
          "confidence": 0.34285714285714286,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 173,
      "text": "This suggests that although the base GPT-4o generator is less likely to\ngenerate a correct output for higher difﬁculty datasets, the improvements that ImProver makes to\nthe base generator allows it to maintain its improvement in the metric score whenever a correct out-\nput is generated.",
      "layout_matches": [
        {
          "text": "Readability optimization. Readability optimization is similar, with ImProver outperforming\nGPT-4o by 423%. Moreover, the accuracy, improved accuracy, and nonempty improvement dis-\nparities for readability parallel those of the length tests. However, it should be noted that for both\nGPT-4o and ImProver, the accuracy and improved accuracy scores were markedly smaller for read-\nability than length optimization. This suggests that for both models, it was generally more “difﬁcult”\nto generate a correct output, and moreover, generate a correct output with a better metric score\nthan the input, for readability optimization than length optimization. In other words, optimizing for\nreadability is more difﬁcult for the underlying generator than optimizing for length. However, we\nspeculate with higher-quality prompts, descriptions of the metric, and examples, this disparity can\nbe minimized. Regardless, we note that different metrics can be less likely to be correctly optimized,\nand that model performance is correlated with the metric it seeks to optimize – both for GPT-4o and\nImProver.",
          "page": 8,
          "x0": 108.0,
          "y0": 387.74924,
          "x1": 505.9043360336227,
          "y1": 518.75033616,
          "width": 397.9043360336227,
          "height": 131.00109615999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.3652173913043478,
          "match_type": "word_overlap",
          "common_words_count": 21
        }
      ],
      "page_spans": [
        8
      ],
      "primary_page": 8,
      "bounding_boxes": [
        {
          "page": 8,
          "x0": 108.0,
          "y0": 387.74924,
          "x1": 505.9043360336227,
          "y1": 518.75033616,
          "confidence": 0.3652173913043478,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 174,
      "text": "As such, we can speculate that the bottleneck in the improvement score is not the\nmodel’s ability to optimize the proof for a metric, but rather its ability to generate a new correct\nproof at all.",
      "layout_matches": [
        {
          "text": "model’s ability to optimize the proof for a metric, but rather its ability to generate a new correct",
          "page": 8,
          "x0": 107.99940000000001,
          "y0": 220.42854448,
          "x1": 504.2501362827404,
          "y1": 230.39118448000002,
          "width": 396.2507362827404,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.4569948186528498,
          "match_type": "substring_match"
        },
        {
          "text": "Length optimization. First focusing on the length metric, we see that ImProver outperforms GPT-\n4o with respect to the improvement score by 566% (aggregated over all datasets). Additionally, we\nare guaranteed that ImProver produces a correct output, although that output may just be the same\nas the input. However, 35.44% of the time, it generates a correct output that is not the same length\nas the input, and in that case, we expect an average of a 55.29% reduction in length. Comparing\nthis with GPT-4o, we conclude that not only can ImProver optimize at a higher level on arbitrary\ntheorems, but its ability to generate nontrivial correct outputs is far greater in comparison to GPT-4o.",
          "page": 7,
          "x0": 107.6421499999999,
          "y0": 59.98904448000004,
          "x1": 505.8936797031022,
          "y1": 135.83083616000005,
          "width": 398.2515297031023,
          "height": 75.84179168,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.4444444444444445,
          "match_type": "word_overlap",
          "common_words_count": 20
        }
      ],
      "page_spans": [
        8,
        7
      ],
      "primary_page": 7,
      "bounding_boxes": [
        {
          "page": 8,
          "x0": 107.99940000000001,
          "y0": 220.42854448,
          "x1": 504.2501362827404,
          "y1": 230.39118448000002,
          "confidence": 0.4569948186528498,
          "match_type": "substring_match"
        },
        {
          "page": 7,
          "x0": 107.6421499999999,
          "y0": 59.98904448000004,
          "x1": 505.8936797031022,
          "y1": 135.83083616000005,
          "confidence": 0.4444444444444445,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 175,
      "text": "As such, we conjecture that with more capable generator models, the accuracy – and\nthus, the improvement score – in optimization tasks will continue to increase, until the improvement\nscores match the nonempty improvement.",
      "layout_matches": [
        {
          "text": "thus, the improvement score – in optimization tasks will continue to increase, until the improvement",
          "page": 8,
          "x0": 107.99940000000001,
          "y0": 198.58874447999997,
          "x1": 504.49003470583887,
          "y1": 208.55138448,
          "width": 396.49063470583883,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.4041666666666667,
          "match_type": "substring_match"
        },
        {
          "text": "Readability optimization. Readability optimization is similar, with ImProver outperforming\nGPT-4o by 423%. Moreover, the accuracy, improved accuracy, and nonempty improvement dis-\nparities for readability parallel those of the length tests. However, it should be noted that for both\nGPT-4o and ImProver, the accuracy and improved accuracy scores were markedly smaller for read-\nability than length optimization. This suggests that for both models, it was generally more “difﬁcult”\nto generate a correct output, and moreover, generate a correct output with a better metric score\nthan the input, for readability optimization than length optimization. In other words, optimizing for\nreadability is more difﬁcult for the underlying generator than optimizing for length. However, we\nspeculate with higher-quality prompts, descriptions of the metric, and examples, this disparity can\nbe minimized. Regardless, we note that different metrics can be less likely to be correctly optimized,\nand that model performance is correlated with the metric it seeks to optimize – both for GPT-4o and\nImProver.",
          "page": 8,
          "x0": 108.0,
          "y0": 387.74924,
          "x1": 505.9043360336227,
          "y1": 518.75033616,
          "width": 397.9043360336227,
          "height": 131.00109615999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.4,
          "match_type": "word_overlap",
          "common_words_count": 16
        }
      ],
      "page_spans": [
        8
      ],
      "primary_page": 8,
      "bounding_boxes": [
        {
          "page": 8,
          "x0": 107.99940000000001,
          "y0": 198.58874447999997,
          "x1": 504.49003470583887,
          "y1": 208.55138448,
          "confidence": 0.4041666666666667,
          "match_type": "substring_match"
        },
        {
          "page": 8,
          "x0": 108.0,
          "y0": 387.74924,
          "x1": 505.9043360336227,
          "y1": 518.75033616,
          "confidence": 0.4,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 176,
      "text": "Overall, we conclude that although the performance of both ImProver and GPT-4o decreases on\nlength and readability optimization on more difﬁcult datasets, ImProver signiﬁcantly outperforms\nGPT-4o on all datasets for length and readability optimization.",
      "layout_matches": [
        {
          "text": "Overall, we conclude that although the performance of both ImProver and GPT-4o decreases on\nlength and readability optimization on more difﬁcult datasets, ImProver signiﬁcantly outperforms\nGPT-4o on all datasets for length and readability optimization.",
          "page": 8,
          "x0": 107.99919999999997,
          "y0": 148.66894448,
          "x1": 504.3947918635563,
          "y1": 180.59128448,
          "width": 396.3955918635563,
          "height": 31.92234000000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.9,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        8
      ],
      "primary_page": 8,
      "bounding_boxes": [
        {
          "page": 8,
          "x0": 107.99919999999997,
          "y0": 148.66894448,
          "x1": 504.3947918635563,
          "y1": 180.59128448,
          "confidence": 0.9,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 177,
      "text": "4.2.1 ABLATION TESTING\n\nWe perform ablation studies using a subset of the MIL dataset as discussed in §4.1.1.",
      "layout_matches": [
        {
          "text": "We perform ablation studies using a subset of the MIL dataset as discussed in §4.1.1. The results\nof this factorial study are aggregated in Table 5. We measure the baseline results from the GPT-\n4o and GPT-4o-mini models, noting that GPT-4o is the better-scoring model (with respect to the\nimprovement score). Thus, ﬁxing this model, we vary the output formatting type and if CoS is\nenabled, and determine that outputting flat with CoS enabled maximizes the improvement score.",
          "page": 8,
          "x0": 107.51929999999999,
          "y0": 59.98894448000001,
          "x1": 505.8891848233745,
          "y1": 113.75148448,
          "width": 398.3698848233745,
          "height": 53.762539999999994,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6666666666666667,
          "match_type": "word_overlap",
          "common_words_count": 15
        }
      ],
      "page_spans": [
        8
      ],
      "primary_page": 8,
      "bounding_boxes": [
        {
          "page": 8,
          "x0": 107.51929999999999,
          "y0": 59.98894448000001,
          "x1": 505.8891848233745,
          "y1": 113.75148448,
          "confidence": 0.6666666666666667,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 178,
      "text": "The results\nof this factorial study are aggregated in Table 5.",
      "layout_matches": [
        {
          "text": "of this factorial study are aggregated in Table 5. We measure the baseline results from the GPT-",
          "page": 8,
          "x0": 107.99929999999998,
          "y0": 92.86894448000001,
          "x1": 505.6356688009324,
          "y1": 102.83158448,
          "width": 397.6363688009325,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.8,
          "match_type": "word_overlap",
          "common_words_count": 11
        }
      ],
      "page_spans": [
        8
      ],
      "primary_page": 8,
      "bounding_boxes": [
        {
          "page": 8,
          "x0": 107.99929999999998,
          "y0": 92.86894448000001,
          "x1": 505.6356688009324,
          "y1": 102.83158448,
          "confidence": 0.8,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 179,
      "text": "We measure the baseline results from the GPT-\n4o and GPT-4o-mini models, noting that GPT-4o is the better-scoring model (with respect to the\nimprovement score).",
      "layout_matches": [
        {
          "text": "4o and GPT-4o-mini models, noting that GPT-4o is the better-scoring model (with respect to the",
          "page": 8,
          "x0": 107.63830000000002,
          "y0": 81.82874448000001,
          "x1": 504.10193132103643,
          "y1": 91.79138448,
          "width": 396.4636313210364,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.5273885350318471,
          "match_type": "substring_match"
        },
        {
          "text": "Our experimentation is split into three distinct stages. We ﬁrst perform ablation testing on the\nImProver model parameters (§3.1) to ensure that ImProver’s parameter speciﬁcation is the optimal\none with respect to correctness and metric optimization score. We then evaluate this optimal param-\neter combination on datasets of varying complexity and analyze the performance and results thereof.\nLastly, we note the performance of ImProver in NTP applications in comparison to the base GPT-4o\nand GPT-4o-mini models.",
          "page": 5,
          "x0": 107.99887600000008,
          "y0": 205.90904448000015,
          "x1": 506.0095274203015,
          "y1": 270.71138448000016,
          "width": 398.01065142030143,
          "height": 64.80234000000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.41600000000000004,
          "match_type": "word_overlap",
          "common_words_count": 13
        }
      ],
      "page_spans": [
        8,
        5
      ],
      "primary_page": 5,
      "bounding_boxes": [
        {
          "page": 8,
          "x0": 107.63830000000002,
          "y0": 81.82874448000001,
          "x1": 504.10193132103643,
          "y1": 91.79138448,
          "confidence": 0.5273885350318471,
          "match_type": "substring_match"
        },
        {
          "page": 5,
          "x0": 107.99887600000008,
          "y0": 205.90904448000015,
          "x1": 506.0095274203015,
          "y1": 270.71138448000016,
          "confidence": 0.41600000000000004,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 180,
      "text": "Thus, ﬁxing this model, we vary the output formatting type and if CoS is\nenabled, and determine that outputting flat with CoS enabled maximizes the improvement score.",
      "layout_matches": [
        {
          "text": "enabled, and determine that outputting flat with CoS enabled maximizes the improvement score.",
          "page": 8,
          "x0": 107.99829999999997,
          "y0": 59.98894448000001,
          "x1": 505.8891848233745,
          "y1": 70.27038896,
          "width": 397.8908848233745,
          "height": 10.281444479999998,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.5079754601226993,
          "match_type": "substring_match"
        },
        {
          "text": "improvement score). Thus, ﬁxing this model, we vary the output formatting type and if CoS is",
          "page": 8,
          "x0": 107.9983,
          "y0": 70.90884448000001,
          "x1": 504.03272765016567,
          "y1": 80.87148448,
          "width": 396.03442765016564,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.4740740740740741,
          "match_type": "word_overlap",
          "common_words_count": 16
        }
      ],
      "page_spans": [
        8
      ],
      "primary_page": 8,
      "bounding_boxes": [
        {
          "page": 8,
          "x0": 107.99829999999997,
          "y0": 59.98894448000001,
          "x1": 505.8891848233745,
          "y1": 70.27038896,
          "confidence": 0.5079754601226993,
          "match_type": "substring_match"
        },
        {
          "page": 8,
          "x0": 107.9983,
          "y0": 70.90884448000001,
          "x1": 504.03272765016567,
          "y1": 80.87148448,
          "confidence": 0.4740740740740741,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 181,
      "text": "8\n\n\fTable 5: Ablation results.",
      "layout_matches": [
        {
          "text": "Table 5: Ablation results. Each cell in the ablation tests shows best / worst, which are the best\nand worst parameter combinations in the test group. The ImProver speciﬁcation outputs the input\ntheorem when no correct proof is generated, which results in an accuracy of 100% on MIL.",
          "page": 9,
          "x0": 107.64,
          "y0": 669.34804448,
          "x1": 504.1292077533914,
          "y1": 701.58958896,
          "width": 396.48920775339144,
          "height": 32.241544480000016,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6400000000000001,
          "match_type": "word_overlap",
          "common_words_count": 4
        }
      ],
      "page_spans": [
        9
      ],
      "primary_page": 9,
      "bounding_boxes": [
        {
          "page": 9,
          "x0": 107.64,
          "y0": 669.34804448,
          "x1": 504.1292077533914,
          "y1": 701.58958896,
          "confidence": 0.6400000000000001,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 182,
      "text": "Each cell in the ablation tests shows best / worst, which are the best\nand worst parameter combinations in the test group.",
      "layout_matches": [
        {
          "text": "Table 5: Ablation results. Each cell in the ablation tests shows best / worst, which are the best",
          "page": 9,
          "x0": 107.64,
          "y0": 691.30814448,
          "x1": 504.0974324625904,
          "y1": 701.58958896,
          "width": 396.4574324625904,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.4190476190476191,
          "match_type": "word_overlap",
          "common_words_count": 11
        },
        {
          "text": "Table 5: Ablation results. Each cell in the ablation tests shows best / worst, which are the best\nand worst parameter combinations in the test group. The ImProver speciﬁcation outputs the input\ntheorem when no correct proof is generated, which results in an accuracy of 100% on MIL.",
          "page": 9,
          "x0": 107.64,
          "y0": 669.34804448,
          "x1": 504.1292077533914,
          "y1": 701.58958896,
          "width": 396.48920775339144,
          "height": 32.241544480000016,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.3898916967509025,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        9
      ],
      "primary_page": 9,
      "bounding_boxes": [
        {
          "page": 9,
          "x0": 107.64,
          "y0": 691.30814448,
          "x1": 504.0974324625904,
          "y1": 701.58958896,
          "confidence": 0.4190476190476191,
          "match_type": "word_overlap"
        },
        {
          "page": 9,
          "x0": 107.64,
          "y0": 669.34804448,
          "x1": 504.1292077533914,
          "y1": 701.58958896,
          "confidence": 0.3898916967509025,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 183,
      "text": "The ImProver speciﬁcation outputs the input\ntheorem when no correct proof is generated, which results in an accuracy of 100% on MIL.",
      "layout_matches": [
        {
          "text": "theorem when no correct proof is generated, which results in an accuracy of 100% on MIL.",
          "page": 9,
          "x0": 107.99976000000004,
          "y0": 669.34804448,
          "x1": 471.81074112140396,
          "y1": 679.31068448,
          "width": 363.8109811214039,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.5953846153846154,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        9
      ],
      "primary_page": 9,
      "bounding_boxes": [
        {
          "page": 9,
          "x0": 107.99976000000004,
          "y0": 669.34804448,
          "x1": 471.81074112140396,
          "y1": 679.31068448,
          "confidence": 0.5953846153846154,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 184,
      "text": "Improvement Nonempty Improve. Accuracy\n\nImproved Acc.",
      "layout_matches": [
        {
          "text": "Improvement Nonempty Improve. Accuracy",
          "page": 9,
          "x0": 235.68,
          "y0": 517.16532916,
          "x1": 414.28301888798717,
          "y1": 526.13170916,
          "width": 178.60301888798716,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6576923076923077,
          "match_type": "substring_match"
        },
        {
          "text": "Readability optimization. Readability optimization is similar, with ImProver outperforming\nGPT-4o by 423%. Moreover, the accuracy, improved accuracy, and nonempty improvement dis-\nparities for readability parallel those of the length tests. However, it should be noted that for both\nGPT-4o and ImProver, the accuracy and improved accuracy scores were markedly smaller for read-\nability than length optimization. This suggests that for both models, it was generally more “difﬁcult”\nto generate a correct output, and moreover, generate a correct output with a better metric score\nthan the input, for readability optimization than length optimization. In other words, optimizing for\nreadability is more difﬁcult for the underlying generator than optimizing for length. However, we\nspeculate with higher-quality prompts, descriptions of the metric, and examples, this disparity can\nbe minimized. Regardless, we note that different metrics can be less likely to be correctly optimized,\nand that model performance is correlated with the metric it seeks to optimize – both for GPT-4o and\nImProver.",
          "page": 8,
          "x0": 108.0,
          "y0": 387.74924,
          "x1": 505.9043360336227,
          "y1": 518.75033616,
          "width": 397.9043360336227,
          "height": 131.00109615999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.5333333333333333,
          "match_type": "word_overlap",
          "common_words_count": 4
        }
      ],
      "page_spans": [
        8,
        9
      ],
      "primary_page": 8,
      "bounding_boxes": [
        {
          "page": 9,
          "x0": 235.68,
          "y0": 517.16532916,
          "x1": 414.28301888798717,
          "y1": 526.13170916,
          "confidence": 0.6576923076923077,
          "match_type": "substring_match"
        },
        {
          "page": 8,
          "x0": 108.0,
          "y0": 387.74924,
          "x1": 505.9043360336227,
          "y1": 518.75033616,
          "confidence": 0.5333333333333333,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 185,
      "text": "GPT-4o-mini\nGPT-4o\n+ Output and CoS\n+ Example Retrieval\n+ Sampling Method\n+ n and Model\n+ Combos and RAG\nImProver\n\n0\n7.03\n8.04 / 6.31\n9.34 / 5.67\n15.35 / 9.34\n23.51 / 3.65\n34.88 / 28.25\n\n0\n19.67\n12.38 / 14.17\n14.7 / 8.44\n18.44 / 14.7\n26.28 / 4.63\n57.56 / 33.48\n\n3.62%\n35.77%\n\n0%\n15.33%\n\n64.96% / 44.53% 21.17% / 16.06%\n63.5% / 67.15%\n21.9% / 16.79%\n36.5% / 21.9%\n83.21% / 63.5%\n89.47% / 78.95% 45.61% / 8.77%\n60.61% / 84.38% 54.55% / 53.12%\n\n34.88\n\n57.56\n\n100%\n\n54.55%\n\nTable 6: CoS Readability Ablation results.",
      "layout_matches": [],
      "page_spans": [],
      "primary_page": 1,
      "bounding_boxes": []
    },
    {
      "sentence_id": 186,
      "text": "Improvement Nonempty Improve. Accuracy\n\nImproved Acc.",
      "layout_matches": [
        {
          "text": "Improvement Nonempty Improve. Accuracy",
          "page": 9,
          "x0": 235.68,
          "y0": 517.16532916,
          "x1": 414.28301888798717,
          "y1": 526.13170916,
          "width": 178.60301888798716,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6576923076923077,
          "match_type": "substring_match"
        },
        {
          "text": "Readability optimization. Readability optimization is similar, with ImProver outperforming\nGPT-4o by 423%. Moreover, the accuracy, improved accuracy, and nonempty improvement dis-\nparities for readability parallel those of the length tests. However, it should be noted that for both\nGPT-4o and ImProver, the accuracy and improved accuracy scores were markedly smaller for read-\nability than length optimization. This suggests that for both models, it was generally more “difﬁcult”\nto generate a correct output, and moreover, generate a correct output with a better metric score\nthan the input, for readability optimization than length optimization. In other words, optimizing for\nreadability is more difﬁcult for the underlying generator than optimizing for length. However, we\nspeculate with higher-quality prompts, descriptions of the metric, and examples, this disparity can\nbe minimized. Regardless, we note that different metrics can be less likely to be correctly optimized,\nand that model performance is correlated with the metric it seeks to optimize – both for GPT-4o and\nImProver.",
          "page": 8,
          "x0": 108.0,
          "y0": 387.74924,
          "x1": 505.9043360336227,
          "y1": 518.75033616,
          "width": 397.9043360336227,
          "height": 131.00109615999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.5333333333333333,
          "match_type": "word_overlap",
          "common_words_count": 4
        }
      ],
      "page_spans": [
        8,
        9
      ],
      "primary_page": 8,
      "bounding_boxes": [
        {
          "page": 9,
          "x0": 235.68,
          "y0": 517.16532916,
          "x1": 414.28301888798717,
          "y1": 526.13170916,
          "confidence": 0.6576923076923077,
          "match_type": "substring_match"
        },
        {
          "page": 8,
          "x0": 108.0,
          "y0": 387.74924,
          "x1": 505.9043360336227,
          "y1": 518.75033616,
          "confidence": 0.5333333333333333,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 187,
      "text": "GPT-4o\nImProver, CoS Disabled\nImProver\n\n4.97\n9.23\n16.69\n\n15.89\n24.61\n31.42\n\n37.5%\n100.0%\n100.0%\n\n12.5%\n28.12%\n46.88%\n\nFixing these parameters, we now vary the number of examples retrieved, noting that prompting\nwith 10 examples maximizes the improvement score.",
      "layout_matches": [
        {
          "text": "Fixing these parameters, we now vary the number of examples retrieved, noting that prompting\nwith 10 examples maximizes the improvement score. Fixing this parameter, we vary the sampling\nmethods (excluding compound methods and ﬁxing n = 5) and observe that best-of-n is the best\nparameter combination. Now, as GPT-4o-mini is signiﬁcantly less computationally expensive than\nits GPT-4o counterpart, we test both models with the sample method ﬁxed to best-of-n, and vary\nn = 1, 3, 5, 7, 10, 15, and for GPT-4o-mini, also n = 20. We conclude that GPT-4o with n = 15\nis the most effective. Fixing these parameters, we consider all mixed compound sampling methods\nwith and without document retrieval enabled, concluding that a 5-step reﬁnement with best-of-3 on\neach iteration, with RAG enabled, is the optimal combination.",
          "page": 9,
          "x0": 107.63949999999991,
          "y0": 358.42844448,
          "x1": 504.4218815566269,
          "y1": 456.11078448,
          "width": 396.782381556627,
          "height": 97.68234000000001,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.42105263157894735,
          "match_type": "word_overlap",
          "common_words_count": 20
        }
      ],
      "page_spans": [
        9
      ],
      "primary_page": 9,
      "bounding_boxes": [
        {
          "page": 9,
          "x0": 107.63949999999991,
          "y0": 358.42844448,
          "x1": 504.4218815566269,
          "y1": 456.11078448,
          "confidence": 0.42105263157894735,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 188,
      "text": "Fixing this parameter, we vary the sampling\nmethods (excluding compound methods and ﬁxing n = 5) and observe that best-of-n is the best\nparameter combination.",
      "layout_matches": [
        {
          "text": "methods (excluding compound methods and ﬁxing n = 5) and observe that best-of-n is the best",
          "page": 9,
          "x0": 108.00059999999996,
          "y0": 423.86964,
          "x1": 504.01025398492357,
          "y1": 434.17100976,
          "width": 396.0096539849236,
          "height": 10.30136976,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.5142857142857142,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        9
      ],
      "primary_page": 9,
      "bounding_boxes": [
        {
          "page": 9,
          "x0": 108.00059999999996,
          "y0": 423.86964,
          "x1": 504.01025398492357,
          "y1": 434.17100976,
          "confidence": 0.5142857142857142,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 189,
      "text": "Now, as GPT-4o-mini is signiﬁcantly less computationally expensive than\nits GPT-4o counterpart, we test both models with the sample method ﬁxed to best-of-n, and vary\nn = 1, 3, 5, 7, 10, 15, and for GPT-4o-mini, also n = 20.",
      "layout_matches": [
        {
          "text": "its GPT-4o counterpart, we test both models with the sample method ﬁxed to best-of-n, and vary",
          "page": 9,
          "x0": 108.00009999999995,
          "y0": 402.22834448,
          "x1": 504.4218815566269,
          "y1": 412.19098448,
          "width": 396.4217815566269,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.3905660377358491,
          "match_type": "substring_match"
        },
        {
          "text": "n and Model: Here, we evaluate the effects of larger n values and different models. We test n =\n3, 5, 7, 10, 15 on GPT-4o and GPT-4o-mini, as well as n = 20 for GPT-4o-mini (as it is of a far\nlower token cost). CoS, output formatting, examples, and sampling method are ﬁxed as the best\ncombination from the previous test, and no other features enabled.",
          "page": 7,
          "x0": 107.76092,
          "y0": 440.86844448,
          "x1": 504.1973667914619,
          "y1": 483.82027352,
          "width": 396.4364467914619,
          "height": 42.95182904000001,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.35789473684210527,
          "match_type": "word_overlap",
          "common_words_count": 17
        }
      ],
      "page_spans": [
        9,
        7
      ],
      "primary_page": 7,
      "bounding_boxes": [
        {
          "page": 9,
          "x0": 108.00009999999995,
          "y0": 402.22834448,
          "x1": 504.4218815566269,
          "y1": 412.19098448,
          "confidence": 0.3905660377358491,
          "match_type": "substring_match"
        },
        {
          "page": 7,
          "x0": 107.76092,
          "y0": 440.86844448,
          "x1": 504.1973667914619,
          "y1": 483.82027352,
          "confidence": 0.35789473684210527,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 190,
      "text": "We conclude that GPT-4o with n = 15\nis the most effective.",
      "layout_matches": [
        {
          "text": "Length optimization. First focusing on the length metric, we see that ImProver outperforms GPT-\n4o with respect to the improvement score by 566% (aggregated over all datasets). Additionally, we\nare guaranteed that ImProver produces a correct output, although that output may just be the same\nas the input. However, 35.44% of the time, it generates a correct output that is not the same length\nas the input, and in that case, we expect an average of a 55.29% reduction in length. Comparing\nthis with GPT-4o, we conclude that not only can ImProver optimize at a higher level on arbitrary\ntheorems, but its ability to generate nontrivial correct outputs is far greater in comparison to GPT-4o.",
          "page": 7,
          "x0": 107.6421499999999,
          "y0": 59.98904448000004,
          "x1": 505.8936797031022,
          "y1": 135.83083616000005,
          "width": 398.2515297031023,
          "height": 75.84179168,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.5090909090909091,
          "match_type": "word_overlap",
          "common_words_count": 7
        }
      ],
      "page_spans": [
        7
      ],
      "primary_page": 7,
      "bounding_boxes": [
        {
          "page": 7,
          "x0": 107.6421499999999,
          "y0": 59.98904448000004,
          "x1": 505.8936797031022,
          "y1": 135.83083616000005,
          "confidence": 0.5090909090909091,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 191,
      "text": "Fixing these parameters, we consider all mixed compound sampling methods\nwith and without document retrieval enabled, concluding that a 5-step reﬁnement with best-of-3 on\neach iteration, with RAG enabled, is the optimal combination.",
      "layout_matches": [
        {
          "text": "With the previous optimal parameters ﬁxed, run the ablation on the combination methods and if\nRAG is enabled. By Table 12, we see that the optimal combination in this testing group is a 5-step\nreﬁnement with each iteration being a best-of-3 call, with RAG enabled.",
          "page": 17,
          "x0": 107.52,
          "y0": 116.14804448,
          "x1": 504.06112816484216,
          "y1": 148.07078448000001,
          "width": 396.5411281648422,
          "height": 31.92274000000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.4121212121212121,
          "match_type": "word_overlap",
          "common_words_count": 17
        }
      ],
      "page_spans": [
        17
      ],
      "primary_page": 17,
      "bounding_boxes": [
        {
          "page": 17,
          "x0": 107.52,
          "y0": 116.14804448,
          "x1": 504.06112816484216,
          "y1": 148.07078448000001,
          "confidence": 0.4121212121212121,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 192,
      "text": "Thus, as we can see from Table 5, the optimal parameter combination comes from gpt-4o outputting\nas a string list with CoS, RAG, 10 examples, 5-step reﬁnement with each iteration being a\nbest-of-3 evaluation.",
      "layout_matches": [
        {
          "text": "Thus, as we can see from Table 5, the optimal parameter combination comes from gpt-4o outputting\nas a string list with CoS, RAG, 10 examples, 5-step reﬁnement with each iteration being a\nbest-of-3 evaluation. Changing any one of these parameters them leads to a reduction in performance.\nAdditional ablation data can be found at (§B.1).",
          "page": 9,
          "x0": 107.63994000000002,
          "y0": 308.62854448,
          "x1": 506.1305972965908,
          "y1": 351.47118448000003,
          "width": 398.49065729659077,
          "height": 42.84264000000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.5570121951219512,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        9
      ],
      "primary_page": 9,
      "bounding_boxes": [
        {
          "page": 9,
          "x0": 107.63994000000002,
          "y0": 308.62854448,
          "x1": 506.1305972965908,
          "y1": 351.47118448000003,
          "confidence": 0.5570121951219512,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 193,
      "text": "Changing any one of these parameters them leads to a reduction in performance.",
      "layout_matches": [
        {
          "text": "best-of-3 evaluation. Changing any one of these parameters them leads to a reduction in performance.",
          "page": 9,
          "x0": 108.00002,
          "y0": 319.22964,
          "x1": 506.1305972965908,
          "y1": 329.51108448,
          "width": 398.1305772965908,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.7020000000000001,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        9
      ],
      "primary_page": 9,
      "bounding_boxes": [
        {
          "page": 9,
          "x0": 108.00002,
          "y0": 319.22964,
          "x1": 506.1305972965908,
          "y1": 329.51108448,
          "confidence": 0.7020000000000001,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 194,
      "text": "Additional ablation data can be found at (§B.1).",
      "layout_matches": [
        {
          "text": "Additional ablation data can be found at (§B.1).",
          "page": 9,
          "x0": 107.63994000000002,
          "y0": 308.62854448,
          "x1": 298.29055187182524,
          "y1": 318.59118448000004,
          "width": 190.65061187182522,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.9,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        9
      ],
      "primary_page": 9,
      "bounding_boxes": [
        {
          "page": 9,
          "x0": 107.63994000000002,
          "y0": 308.62854448,
          "x1": 298.29055187182524,
          "y1": 318.59118448000004,
          "confidence": 0.9,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 195,
      "text": "Readability and Chain-of-States (CoS) Ablation.",
      "layout_matches": [
        {
          "text": "tasks, and we speculate that CoS has a high impact on the performance of readability optimization",
          "page": 9,
          "x0": 108.00009600000004,
          "y0": 262.66884448,
          "x1": 504.18199787254565,
          "y1": 272.63148448000004,
          "width": 396.1819018725456,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.48,
          "match_type": "word_overlap",
          "common_words_count": 3
        }
      ],
      "page_spans": [
        9
      ],
      "primary_page": 9,
      "bounding_boxes": [
        {
          "page": 9,
          "x0": 108.00009600000004,
          "y0": 262.66884448,
          "x1": 504.18199787254565,
          "y1": 272.63148448000004,
          "confidence": 0.48,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 196,
      "text": "We additionally examine the effects of dis-\nabling CoS on readability optimization tasks, as the previous study focused on length optimization\ntasks, and we speculate that CoS has a high impact on the performance of readability optimization\ntasks, as the proof states that are embedded due to CoS seem to be a critical aspect to generating the\nexplicit declarations that the readability metric measures.",
      "layout_matches": [
        {
          "text": "Readability and Chain-of-States (CoS) Ablation. We additionally examine the effects of dis-\nabling CoS on readability optimization tasks, as the previous study focused on length optimization\ntasks, and we speculate that CoS has a high impact on the performance of readability optimization\ntasks, as the proof states that are embedded due to CoS seem to be a critical aspect to generating the\nexplicit declarations that the readability metric measures.",
          "page": 9,
          "x0": 108.00009600000001,
          "y0": 240.82864448,
          "x1": 505.63735679976986,
          "y1": 294.71073616,
          "width": 397.6372607997698,
          "height": 53.88209168,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.8071748878923767,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        9
      ],
      "primary_page": 9,
      "bounding_boxes": [
        {
          "page": 9,
          "x0": 108.00009600000001,
          "y0": 240.82864448,
          "x1": 505.63735679976986,
          "y1": 294.71073616,
          "confidence": 0.8071748878923767,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 197,
      "text": "We conﬁrm this result by considering Table 6 and observe that simply enabling CoS nearly doubles\nthe improvement score, and signiﬁcantly improves the nonempty improvement score, suggesting that\nCoS has a high degree of impact on optimizing for the readability metric, as conjectured.",
      "layout_matches": [
        {
          "text": "We conﬁrm this result by considering Table 6 and observe that simply enabling CoS nearly doubles\nthe improvement score, and signiﬁcantly improves the nonempty improvement score, suggesting that\nCoS has a high degree of impact on optimizing for the readability metric, as conjectured. However,\nwe also note a signiﬁcant increase in improved accuracy, which suggests that embedding the chain\nof states also improves the ability of the model to generate nontrivial correct outputs, implying that\nthe symbolic information contained in the states are critical to effectively modifying the structure\nand content of a proof.",
          "page": 9,
          "x0": 107.52009600000008,
          "y0": 158.14874448,
          "x1": 505.5303671759437,
          "y1": 233.75148448000004,
          "width": 398.0102711759436,
          "height": 75.60274000000004,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.41243862520458263,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        9
      ],
      "primary_page": 9,
      "bounding_boxes": [
        {
          "page": 9,
          "x0": 107.52009600000008,
          "y0": 158.14874448,
          "x1": 505.5303671759437,
          "y1": 233.75148448000004,
          "confidence": 0.41243862520458263,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 198,
      "text": "However,\nwe also note a signiﬁcant increase in improved accuracy, which suggests that embedding the chain\nof states also improves the ability of the model to generate nontrivial correct outputs, implying that\nthe symbolic information contained in the states are critical to effectively modifying the structure\nand content of a proof.",
      "layout_matches": [
        {
          "text": "We conﬁrm this result by considering Table 6 and observe that simply enabling CoS nearly doubles\nthe improvement score, and signiﬁcantly improves the nonempty improvement score, suggesting that\nCoS has a high degree of impact on optimizing for the readability metric, as conjectured. However,\nwe also note a signiﬁcant increase in improved accuracy, which suggests that embedding the chain\nof states also improves the ability of the model to generate nontrivial correct outputs, implying that\nthe symbolic information contained in the states are critical to effectively modifying the structure\nand content of a proof.",
          "page": 9,
          "x0": 107.52009600000008,
          "y0": 158.14874448,
          "x1": 505.5303671759437,
          "y1": 233.75148448000004,
          "width": 398.0102711759436,
          "height": 75.60274000000004,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.48608837970540103,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        9
      ],
      "primary_page": 9,
      "bounding_boxes": [
        {
          "page": 9,
          "x0": 107.52009600000008,
          "y0": 158.14874448,
          "x1": 505.5303671759437,
          "y1": 233.75148448000004,
          "confidence": 0.48608837970540103,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 199,
      "text": "4.2.2 NEURAL THEOREM PROVING EVALUATION\n\nWe evaluate ImProver’s neural theorem proving (NTP) performance using the completion metric.",
      "layout_matches": [
        {
          "text": "We evaluate ImProver’s neural theorem proving (NTP) performance using the completion metric.",
          "page": 9,
          "x0": 107.51864000000018,
          "y0": 114.39014,
          "x1": 505.8896684068557,
          "y1": 124.67158448,
          "width": 398.37102840685554,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.6209302325581395,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        9
      ],
      "primary_page": 9,
      "bounding_boxes": [
        {
          "page": 9,
          "x0": 107.51864000000018,
          "y0": 114.39014,
          "x1": 505.8896684068557,
          "y1": 124.67158448,
          "confidence": 0.6209302325581395,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 200,
      "text": "We evaluate on 23 exercises in group theory (12) and set theory (11) from MIL, with an empty input\nproof.",
      "layout_matches": [
        {
          "text": "We evaluate on 23 exercises in group theory (12) and set theory (11) from MIL, with an empty input",
          "page": 9,
          "x0": 107.51794000000012,
          "y0": 103.78904448000002,
          "x1": 504.1265327889114,
          "y1": 113.75168448000001,
          "width": 396.60859278891127,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.8370000000000001,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        9
      ],
      "primary_page": 9,
      "bounding_boxes": [
        {
          "page": 9,
          "x0": 107.51794000000012,
          "y0": 103.78904448000002,
          "x1": 504.1265327889114,
          "y1": 113.75168448000001,
          "confidence": 0.8370000000000001,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 201,
      "text": "Table 7 shows the accuracy on the dataset split by topic for both ImProver and GPT-4o.",
      "layout_matches": [
        {
          "text": "proof. Table 7 shows the accuracy on the dataset split by topic for both ImProver and GPT-4o.",
          "page": 9,
          "x0": 107.99794000000011,
          "y0": 92.55034,
          "x1": 505.88879906844187,
          "y1": 102.83178448000001,
          "width": 397.8908590684417,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.832258064516129,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        9
      ],
      "primary_page": 9,
      "bounding_boxes": [
        {
          "page": 9,
          "x0": 107.99794000000011,
          "y0": 92.55034,
          "x1": 505.88879906844187,
          "y1": 102.83178448000001,
          "confidence": 0.832258064516129,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 202,
      "text": "ImProver substantially outperforms GPT-4o across all topics, with an 80% increase in accuracy\ncompared to the base model, showing that proof optimization systems are easily extendable to NTP\nsystems.",
      "layout_matches": [
        {
          "text": "compared to the base model, showing that proof optimization systems are easily extendable to NTP",
          "page": 9,
          "x0": 107.99774000000008,
          "y0": 70.90904448000002,
          "x1": 504.0172495840794,
          "y1": 80.87168448000001,
          "width": 396.01950958407934,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.4362244897959184,
          "match_type": "substring_match"
        },
        {
          "text": "ImProver substantially outperforms GPT-4o across all topics, with an 80% increase in accuracy",
          "page": 9,
          "x0": 107.99794000000009,
          "y0": 81.51014,
          "x1": 504.53920644197314,
          "y1": 91.79158448000001,
          "width": 396.54126644197305,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.41785714285714287,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        9
      ],
      "primary_page": 9,
      "bounding_boxes": [
        {
          "page": 9,
          "x0": 107.99774000000008,
          "y0": 70.90904448000002,
          "x1": 504.0172495840794,
          "y1": 80.87168448000001,
          "confidence": 0.4362244897959184,
          "match_type": "substring_match"
        },
        {
          "page": 9,
          "x0": 107.99794000000009,
          "y0": 81.51014,
          "x1": 504.53920644197314,
          "y1": 91.79158448000001,
          "confidence": 0.41785714285714287,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 203,
      "text": "9\n\n\fTable 7: Proof generation results.",
      "layout_matches": [
        {
          "text": "Table 7: Proof generation results. Each cell shows percent accuracy.",
          "page": 10,
          "x0": 168.84,
          "y0": 691.30814448,
          "x1": 440.37070821325676,
          "y1": 701.27078448,
          "width": 271.53070821325673,
          "height": 9.962639999999965,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6666666666666667,
          "match_type": "word_overlap",
          "common_words_count": 5
        }
      ],
      "page_spans": [
        10
      ],
      "primary_page": 10,
      "bounding_boxes": [
        {
          "page": 10,
          "x0": 168.84,
          "y0": 691.30814448,
          "x1": 440.37070821325676,
          "y1": 701.27078448,
          "confidence": 0.6666666666666667,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 204,
      "text": "Each cell shows percent accuracy.",
      "layout_matches": [
        {
          "text": "Table 5: Ablation results. Each cell in the ablation tests shows best / worst, which are the best\nand worst parameter combinations in the test group. The ImProver speciﬁcation outputs the input\ntheorem when no correct proof is generated, which results in an accuracy of 100% on MIL.",
          "page": 9,
          "x0": 107.64,
          "y0": 669.34804448,
          "x1": 504.1292077533914,
          "y1": 701.58958896,
          "width": 396.48920775339144,
          "height": 32.241544480000016,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.48,
          "match_type": "word_overlap",
          "common_words_count": 3
        }
      ],
      "page_spans": [
        9
      ],
      "primary_page": 9,
      "bounding_boxes": [
        {
          "page": 9,
          "x0": 107.64,
          "y0": 669.34804448,
          "x1": 504.1292077533914,
          "y1": 701.58958896,
          "confidence": 0.48,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 205,
      "text": "MIL\n\nSet Theory Group Theory\n\nOverall\n\nGPT-4o\nImProver\n\n18.18%\n45.45%\n\n25%\n33.33%\n\n21.73%\n39.13%\n\n4.3 QUALITATIVE RESULTS\n\nNext, we discuss qualitative examples showing the improvements from ImProver in proof optimiza-\ntion.",
      "layout_matches": [
        {
          "text": "Next, we discuss qualitative examples showing the improvements from ImProver in proof optimiza-",
          "page": 10,
          "x0": 108.00007999999998,
          "y0": 591.14914,
          "x1": 505.87774862795897,
          "y1": 601.43058448,
          "width": 397.877668627959,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.40478468899521536,
          "match_type": "substring_match"
        },
        {
          "text": "Next, we discuss qualitative examples showing the improvements from ImProver in proof optimiza-\ntion. These examples show the balance between correctness and the desired optimization metric,\nshowing how ImProver can produce more concise or readable proofs depending on the use case.\nAdditional examples can be found in (§B.2)",
          "page": 10,
          "x0": 107.63977999999992,
          "y0": 558.58834448,
          "x1": 505.87774862795897,
          "y1": 601.43058448,
          "width": 398.23796862795905,
          "height": 42.84223999999995,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.3612903225806452,
          "match_type": "word_overlap",
          "common_words_count": 14
        }
      ],
      "page_spans": [
        10
      ],
      "primary_page": 10,
      "bounding_boxes": [
        {
          "page": 10,
          "x0": 108.00007999999998,
          "y0": 591.14914,
          "x1": 505.87774862795897,
          "y1": 601.43058448,
          "confidence": 0.40478468899521536,
          "match_type": "substring_match"
        },
        {
          "page": 10,
          "x0": 107.63977999999992,
          "y0": 558.58834448,
          "x1": 505.87774862795897,
          "y1": 601.43058448,
          "confidence": 0.3612903225806452,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 206,
      "text": "These examples show the balance between correctness and the desired optimization metric,\nshowing how ImProver can produce more concise or readable proofs depending on the use case.",
      "layout_matches": [
        {
          "text": "Next, we discuss qualitative examples showing the improvements from ImProver in proof optimiza-\ntion. These examples show the balance between correctness and the desired optimization metric,\nshowing how ImProver can produce more concise or readable proofs depending on the use case.\nAdditional examples can be found in (§B.2)",
          "page": 10,
          "x0": 107.63977999999992,
          "y0": 558.58834448,
          "x1": 505.87774862795897,
          "y1": 601.43058448,
          "width": 398.23796862795905,
          "height": 42.84223999999995,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.5034375,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        10
      ],
      "primary_page": 10,
      "bounding_boxes": [
        {
          "page": 10,
          "x0": 107.63977999999992,
          "y0": 558.58834448,
          "x1": 505.87774862795897,
          "y1": 601.43058448,
          "confidence": 0.5034375,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 207,
      "text": "Additional examples can be found in (§B.2)\n\nExample 1: Compﬁles Optimization.",
      "layout_matches": [
        {
          "text": "Next, we discuss qualitative examples showing the improvements from ImProver in proof optimiza-\ntion. These examples show the balance between correctness and the desired optimization metric,\nshowing how ImProver can produce more concise or readable proofs depending on the use case.\nAdditional examples can be found in (§B.2)",
          "page": 10,
          "x0": 107.63977999999992,
          "y0": 558.58834448,
          "x1": 505.87774862795897,
          "y1": 601.43058448,
          "width": 398.23796862795905,
          "height": 42.84223999999995,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.5090909090909091,
          "match_type": "word_overlap",
          "common_words_count": 7
        }
      ],
      "page_spans": [
        10
      ],
      "primary_page": 10,
      "bounding_boxes": [
        {
          "page": 10,
          "x0": 107.63977999999992,
          "y0": 558.58834448,
          "x1": 505.87774862795897,
          "y1": 601.43058448,
          "confidence": 0.5090909090909091,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 208,
      "text": "Consider Figure 1, a lemma from the 2022 IMO Question\n2 (Compﬁles) that we optimize for length.",
      "layout_matches": [
        {
          "text": "Example 1: Compﬁles Optimization. Consider Figure 1, a lemma from the 2022 IMO Question\n2 (Compﬁles) that we optimize for length.",
          "page": 10,
          "x0": 107.9999359999999,
          "y0": 520.1883444800001,
          "x1": 504.0603612321329,
          "y1": 541.1904361600001,
          "width": 396.06042523213296,
          "height": 21.002091680000035,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6624,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        10
      ],
      "primary_page": 10,
      "bounding_boxes": [
        {
          "page": 10,
          "x0": 107.9999359999999,
          "y0": 520.1883444800001,
          "x1": 504.0603612321329,
          "y1": 541.1904361600001,
          "confidence": 0.6624,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 209,
      "text": "The original proof consisted of 12 tactic steps and multiple intermediate calculations.",
      "layout_matches": [
        {
          "text": "The original proof consisted of 12 tactic steps and multiple intermediate calculations. After applying",
          "page": 10,
          "x0": 107.6397799999999,
          "y0": 503.2684444800001,
          "x1": 504.1810487646021,
          "y1": 513.23108448,
          "width": 396.5412687646022,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.7676470588235293,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        10
      ],
      "primary_page": 10,
      "bounding_boxes": [
        {
          "page": 10,
          "x0": 107.6397799999999,
          "y0": 503.2684444800001,
          "x1": 504.1810487646021,
          "y1": 513.23108448,
          "confidence": 0.7676470588235293,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 210,
      "text": "After applying\nImProver for length optimization, the proof was halved to only 6 tactics, eliminating redundant steps\nwhile maintaining correctness.",
      "layout_matches": [
        {
          "text": "ImProver for length optimization, the proof was halved to only 6 tactics, eliminating redundant steps",
          "page": 10,
          "x0": 108.0007799999999,
          "y0": 491.9094400000001,
          "x1": 504.03775598213923,
          "y1": 502.1908844800001,
          "width": 396.0369759821393,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.6144827586206897,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        10
      ],
      "primary_page": 10,
      "bounding_boxes": [
        {
          "page": 10,
          "x0": 108.0007799999999,
          "y0": 491.9094400000001,
          "x1": 504.03775598213923,
          "y1": 502.1908844800001,
          "confidence": 0.6144827586206897,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 211,
      "text": "In comparison, the shortened proof makes multiple nontrivial optimizations, such as eliminating the\nh2’ and h4 and hxw hypotheses, as well as fully generating proof terms for speciﬁc rewrites and\nother tactics.",
      "layout_matches": [
        {
          "text": "In comparison, the shortened proof makes multiple nontrivial optimizations, such as eliminating the\nh2’ and h4 and hxw hypotheses, as well as fully generating proof terms for speciﬁc rewrites and\nother tactics.",
          "page": 10,
          "x0": 108.0007359999999,
          "y0": 442.4283444800001,
          "x1": 504.10467623608935,
          "y1": 474.3510844800001,
          "width": 396.10394023608944,
          "height": 31.922740000000033,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.9,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        10
      ],
      "primary_page": 10,
      "bounding_boxes": [
        {
          "page": 10,
          "x0": 108.0007359999999,
          "y0": 442.4283444800001,
          "x1": 504.10467623608935,
          "y1": 474.3510844800001,
          "confidence": 0.9,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 212,
      "text": "Example 2: MIL. Consider Figure 3, a result from MIL that we optimize for readability.",
      "layout_matches": [
        {
          "text": "Example 2: MIL. Consider Figure 3, a result from MIL that we optimize for readability.",
          "page": 10,
          "x0": 108.0007359999999,
          "y0": 415.06854448000007,
          "x1": 470.7313646918707,
          "y1": 425.15073616000006,
          "width": 362.7306286918708,
          "height": 10.082191679999994,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.9,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        10
      ],
      "primary_page": 10,
      "bounding_boxes": [
        {
          "page": 10,
          "x0": 108.0007359999999,
          "y0": 415.06854448000007,
          "x1": 470.7313646918707,
          "y1": 425.15073616000006,
          "confidence": 0.9,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 213,
      "text": "Original (human-written)\n\nImProver (readability-optimized)\n\ndef iso1 [Fintype G] (h : Disjoint H K) (h' :\n\ndef iso1 [Fintype G] (h : Disjoint H K) (h' :\n\ncard G = card H * card K)\n\n: K ≃* G / H := by\n\napply MulEquiv.ofBijective\n\n((QuotientGroup.mk' H).restrict K)\nrw [bijective_iff_injective_and_card]\nconstructor\n· rw [← ker_eq_bot_iff, (QuotientGroup.mk'\n\nH).ker_restrict K]\nsimp [h]\n\n· symm\n\nexact aux_card_eq h'\n\ncard G = card H * card K)\n:= by\n\n: K ≃* G / H\n\nhave injectivity : Function.Injective\n\n((QuotientGroup.mk' H).restrict K) := by\nrw [← ker_eq_bot_iff, (QuotientGroup.mk'\nH).ker_restrict K]\nsimp [h]\n\nhave card_eq : card (G / H) = card K := by\n\nexact aux_card_eq h'\n\napply MulEquiv.ofBijective\n\n((QuotientGroup.mk' H).restrict K)\nrw [bijective_iff_injective_and_card]\nconstructor\nexact injectivity\nsymm\nexact card_eq\n\nFigure 3: Optimizing a group-theoretic result from MIL Chapter 8 Section 1 for readability.",
      "layout_matches": [],
      "page_spans": [],
      "primary_page": 1,
      "bounding_boxes": []
    },
    {
      "sentence_id": 214,
      "text": "We\ndeﬁne a proof to be readable if it is written in a declarative style, which consists of intermediate\nconjectures (have · · · statements).",
      "layout_matches": [
        {
          "text": "deﬁne a proof to be readable if it is written in a declarative style, which consists of intermediate",
          "page": 10,
          "x0": 107.99999999999997,
          "y0": 218.26814447999996,
          "x1": 504.22331532783403,
          "y1": 228.23078447999998,
          "width": 396.22331532783403,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.6649253731343284,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        10
      ],
      "primary_page": 10,
      "bounding_boxes": [
        {
          "page": 10,
          "x0": 107.99999999999997,
          "y0": 218.26814447999996,
          "x1": 504.22331532783403,
          "y1": 228.23078447999998,
          "confidence": 0.6649253731343284,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 215,
      "text": "ImProver introduces two intermediate conjectures into the proof.",
      "layout_matches": [
        {
          "text": "conjectures (have · · · statements). ImProver introduces two intermediate conjectures into the proof.",
          "page": 10,
          "x0": 107.99999999999994,
          "y0": 207.02903999999998,
          "x1": 506.0109927045521,
          "y1": 218.48607999999996,
          "width": 398.01099270455217,
          "height": 11.457039999999978,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.6,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        10
      ],
      "primary_page": 10,
      "bounding_boxes": [
        {
          "page": 10,
          "x0": 107.99999999999994,
          "y0": 207.02903999999998,
          "x1": 506.0109927045521,
          "y1": 218.48607999999996,
          "confidence": 0.6,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 216,
      "text": "This original proof carried a score of 0, as it does not contain any declarative statements.",
      "layout_matches": [
        {
          "text": "This original proof carried a score of 0, as it does not contain any declarative statements. In compar-",
          "page": 10,
          "x0": 107.64029999999994,
          "y0": 180.74934,
          "x1": 505.877748902,
          "y1": 191.03078448,
          "width": 398.2374489020001,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.8029411764705883,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        10
      ],
      "primary_page": 10,
      "bounding_boxes": [
        {
          "page": 10,
          "x0": 107.64029999999994,
          "y0": 180.74934,
          "x1": 505.877748902,
          "y1": 191.03078448,
          "confidence": 0.8029411764705883,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 217,
      "text": "In compar-\nison, after applying ImProver, we transformed the proof to be more declarative, with many more\nintermediate steps with explicit have tactics for improved clarity.",
      "layout_matches": [
        {
          "text": "ison, after applying ImProver, we transformed the proof to be more declarative, with many more",
          "page": 10,
          "x0": 108.00013999999999,
          "y0": 169.70914,
          "x1": 504.10335436740723,
          "y1": 179.99058448,
          "width": 396.10321436740725,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.48176470588235293,
          "match_type": "substring_match"
        },
        {
          "text": "Large language models (LLMs) have been used to generate formal proofs of math-\nematical theorems in proofs assistants such as Lean. However, we often want to\noptimize a formal proof with respect to various criteria, depending on its down-\nstream use. For example, we may want a proof to adhere to a certain style, or to be\nreadable, concise, or modularly structured. Having suitably optimized proofs is\nalso important for learning tasks, especially since human-written proofs may not\noptimal for that purpose. To this end, we study a new problem of automated proof\noptimization: rewriting a proof so that it is correct and optimizes for an arbitrary\ncriterion, such as length or readability. As a ﬁrst method for automated proof opti-\nmization, we present ImProver, a large-language-model agent that rewrites proofs\nto optimize arbitrary user-deﬁned metrics in Lean. We ﬁnd that naively applying\nLLMs to proof optimization falls short, and we incorporate various improvements\ninto ImProver, such as the use of symbolic Lean context in a novel Chain-of-\nStates technique, as well as error-correction and retrieval. We test ImProver on\nrewriting real-world undergraduate, competition, and research-level mathematics\ntheorems, ﬁnding that ImProver is capable of rewriting proofs so that they are\nsubstantially shorter, more modular, and more readable.",
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "width": 326.1175505972419,
          "height": 185.2821399999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.36923076923076925,
          "match_type": "word_overlap",
          "common_words_count": 12
        }
      ],
      "page_spans": [
        1,
        10
      ],
      "primary_page": 1,
      "bounding_boxes": [
        {
          "page": 10,
          "x0": 108.00013999999999,
          "y0": 169.70914,
          "x1": 504.10335436740723,
          "y1": 179.99058448,
          "confidence": 0.48176470588235293,
          "match_type": "substring_match"
        },
        {
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "confidence": 0.36923076923076925,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 218,
      "text": "Additionally observe how the\nmodel deﬁnes hypotheses for use in the latter half of the proof; these predeﬁned hypotheses could\neasily be converted into standalone lemmas for reuse.",
      "layout_matches": [
        {
          "text": "model deﬁnes hypotheses for use in the latter half of the proof; these predeﬁned hypotheses could",
          "page": 10,
          "x0": 107.99974000000003,
          "y0": 148.18814447999995,
          "x1": 504.1815211071247,
          "y1": 158.15078447999997,
          "width": 396.18178110712466,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.48268156424581005,
          "match_type": "substring_match"
        },
        {
          "text": "This original proof carried a score of 0, as it does not contain any declarative statements. In compar-\nison, after applying ImProver, we transformed the proof to be more declarative, with many more\nintermediate steps with explicit have tactics for improved clarity. Additionally observe how the\nmodel deﬁnes hypotheses for use in the latter half of the proof; these predeﬁned hypotheses could\neasily be converted into standalone lemmas for reuse.",
          "page": 10,
          "x0": 107.64029999999994,
          "y0": 137.14794447999995,
          "x1": 505.877748902,
          "y1": 191.03078448,
          "width": 398.2374489020001,
          "height": 53.882840000000044,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.3644796380090498,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        10
      ],
      "primary_page": 10,
      "bounding_boxes": [
        {
          "page": 10,
          "x0": 107.99974000000003,
          "y0": 148.18814447999995,
          "x1": 504.1815211071247,
          "y1": 158.15078447999997,
          "confidence": 0.48268156424581005,
          "match_type": "substring_match"
        },
        {
          "page": 10,
          "x0": 107.64029999999994,
          "y0": 137.14794447999995,
          "x1": 505.877748902,
          "y1": 191.03078448,
          "confidence": 0.3644796380090498,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 219,
      "text": "Example 3: Full Proof Generation.",
      "layout_matches": [
        {
          "text": "A typical approach (Polu & Sutskever, 2020) is to train on a large corpus of mathematical proofs\nsuch as Lean’s Mathlib (mathlib Community, 2020; Han et al., 2022; Polu et al., 2022; Lample et al.,\n2022; Yang et al., 2023; Hu et al., 2024). A model learns from the distribution of proofs in the cor-\npus, such as Mathlib-style proofs. Recently, the AlphaProof (AlphaProof & Teams, 2024) system\nwas shown to produce proofs with an arcane, non-human structure and syntax. We consider the\nnew problem of rewriting a proof to optimize a metric, such as rewriting a proof into a more read-\nable or more concise one. Proof optimization is more general than theorem proving, since we can\nalso rewrite an empty proof to optimize correctness. Finally, there is a rich literature on the var-\nied styles of (human) formal proofs (e.g., (Autexier & Dietrich, 2010; Wiedijk, 2004)). Our model,\nImProver, builds on neural theorem proving techniques including full proof generation (Jiang et al.,\n2023; First et al., 2023), conditioning on example proofs (Jiang et al., 2023), retrieval (Yang et al.,\n2023; Thakur et al., 2024), and preceding ﬁle context (First et al., 2023; Hu et al., 2024), as well as\nerror correction (Madaan et al., 2023; Chen et al., 2023) and documentation retrieval (Zhou et al.,\n2023) from code generation. ImProver brings these code generation techniques, along with new\nChain-of-States prompting and meta-programmed contextual information, into a uniﬁed proof opti-\nmization agent.",
          "page": 2,
          "x0": 107.6398439999999,
          "y0": 153.46874447999994,
          "x1": 505.7580729187221,
          "y1": 327.83058448,
          "width": 398.11822891872225,
          "height": 174.3618400000001,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6400000000000001,
          "match_type": "word_overlap",
          "common_words_count": 4
        }
      ],
      "page_spans": [
        2
      ],
      "primary_page": 2,
      "bounding_boxes": [
        {
          "page": 2,
          "x0": 107.6398439999999,
          "y0": 153.46874447999994,
          "x1": 505.7580729187221,
          "y1": 327.83058448,
          "confidence": 0.6400000000000001,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 220,
      "text": "We analyze the application of ImProver to neural theorem\nproving in the MIL example from Figure 4.",
      "layout_matches": [
        {
          "text": "Example 3: Full Proof Generation. We analyze the application of ImProver to neural theorem\nproving in the MIL example from Figure 4.",
          "page": 10,
          "x0": 107.99953999999997,
          "y0": 98.86824447999996,
          "x1": 504.1896538891379,
          "y1": 119.87033615999995,
          "width": 396.19011388913793,
          "height": 21.002091679999992,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6732824427480917,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        10
      ],
      "primary_page": 10,
      "bounding_boxes": [
        {
          "page": 10,
          "x0": 107.99953999999997,
          "y0": 98.86824447999996,
          "x1": 504.1896538891379,
          "y1": 119.87033615999995,
          "confidence": 0.6732824427480917,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 221,
      "text": "This theorem relating to group theory originally has no proof, however, ImProver generates one\nfrom scratch.",
      "layout_matches": [
        {
          "text": "This theorem relating to group theory originally has no proof, however, ImProver generates one",
          "page": 10,
          "x0": 107.63938399999996,
          "y0": 81.50923999999995,
          "x1": 504.1023416413285,
          "y1": 91.79068447999995,
          "width": 396.46295764132856,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.7811320754716982,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        10
      ],
      "primary_page": 10,
      "bounding_boxes": [
        {
          "page": 10,
          "x0": 107.63938399999996,
          "y0": 81.50923999999995,
          "x1": 504.1023416413285,
          "y1": 91.79068447999995,
          "confidence": 0.7811320754716982,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 222,
      "text": "This generated proof is veriﬁed to be correct by Lean, utilizing all the included hy-\npotheses as well as a retrieved mathlib theorem.",
      "layout_matches": [
        {
          "text": "from scratch. This generated proof is veriﬁed to be correct by Lean, utilizing all the included hy-",
          "page": 10,
          "x0": 107.99998399999993,
          "y0": 70.90814447999996,
          "x1": 505.87784442302956,
          "y1": 80.87078447999995,
          "width": 397.87786042302963,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.5217391304347826,
          "match_type": "word_overlap",
          "common_words_count": 15
        }
      ],
      "page_spans": [
        10
      ],
      "primary_page": 10,
      "bounding_boxes": [
        {
          "page": 10,
          "x0": 107.99998399999993,
          "y0": 70.90814447999996,
          "x1": 505.87784442302956,
          "y1": 80.87078447999995,
          "confidence": 0.5217391304347826,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 223,
      "text": "10\n\n\fOriginal (human-written)\n\nImProver (completeness-optimized)\n\nexample (ϕ : G →* H) (S T : Subgroup H) (hST\n: S ≤ T) : comap ϕ S ≤ comap ϕ T := by\n\nexample (ϕ : G →* H) (S T : Subgroup H) (hST\n\n: S ≤ T) : comap ϕ S ≤ comap ϕ T\n\n:= by\n\nsorry\n\nintro g\nsimp only [mem_comap]\nintro hS\nexact hST hS\n\nFigure 4: Solving a group theorem exercise from MIL Chapter 8 Section 1 for readability.",
      "layout_matches": [],
      "page_spans": [],
      "primary_page": 1,
      "bounding_boxes": []
    },
    {
      "sentence_id": 224,
      "text": "5 CONCLUSION\n\nIn this paper, we introduced ImProver, a novel agent-based tool for automated proof optimization\nin Lean.",
      "layout_matches": [
        {
          "text": "In this paper, we introduced ImProver, a novel agent-based tool for automated proof optimization",
          "page": 11,
          "x0": 108.00020000000006,
          "y0": 571.2292399999999,
          "x1": 504.182539019061,
          "y1": 581.5106844799999,
          "width": 396.1823390190609,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.7293103448275862,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        11
      ],
      "primary_page": 11,
      "bounding_boxes": [
        {
          "page": 11,
          "x0": 108.00020000000006,
          "y0": 571.2292399999999,
          "x1": 504.182539019061,
          "y1": 581.5106844799999,
          "confidence": 0.7293103448275862,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 225,
      "text": "By incorporating CoS, RAG, and other features, ImProver signiﬁcantly outperforms base\nlanguage models in proof optimization over undergraduate, competition, and research-level prob-\nlems.",
      "layout_matches": [
        {
          "text": "In this paper, we introduced ImProver, a novel agent-based tool for automated proof optimization\nin Lean. By incorporating CoS, RAG, and other features, ImProver signiﬁcantly outperforms base\nlanguage models in proof optimization over undergraduate, competition, and research-level prob-\nlems.",
          "page": 11,
          "x0": 108.00020000000006,
          "y0": 538.66844448,
          "x1": 505.8789227005802,
          "y1": 581.5106844799999,
          "width": 397.8787227005801,
          "height": 42.84223999999995,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.5727272727272728,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        11
      ],
      "primary_page": 11,
      "bounding_boxes": [
        {
          "page": 11,
          "x0": 108.00020000000006,
          "y0": 538.66844448,
          "x1": 505.8789227005802,
          "y1": 581.5106844799999,
          "confidence": 0.5727272727272728,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 226,
      "text": "However, ImProver is limited by its high cost and slow runtime, which is exacerbated by its reliance\non black-box LLM’s.",
      "layout_matches": [
        {
          "text": "However, ImProver is limited by its high cost and slow runtime, which is exacerbated by its reliance",
          "page": 11,
          "x0": 108.00100000000006,
          "y0": 521.4293399999999,
          "x1": 504.103838864862,
          "y1": 531.7107844799999,
          "width": 396.10283886486195,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.7538461538461538,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        11
      ],
      "primary_page": 11,
      "bounding_boxes": [
        {
          "page": 11,
          "x0": 108.00100000000006,
          "y0": 521.4293399999999,
          "x1": 504.103838864862,
          "y1": 531.7107844799999,
          "confidence": 0.7538461538461538,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 227,
      "text": "We intend to address this inefﬁciency in future work by applying ﬁne-tuning\nand RL on a smaller model to match performance at a lower cost.",
      "layout_matches": [
        {
          "text": "However, ImProver is limited by its high cost and slow runtime, which is exacerbated by its reliance\non black-box LLM’s. We intend to address this inefﬁciency in future work by applying ﬁne-tuning\nand RL on a smaller model to match performance at a lower cost.",
          "page": 11,
          "x0": 108.00059999999999,
          "y0": 499.78844447999995,
          "x1": 504.30238867884304,
          "y1": 531.7107844799999,
          "width": 396.3017886788431,
          "height": 31.922339999999963,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.4867704280155642,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        11
      ],
      "primary_page": 11,
      "bounding_boxes": [
        {
          "page": 11,
          "x0": 108.00059999999999,
          "y0": 499.78844447999995,
          "x1": 504.30238867884304,
          "y1": 531.7107844799999,
          "confidence": 0.4867704280155642,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 228,
      "text": "ImProver demonstrates its ability to generate substantially shorter, more readable, and modular\nproofs while maintaining correctness.",
      "layout_matches": [
        {
          "text": "ImProver demonstrates its ability to generate substantially shorter, more readable, and modular",
          "page": 11,
          "x0": 108.00059999999999,
          "y0": 482.54934,
          "x1": 504.43828150367443,
          "y1": 492.83078448,
          "width": 396.4376815036744,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.6389312977099236,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        11
      ],
      "primary_page": 11,
      "bounding_boxes": [
        {
          "page": 11,
          "x0": 108.00059999999999,
          "y0": 482.54934,
          "x1": 504.43828150367443,
          "y1": 492.83078448,
          "confidence": 0.6389312977099236,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 229,
      "text": "As such, we believe that ImProver sets the stage for further\nwork on proof optimization to advance the study and use of AI in mathematics.",
      "layout_matches": [
        {
          "text": "Large language models (LLMs) have been used to generate formal proofs of math-\nematical theorems in proofs assistants such as Lean. However, we often want to\noptimize a formal proof with respect to various criteria, depending on its down-\nstream use. For example, we may want a proof to adhere to a certain style, or to be\nreadable, concise, or modularly structured. Having suitably optimized proofs is\nalso important for learning tasks, especially since human-written proofs may not\noptimal for that purpose. To this end, we study a new problem of automated proof\noptimization: rewriting a proof so that it is correct and optimizes for an arbitrary\ncriterion, such as length or readability. As a ﬁrst method for automated proof opti-\nmization, we present ImProver, a large-language-model agent that rewrites proofs\nto optimize arbitrary user-deﬁned metrics in Lean. We ﬁnd that naively applying\nLLMs to proof optimization falls short, and we incorporate various improvements\ninto ImProver, such as the use of symbolic Lean context in a novel Chain-of-\nStates technique, as well as error-correction and retrieval. We test ImProver on\nrewriting real-world undergraduate, competition, and research-level mathematics\ntheorems, ﬁnding that ImProver is capable of rewriting proofs so that they are\nsubstantially shorter, more modular, and more readable.",
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "width": 326.1175505972419,
          "height": 185.2821399999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.512,
          "match_type": "word_overlap",
          "common_words_count": 16
        }
      ],
      "page_spans": [
        1
      ],
      "primary_page": 1,
      "bounding_boxes": [
        {
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "confidence": 0.512,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 230,
      "text": "ACKNOWLEDGEMENTS\n\nRiyaz Ahuja thanks the L3 Lab and Hoskinson Center for Formal Mathematics for their support.",
      "layout_matches": [
        {
          "text": "Riyaz Ahuja thanks the L3 Lab and Hoskinson Center for Formal Mathematics for their support.",
          "page": 11,
          "x0": 108.00034999999995,
          "y0": 418.18804448,
          "x1": 492.9310185144113,
          "y1": 428.15068448,
          "width": 384.9306685144113,
          "height": 9.962640000000022,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.7596330275229358,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        11
      ],
      "primary_page": 11,
      "bounding_boxes": [
        {
          "page": 11,
          "x0": 108.00034999999995,
          "y0": 418.18804448,
          "x1": 492.9310185144113,
          "y1": 428.15068448,
          "confidence": 0.7596330275229358,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 231,
      "text": "Sean Welleck thanks Convergent Research, the Lean FRO, and the OpenAI Researcher Access Pro-\ngram for their support.",
      "layout_matches": [
        {
          "text": "Sean Welleck thanks Convergent Research, the Lean FRO, and the OpenAI Researcher Access Pro-\ngram for their support.",
          "page": 11,
          "x0": 108.00034999999997,
          "y0": 390.22794448,
          "x1": 505.75823882721505,
          "y1": 411.11048448,
          "width": 397.7578888272151,
          "height": 20.882540000000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.9,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        11
      ],
      "primary_page": 11,
      "bounding_boxes": [
        {
          "page": 11,
          "x0": 108.00034999999997,
          "y0": 390.22794448,
          "x1": 505.75823882721505,
          "y1": 411.11048448,
          "confidence": 0.9,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 232,
      "text": "11\n\n\fREFERENCES\n\nand\n\nAlphaGeometry\n\nAlphaProof\nstandard\nhttps://deepmind.google/discover/blog/ai-solves-imo-problems-at-silver-medal-level/\n2024.\n\nsilver-medal\nproblems.",
      "layout_matches": [
        {
          "text": "AlphaProof\nstandard\nhttps://deepmind.google/discover/blog/ai-solves-imo-problems-at-silver-medal-level/\n2024.",
          "page": 12,
          "x0": 108.00016,
          "y0": 647.62824448,
          "x1": 618.3384078256047,
          "y1": 690.47088448,
          "width": 510.3382478256047,
          "height": 42.84263999999996,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.5847133757961783,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 108.00016,
          "y0": 647.62824448,
          "x1": 618.3384078256047,
          "y1": 690.47088448,
          "confidence": 0.5847133757961783,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 233,
      "text": "achieves\nolympiad\n\nmathematical\n\ninternational\n\nsolving\n\nTeams.",
      "layout_matches": [
        {
          "text": "learning for mathematical reasoning.",
          "page": 12,
          "x0": 117.96039999999988,
          "y0": 166.18874448000014,
          "x1": 273.3307737787993,
          "y1": 176.15138448000016,
          "width": 155.37037377879943,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.32842105263157895,
          "match_type": "sequence_match",
          "similarity_ratio": 0.5473684210526316
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 117.96039999999988,
          "y0": 166.18874448000014,
          "x1": 273.3307737787993,
          "y1": 176.15138448000016,
          "confidence": 0.32842105263157895,
          "match_type": "sequence_match"
        }
      ]
    },
    {
      "sentence_id": 234,
      "text": "AI\n\nSerge Autexier and Dominik Dietrich.",
      "layout_matches": [
        {
          "text": "Serge Autexier and Dominik Dietrich. A tactic language for declarative proofs. In Matt Kaufmann\nand Lawrence C. Paulson (eds.), Interactive Theorem Proving, pp. 99–114, Berlin, Heidelberg,\n2010. Springer Berlin Heidelberg.",
          "page": 12,
          "x0": 107.99999999999997,
          "y0": 607.18844448,
          "x1": 505.5311548808105,
          "y1": 639.11078448,
          "width": 397.5311548808105,
          "height": 31.922339999999963,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6666666666666667,
          "match_type": "word_overlap",
          "common_words_count": 5
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 107.99999999999997,
          "y0": 607.18844448,
          "x1": 505.5311548808105,
          "y1": 639.11078448,
          "confidence": 0.6666666666666667,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 235,
      "text": "A tactic language for declarative proofs.",
      "layout_matches": [
        {
          "text": "Large language models (LLMs) have been used to generate formal proofs of math-\nematical theorems in proofs assistants such as Lean. However, we often want to\noptimize a formal proof with respect to various criteria, depending on its down-\nstream use. For example, we may want a proof to adhere to a certain style, or to be\nreadable, concise, or modularly structured. Having suitably optimized proofs is\nalso important for learning tasks, especially since human-written proofs may not\noptimal for that purpose. To this end, we study a new problem of automated proof\noptimization: rewriting a proof so that it is correct and optimizes for an arbitrary\ncriterion, such as length or readability. As a ﬁrst method for automated proof opti-\nmization, we present ImProver, a large-language-model agent that rewrites proofs\nto optimize arbitrary user-deﬁned metrics in Lean. We ﬁnd that naively applying\nLLMs to proof optimization falls short, and we incorporate various improvements\ninto ImProver, such as the use of symbolic Lean context in a novel Chain-of-\nStates technique, as well as error-correction and retrieval. We test ImProver on\nrewriting real-world undergraduate, competition, and research-level mathematics\ntheorems, ﬁnding that ImProver is capable of rewriting proofs so that they are\nsubstantially shorter, more modular, and more readable.",
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "width": 326.1175505972419,
          "height": 185.2821399999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.4,
          "match_type": "word_overlap",
          "common_words_count": 3
        }
      ],
      "page_spans": [
        1
      ],
      "primary_page": 1,
      "bounding_boxes": [
        {
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "confidence": 0.4,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 236,
      "text": "In Matt Kaufmann\nand Lawrence C. Paulson (eds.",
      "layout_matches": [
        {
          "text": "and Lawrence C. Paulson (eds.), Interactive Theorem Proving, pp. 99–114, Berlin, Heidelberg,",
          "page": 12,
          "x0": 117.96000000000001,
          "y0": 618.2282444800001,
          "x1": 505.5311548808105,
          "y1": 628.3004735200001,
          "width": 387.57115488081047,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.5,
          "match_type": "word_overlap",
          "common_words_count": 5
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 117.96000000000001,
          "y0": 618.2282444800001,
          "x1": 505.5311548808105,
          "y1": 628.3004735200001,
          "confidence": 0.5,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 237,
      "text": "), Interactive Theorem Proving, pp.",
      "layout_matches": [
        {
          "text": "Recently there has been wide interest in automating theorem proving in interactive proof assistants;\nsee (Lu et al., 2023; Li et al., 2024) for surveys.",
          "page": 2,
          "x0": 107.99999999999994,
          "y0": 334.78824448,
          "x1": 504.72936206245674,
          "y1": 355.79068448000004,
          "width": 396.7293620624568,
          "height": 21.002440000000036,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6000000000000001,
          "match_type": "word_overlap",
          "common_words_count": 3
        }
      ],
      "page_spans": [
        2
      ],
      "primary_page": 2,
      "bounding_boxes": [
        {
          "page": 2,
          "x0": 107.99999999999994,
          "y0": 334.78824448,
          "x1": 504.72936206245674,
          "y1": 355.79068448000004,
          "confidence": 0.6000000000000001,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 238,
      "text": "99–114, Berlin, Heidelberg,\n2010. Springer Berlin Heidelberg.",
      "layout_matches": [
        {
          "text": "2010. Springer Berlin Heidelberg.",
          "page": 12,
          "x0": 117.96000000000004,
          "y0": 607.18844448,
          "x1": 254.0109616880583,
          "y1": 617.15108448,
          "width": 136.05096168805827,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.5210526315789474,
          "match_type": "substring_match"
        },
        {
          "text": "Freek Wiedijk. Formal proof sketches. In Stefano Berardi, Mario Coppo, and Ferruccio Damiani\n(eds.), Types for Proofs and Programs, pp. 378–393, Berlin, Heidelberg, 2004. Springer Berlin\nHeidelberg. ISBN 978-3-540-24849-1.",
          "page": 14,
          "x0": 107.99984,
          "y0": 553.5484444800001,
          "x1": 504.13097243905634,
          "y1": 585.47118448,
          "width": 396.13113243905633,
          "height": 31.922739999999976,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.45714285714285713,
          "match_type": "word_overlap",
          "common_words_count": 4
        }
      ],
      "page_spans": [
        12,
        14
      ],
      "primary_page": 14,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 117.96000000000004,
          "y0": 607.18844448,
          "x1": 254.0109616880583,
          "y1": 617.15108448,
          "confidence": 0.5210526315789474,
          "match_type": "substring_match"
        },
        {
          "page": 14,
          "x0": 107.99984,
          "y0": 553.5484444800001,
          "x1": 504.13097243905634,
          "y1": 585.47118448,
          "confidence": 0.45714285714285713,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 239,
      "text": "Jaime Carbonell and Jade Goldstein.",
      "layout_matches": [
        {
          "text": "Jaime Carbonell and Jade Goldstein. The use of mmr, diversity-based reranking for reordering doc-",
          "page": 12,
          "x0": 107.99984000000003,
          "y0": 588.70834448,
          "x1": 505.7575885166571,
          "y1": 598.67098448,
          "width": 397.7577485166571,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.328125,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 107.99984000000003,
          "y0": 588.70834448,
          "x1": 505.7575885166571,
          "y1": 598.67098448,
          "confidence": 0.328125,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 240,
      "text": "The use of mmr, diversity-based reranking for reordering doc-\numents and producing summaries.",
      "layout_matches": [
        {
          "text": "Jaime Carbonell and Jade Goldstein. The use of mmr, diversity-based reranking for reordering doc-",
          "page": 12,
          "x0": 107.99984000000003,
          "y0": 588.70834448,
          "x1": 505.7575885166571,
          "y1": 598.67098448,
          "width": 397.7577485166571,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.6153846153846154,
          "match_type": "word_overlap",
          "common_words_count": 10
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 107.99984000000003,
          "y0": 588.70834448,
          "x1": 505.7575885166571,
          "y1": 598.67098448,
          "confidence": 0.6153846153846154,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 241,
      "text": "In Proceedings of the 21st Annual International ACM SIGIR\nConference on Research and Development in Information Retrieval, SIGIR ’98, pp.",
      "layout_matches": [
        {
          "text": "Conference on Research and Development in Information Retrieval, SIGIR ’98, pp. 335–336,",
          "page": 12,
          "x0": 117.59884,
          "y0": 566.8685444800001,
          "x1": 505.649464038213,
          "y1": 576.9407735200001,
          "width": 388.050624038213,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.44000000000000006,
          "match_type": "word_overlap",
          "common_words_count": 11
        },
        {
          "text": "uments and producing summaries. In Proceedings of the 21st Annual International ACM SIGIR",
          "page": 12,
          "x0": 117.95984000000001,
          "y0": 577.7884444800001,
          "x1": 504.2074056424364,
          "y1": 587.8606735200001,
          "width": 386.24756564243637,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.4,
          "match_type": "word_overlap",
          "common_words_count": 10
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 117.59884,
          "y0": 566.8685444800001,
          "x1": 505.649464038213,
          "y1": 576.9407735200001,
          "confidence": 0.44000000000000006,
          "match_type": "word_overlap"
        },
        {
          "page": 12,
          "x0": 117.95984000000001,
          "y0": 577.7884444800001,
          "x1": 504.2074056424364,
          "y1": 587.8606735200001,
          "confidence": 0.4,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 242,
      "text": "335–336,\nISBN 1581130155. doi:\nNew York, NY, USA, 1998.",
      "layout_matches": [
        {
          "text": "New York, NY, USA, 1998. Association for Computing Machinery.",
          "page": 12,
          "x0": 117.95954,
          "y0": 555.82834448,
          "x1": 397.05004055336,
          "y1": 565.79098448,
          "width": 279.09050055336,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.4444444444444445,
          "match_type": "word_overlap",
          "common_words_count": 5
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 117.95954,
          "y0": 555.82834448,
          "x1": 397.05004055336,
          "y1": 565.79098448,
          "confidence": 0.4444444444444445,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 243,
      "text": "Association for Computing Machinery. 10.1145/290941.291025.",
      "layout_matches": [
        {
          "text": "New York, NY, USA, 1998. Association for Computing Machinery.",
          "page": 12,
          "x0": 117.95954,
          "y0": 555.82834448,
          "x1": 397.05004055336,
          "y1": 565.79098448,
          "width": 279.09050055336,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.6400000000000001,
          "match_type": "word_overlap",
          "common_words_count": 4
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 117.95954,
          "y0": 555.82834448,
          "x1": 397.05004055336,
          "y1": 565.79098448,
          "confidence": 0.6400000000000001,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 244,
      "text": "URL https://doi.org/10.1145/290941.291025.",
      "layout_matches": [
        {
          "text": "10.1145/290941.291025. URL https://doi.org/10.1145/290941.291025.",
          "page": 12,
          "x0": 117.23954000000003,
          "y0": 544.9084444800001,
          "x1": 466.7702,
          "y1": 555.1898889600001,
          "width": 349.53065999999995,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.5644067796610169,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 117.23954000000003,
          "y0": 544.9084444800001,
          "x1": 466.7702,
          "y1": 555.1898889600001,
          "confidence": 0.5644067796610169,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 245,
      "text": "Xinyun Chen, Maxwell Lin, Nathanael Schärli, and Denny Zhou.",
      "layout_matches": [
        {
          "text": "Xinyun Chen, Maxwell Lin, Nathanael Schärli, and Denny Zhou. Teaching large language models",
          "page": 12,
          "x0": 107.99954000000002,
          "y0": 526.4283444800001,
          "x1": 504.15560230251964,
          "y1": 536.39098448,
          "width": 396.1560623025196,
          "height": 9.962639999999965,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.5829545454545455,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 107.99954000000002,
          "y0": 526.4283444800001,
          "x1": 504.15560230251964,
          "y1": 536.39098448,
          "confidence": 0.5829545454545455,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 246,
      "text": "Teaching large language models\n\nto self-debug, 2023.",
      "layout_matches": [
        {
          "text": "Large language models (LLMs) have been used to generate formal proofs of math-\nematical theorems in proofs assistants such as Lean. However, we often want to\noptimize a formal proof with respect to various criteria, depending on its down-\nstream use. For example, we may want a proof to adhere to a certain style, or to be\nreadable, concise, or modularly structured. Having suitably optimized proofs is\nalso important for learning tasks, especially since human-written proofs may not\noptimal for that purpose. To this end, we study a new problem of automated proof\noptimization: rewriting a proof so that it is correct and optimizes for an arbitrary\ncriterion, such as length or readability. As a ﬁrst method for automated proof opti-\nmization, we present ImProver, a large-language-model agent that rewrites proofs\nto optimize arbitrary user-deﬁned metrics in Lean. We ﬁnd that naively applying\nLLMs to proof optimization falls short, and we incorporate various improvements\ninto ImProver, such as the use of symbolic Lean context in a novel Chain-of-\nStates technique, as well as error-correction and retrieval. We test ImProver on\nrewriting real-world undergraduate, competition, and research-level mathematics\ntheorems, ﬁnding that ImProver is capable of rewriting proofs so that they are\nsubstantially shorter, more modular, and more readable.",
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "width": 326.1175505972419,
          "height": 185.2821399999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.45714285714285713,
          "match_type": "word_overlap",
          "common_words_count": 4
        }
      ],
      "page_spans": [
        1
      ],
      "primary_page": 1,
      "bounding_boxes": [
        {
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "confidence": 0.45714285714285713,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 247,
      "text": "URL https://arxiv.org/abs/2304.05128. David Renshaw. compﬁles.",
      "layout_matches": [
        {
          "text": "David Renshaw. compﬁles. https://github.com/dwrensha/compfiles, 2024.",
          "page": 12,
          "x0": 108.00054,
          "y0": 496.90844448000007,
          "x1": 470.7311250282,
          "y1": 507.1898889600001,
          "width": 362.7305850282,
          "height": 10.281444480000005,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.48,
          "match_type": "word_overlap",
          "common_words_count": 3
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 108.00054,
          "y0": 496.90844448000007,
          "x1": 470.7311250282,
          "y1": 507.1898889600001,
          "confidence": 0.48,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 248,
      "text": "https://github.com/dwrensha/compfiles, 2024.",
      "layout_matches": [
        {
          "text": "David Renshaw. compﬁles. https://github.com/dwrensha/compfiles, 2024.",
          "page": 12,
          "x0": 108.00054,
          "y0": 496.90844448000007,
          "x1": 470.7311250282,
          "y1": 507.1898889600001,
          "width": 362.7305850282,
          "height": 10.281444480000005,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.5428571428571428,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 108.00054,
          "y0": 496.90844448000007,
          "x1": 470.7311250282,
          "y1": 507.1898889600001,
          "confidence": 0.5428571428571428,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 249,
      "text": "Emily First, Markus N. Rabe, Talia Ringer, and Yuriy Brun.",
      "layout_matches": [
        {
          "text": "Emily First, Markus N. Rabe, Talia Ringer, and Yuriy Brun. Baldur: Whole-proof generation and",
          "page": 12,
          "x0": 108.00053999999994,
          "y0": 478.4283444800001,
          "x1": 504.0619419202571,
          "y1": 488.3909844800001,
          "width": 396.06140192025714,
          "height": 9.962640000000022,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.5561797752808989,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 108.00053999999994,
          "y0": 478.4283444800001,
          "x1": 504.0619419202571,
          "y1": 488.3909844800001,
          "confidence": 0.5561797752808989,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 250,
      "text": "Baldur: Whole-proof generation and\n\nrepair with large language models, 2023.",
      "layout_matches": [
        {
          "text": "repair with large language models, 2023.",
          "page": 12,
          "x0": 117.96053999999992,
          "y0": 467.5084444800001,
          "x1": 281.0111975376129,
          "y1": 477.4710844800001,
          "width": 163.05065753761295,
          "height": 9.962640000000022,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.4808219178082192,
          "match_type": "substring_match"
        },
        {
          "text": "Large language models (LLMs) have been used to generate formal proofs of math-\nematical theorems in proofs assistants such as Lean. However, we often want to\noptimize a formal proof with respect to various criteria, depending on its down-\nstream use. For example, we may want a proof to adhere to a certain style, or to be\nreadable, concise, or modularly structured. Having suitably optimized proofs is\nalso important for learning tasks, especially since human-written proofs may not\noptimal for that purpose. To this end, we study a new problem of automated proof\noptimization: rewriting a proof so that it is correct and optimizes for an arbitrary\ncriterion, such as length or readability. As a ﬁrst method for automated proof opti-\nmization, we present ImProver, a large-language-model agent that rewrites proofs\nto optimize arbitrary user-deﬁned metrics in Lean. We ﬁnd that naively applying\nLLMs to proof optimization falls short, and we incorporate various improvements\ninto ImProver, such as the use of symbolic Lean context in a novel Chain-of-\nStates technique, as well as error-correction and retrieval. We test ImProver on\nrewriting real-world undergraduate, competition, and research-level mathematics\ntheorems, ﬁnding that ImProver is capable of rewriting proofs so that they are\nsubstantially shorter, more modular, and more readable.",
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "width": 326.1175505972419,
          "height": 185.2821399999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.4,
          "match_type": "word_overlap",
          "common_words_count": 5
        }
      ],
      "page_spans": [
        1,
        12
      ],
      "primary_page": 1,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 117.96053999999992,
          "y0": 467.5084444800001,
          "x1": 281.0111975376129,
          "y1": 477.4710844800001,
          "confidence": 0.4808219178082192,
          "match_type": "substring_match"
        },
        {
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "confidence": 0.4,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 251,
      "text": "Jesse Michael Han, Jason Rute, Yuhuai Wu, Edward Ayers, and Stanislas Polu.",
      "layout_matches": [
        {
          "text": "Jesse Michael Han, Jason Rute, Yuhuai Wu, Edward Ayers, and Stanislas Polu. Proof artifact co-",
          "page": 12,
          "x0": 108.00037999999992,
          "y0": 449.0283444800001,
          "x1": 505.75721755475524,
          "y1": 458.9909844800001,
          "width": 397.7568375547553,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.71,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 108.00037999999992,
          "y0": 449.0283444800001,
          "x1": 505.75721755475524,
          "y1": 458.9909844800001,
          "confidence": 0.71,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 252,
      "text": "Proof artifact co-\nIn International Conference on Learning\n\ntraining for theorem proving with language models.",
      "layout_matches": [
        {
          "text": "Jesse Michael Han, Jason Rute, Yuhuai Wu, Edward Ayers, and Stanislas Polu. Proof artifact co-\nIn International Conference on Learning",
          "page": 12,
          "x0": 108.00037999999992,
          "y0": 438.1084444800001,
          "x1": 505.75721755475524,
          "y1": 458.9909844800001,
          "width": 397.7568375547553,
          "height": 20.882540000000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.4266666666666667,
          "match_type": "word_overlap",
          "common_words_count": 8
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 108.00037999999992,
          "y0": 438.1084444800001,
          "x1": 505.75721755475524,
          "y1": 458.9909844800001,
          "confidence": 0.4266666666666667,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 253,
      "text": "Representations, 2022. URL https://openreview.net/forum?id=rpxJc9j04U.",
      "layout_matches": [
        {
          "text": "Representations, 2022. URL https://openreview.net/forum?id=rpxJc9j04U.",
          "page": 12,
          "x0": 117.60037999999992,
          "y0": 427.0686444800001,
          "x1": 488.4909399999999,
          "y1": 437.3500889600001,
          "width": 370.89056,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.9,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 117.60037999999992,
          "y0": 427.0686444800001,
          "x1": 488.4909399999999,
          "y1": 437.3500889600001,
          "confidence": 0.9,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 254,
      "text": "Jiewen Hu, Thomas Zhu, and Sean Welleck.",
      "layout_matches": [
        {
          "text": "Jiewen Hu, Thomas Zhu, and Sean Welleck. minictx: Neural theorem proving with (long-)contexts,",
          "page": 12,
          "x0": 108.00027999999992,
          "y0": 408.5885444800001,
          "x1": 505.7709352873155,
          "y1": 418.55118448000013,
          "width": 397.7706552873156,
          "height": 9.962640000000022,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.38863636363636367,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 108.00027999999992,
          "y0": 408.5885444800001,
          "x1": 505.7709352873155,
          "y1": 418.55118448000013,
          "confidence": 0.38863636363636367,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 255,
      "text": "minictx: Neural theorem proving with (long-)contexts,\n\n2024.",
      "layout_matches": [
        {
          "text": "Jiewen Hu, Thomas Zhu, and Sean Welleck. minictx: Neural theorem proving with (long-)contexts,",
          "page": 12,
          "x0": 108.00027999999992,
          "y0": 408.5885444800001,
          "x1": 505.7709352873155,
          "y1": 418.55118448000013,
          "width": 397.7706552873156,
          "height": 9.962640000000022,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6857142857142857,
          "match_type": "word_overlap",
          "common_words_count": 6
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 108.00027999999992,
          "y0": 408.5885444800001,
          "x1": 505.7709352873155,
          "y1": 418.55118448000013,
          "confidence": 0.6857142857142857,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 256,
      "text": "URL https://arxiv.org/abs/2408.03350.",
      "layout_matches": [
        {
          "text": "2024. URL https://arxiv.org/abs/2408.03350.",
          "page": 12,
          "x0": 117.9602799999999,
          "y0": 397.6682444800001,
          "x1": 360.2106399999999,
          "y1": 407.9496889600001,
          "width": 242.25036,
          "height": 10.281444480000005,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.7578947368421053,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 117.9602799999999,
          "y0": 397.6682444800001,
          "x1": 360.2106399999999,
          "y1": 407.9496889600001,
          "confidence": 0.7578947368421053,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 257,
      "text": "Albert Qiaochu Jiang, Sean Welleck, Jin Peng Zhou, Timothee Lacroix, Jiacheng Liu, Wenda Li,\nMateja Jamnik, Guillaume Lample, and Yuhuai Wu.",
      "layout_matches": [
        {
          "text": "Albert Qiaochu Jiang, Sean Welleck, Jin Peng Zhou, Timothee Lacroix, Jiacheng Liu, Wenda Li,",
          "page": 12,
          "x0": 107.99997999999991,
          "y0": 379.18854448000013,
          "x1": 505.2920000384032,
          "y1": 389.15118448000015,
          "width": 397.2920200384033,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.5863636363636363,
          "match_type": "substring_match"
        },
        {
          "text": "Albert Qiaochu Jiang, Sean Welleck, Jin Peng Zhou, Timothee Lacroix, Jiacheng Liu, Wenda Li,\nMateja Jamnik, Guillaume Lample, and Yuhuai Wu. Draft, sketch, and prove: Guiding formal\ntheorem provers with informal proofs. In The Eleventh International Conference on Learning\nRepresentations, 2023. URL https://openreview.net/forum?id=SMa9EAovKMC.",
          "page": 12,
          "x0": 107.99997999999991,
          "y0": 346.30854448000014,
          "x1": 505.2920000384032,
          "y1": 389.15118448000015,
          "width": 397.2920200384033,
          "height": 42.84264000000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.36441717791411044,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 107.99997999999991,
          "y0": 379.18854448000013,
          "x1": 505.2920000384032,
          "y1": 389.15118448000015,
          "confidence": 0.5863636363636363,
          "match_type": "substring_match"
        },
        {
          "page": 12,
          "x0": 107.99997999999991,
          "y0": 346.30854448000014,
          "x1": 505.2920000384032,
          "y1": 389.15118448000015,
          "confidence": 0.36441717791411044,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 258,
      "text": "Draft, sketch, and prove: Guiding formal\ntheorem provers with informal proofs.",
      "layout_matches": [
        {
          "text": "Mateja Jamnik, Guillaume Lample, and Yuhuai Wu. Draft, sketch, and prove: Guiding formal",
          "page": 12,
          "x0": 117.96097999999989,
          "y0": 368.1483444800001,
          "x1": 504.2502334332388,
          "y1": 378.1109844800001,
          "width": 386.2892534332389,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.43636363636363634,
          "match_type": "word_overlap",
          "common_words_count": 6
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 117.96097999999989,
          "y0": 368.1483444800001,
          "x1": 504.2502334332388,
          "y1": 378.1109844800001,
          "confidence": 0.43636363636363634,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 259,
      "text": "In The Eleventh International Conference on Learning\nRepresentations, 2023.",
      "layout_matches": [
        {
          "text": "Shuyan Zhou, Uri Alon, Frank F. Xu, Zhengbao Jiang, and Graham Neubig. Docprompting: Gener-\nating code by retrieving the docs. In The Eleventh International Conference on Learning Repre-\nsentations, 2023. URL https://openreview.net/forum?id=ZTCxT2t2Ru.",
          "page": 14,
          "x0": 107.99948,
          "y0": 471.8285444800001,
          "x1": 505.758487613348,
          "y1": 503.75128448000015,
          "width": 397.759007613348,
          "height": 31.922740000000033,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.7111111111111111,
          "match_type": "word_overlap",
          "common_words_count": 8
        }
      ],
      "page_spans": [
        14
      ],
      "primary_page": 14,
      "bounding_boxes": [
        {
          "page": 14,
          "x0": 107.99948,
          "y0": 471.8285444800001,
          "x1": 505.758487613348,
          "y1": 503.75128448000015,
          "confidence": 0.7111111111111111,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 260,
      "text": "URL https://openreview.net/forum?id=SMa9EAovKMC.",
      "layout_matches": [
        {
          "text": "Representations, 2023. URL https://openreview.net/forum?id=SMa9EAovKMC.",
          "page": 12,
          "x0": 117.60097999999985,
          "y0": 346.30854448000014,
          "x1": 494.3715399999998,
          "y1": 356.58998896000014,
          "width": 376.77055999999993,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.5906250000000001,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 117.60097999999985,
          "y0": 346.30854448000014,
          "x1": 494.3715399999998,
          "y1": 356.58998896000014,
          "confidence": 0.5906250000000001,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 261,
      "text": "Kim Morrison. lean-training-data.",
      "layout_matches": [
        {
          "text": "Kim Morrison. lean-training-data. https://github.com/kim-em/lean-training-data,",
          "page": 12,
          "x0": 108.00087999999982,
          "y0": 327.82844448000014,
          "x1": 512.1315399999999,
          "y1": 338.10988896000015,
          "width": 404.13066000000003,
          "height": 10.281444480000005,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.40684931506849314,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 108.00087999999982,
          "y0": 327.82844448000014,
          "x1": 512.1315399999999,
          "y1": 338.10988896000015,
          "confidence": 0.40684931506849314,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 262,
      "text": "https://github.com/kim-em/lean-training-data,\n\nGuillaume Lample, Timothee Lacroix, Marie anne Lachaux, Aurelien Rodriguez, Amaury\nHypertree proof search\nHayat, Thibaut Lavril, Gabriel Ebner, and Xavier Martinet.",
      "layout_matches": [
        {
          "text": "Guillaume Lample, Timothee Lacroix, Marie anne Lachaux, Aurelien Rodriguez, Amaury\nHypertree proof search\nHayat, Thibaut Lavril, Gabriel Ebner, and Xavier Martinet.\nfor neural\nIn Alice H. Oh, Alekh Agarwal, Danielle Belgrave, and\nKyunghyun Cho (eds.), Advances in Neural Information Processing Systems, 2022. URL\nhttps://openreview.net/forum?id=J4pX8Q8cxHH.",
          "page": 12,
          "x0": 108.0007199999998,
          "y0": 254.50864448000016,
          "x1": 504.54313285016974,
          "y1": 308.27118448000016,
          "width": 396.54241285016997,
          "height": 53.76254,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.7636363636363637,
          "match_type": "word_overlap",
          "common_words_count": 21
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 108.0007199999998,
          "y0": 254.50864448000016,
          "x1": 504.54313285016974,
          "y1": 308.27118448000016,
          "confidence": 0.7636363636363637,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 263,
      "text": "for neural\nIn Alice H. Oh, Alekh Agarwal, Danielle Belgrave, and\nKyunghyun Cho (eds.",
      "layout_matches": [
        {
          "text": "Jason Wei, Xuezhi Wang, Dale Schuurmans, Maarten Bosma, brian ichter, Fei Xia, Ed H.\nthought prompting elicits reasoning\nChi, Quoc V Le, and Denny Zhou.\nin large language models.\nIn Alice H. Oh, Alekh Agarwal, Danielle Belgrave, and\nKyunghyun Cho (eds.), Advances in Neural Information Processing Systems, 2022. URL\nhttps://openreview.net/forum?id=_VjQlMeSB_J.",
          "page": 14,
          "x0": 108.00084000000001,
          "y0": 594.34834448,
          "x1": 505.7702844936245,
          "y1": 648.23078448,
          "width": 397.7694444936245,
          "height": 53.882439999999974,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.7428571428571429,
          "match_type": "word_overlap",
          "common_words_count": 13
        }
      ],
      "page_spans": [
        14
      ],
      "primary_page": 14,
      "bounding_boxes": [
        {
          "page": 14,
          "x0": 108.00084000000001,
          "y0": 594.34834448,
          "x1": 505.7702844936245,
          "y1": 648.23078448,
          "confidence": 0.7428571428571429,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 264,
      "text": "), Advances in Neural Information Processing Systems, 2022.",
      "layout_matches": [
        {
          "text": "Kyunghyun Cho (eds.), Advances in Neural Information Processing Systems, 2022. URL",
          "page": 12,
          "x0": 117.96171999999984,
          "y0": 265.42854448000014,
          "x1": 504.44863964135925,
          "y1": 275.50077352000017,
          "width": 386.4869196413594,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.6346153846153847,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 117.96171999999984,
          "y0": 265.42854448000014,
          "x1": 504.44863964135925,
          "y1": 275.50077352000017,
          "confidence": 0.6346153846153847,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 265,
      "text": "URL\nhttps://openreview.net/forum?id=J4pX8Q8cxHH. theorem proving. 2024. 2024.",
      "layout_matches": [
        {
          "text": "https://openreview.net/forum?id=J4pX8Q8cxHH.",
          "page": 12,
          "x0": 117.96071999999981,
          "y0": 254.50864448000016,
          "x1": 377.4913799999998,
          "y1": 264.79008896000016,
          "width": 259.53066,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.4816901408450704,
          "match_type": "substring_match"
        },
        {
          "text": "https://openreview.net/forum?id=_VjQlMeSB_J.",
          "page": 14,
          "x0": 117.95983999999999,
          "y0": 594.34834448,
          "x1": 377.4905,
          "y1": 604.62978896,
          "width": 259.53066,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.3192660550458716,
          "match_type": "sequence_match",
          "similarity_ratio": 0.5321100917431193
        },
        {
          "text": "sentations, 2023. URL https://openreview.net/forum?id=ZTCxT2t2Ru.",
          "page": 14,
          "x0": 117.96047999999996,
          "y0": 471.8285444800001,
          "x1": 465.33104,
          "y1": 482.1099889600001,
          "width": 347.37056,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.30697674418604654,
          "match_type": "sequence_match",
          "similarity_ratio": 0.5116279069767442
        }
      ],
      "page_spans": [
        12,
        14
      ],
      "primary_page": 14,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 117.96071999999981,
          "y0": 254.50864448000016,
          "x1": 377.4913799999998,
          "y1": 264.79008896000016,
          "confidence": 0.4816901408450704,
          "match_type": "substring_match"
        },
        {
          "page": 14,
          "x0": 117.95983999999999,
          "y0": 594.34834448,
          "x1": 377.4905,
          "y1": 604.62978896,
          "confidence": 0.3192660550458716,
          "match_type": "sequence_match"
        },
        {
          "page": 14,
          "x0": 117.96047999999996,
          "y0": 471.8285444800001,
          "x1": 465.33104,
          "y1": 482.1099889600001,
          "confidence": 0.30697674418604654,
          "match_type": "sequence_match"
        }
      ]
    },
    {
      "sentence_id": 266,
      "text": "Zhaoyu Li, Jialiang Sun, Logan Murphy, Qidong Su, Zenan Li, Xian Zhang, Kaiyu Yang, and Xujie\n\nSi.",
      "layout_matches": [
        {
          "text": "Zhaoyu Li, Jialiang Sun, Logan Murphy, Qidong Su, Zenan Li, Xian Zhang, Kaiyu Yang, and Xujie",
          "page": 12,
          "x0": 108.00055999999987,
          "y0": 206.50864448000016,
          "x1": 504.10424469664827,
          "y1": 216.47128448000018,
          "width": 396.10368469664843,
          "height": 9.962640000000022,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.8600000000000001,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 108.00055999999987,
          "y0": 206.50864448000016,
          "x1": 504.10424469664827,
          "y1": 216.47128448000018,
          "confidence": 0.8600000000000001,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 267,
      "text": "A survey on deep learning for theorem proving, 2024.",
      "layout_matches": [
        {
          "text": "Si. A survey on deep learning for theorem proving, 2024.",
          "page": 12,
          "x0": 117.9605599999999,
          "y0": 195.58874448000014,
          "x1": 347.3713763360288,
          "y1": 205.55138448000017,
          "width": 229.4108163360289,
          "height": 9.962640000000022,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.8345454545454546,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 117.9605599999999,
          "y0": 195.58874448000014,
          "x1": 347.3713763360288,
          "y1": 205.55138448000017,
          "confidence": 0.8345454545454546,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 268,
      "text": "Pan Lu, Liang Qiu, Wenhao Yu, Sean Welleck, and Kai-Wei Chang.",
      "layout_matches": [
        {
          "text": "Pan Lu, Liang Qiu, Wenhao Yu, Sean Welleck, and Kai-Wei Chang. A survey of deep",
          "page": 12,
          "x0": 108.0003999999999,
          "y0": 177.10864448000015,
          "x1": 504.06147363615025,
          "y1": 187.07128448000017,
          "width": 396.06107363615035,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.696,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 108.0003999999999,
          "y0": 177.10864448000015,
          "x1": 504.06147363615025,
          "y1": 187.07128448000017,
          "confidence": 0.696,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 269,
      "text": "A survey of deep\nlearning for mathematical reasoning.",
      "layout_matches": [
        {
          "text": "learning for mathematical reasoning.",
          "page": 12,
          "x0": 117.96039999999988,
          "y0": 166.18874448000014,
          "x1": 273.3307737787993,
          "y1": 176.15138448000016,
          "width": 155.37037377879943,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.6113207547169811,
          "match_type": "substring_match"
        },
        {
          "text": "Formal proofs, however, can be hard to read and often suffer from low reusability or excessive detail.\nFor example, formal proofs in Lean’s extensive mathematical library, Mathlib (mathlib Community,\n2020), are generally designed to be concise and very general, often at the expense of readability.\nFormal proofs in an expository text, in contrast, may include detailed calculations steps, making\nthem readable but verbose. Machine learning systems trained on such proofs learn to mimic these\nvaried conventions (Hu et al., 2024), which may not be the optimal use of the limited supply of\nhuman-written proofs. As a result, we would like to be able to automatically refactor proofs to meet\na secondary objective such as length or readability.",
          "page": 1,
          "x0": 107.75983999999997,
          "y0": 142.66924448,
          "x1": 506.0108944908015,
          "y1": 229.31138448000007,
          "width": 398.2510544908015,
          "height": 86.64214000000007,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.5,
          "match_type": "word_overlap",
          "common_words_count": 5
        }
      ],
      "page_spans": [
        1,
        12
      ],
      "primary_page": 1,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 117.96039999999988,
          "y0": 166.18874448000014,
          "x1": 273.3307737787993,
          "y1": 176.15138448000016,
          "confidence": 0.6113207547169811,
          "match_type": "substring_match"
        },
        {
          "page": 1,
          "x0": 107.75983999999997,
          "y0": 142.66924448,
          "x1": 506.0108944908015,
          "y1": 229.31138448000007,
          "confidence": 0.5,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 270,
      "text": "In Anna Rogers, Jordan Boyd-Graber, and Naoaki\nOkazaki (eds.",
      "layout_matches": [
        {
          "text": "In Anna Rogers, Jordan Boyd-Graber, and Naoaki",
          "page": 12,
          "x0": 285.72021325639935,
          "y0": 166.18874448000014,
          "x1": 504.1302163102603,
          "y1": 176.15138448000016,
          "width": 218.41000305386098,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.6947368421052631,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 285.72021325639935,
          "y0": 166.18874448000014,
          "x1": 504.1302163102603,
          "y1": 176.15138448000016,
          "confidence": 0.6947368421052631,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 271,
      "text": "), Proceedings of the 61st Annual Meeting of the Association for Computa-\ntional Linguistics (Volume 1: Long Papers), pp.",
      "layout_matches": [
        {
          "text": "Okazaki (eds.), Proceedings of the 61st Annual Meeting of the Association for Computa-",
          "page": 12,
          "x0": 117.96039999999988,
          "y0": 155.14854448000014,
          "x1": 505.87776961054124,
          "y1": 165.22077352000014,
          "width": 387.91736961054136,
          "height": 10.072229039999996,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.4,
          "match_type": "word_overlap",
          "common_words_count": 9
        },
        {
          "text": "Association for Computational Linguistics.",
          "page": 12,
          "x0": 117.60019999999986,
          "y0": 133.30874448000012,
          "x1": 300.57080663853793,
          "y1": 143.27138448000014,
          "width": 182.97060663853807,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.32307692307692304,
          "match_type": "sequence_match",
          "similarity_ratio": 0.5384615384615384
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 117.96039999999988,
          "y0": 155.14854448000014,
          "x1": 505.87776961054124,
          "y1": 165.22077352000014,
          "confidence": 0.4,
          "match_type": "word_overlap"
        },
        {
          "page": 12,
          "x0": 117.60019999999986,
          "y0": 133.30874448000012,
          "x1": 300.57080663853793,
          "y1": 143.27138448000014,
          "confidence": 0.32307692307692304,
          "match_type": "sequence_match"
        }
      ]
    },
    {
      "sentence_id": 272,
      "text": "14605–14631, Toronto, Canada, July 2023.",
      "layout_matches": [
        {
          "text": "tional Linguistics (Volume 1: Long Papers), pp. 14605–14631, Toronto, Canada, July 2023.",
          "page": 12,
          "x0": 117.96019999999987,
          "y0": 144.22864448000013,
          "x1": 506.01107284861945,
          "y1": 154.30087352000012,
          "width": 388.0508728486196,
          "height": 10.072229039999996,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.405,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 117.96019999999987,
          "y0": 144.22864448000013,
          "x1": 506.01107284861945,
          "y1": 154.30087352000012,
          "confidence": 0.405,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 273,
      "text": "Association for Computational Linguistics.",
      "layout_matches": [
        {
          "text": "Association for Computational Linguistics.",
          "page": 12,
          "x0": 117.60019999999986,
          "y0": 133.30874448000012,
          "x1": 300.57080663853793,
          "y1": 143.27138448000014,
          "width": 182.97060663853807,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.9,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 117.60019999999986,
          "y0": 133.30874448000012,
          "x1": 300.57080663853793,
          "y1": 143.27138448000014,
          "confidence": 0.9,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 274,
      "text": "10.18653/v1/2023.acl-long.817.",
      "layout_matches": [
        {
          "text": "10.18653/v1/2023.acl-long.817. URL",
          "page": 12,
          "x0": 341.1602391492066,
          "y0": 133.30874448000012,
          "x1": 504.4475389892111,
          "y1": 143.27138448000014,
          "width": 163.28729984000455,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.7875,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 341.1602391492066,
          "y0": 133.30874448000012,
          "x1": 504.4475389892111,
          "y1": 143.27138448000014,
          "confidence": 0.7875,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 275,
      "text": "URL\nhttps://aclanthology.org/2023.acl-long.817.",
      "layout_matches": [
        {
          "text": "https://aclanthology.org/2023.acl-long.817.",
          "page": 12,
          "x0": 117.96019999999987,
          "y0": 122.26854448000013,
          "x1": 371.97085999999985,
          "y1": 132.54998896000012,
          "width": 254.01065999999997,
          "height": 10.28144447999999,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.8162790697674418,
          "match_type": "substring_match"
        },
        {
          "text": "10.18653/v1/2023.acl-long.817. URL",
          "page": 12,
          "x0": 341.1602391492066,
          "y0": 133.30874448000012,
          "x1": 504.4475389892111,
          "y1": 143.27138448000014,
          "width": 163.28729984000455,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.304,
          "match_type": "sequence_match",
          "similarity_ratio": 0.5066666666666667
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 117.96019999999987,
          "y0": 122.26854448000013,
          "x1": 371.97085999999985,
          "y1": 132.54998896000012,
          "confidence": 0.8162790697674418,
          "match_type": "substring_match"
        },
        {
          "page": 12,
          "x0": 341.1602391492066,
          "y0": 133.30874448000012,
          "x1": 504.4475389892111,
          "y1": 143.27138448000014,
          "confidence": 0.304,
          "match_type": "sequence_match"
        }
      ]
    },
    {
      "sentence_id": 276,
      "text": "doi:\n\nAman Madaan, Niket Tandon, Prakhar Gupta, Skyler Hallinan, Luyu Gao, Sarah Wiegreffe, Uri\nAlon, Nouha Dziri, Shrimai Prabhumoye, Yiming Yang, Shashank Gupta, Bodhisattwa Prasad\nMajumder, Katherine Hermann, Sean Welleck, Amir Yazdanbakhsh, and Peter Clark.",
      "layout_matches": [
        {
          "text": "Aman Madaan, Niket Tandon, Prakhar Gupta, Skyler Hallinan, Luyu Gao, Sarah Wiegreffe, Uri\nAlon, Nouha Dziri, Shrimai Prabhumoye, Yiming Yang, Shashank Gupta, Bodhisattwa Prasad\nMajumder, Katherine Hermann, Sean Welleck, Amir Yazdanbakhsh, and Peter Clark. Self-reﬁne:\nIterative reﬁnement with self-feedback. In Thirty-seventh Conference on Neural Information Pro-\ncessing Systems, 2023. URL https://openreview.net/forum?id=S37hOerQLB.",
          "page": 12,
          "x0": 108.00019999999984,
          "y0": 59.98854448000014,
          "x1": 505.63799024325294,
          "y1": 113.75108448000013,
          "width": 397.6377902432531,
          "height": 53.762539999999994,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.7542857142857143,
          "match_type": "word_overlap",
          "common_words_count": 33
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 108.00019999999984,
          "y0": 59.98854448000014,
          "x1": 505.63799024325294,
          "y1": 113.75108448000013,
          "confidence": 0.7542857142857143,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 277,
      "text": "Self-reﬁne:\nIterative reﬁnement with self-feedback.",
      "layout_matches": [
        {
          "text": "Iterative reﬁnement with self-feedback. In Thirty-seventh Conference on Neural Information Pro-",
          "page": 12,
          "x0": 117.96019999999982,
          "y0": 70.90844448000014,
          "x1": 505.63799024325294,
          "y1": 80.98067352000014,
          "width": 387.6777902432531,
          "height": 10.072229039999996,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.6400000000000001,
          "match_type": "word_overlap",
          "common_words_count": 4
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 117.96019999999982,
          "y0": 70.90844448000014,
          "x1": 505.63799024325294,
          "y1": 80.98067352000014,
          "confidence": 0.6400000000000001,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 278,
      "text": "In Thirty-seventh Conference on Neural Information Pro-\ncessing Systems, 2023.",
      "layout_matches": [
        {
          "text": "Iterative reﬁnement with self-feedback. In Thirty-seventh Conference on Neural Information Pro-",
          "page": 12,
          "x0": 117.96019999999982,
          "y0": 70.90844448000014,
          "x1": 505.63799024325294,
          "y1": 80.98067352000014,
          "width": 387.6777902432531,
          "height": 10.072229039999996,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.5599999999999999,
          "match_type": "word_overlap",
          "common_words_count": 7
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 117.96019999999982,
          "y0": 70.90844448000014,
          "x1": 505.63799024325294,
          "y1": 80.98067352000014,
          "confidence": 0.5599999999999999,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 279,
      "text": "URL https://openreview.net/forum?id=S37hOerQLB.",
      "layout_matches": [
        {
          "text": "cessing Systems, 2023. URL https://openreview.net/forum?id=S37hOerQLB.",
          "page": 12,
          "x0": 117.96019999999984,
          "y0": 59.98854448000014,
          "x1": 488.2506599999998,
          "y1": 70.26998896000013,
          "width": 370.29045999999994,
          "height": 10.281444479999998,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.5857142857142857,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 117.96019999999984,
          "y0": 59.98854448000014,
          "x1": 488.2506599999998,
          "y1": 70.26998896000013,
          "confidence": 0.5857142857142857,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 280,
      "text": "12\n\nleanprover-community. mathematics_in_lean.",
      "layout_matches": [
        {
          "text": "leanprover-community. mathematics_in_lean. https://github.com/leanprover-community/mathematics_in_lea",
          "page": 12,
          "x0": 108.00071999999983,
          "y0": 236.02854448000016,
          "x1": 641.0183590334782,
          "y1": 246.30998896000017,
          "width": 533.0176390334784,
          "height": 10.281444480000005,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.5333333333333333,
          "match_type": "word_overlap",
          "common_words_count": 2
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 108.00071999999983,
          "y0": 236.02854448000016,
          "x1": 641.0183590334782,
          "y1": 246.30998896000017,
          "confidence": 0.5333333333333333,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 281,
      "text": "https://github.com/leanprover-community/mathematics_in_lea\n\n\fThe mathlib Community.",
      "layout_matches": [
        {
          "text": "The mathlib Community. The lean mathematical library. In Proceedings of the 9th ACM SIGPLAN\nInternational Conference on Certiﬁed Programs and Proofs, POPL ’20. ACM, January 2020. doi:\n10.1145/3372885.3373824. URL http://dx.doi.org/10.1145/3372885.3373824.",
          "page": 13,
          "x0": 108.0,
          "y0": 676.06804448,
          "x1": 505.449227881296,
          "y1": 708.1003735200001,
          "width": 397.449227881296,
          "height": 32.032329040000036,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6000000000000001,
          "match_type": "word_overlap",
          "common_words_count": 3
        }
      ],
      "page_spans": [
        13
      ],
      "primary_page": 13,
      "bounding_boxes": [
        {
          "page": 13,
          "x0": 108.0,
          "y0": 676.06804448,
          "x1": 505.449227881296,
          "y1": 708.1003735200001,
          "confidence": 0.6000000000000001,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 282,
      "text": "The lean mathematical library.",
      "layout_matches": [
        {
          "text": "The fundamental virtue of a mathematical proof is that it provides certainty: a deductive argument\nshows that the assumptions of a mathematical statement logically guarantee the conclusion.\nIn\npractice, however, informal, natural-language proofs are prone to imprecision, ambiguity, and error.\nUsing a formal language such as Lean (Moura & Ullrich, 2021) removes ambiguity and precision\nand enables a proof assistant to verify correctness down to the primitives of a formal axiomatic\nsystem.",
          "page": 1,
          "x0": 107.63983999999999,
          "y0": 236.26904448000005,
          "x1": 505.8906872255797,
          "y1": 301.07138448000006,
          "width": 398.2508472255797,
          "height": 64.80234000000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6000000000000001,
          "match_type": "word_overlap",
          "common_words_count": 3
        }
      ],
      "page_spans": [
        1
      ],
      "primary_page": 1,
      "bounding_boxes": [
        {
          "page": 1,
          "x0": 107.63983999999999,
          "y0": 236.26904448000005,
          "x1": 505.8906872255797,
          "y1": 301.07138448000006,
          "confidence": 0.6000000000000001,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 283,
      "text": "In Proceedings of the 9th ACM SIGPLAN\nInternational Conference on Certiﬁed Programs and Proofs, POPL ’20.",
      "layout_matches": [
        {
          "text": "International Conference on Certiﬁed Programs and Proofs, POPL ’20. ACM, January 2020. doi:",
          "page": 13,
          "x0": 117.84000000000003,
          "y0": 686.98834448,
          "x1": 505.449227881296,
          "y1": 697.06057352,
          "width": 387.60922788129596,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.5,
          "match_type": "word_overlap",
          "common_words_count": 10
        }
      ],
      "page_spans": [
        13
      ],
      "primary_page": 13,
      "bounding_boxes": [
        {
          "page": 13,
          "x0": 117.84000000000003,
          "y0": 686.98834448,
          "x1": 505.449227881296,
          "y1": 697.06057352,
          "confidence": 0.5,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 284,
      "text": "ACM, January 2020. doi:\n10.1145/3372885.3373824.",
      "layout_matches": [
        {
          "text": "International Conference on Certiﬁed Programs and Proofs, POPL ’20. ACM, January 2020. doi:",
          "page": 13,
          "x0": 117.84000000000003,
          "y0": 686.98834448,
          "x1": 505.449227881296,
          "y1": 697.06057352,
          "width": 387.60922788129596,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.6400000000000001,
          "match_type": "word_overlap",
          "common_words_count": 4
        }
      ],
      "page_spans": [
        13
      ],
      "primary_page": 13,
      "bounding_boxes": [
        {
          "page": 13,
          "x0": 117.84000000000003,
          "y0": 686.98834448,
          "x1": 505.449227881296,
          "y1": 697.06057352,
          "confidence": 0.6400000000000001,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 285,
      "text": "URL http://dx.doi.org/10.1145/3372885.3373824.",
      "layout_matches": [
        {
          "text": "10.1145/3372885.3373824. URL http://dx.doi.org/10.1145/3372885.3373824.",
          "page": 13,
          "x0": 117.24000000000001,
          "y0": 676.06804448,
          "x1": 500.61066,
          "y1": 686.34948896,
          "width": 383.37066,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.5676923076923077,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        13
      ],
      "primary_page": 13,
      "bounding_boxes": [
        {
          "page": 13,
          "x0": 117.24000000000001,
          "y0": 676.06804448,
          "x1": 500.61066,
          "y1": 686.34948896,
          "confidence": 0.5676923076923077,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 286,
      "text": "Leonardo de Moura and Sebastian Ullrich.",
      "layout_matches": [
        {
          "text": "Leonardo de Moura and Sebastian Ullrich. The lean 4 theorem prover and programming lan-",
          "page": 13,
          "x0": 108.0,
          "y0": 656.98834448,
          "x1": 505.75751372235305,
          "y1": 666.95098448,
          "width": 397.75751372235305,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.41379310344827586,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        13
      ],
      "primary_page": 13,
      "bounding_boxes": [
        {
          "page": 13,
          "x0": 108.0,
          "y0": 656.98834448,
          "x1": 505.75751372235305,
          "y1": 666.95098448,
          "confidence": 0.41379310344827586,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 287,
      "text": "The lean 4 theorem prover and programming lan-\nIn Automated Deduction – CADE 28: 28th International Conference on Automated\nguage.",
      "layout_matches": [
        {
          "text": "In Automated Deduction – CADE 28: 28th International Conference on Automated",
          "page": 13,
          "x0": 153.47997852400317,
          "y0": 646.06804448,
          "x1": 504.1815721890405,
          "y1": 656.14027352,
          "width": 350.7015936650373,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.5203125000000001,
          "match_type": "substring_match"
        },
        {
          "text": "Leonardo de Moura and Sebastian Ullrich. The lean 4 theorem prover and programming lan-",
          "page": 13,
          "x0": 108.0,
          "y0": 656.98834448,
          "x1": 505.75751372235305,
          "y1": 666.95098448,
          "width": 397.75751372235305,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.3368421052631579,
          "match_type": "word_overlap",
          "common_words_count": 8
        }
      ],
      "page_spans": [
        13
      ],
      "primary_page": 13,
      "bounding_boxes": [
        {
          "page": 13,
          "x0": 153.47997852400317,
          "y0": 646.06804448,
          "x1": 504.1815721890405,
          "y1": 656.14027352,
          "confidence": 0.5203125000000001,
          "match_type": "substring_match"
        },
        {
          "page": 13,
          "x0": 108.0,
          "y0": 656.98834448,
          "x1": 505.75751372235305,
          "y1": 666.95098448,
          "confidence": 0.3368421052631579,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 288,
      "text": "Deduction, Virtual Event, July 12–15, 2021, Proceedings, pp.",
      "layout_matches": [
        {
          "text": "Deduction, Virtual Event, July 12–15, 2021, Proceedings, pp. 625–635, Berlin, Heidelberg,",
          "page": 13,
          "x0": 117.59899999999993,
          "y0": 635.14814448,
          "x1": 505.52976324105845,
          "y1": 645.2203735200001,
          "width": 387.9307632410585,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.6151898734177215,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        13
      ],
      "primary_page": 13,
      "bounding_boxes": [
        {
          "page": 13,
          "x0": 117.59899999999993,
          "y0": 635.14814448,
          "x1": 505.52976324105845,
          "y1": 645.2203735200001,
          "confidence": 0.6151898734177215,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 289,
      "text": "625–635, Berlin, Heidelberg,\n2021. Springer-Verlag.",
      "layout_matches": [
        {
          "text": "Deduction, Virtual Event, July 12–15, 2021, Proceedings, pp. 625–635, Berlin, Heidelberg,",
          "page": 13,
          "x0": 117.59899999999993,
          "y0": 635.14814448,
          "x1": 505.52976324105845,
          "y1": 645.2203735200001,
          "width": 387.9307632410585,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.48,
          "match_type": "word_overlap",
          "common_words_count": 3
        }
      ],
      "page_spans": [
        13
      ],
      "primary_page": 13,
      "bounding_boxes": [
        {
          "page": 13,
          "x0": 117.59899999999993,
          "y0": 635.14814448,
          "x1": 505.52976324105845,
          "y1": 645.2203735200001,
          "confidence": 0.48,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 290,
      "text": "ISBN 978-3-030-79875-8. doi: 10.1007/978-3-030-79876-5_37.",
      "layout_matches": [
        {
          "text": "2021. Springer-Verlag. ISBN 978-3-030-79875-8. doi: 10.1007/978-3-030-79876-5_37. URL",
          "page": 13,
          "x0": 117.95899999999995,
          "y0": 624.10834448,
          "x1": 504.4471096797559,
          "y1": 634.07098448,
          "width": 386.48810967975595,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.6072289156626506,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        13
      ],
      "primary_page": 13,
      "bounding_boxes": [
        {
          "page": 13,
          "x0": 117.95899999999995,
          "y0": 624.10834448,
          "x1": 504.4471096797559,
          "y1": 634.07098448,
          "confidence": 0.6072289156626506,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 291,
      "text": "URL\nhttps://doi.org/10.1007/978-3-030-79876-5_37.",
      "layout_matches": [
        {
          "text": "https://doi.org/10.1007/978-3-030-79876-5_37.",
          "page": 13,
          "x0": 117.95899999999995,
          "y0": 613.18844448,
          "x1": 385.4096599999999,
          "y1": 623.46988896,
          "width": 267.45065999999997,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.8181818181818181,
          "match_type": "substring_match"
        },
        {
          "text": "2021. Springer-Verlag. ISBN 978-3-030-79875-8. doi: 10.1007/978-3-030-79876-5_37. URL",
          "page": 13,
          "x0": 117.95899999999995,
          "y0": 624.10834448,
          "x1": 504.4471096797559,
          "y1": 634.07098448,
          "width": 386.48810967975595,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.33070866141732286,
          "match_type": "sequence_match",
          "similarity_ratio": 0.5511811023622047
        }
      ],
      "page_spans": [
        13
      ],
      "primary_page": 13,
      "bounding_boxes": [
        {
          "page": 13,
          "x0": 117.95899999999995,
          "y0": 613.18844448,
          "x1": 385.4096599999999,
          "y1": 623.46988896,
          "confidence": 0.8181818181818181,
          "match_type": "substring_match"
        },
        {
          "page": 13,
          "x0": 117.95899999999995,
          "y0": 624.10834448,
          "x1": 504.4471096797559,
          "y1": 634.07098448,
          "confidence": 0.33070866141732286,
          "match_type": "sequence_match"
        }
      ]
    },
    {
      "sentence_id": 292,
      "text": "OpenAI, Josh Achiam, Steven Adler, Sandhini Agarwal, Lama Ahmad, Ilge Akkaya, Floren-\ncia Leoni Aleman, Diogo Almeida, Janko Altenschmidt, Sam Altman, Shyamal Anadkat, Red\nAvila, Igor Babuschkin, Suchir Balaji, Valerie Balcom, Paul Baltescu, Haiming Bao, Moham-\nmad Bavarian, Jeff Belgum, Irwan Bello, Jake Berdine, Gabriel Bernadett-Shapiro, Christopher\nBerner, Lenny Bogdonoff, Oleg Boiko, Madelaine Boyd, Anna-Luisa Brakman, Greg Brockman,\nTim Brooks, Miles Brundage, Kevin Button, Trevor Cai, Rosie Campbell, Andrew Cann, Brit-\ntany Carey, Chelsea Carlson, Rory Carmichael, Brooke Chan, Che Chang, Fotis Chantzis, Derek\nChen, Sully Chen, Ruby Chen, Jason Chen, Mark Chen, Ben Chess, Chester Cho, Casey Chu,\nHyung Won Chung, Dave Cummings, Jeremiah Currier, Yunxing Dai, Cory Decareaux, Thomas\nDegry, Noah Deutsch, Damien Deville, Arka Dhar, David Dohan, Steve Dowling, Sheila Dunning,\nAdrien Ecoffet, Atty Eleti, Tyna Eloundou, David Farhi, Liam Fedus, Niko Felix, Simón Posada\nFishman, Juston Forte, Isabella Fulford, Leo Gao, Elie Georges, Christian Gibson, Vik Goel,\nTarun Gogineni, Gabriel Goh, Rapha Gontijo-Lopes, Jonathan Gordon, Morgan Grafstein, Scott\nGray, Ryan Greene, Joshua Gross, Shixiang Shane Gu, Yufei Guo, Chris Hallacy, Jesse Han, Jeff\nHarris, Yuchen He, Mike Heaton, Johannes Heidecke, Chris Hesse, Alan Hickey, Wade Hickey,\nPeter Hoeschele, Brandon Houghton, Kenny Hsu, Shengli Hu, Xin Hu, Joost Huizinga, Shantanu\nJain, Shawn Jain, Joanne Jang, Angela Jiang, Roger Jiang, Haozhun Jin, Denny Jin, Shino Jo-\nmoto, Billie Jonn, Heewoo Jun, Tomer Kaftan, Łukasz Kaiser, Ali Kamali, Ingmar Kanitscheider,\nNitish Shirish Keskar, Tabarak Khan, Logan Kilpatrick, Jong Wook Kim, Christina Kim, Yongjik\nKim, Jan Hendrik Kirchner, Jamie Kiros, Matt Knight, Daniel Kokotajlo, Łukasz Kondraciuk, An-\ndrew Kondrich, Aris Konstantinidis, Kyle Kosic, Gretchen Krueger, Vishal Kuo, Michael Lampe,\nIkai Lan, Teddy Lee, Jan Leike, Jade Leung, Daniel Levy, Chak Ming Li, Rachel Lim, Molly Lin,\nStephanie Lin, Mateusz Litwin, Theresa Lopez, Ryan Lowe, Patricia Lue, Anna Makanju, Kim\nMalfacini, Sam Manning, Todor Markov, Yaniv Markovski, Bianca Martin, Katie Mayer, Andrew\nMayne, Bob McGrew, Scott Mayer McKinney, Christine McLeavey, Paul McMillan, Jake McNeil,\nDavid Medina, Aalok Mehta, Jacob Menick, Luke Metz, Andrey Mishchenko, Pamela Mishkin,\nVinnie Monaco, Evan Morikawa, Daniel Mossing, Tong Mu, Mira Murati, Oleg Murk, David\nMély, Ashvin Nair, Reiichiro Nakano, Rajeev Nayak, Arvind Neelakantan, Richard Ngo, Hyeon-\nwoo Noh, Long Ouyang, Cullen O’Keefe, Jakub Pachocki, Alex Paino, Joe Palermo, Ashley\nPantuliano, Giambattista Parascandolo, Joel Parish, Emy Parparita, Alex Passos, Mikhail Pavlov,\nAndrew Peng, Adam Perelman, Filipe de Avila Belbute Peres, Michael Petrov, Henrique Ponde\nde Oliveira Pinto, Michael, Pokorny, Michelle Pokrass, Vitchyr H. Pong, Tolly Powell, Alethea\nPower, Boris Power, Elizabeth Proehl, Raul Puri, Alec Radford, Jack Rae, Aditya Ramesh,\nCameron Raymond, Francis Real, Kendra Rimbach, Carl Ross, Bob Rotsted, Henri Roussez, Nick\nRyder, Mario Saltarelli, Ted Sanders, Shibani Santurkar, Girish Sastry, Heather Schmidt, David\nSchnurr, John Schulman, Daniel Selsam, Kyla Sheppard, Toki Sherbakov, Jessica Shieh, Sarah\nShoker, Pranav Shyam, Szymon Sidor, Eric Sigler, Maddie Simens, Jordan Sitkin, Katarina Slama,\nIan Sohl, Benjamin Sokolowsky, Yang Song, Natalie Staudacher, Felipe Petroski Such, Natalie\nSummers, Ilya Sutskever, Jie Tang, Nikolas Tezak, Madeleine B. Thompson, Phil Tillet, Amin\nTootoonchian, Elizabeth Tseng, Preston Tuggle, Nick Turley, Jerry Tworek, Juan Felipe Cerón\nUribe, Andrea Vallone, Arun Vijayvergiya, Chelsea Voss, Carroll Wainwright, Justin Jay Wang,\nAlvin Wang, Ben Wang, Jonathan Ward, Jason Wei, CJ Weinmann, Akila Welihinda, Peter Welin-\nder, Jiayi Weng, Lilian Weng, Matt Wiethoff, Dave Willner, Clemens Winter, Samuel Wolrich,\nHannah Wong, Lauren Workman, Sherwin Wu, Jeff Wu, Michael Wu, Kai Xiao, Tao Xu, Sarah\nYoo, Kevin Yu, Qiming Yuan, Wojciech Zaremba, Rowan Zellers, Chong Zhang, Marvin Zhang,\nShengjia Zhao, Tianhao Zheng, Juntang Zhuang, William Zhuk, and Barret Zoph.",
      "layout_matches": [
        {
          "text": "OpenAI, Josh Achiam, Steven Adler, Sandhini Agarwal, Lama Ahmad, Ilge Akkaya, Floren-\ncia Leoni Aleman, Diogo Almeida, Janko Altenschmidt, Sam Altman, Shyamal Anadkat, Red\nAvila, Igor Babuschkin, Suchir Balaji, Valerie Balcom, Paul Baltescu, Haiming Bao, Moham-\nmad Bavarian, Jeff Belgum, Irwan Bello, Jake Berdine, Gabriel Bernadett-Shapiro, Christopher\nBerner, Lenny Bogdonoff, Oleg Boiko, Madelaine Boyd, Anna-Luisa Brakman, Greg Brockman,\nTim Brooks, Miles Brundage, Kevin Button, Trevor Cai, Rosie Campbell, Andrew Cann, Brit-\ntany Carey, Chelsea Carlson, Rory Carmichael, Brooke Chan, Che Chang, Fotis Chantzis, Derek\nChen, Sully Chen, Ruby Chen, Jason Chen, Mark Chen, Ben Chess, Chester Cho, Casey Chu,\nHyung Won Chung, Dave Cummings, Jeremiah Currier, Yunxing Dai, Cory Decareaux, Thomas\nDegry, Noah Deutsch, Damien Deville, Arka Dhar, David Dohan, Steve Dowling, Sheila Dunning,\nAdrien Ecoffet, Atty Eleti, Tyna Eloundou, David Farhi, Liam Fedus, Niko Felix, Simón Posada\nFishman, Juston Forte, Isabella Fulford, Leo Gao, Elie Georges, Christian Gibson, Vik Goel,\nTarun Gogineni, Gabriel Goh, Rapha Gontijo-Lopes, Jonathan Gordon, Morgan Grafstein, Scott\nGray, Ryan Greene, Joshua Gross, Shixiang Shane Gu, Yufei Guo, Chris Hallacy, Jesse Han, Jeff\nHarris, Yuchen He, Mike Heaton, Johannes Heidecke, Chris Hesse, Alan Hickey, Wade Hickey,\nPeter Hoeschele, Brandon Houghton, Kenny Hsu, Shengli Hu, Xin Hu, Joost Huizinga, Shantanu\nJain, Shawn Jain, Joanne Jang, Angela Jiang, Roger Jiang, Haozhun Jin, Denny Jin, Shino Jo-\nmoto, Billie Jonn, Heewoo Jun, Tomer Kaftan, Łukasz Kaiser, Ali Kamali, Ingmar Kanitscheider,\nNitish Shirish Keskar, Tabarak Khan, Logan Kilpatrick, Jong Wook Kim, Christina Kim, Yongjik\nKim, Jan Hendrik Kirchner, Jamie Kiros, Matt Knight, Daniel Kokotajlo, Łukasz Kondraciuk, An-\ndrew Kondrich, Aris Konstantinidis, Kyle Kosic, Gretchen Krueger, Vishal Kuo, Michael Lampe,\nIkai Lan, Teddy Lee, Jan Leike, Jade Leung, Daniel Levy, Chak Ming Li, Rachel Lim, Molly Lin,\nStephanie Lin, Mateusz Litwin, Theresa Lopez, Ryan Lowe, Patricia Lue, Anna Makanju, Kim\nMalfacini, Sam Manning, Todor Markov, Yaniv Markovski, Bianca Martin, Katie Mayer, Andrew\nMayne, Bob McGrew, Scott Mayer McKinney, Christine McLeavey, Paul McMillan, Jake McNeil,\nDavid Medina, Aalok Mehta, Jacob Menick, Luke Metz, Andrey Mishchenko, Pamela Mishkin,\nVinnie Monaco, Evan Morikawa, Daniel Mossing, Tong Mu, Mira Murati, Oleg Murk, David\nMély, Ashvin Nair, Reiichiro Nakano, Rajeev Nayak, Arvind Neelakantan, Richard Ngo, Hyeon-\nwoo Noh, Long Ouyang, Cullen O’Keefe, Jakub Pachocki, Alex Paino, Joe Palermo, Ashley\nPantuliano, Giambattista Parascandolo, Joel Parish, Emy Parparita, Alex Passos, Mikhail Pavlov,\nAndrew Peng, Adam Perelman, Filipe de Avila Belbute Peres, Michael Petrov, Henrique Ponde\nde Oliveira Pinto, Michael, Pokorny, Michelle Pokrass, Vitchyr H. Pong, Tolly Powell, Alethea\nPower, Boris Power, Elizabeth Proehl, Raul Puri, Alec Radford, Jack Rae, Aditya Ramesh,\nCameron Raymond, Francis Real, Kendra Rimbach, Carl Ross, Bob Rotsted, Henri Roussez, Nick\nRyder, Mario Saltarelli, Ted Sanders, Shibani Santurkar, Girish Sastry, Heather Schmidt, David\nSchnurr, John Schulman, Daniel Selsam, Kyla Sheppard, Toki Sherbakov, Jessica Shieh, Sarah\nShoker, Pranav Shyam, Szymon Sidor, Eric Sigler, Maddie Simens, Jordan Sitkin, Katarina Slama,\nIan Sohl, Benjamin Sokolowsky, Yang Song, Natalie Staudacher, Felipe Petroski Such, Natalie\nSummers, Ilya Sutskever, Jie Tang, Nikolas Tezak, Madeleine B. Thompson, Phil Tillet, Amin\nTootoonchian, Elizabeth Tseng, Preston Tuggle, Nick Turley, Jerry Tworek, Juan Felipe Cerón\nUribe, Andrea Vallone, Arun Vijayvergiya, Chelsea Voss, Carroll Wainwright, Justin Jay Wang,\nAlvin Wang, Ben Wang, Jonathan Ward, Jason Wei, CJ Weinmann, Akila Welihinda, Peter Welin-\nder, Jiayi Weng, Lilian Weng, Matt Wiethoff, Dave Willner, Clemens Winter, Samuel Wolrich,\nHannah Wong, Lauren Workman, Sherwin Wu, Jeff Wu, Michael Wu, Kai Xiao, Tao Xu, Sarah\nYoo, Kevin Yu, Qiming Yuan, Wojciech Zaremba, Rowan Zellers, Chong Zhang, Marvin Zhang,\nShengjia Zhao, Tianhao Zheng, Juntang Zhuang, William Zhuk, and Barret Zoph. Gpt-4 technical\nreport, 2024. URL https://arxiv.org/abs/2303.08774.",
          "page": 13,
          "x0": 107.99899999999991,
          "y0": 89.9896444800001,
          "x1": 505.8780204670388,
          "y1": 604.07098448,
          "width": 397.8790204670389,
          "height": 514.08134,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.8858303707465719,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        13
      ],
      "primary_page": 13,
      "bounding_boxes": [
        {
          "page": 13,
          "x0": 107.99899999999991,
          "y0": 89.9896444800001,
          "x1": 505.8780204670388,
          "y1": 604.07098448,
          "confidence": 0.8858303707465719,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 293,
      "text": "Gpt-4 technical\nreport, 2024. URL https://arxiv.org/abs/2303.08774.",
      "layout_matches": [
        {
          "text": "report, 2024. URL https://arxiv.org/abs/2303.08774.",
          "page": 13,
          "x0": 117.95899999999983,
          "y0": 89.9896444800001,
          "x1": 388.8894599999998,
          "y1": 100.27108896000009,
          "width": 270.93046,
          "height": 10.28144447999999,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.6639344262295083,
          "match_type": "substring_match"
        },
        {
          "text": "to self-debug, 2023. URL https://arxiv.org/abs/2304.05128.",
          "page": 12,
          "x0": 117.96054000000004,
          "y0": 515.3885444800001,
          "x1": 417.2112,
          "y1": 525.6699889600001,
          "width": 299.25066,
          "height": 10.281444480000005,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.3716814159292035,
          "match_type": "sequence_match",
          "similarity_ratio": 0.6194690265486725
        }
      ],
      "page_spans": [
        12,
        13
      ],
      "primary_page": 13,
      "bounding_boxes": [
        {
          "page": 13,
          "x0": 117.95899999999983,
          "y0": 89.9896444800001,
          "x1": 388.8894599999998,
          "y1": 100.27108896000009,
          "confidence": 0.6639344262295083,
          "match_type": "substring_match"
        },
        {
          "page": 12,
          "x0": 117.96054000000004,
          "y0": 515.3885444800001,
          "x1": 417.2112,
          "y1": 525.6699889600001,
          "confidence": 0.3716814159292035,
          "match_type": "sequence_match"
        }
      ]
    },
    {
      "sentence_id": 294,
      "text": "Stanislas Polu and Ilya Sutskever.",
      "layout_matches": [
        {
          "text": "Stanislas Polu, Jesse Michael Han, Kunhao Zheng, Mantas Baksys, Igor Babuschkin, and Ilya",
          "page": 14,
          "x0": 108.0,
          "y0": 698.02814448,
          "x1": 504.10358285444113,
          "y1": 707.99078448,
          "width": 396.10358285444113,
          "height": 9.962639999999965,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6400000000000001,
          "match_type": "word_overlap",
          "common_words_count": 4
        }
      ],
      "page_spans": [
        14
      ],
      "primary_page": 14,
      "bounding_boxes": [
        {
          "page": 14,
          "x0": 108.0,
          "y0": 698.02814448,
          "x1": 504.10358285444113,
          "y1": 707.99078448,
          "confidence": 0.6400000000000001,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 295,
      "text": "Generative language modeling for automated theorem proving,\n\n2020.",
      "layout_matches": [
        {
          "text": "Stanislas Polu and Ilya Sutskever. Generative language modeling for automated theorem proving,",
          "page": 13,
          "x0": 107.99879999999985,
          "y0": 70.9095444800001,
          "x1": 505.6494621236382,
          "y1": 80.87218448000009,
          "width": 397.65066212363837,
          "height": 9.962639999999993,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.7000000000000001,
          "match_type": "word_overlap",
          "common_words_count": 7
        }
      ],
      "page_spans": [
        13
      ],
      "primary_page": 13,
      "bounding_boxes": [
        {
          "page": 13,
          "x0": 107.99879999999985,
          "y0": 70.9095444800001,
          "x1": 505.6494621236382,
          "y1": 80.87218448000009,
          "confidence": 0.7000000000000001,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 296,
      "text": "13\n\n\fStanislas Polu, Jesse Michael Han, Kunhao Zheng, Mantas Baksys, Igor Babuschkin, and Ilya\n\nSutskever.",
      "layout_matches": [
        {
          "text": "Stanislas Polu, Jesse Michael Han, Kunhao Zheng, Mantas Baksys, Igor Babuschkin, and Ilya",
          "page": 14,
          "x0": 108.0,
          "y0": 698.02814448,
          "x1": 504.10358285444113,
          "y1": 707.99078448,
          "width": 396.10358285444113,
          "height": 9.962639999999965,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.7714285714285714,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        14
      ],
      "primary_page": 14,
      "bounding_boxes": [
        {
          "page": 14,
          "x0": 108.0,
          "y0": 698.02814448,
          "x1": 504.10358285444113,
          "y1": 707.99078448,
          "confidence": 0.7714285714285714,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 297,
      "text": "Formal mathematics statement curriculum learning, 2022.",
      "layout_matches": [
        {
          "text": "Sutskever. Formal mathematics statement curriculum learning, 2022.",
          "page": 14,
          "x0": 117.96100000000001,
          "y0": 686.98834448,
          "x1": 393.45175405786455,
          "y1": 696.95098448,
          "width": 275.49075405786454,
          "height": 9.962639999999965,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.7476923076923078,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        14
      ],
      "primary_page": 14,
      "bounding_boxes": [
        {
          "page": 14,
          "x0": 117.96100000000001,
          "y0": 686.98834448,
          "x1": 393.45175405786455,
          "y1": 696.95098448,
          "confidence": 0.7476923076923078,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 298,
      "text": "Amitayush Thakur, George Tsoukalas, Yeming Wen, Jimmy Xin, and Swarat Chaudhuri.",
      "layout_matches": [
        {
          "text": "Amitayush Thakur, George Tsoukalas, Yeming Wen, Jimmy Xin, and Swarat Chaudhuri. An in-",
          "page": 14,
          "x0": 108.001,
          "y0": 668.14814448,
          "x1": 505.75885296983415,
          "y1": 678.11078448,
          "width": 397.7578529698342,
          "height": 9.962639999999965,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.8240963855421687,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        14
      ],
      "primary_page": 14,
      "bounding_boxes": [
        {
          "page": 14,
          "x0": 108.001,
          "y0": 668.14814448,
          "x1": 505.75885296983415,
          "y1": 678.11078448,
          "confidence": 0.8240963855421687,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 299,
      "text": "An in-\n\ncontext learning agent for formal theorem-proving, 2024.",
      "layout_matches": [
        {
          "text": "context learning agent for formal theorem-proving, 2024.",
          "page": 14,
          "x0": 117.96100000000001,
          "y0": 657.10834448,
          "x1": 346.41205988236374,
          "y1": 667.07098448,
          "width": 228.45105988236372,
          "height": 9.962639999999965,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.7983870967741935,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        14
      ],
      "primary_page": 14,
      "bounding_boxes": [
        {
          "page": 14,
          "x0": 117.96100000000001,
          "y0": 657.10834448,
          "x1": 346.41205988236374,
          "y1": 667.07098448,
          "confidence": 0.7983870967741935,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 300,
      "text": "Jason Wei, Xuezhi Wang, Dale Schuurmans, Maarten Bosma, brian ichter, Fei Xia, Ed H.\nthought prompting elicits reasoning\nChi, Quoc V Le, and Denny Zhou.",
      "layout_matches": [
        {
          "text": "Jason Wei, Xuezhi Wang, Dale Schuurmans, Maarten Bosma, brian ichter, Fei Xia, Ed H.",
          "page": 14,
          "x0": 108.00084000000001,
          "y0": 638.26814448,
          "x1": 505.7702844936245,
          "y1": 648.23078448,
          "width": 397.7694444936245,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.4875,
          "match_type": "substring_match"
        },
        {
          "text": "Jason Wei, Xuezhi Wang, Dale Schuurmans, Maarten Bosma, brian ichter, Fei Xia, Ed H.\nthought prompting elicits reasoning\nChi, Quoc V Le, and Denny Zhou.\nin large language models.\nIn Alice H. Oh, Alekh Agarwal, Danielle Belgrave, and\nKyunghyun Cho (eds.), Advances in Neural Information Processing Systems, 2022. URL\nhttps://openreview.net/forum?id=_VjQlMeSB_J.",
          "page": 14,
          "x0": 108.00084000000001,
          "y0": 594.34834448,
          "x1": 505.7702844936245,
          "y1": 648.23078448,
          "width": 397.7694444936245,
          "height": 53.882439999999974,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.3823008849557522,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        14
      ],
      "primary_page": 14,
      "bounding_boxes": [
        {
          "page": 14,
          "x0": 108.00084000000001,
          "y0": 638.26814448,
          "x1": 505.7702844936245,
          "y1": 648.23078448,
          "confidence": 0.4875,
          "match_type": "substring_match"
        },
        {
          "page": 14,
          "x0": 108.00084000000001,
          "y0": 594.34834448,
          "x1": 505.7702844936245,
          "y1": 648.23078448,
          "confidence": 0.3823008849557522,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 301,
      "text": "in large language models. In Alice H. Oh, Alekh Agarwal, Danielle Belgrave, and\nKyunghyun Cho (eds.",
      "layout_matches": [
        {
          "text": "Guillaume Lample, Timothee Lacroix, Marie anne Lachaux, Aurelien Rodriguez, Amaury\nHypertree proof search\nHayat, Thibaut Lavril, Gabriel Ebner, and Xavier Martinet.\nfor neural\nIn Alice H. Oh, Alekh Agarwal, Danielle Belgrave, and\nKyunghyun Cho (eds.), Advances in Neural Information Processing Systems, 2022. URL\nhttps://openreview.net/forum?id=J4pX8Q8cxHH.",
          "page": 12,
          "x0": 108.0007199999998,
          "y0": 254.50864448000016,
          "x1": 504.54313285016974,
          "y1": 308.27118448000016,
          "width": 396.54241285016997,
          "height": 53.76254,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6000000000000001,
          "match_type": "word_overlap",
          "common_words_count": 12
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 108.0007199999998,
          "y0": 254.50864448000016,
          "x1": 504.54313285016974,
          "y1": 308.27118448000016,
          "confidence": 0.6000000000000001,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 302,
      "text": "), Advances in Neural Information Processing Systems, 2022.",
      "layout_matches": [
        {
          "text": "Kyunghyun Cho (eds.), Advances in Neural Information Processing Systems, 2022. URL",
          "page": 12,
          "x0": 117.96171999999984,
          "y0": 265.42854448000014,
          "x1": 504.44863964135925,
          "y1": 275.50077352000017,
          "width": 386.4869196413594,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.6346153846153847,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 117.96171999999984,
          "y0": 265.42854448000014,
          "x1": 504.44863964135925,
          "y1": 275.50077352000017,
          "confidence": 0.6346153846153847,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 303,
      "text": "URL\nhttps://openreview.net/forum?id=_VjQlMeSB_J.",
      "layout_matches": [
        {
          "text": "https://openreview.net/forum?id=_VjQlMeSB_J.",
          "page": 14,
          "x0": 117.95983999999999,
          "y0": 594.34834448,
          "x1": 377.4905,
          "y1": 604.62978896,
          "width": 259.53066,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.8142857142857143,
          "match_type": "substring_match"
        },
        {
          "text": "https://openreview.net/forum?id=J4pX8Q8cxHH.",
          "page": 12,
          "x0": 117.96071999999981,
          "y0": 254.50864448000016,
          "x1": 377.4913799999998,
          "y1": 264.79008896000016,
          "width": 259.53066,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.435,
          "match_type": "sequence_match",
          "similarity_ratio": 0.725
        }
      ],
      "page_spans": [
        12,
        14
      ],
      "primary_page": 14,
      "bounding_boxes": [
        {
          "page": 14,
          "x0": 117.95983999999999,
          "y0": 594.34834448,
          "x1": 377.4905,
          "y1": 604.62978896,
          "confidence": 0.8142857142857143,
          "match_type": "substring_match"
        },
        {
          "page": 12,
          "x0": 117.96071999999981,
          "y0": 254.50864448000016,
          "x1": 377.4913799999998,
          "y1": 264.79008896000016,
          "confidence": 0.435,
          "match_type": "sequence_match"
        }
      ]
    },
    {
      "sentence_id": 304,
      "text": "Chain of\n\nFreek Wiedijk. Formal proof sketches.",
      "layout_matches": [
        {
          "text": "Freek Wiedijk. Formal proof sketches. In Stefano Berardi, Mario Coppo, and Ferruccio Damiani\n(eds.), Types for Proofs and Programs, pp. 378–393, Berlin, Heidelberg, 2004. Springer Berlin\nHeidelberg. ISBN 978-3-540-24849-1.",
          "page": 14,
          "x0": 107.99984,
          "y0": 553.5484444800001,
          "x1": 504.13097243905634,
          "y1": 585.47118448,
          "width": 396.13113243905633,
          "height": 31.922739999999976,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.5714285714285715,
          "match_type": "word_overlap",
          "common_words_count": 5
        }
      ],
      "page_spans": [
        14
      ],
      "primary_page": 14,
      "bounding_boxes": [
        {
          "page": 14,
          "x0": 107.99984,
          "y0": 553.5484444800001,
          "x1": 504.13097243905634,
          "y1": 585.47118448,
          "confidence": 0.5714285714285715,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 305,
      "text": "In Stefano Berardi, Mario Coppo, and Ferruccio Damiani\n(eds.",
      "layout_matches": [
        {
          "text": "Freek Wiedijk. Formal proof sketches. In Stefano Berardi, Mario Coppo, and Ferruccio Damiani",
          "page": 14,
          "x0": 107.99984,
          "y0": 575.5085444800001,
          "x1": 504.13097243905634,
          "y1": 585.47118448,
          "width": 396.13113243905633,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.7111111111111111,
          "match_type": "word_overlap",
          "common_words_count": 8
        }
      ],
      "page_spans": [
        14
      ],
      "primary_page": 14,
      "bounding_boxes": [
        {
          "page": 14,
          "x0": 107.99984,
          "y0": 575.5085444800001,
          "x1": 504.13097243905634,
          "y1": 585.47118448,
          "confidence": 0.7111111111111111,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 306,
      "text": "), Types for Proofs and Programs, pp.",
      "layout_matches": [
        {
          "text": "Large language models (LLMs) have been used to generate formal proofs of math-\nematical theorems in proofs assistants such as Lean. However, we often want to\noptimize a formal proof with respect to various criteria, depending on its down-\nstream use. For example, we may want a proof to adhere to a certain style, or to be\nreadable, concise, or modularly structured. Having suitably optimized proofs is\nalso important for learning tasks, especially since human-written proofs may not\noptimal for that purpose. To this end, we study a new problem of automated proof\noptimization: rewriting a proof so that it is correct and optimizes for an arbitrary\ncriterion, such as length or readability. As a ﬁrst method for automated proof opti-\nmization, we present ImProver, a large-language-model agent that rewrites proofs\nto optimize arbitrary user-deﬁned metrics in Lean. We ﬁnd that naively applying\nLLMs to proof optimization falls short, and we incorporate various improvements\ninto ImProver, such as the use of symbolic Lean context in a novel Chain-of-\nStates technique, as well as error-correction and retrieval. We test ImProver on\nrewriting real-world undergraduate, competition, and research-level mathematics\ntheorems, ﬁnding that ImProver is capable of rewriting proofs so that they are\nsubstantially shorter, more modular, and more readable.",
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "width": 326.1175505972419,
          "height": 185.2821399999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.4,
          "match_type": "word_overlap",
          "common_words_count": 3
        }
      ],
      "page_spans": [
        1
      ],
      "primary_page": 1,
      "bounding_boxes": [
        {
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "confidence": 0.4,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 307,
      "text": "378–393, Berlin, Heidelberg, 2004.",
      "layout_matches": [
        {
          "text": "Serge Autexier and Dominik Dietrich. A tactic language for declarative proofs. In Matt Kaufmann\nand Lawrence C. Paulson (eds.), Interactive Theorem Proving, pp. 99–114, Berlin, Heidelberg,\n2010. Springer Berlin Heidelberg.",
          "page": 12,
          "x0": 107.99999999999997,
          "y0": 607.18844448,
          "x1": 505.5311548808105,
          "y1": 639.11078448,
          "width": 397.5311548808105,
          "height": 31.922339999999963,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.4,
          "match_type": "word_overlap",
          "common_words_count": 2
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 107.99999999999997,
          "y0": 607.18844448,
          "x1": 505.5311548808105,
          "y1": 639.11078448,
          "confidence": 0.4,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 308,
      "text": "Springer Berlin\nHeidelberg. ISBN 978-3-540-24849-1.",
      "layout_matches": [
        {
          "text": "Heidelberg. ISBN 978-3-540-24849-1.",
          "page": 14,
          "x0": 117.95974000000004,
          "y0": 553.5484444800001,
          "x1": 274.53043679543873,
          "y1": 563.51108448,
          "width": 156.5706967954387,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.6176470588235294,
          "match_type": "substring_match"
        },
        {
          "text": "Serge Autexier and Dominik Dietrich. A tactic language for declarative proofs. In Matt Kaufmann\nand Lawrence C. Paulson (eds.), Interactive Theorem Proving, pp. 99–114, Berlin, Heidelberg,\n2010. Springer Berlin Heidelberg.",
          "page": 12,
          "x0": 107.99999999999997,
          "y0": 607.18844448,
          "x1": 505.5311548808105,
          "y1": 639.11078448,
          "width": 397.5311548808105,
          "height": 31.922339999999963,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.48,
          "match_type": "word_overlap",
          "common_words_count": 3
        }
      ],
      "page_spans": [
        12,
        14
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 14,
          "x0": 117.95974000000004,
          "y0": 553.5484444800001,
          "x1": 274.53043679543873,
          "y1": 563.51108448,
          "confidence": 0.6176470588235294,
          "match_type": "substring_match"
        },
        {
          "page": 12,
          "x0": 107.99999999999997,
          "y0": 607.18844448,
          "x1": 505.5311548808105,
          "y1": 639.11078448,
          "confidence": 0.48,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 309,
      "text": "Kaiyu Yang, Aidan Swope, Alex Gu, Rahul Chalamala, Peiyang Song, Shixing Yu, Saad Godil,\nRyan Prenger, and Anima Anandkumar.",
      "layout_matches": [
        {
          "text": "Kaiyu Yang, Aidan Swope, Alex Gu, Rahul Chalamala, Peiyang Song, Shixing Yu, Saad Godil,",
          "page": 14,
          "x0": 107.99958000000004,
          "y0": 534.5886444800001,
          "x1": 505.41036540126646,
          "y1": 544.55128448,
          "width": 397.4107854012664,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.628448275862069,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        14
      ],
      "primary_page": 14,
      "bounding_boxes": [
        {
          "page": 14,
          "x0": 107.99958000000004,
          "y0": 534.5886444800001,
          "x1": 505.41036540126646,
          "y1": 544.55128448,
          "confidence": 0.628448275862069,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 310,
      "text": "LeanDojo: Theorem proving with retrieval-augmented\nlanguage models.",
      "layout_matches": [
        {
          "text": "training for theorem proving with language models.\nRepresentations, 2022. URL https://openreview.net/forum?id=rpxJc9j04U.",
          "page": 12,
          "x0": 117.60037999999992,
          "y0": 427.0686444800001,
          "x1": 488.4909399999999,
          "y1": 448.07108448000014,
          "width": 370.89056,
          "height": 21.002440000000036,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.5714285714285715,
          "match_type": "word_overlap",
          "common_words_count": 5
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 117.60037999999992,
          "y0": 427.0686444800001,
          "x1": 488.4909399999999,
          "y1": 448.07108448000014,
          "confidence": 0.5714285714285715,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 311,
      "text": "In Neural Information Processing Systems (NeurIPS), 2023.",
      "layout_matches": [
        {
          "text": "language models. In Neural Information Processing Systems (NeurIPS), 2023.",
          "page": 14,
          "x0": 117.95958000000002,
          "y0": 512.7484444800001,
          "x1": 431.13024435812,
          "y1": 522.8206735200001,
          "width": 313.17066435812,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.6845070422535211,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        14
      ],
      "primary_page": 14,
      "bounding_boxes": [
        {
          "page": 14,
          "x0": 117.95958000000002,
          "y0": 512.7484444800001,
          "x1": 431.13024435812,
          "y1": 522.8206735200001,
          "confidence": 0.6845070422535211,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 312,
      "text": "Shuyan Zhou, Uri Alon, Frank F. Xu, Zhengbao Jiang, and Graham Neubig.",
      "layout_matches": [
        {
          "text": "Shuyan Zhou, Uri Alon, Frank F. Xu, Zhengbao Jiang, and Graham Neubig. Docprompting: Gener-",
          "page": 14,
          "x0": 107.99948,
          "y0": 493.78864448000013,
          "x1": 505.75744763744694,
          "y1": 503.75128448000015,
          "width": 397.75796763744694,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.6906976744186047,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        14
      ],
      "primary_page": 14,
      "bounding_boxes": [
        {
          "page": 14,
          "x0": 107.99948,
          "y0": 493.78864448000013,
          "x1": 505.75744763744694,
          "y1": 503.75128448000015,
          "confidence": 0.6906976744186047,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 313,
      "text": "Docprompting: Gener-\nating code by retrieving the docs.",
      "layout_matches": [
        {
          "text": "ating code by retrieving the docs. In The Eleventh International Conference on Learning Repre-",
          "page": 14,
          "x0": 117.96047999999999,
          "y0": 482.86874448000015,
          "x1": 505.758487613348,
          "y1": 492.94097352000017,
          "width": 387.798007613348,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.6000000000000001,
          "match_type": "word_overlap",
          "common_words_count": 6
        }
      ],
      "page_spans": [
        14
      ],
      "primary_page": 14,
      "bounding_boxes": [
        {
          "page": 14,
          "x0": 117.96047999999999,
          "y0": 482.86874448000015,
          "x1": 505.758487613348,
          "y1": 492.94097352000017,
          "confidence": 0.6000000000000001,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 314,
      "text": "In The Eleventh International Conference on Learning Repre-\nsentations, 2023.",
      "layout_matches": [
        {
          "text": "Albert Qiaochu Jiang, Sean Welleck, Jin Peng Zhou, Timothee Lacroix, Jiacheng Liu, Wenda Li,\nMateja Jamnik, Guillaume Lample, and Yuhuai Wu. Draft, sketch, and prove: Guiding formal\ntheorem provers with informal proofs. In The Eleventh International Conference on Learning\nRepresentations, 2023. URL https://openreview.net/forum?id=SMa9EAovKMC.",
          "page": 12,
          "x0": 107.99997999999991,
          "y0": 346.30854448000014,
          "x1": 505.2920000384032,
          "y1": 389.15118448000015,
          "width": 397.2920200384033,
          "height": 42.84264000000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6400000000000001,
          "match_type": "word_overlap",
          "common_words_count": 8
        }
      ],
      "page_spans": [
        12
      ],
      "primary_page": 12,
      "bounding_boxes": [
        {
          "page": 12,
          "x0": 107.99997999999991,
          "y0": 346.30854448000014,
          "x1": 505.2920000384032,
          "y1": 389.15118448000015,
          "confidence": 0.6400000000000001,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 315,
      "text": "URL https://openreview.net/forum?id=ZTCxT2t2Ru.",
      "layout_matches": [
        {
          "text": "sentations, 2023. URL https://openreview.net/forum?id=ZTCxT2t2Ru.",
          "page": 14,
          "x0": 117.96047999999996,
          "y0": 471.8285444800001,
          "x1": 465.33104,
          "y1": 482.1099889600001,
          "width": 347.37056,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.6362068965517241,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        14
      ],
      "primary_page": 14,
      "bounding_boxes": [
        {
          "page": 14,
          "x0": 117.96047999999996,
          "y0": 471.8285444800001,
          "x1": 465.33104,
          "y1": 482.1099889600001,
          "confidence": 0.6362068965517241,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 316,
      "text": "14\n\n\fA PROMPTS\n\nA.1 TEMPLATE\n\nIn this appendix, we note the prompts used by ImProver both for general LLM prompting, as well\nas the metric-speciﬁc prompts.",
      "layout_matches": [
        {
          "text": "In this appendix, we note the prompts used by ImProver both for general LLM prompting, as well\nas the metric-speciﬁc prompts.",
          "page": 15,
          "x0": 108.00000000000006,
          "y0": 663.58834448,
          "x1": 504.00949530511855,
          "y1": 684.47088448,
          "width": 396.0094953051185,
          "height": 20.88253999999995,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.7429530201342283,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        15
      ],
      "primary_page": 15,
      "bounding_boxes": [
        {
          "page": 15,
          "x0": 108.00000000000006,
          "y0": 663.58834448,
          "x1": 504.00949530511855,
          "y1": 684.47088448,
          "confidence": 0.7429530201342283,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 317,
      "text": "For the main prompt sent to the LLM on each sample, we build a prompt string using a chat prompt\ntemplate that is then invoked at runtime to ﬁll in the variables.",
      "layout_matches": [
        {
          "text": "For the main prompt sent to the LLM on each sample, we build a prompt string using a chat prompt\ntemplate that is then invoked at runtime to ﬁll in the variables.",
          "page": 15,
          "x0": 108.00004400000006,
          "y0": 607.18844448,
          "x1": 504.2502053915233,
          "y1": 628.19088448,
          "width": 396.25016139152325,
          "height": 21.00243999999998,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.9,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        15
      ],
      "primary_page": 15,
      "bounding_boxes": [
        {
          "page": 15,
          "x0": 108.00004400000006,
          "y0": 607.18844448,
          "x1": 504.2502053915233,
          "y1": 628.19088448,
          "confidence": 0.9,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 318,
      "text": "Namely, these variables include the set of metric prompts, previous results, input theorem, context,\na syntax documents, Mathlib documents, and examples.",
      "layout_matches": [
        {
          "text": "Namely, these variables include the set of metric prompts, previous results, input theorem, context,\na syntax documents, Mathlib documents, and examples.",
          "page": 15,
          "x0": 108.00004400000006,
          "y0": 579.3482444800001,
          "x1": 505.41068106304937,
          "y1": 600.23078448,
          "width": 397.4106370630493,
          "height": 20.88253999999995,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.9,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        15
      ],
      "primary_page": 15,
      "bounding_boxes": [
        {
          "page": 15,
          "x0": 108.00004400000006,
          "y0": 579.3482444800001,
          "x1": 505.41068106304937,
          "y1": 600.23078448,
          "confidence": 0.9,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 319,
      "text": "The prompt template is a conversation of the format:\n\nPlaceholder: All metric prompts with a ‘System’ role\nSystem: You will be given the proof context (i.e.",
      "layout_matches": [
        {
          "text": "Placeholder: All metric prompts with a ‘System’ role\nSystem: You will be given the proof context (i.e. the lean ﬁle contents/imports leading up\nto the theorem declaration) wrapped by <CONTEXT>...</CONTEXT>.\nYou will be given the previous num_prev input/output pairs as well as their metric (met-\nric.name) score and correctness score, as well as any error messages, for your reference to\nimprove upon. Each of these previous results will be wrapped with <PREV I=0></PREV\nI=0>,...,<PREV I=num_prev-1></PREV I=num_prev-1>, with I=num_prev-1 being the\nmost recent result.\nRemember to use lean 4 syntax, which has signiﬁcant changes from the lean 3 syntax. To\nassist with the syntax relating to the current theorem and current error messages, you will\nbe given num_syntax_docs documents to refer to for ﬁxing these syntax issues. Each of\nthese documents will be wrapped with <SYNTAX_DOC>...</SYNTAX_DOC>.\nYou will also receive num_mathlib_docs documents relevant to the current theorem to\nhelp with formulating your modiﬁed proof. Each of these will be wrapped with <CON-\nTENT_DOC>...</CONTENT_DOC>\nYou will also receive num_examples examples of input-output pairs of proofs that\nwere optimized for the metric metric. Each of these will be wrapped with <EXAM-\nPLE>...</EXAMPLE>\nYou will be given the tactic states as comments for reference. The current theorem will be\nwrapped in <CURRENT>...</CURRENT>\nSystem: Output format instructions\nPlaceholder: All retrieved syntax documentation\nPlaceholder: All retrieved mathlib documentation\nPlaceholder: All retrieved examples\nUser: <CONTEXT> context </CONTEXT>\nPlaceholder: Previous results and inputs/outputs\nPlaceholder: All metric prompts with a ‘User’ role\nUser: <CURRENT> theorem </CURRENT>",
          "page": 15,
          "x0": 143.280188,
          "y0": 202.18864447999994,
          "x1": 505.75950652008515,
          "y1": 551.8707361600001,
          "width": 362.47931852008514,
          "height": 349.68209168000016,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.5538461538461539,
          "match_type": "word_overlap",
          "common_words_count": 18
        }
      ],
      "page_spans": [
        15
      ],
      "primary_page": 15,
      "bounding_boxes": [
        {
          "page": 15,
          "x0": 143.280188,
          "y0": 202.18864447999994,
          "x1": 505.75950652008515,
          "y1": 551.8707361600001,
          "confidence": 0.5538461538461539,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 320,
      "text": "the lean ﬁle contents/imports leading up\nto the theorem declaration) wrapped by <CONTEXT>...</CONTEXT>.",
      "layout_matches": [
        {
          "text": "to the theorem declaration) wrapped by <CONTEXT>...</CONTEXT>.",
          "page": 15,
          "x0": 143.88018800000003,
          "y0": 516.10844448,
          "x1": 431.73085024982265,
          "y1": 526.07108448,
          "width": 287.8506622498226,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.525,
          "match_type": "substring_match"
        },
        {
          "text": "System: You will be given the proof context (i.e. the lean ﬁle contents/imports leading up",
          "page": 15,
          "x0": 143.88008800000006,
          "y0": 527.02834448,
          "x1": 504.0624433153018,
          "y1": 537.11053616,
          "width": 360.1823553153017,
          "height": 10.08219168000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.36923076923076925,
          "match_type": "word_overlap",
          "common_words_count": 6
        }
      ],
      "page_spans": [
        15
      ],
      "primary_page": 15,
      "bounding_boxes": [
        {
          "page": 15,
          "x0": 143.88018800000003,
          "y0": 516.10844448,
          "x1": 431.73085024982265,
          "y1": 526.07108448,
          "confidence": 0.525,
          "match_type": "substring_match"
        },
        {
          "page": 15,
          "x0": 143.88008800000006,
          "y0": 527.02834448,
          "x1": 504.0624433153018,
          "y1": 537.11053616,
          "confidence": 0.36923076923076925,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 321,
      "text": "You will be given the previous num_prev input/output pairs as well as their metric (met-\nric.name) score and correctness score, as well as any error messages, for your reference to\nimprove upon.",
      "layout_matches": [
        {
          "text": "ric.name) score and correctness score, as well as any error messages, for your reference to",
          "page": 15,
          "x0": 143.88078800000002,
          "y0": 492.22844447999995,
          "x1": 503.94135941976134,
          "y1": 502.19108448,
          "width": 360.06057141976135,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.41904761904761906,
          "match_type": "substring_match"
        },
        {
          "text": "You will be given the previous num_prev input/output pairs as well as their metric (met-",
          "page": 15,
          "x0": 143.280188,
          "y0": 503.26864448,
          "x1": 505.75700940500565,
          "y1": 513.34087352,
          "width": 362.47682140500564,
          "height": 10.072229039999968,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.4095238095238095,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        15
      ],
      "primary_page": 15,
      "bounding_boxes": [
        {
          "page": 15,
          "x0": 143.88078800000002,
          "y0": 492.22844447999995,
          "x1": 503.94135941976134,
          "y1": 502.19108448,
          "confidence": 0.41904761904761906,
          "match_type": "substring_match"
        },
        {
          "page": 15,
          "x0": 143.280188,
          "y0": 503.26864448,
          "x1": 505.75700940500565,
          "y1": 513.34087352,
          "confidence": 0.4095238095238095,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 322,
      "text": "Each of these previous results will be wrapped with <PREV I=0></PREV\nI=0>,...,<PREV I=num_prev-1></PREV I=num_prev-1>, with I=num_prev-1 being the\nmost recent result.",
      "layout_matches": [
        {
          "text": "improve upon. Each of these previous results will be wrapped with <PREV I=0></PREV",
          "page": 15,
          "x0": 143.88078800000002,
          "y0": 481.30854447999997,
          "x1": 504.47359237083606,
          "y1": 491.27118448,
          "width": 360.592804370836,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.4190476190476191,
          "match_type": "word_overlap",
          "common_words_count": 11
        },
        {
          "text": "I=0>,...,<PREV I=num_prev-1></PREV I=num_prev-1>, with I=num_prev-1 being the",
          "page": 15,
          "x0": 143.88078800000002,
          "y0": 470.38864448,
          "x1": 504.10433680568036,
          "y1": 480.46087352,
          "width": 360.22354880568037,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.3891891891891892,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        15
      ],
      "primary_page": 15,
      "bounding_boxes": [
        {
          "page": 15,
          "x0": 143.88078800000002,
          "y0": 481.30854447999997,
          "x1": 504.47359237083606,
          "y1": 491.27118448,
          "confidence": 0.4190476190476191,
          "match_type": "word_overlap"
        },
        {
          "page": 15,
          "x0": 143.88078800000002,
          "y0": 470.38864448,
          "x1": 504.10433680568036,
          "y1": 480.46087352,
          "confidence": 0.3891891891891892,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 323,
      "text": "Remember to use lean 4 syntax, which has signiﬁcant changes from the lean 3 syntax.",
      "layout_matches": [
        {
          "text": "Remember to use lean 4 syntax, which has signiﬁcant changes from the lean 3 syntax. To",
          "page": 15,
          "x0": 143.88168800000005,
          "y0": 446.50864447999993,
          "x1": 503.94339043936304,
          "y1": 456.47128447999995,
          "width": 360.061702439363,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.8682352941176471,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        15
      ],
      "primary_page": 15,
      "bounding_boxes": [
        {
          "page": 15,
          "x0": 143.88168800000005,
          "y0": 446.50864447999993,
          "x1": 503.94339043936304,
          "y1": 456.47128447999995,
          "confidence": 0.8682352941176471,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 324,
      "text": "To\nassist with the syntax relating to the current theorem and current error messages, you will\nbe given num_syntax_docs documents to refer to for ﬁxing these syntax issues.",
      "layout_matches": [
        {
          "text": "assist with the syntax relating to the current theorem and current error messages, you will",
          "page": 15,
          "x0": 143.88168800000005,
          "y0": 435.58874447999995,
          "x1": 504.0128482855318,
          "y1": 445.55138447999997,
          "width": 360.13116028553173,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.47368421052631576,
          "match_type": "substring_match"
        },
        {
          "text": "be given num_syntax_docs documents to refer to for ﬁxing these syntax issues. Each of",
          "page": 15,
          "x0": 143.88168800000003,
          "y0": 424.66884447999996,
          "x1": 504.0798242412039,
          "y1": 434.74107352,
          "width": 360.1981362412039,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.3142857142857143,
          "match_type": "word_overlap",
          "common_words_count": 11
        }
      ],
      "page_spans": [
        15
      ],
      "primary_page": 15,
      "bounding_boxes": [
        {
          "page": 15,
          "x0": 143.88168800000005,
          "y0": 435.58874447999995,
          "x1": 504.0128482855318,
          "y1": 445.55138447999997,
          "confidence": 0.47368421052631576,
          "match_type": "substring_match"
        },
        {
          "page": 15,
          "x0": 143.88168800000003,
          "y0": 424.66884447999996,
          "x1": 504.0798242412039,
          "y1": 434.74107352,
          "confidence": 0.3142857142857143,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 325,
      "text": "Each of\nthese documents will be wrapped with <SYNTAX_DOC>...</SYNTAX_DOC>.",
      "layout_matches": [
        {
          "text": "these documents will be wrapped with <SYNTAX_DOC>...</SYNTAX_DOC>.",
          "page": 15,
          "x0": 143.88198800000004,
          "y0": 413.62864447999993,
          "x1": 465.8126069795058,
          "y1": 423.59128447999996,
          "width": 321.93061897950577,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.7956521739130435,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        15
      ],
      "primary_page": 15,
      "bounding_boxes": [
        {
          "page": 15,
          "x0": 143.88198800000004,
          "y0": 413.62864447999993,
          "x1": 465.8126069795058,
          "y1": 423.59128447999996,
          "confidence": 0.7956521739130435,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 326,
      "text": "You will also receive num_mathlib_docs documents relevant to the current theorem to\nhelp with formulating your modiﬁed proof.",
      "layout_matches": [
        {
          "text": "You will also receive num_mathlib_docs documents relevant to the current theorem to",
          "page": 15,
          "x0": 143.281988,
          "y0": 400.7888444799999,
          "x1": 503.943312659457,
          "y1": 410.86107351999993,
          "width": 360.66132465945697,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.5976,
          "match_type": "substring_match"
        },
        {
          "text": "assist with the syntax relating to the current theorem and current error messages, you will",
          "page": 15,
          "x0": 143.88168800000005,
          "y0": 435.58874447999995,
          "x1": 504.0128482855318,
          "y1": 445.55138447999997,
          "width": 360.13116028553173,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.3111111111111111,
          "match_type": "word_overlap",
          "common_words_count": 7
        }
      ],
      "page_spans": [
        15
      ],
      "primary_page": 15,
      "bounding_boxes": [
        {
          "page": 15,
          "x0": 143.281988,
          "y0": 400.7888444799999,
          "x1": 503.943312659457,
          "y1": 410.86107351999993,
          "confidence": 0.5976,
          "match_type": "substring_match"
        },
        {
          "page": 15,
          "x0": 143.88168800000005,
          "y0": 435.58874447999995,
          "x1": 504.0128482855318,
          "y1": 445.55138447999997,
          "confidence": 0.3111111111111111,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 327,
      "text": "Each of these will be wrapped with <CON-\nTENT_DOC>...</CONTENT_DOC>\nYou will also receive num_examples examples of input-output pairs of proofs that\nwere optimized for the metric metric.",
      "layout_matches": [
        {
          "text": "You will also receive num_examples examples of input-output pairs of proofs that",
          "page": 15,
          "x0": 143.28184400000004,
          "y0": 365.9889444799999,
          "x1": 504.01146699846015,
          "y1": 376.0611735199999,
          "width": 360.7296229984601,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.39779005524861877,
          "match_type": "substring_match"
        },
        {
          "text": "were optimized for the metric metric. Each of these will be wrapped with <EXAM-",
          "page": 15,
          "x0": 143.521744,
          "y0": 355.0686444799999,
          "x1": 505.75950652008515,
          "y1": 365.1408735199999,
          "width": 362.23776252008514,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.3851851851851852,
          "match_type": "word_overlap",
          "common_words_count": 13
        }
      ],
      "page_spans": [
        15
      ],
      "primary_page": 15,
      "bounding_boxes": [
        {
          "page": 15,
          "x0": 143.28184400000004,
          "y0": 365.9889444799999,
          "x1": 504.01146699846015,
          "y1": 376.0611735199999,
          "confidence": 0.39779005524861877,
          "match_type": "substring_match"
        },
        {
          "page": 15,
          "x0": 143.521744,
          "y0": 355.0686444799999,
          "x1": 505.75950652008515,
          "y1": 365.1408735199999,
          "confidence": 0.3851851851851852,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 328,
      "text": "Each of these will be wrapped with <EXAM-\nPLE>...</EXAMPLE>\nYou will be given the tactic states as comments for reference.",
      "layout_matches": [
        {
          "text": "You will be given the tactic states as comments for reference. The current theorem will be",
          "page": 15,
          "x0": 143.28184400000006,
          "y0": 331.1889444799999,
          "x1": 504.10509072334116,
          "y1": 341.15158447999994,
          "width": 360.8232467233411,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.44000000000000006,
          "match_type": "word_overlap",
          "common_words_count": 11
        },
        {
          "text": "were optimized for the metric metric. Each of these will be wrapped with <EXAM-",
          "page": 15,
          "x0": 143.521744,
          "y0": 355.0686444799999,
          "x1": 505.75950652008515,
          "y1": 365.1408735199999,
          "width": 362.23776252008514,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.4,
          "match_type": "word_overlap",
          "common_words_count": 10
        }
      ],
      "page_spans": [
        15
      ],
      "primary_page": 15,
      "bounding_boxes": [
        {
          "page": 15,
          "x0": 143.28184400000006,
          "y0": 331.1889444799999,
          "x1": 504.10509072334116,
          "y1": 341.15158447999994,
          "confidence": 0.44000000000000006,
          "match_type": "word_overlap"
        },
        {
          "page": 15,
          "x0": 143.521744,
          "y0": 355.0686444799999,
          "x1": 505.75950652008515,
          "y1": 365.1408735199999,
          "confidence": 0.4,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 329,
      "text": "The current theorem will be\nwrapped in <CURRENT>...</CURRENT>\nSystem: Output format instructions\nPlaceholder: All retrieved syntax documentation\nPlaceholder: All retrieved mathlib documentation\nPlaceholder: All retrieved examples\nUser: <CONTEXT> context </CONTEXT>\nPlaceholder: Previous results and inputs/outputs\nPlaceholder: All metric prompts with a ‘User’ role\nUser: <CURRENT> theorem </CURRENT>\n\nThis prompt is then invoked and sent to the language model by ﬁlling in all the variables and place-\nholders.",
      "layout_matches": [
        {
          "text": "Placeholder: All metric prompts with a ‘System’ role\nSystem: You will be given the proof context (i.e. the lean ﬁle contents/imports leading up\nto the theorem declaration) wrapped by <CONTEXT>...</CONTEXT>.\nYou will be given the previous num_prev input/output pairs as well as their metric (met-\nric.name) score and correctness score, as well as any error messages, for your reference to\nimprove upon. Each of these previous results will be wrapped with <PREV I=0></PREV\nI=0>,...,<PREV I=num_prev-1></PREV I=num_prev-1>, with I=num_prev-1 being the\nmost recent result.\nRemember to use lean 4 syntax, which has signiﬁcant changes from the lean 3 syntax. To\nassist with the syntax relating to the current theorem and current error messages, you will\nbe given num_syntax_docs documents to refer to for ﬁxing these syntax issues. Each of\nthese documents will be wrapped with <SYNTAX_DOC>...</SYNTAX_DOC>.\nYou will also receive num_mathlib_docs documents relevant to the current theorem to\nhelp with formulating your modiﬁed proof. Each of these will be wrapped with <CON-\nTENT_DOC>...</CONTENT_DOC>\nYou will also receive num_examples examples of input-output pairs of proofs that\nwere optimized for the metric metric. Each of these will be wrapped with <EXAM-\nPLE>...</EXAMPLE>\nYou will be given the tactic states as comments for reference. The current theorem will be\nwrapped in <CURRENT>...</CURRENT>\nSystem: Output format instructions\nPlaceholder: All retrieved syntax documentation\nPlaceholder: All retrieved mathlib documentation\nPlaceholder: All retrieved examples\nUser: <CONTEXT> context </CONTEXT>\nPlaceholder: Previous results and inputs/outputs\nPlaceholder: All metric prompts with a ‘User’ role\nUser: <CURRENT> theorem </CURRENT>",
          "page": 15,
          "x0": 143.280188,
          "y0": 202.18864447999994,
          "x1": 505.75950652008515,
          "y1": 551.8707361600001,
          "width": 362.47931852008514,
          "height": 349.68209168000016,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.382089552238806,
          "match_type": "word_overlap",
          "common_words_count": 32
        }
      ],
      "page_spans": [
        15
      ],
      "primary_page": 15,
      "bounding_boxes": [
        {
          "page": 15,
          "x0": 143.280188,
          "y0": 202.18864447999994,
          "x1": 505.75950652008515,
          "y1": 551.8707361600001,
          "confidence": 0.382089552238806,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 330,
      "text": "Notably, when we invoke the chain given by chain|llm|parser, we throttle the invoca-\ntion with a randomized exponential rate limit throttling to account for API rate limits, especially in\nhighly-parallelized requests like when benchmarking over a large number of theorems.",
      "layout_matches": [
        {
          "text": "This prompt is then invoked and sent to the language model by ﬁlling in all the variables and place-\nholders. Notably, when we invoke the chain given by chain|llm|parser, we throttle the invoca-\ntion with a randomized exponential rate limit throttling to account for API rate limits, especially in\nhighly-parallelized requests like when benchmarking over a large number of theorems.",
          "page": 15,
          "x0": 107.6418000000001,
          "y0": 148.6688444799999,
          "x1": 505.88012539484345,
          "y1": 191.51108447999997,
          "width": 398.23832539484334,
          "height": 42.84224000000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6374005305039788,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        15
      ],
      "primary_page": 15,
      "bounding_boxes": [
        {
          "page": 15,
          "x0": 107.6418000000001,
          "y0": 148.6688444799999,
          "x1": 505.88012539484345,
          "y1": 191.51108447999997,
          "confidence": 0.6374005305039788,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 331,
      "text": "A.2 METRIC PROMPTS\n\nLength Metric\n\nSystem: You are an AI assistant who shortens Lean 4 proofs while ensuring their correct-\nness.",
      "layout_matches": [
        {
          "text": "System: You are an AI assistant who shortens Lean 4 proofs while ensuring their correct-",
          "page": 15,
          "x0": 143.88172000000014,
          "y0": 81.82864447999994,
          "x1": 505.87910881303895,
          "y1": 91.91083615999993,
          "width": 361.9973888130388,
          "height": 10.082191679999994,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.6214285714285714,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        15
      ],
      "primary_page": 15,
      "bounding_boxes": [
        {
          "page": 15,
          "x0": 143.88172000000014,
          "y0": 81.82864447999994,
          "x1": 505.87910881303895,
          "y1": 91.91083615999993,
          "confidence": 0.6214285714285714,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 332,
      "text": "You will aim to reduce the number of lines of the tactic proof while ensuring that it\nproperly compiles in Lean 4.",
      "layout_matches": [
        {
          "text": "ness. You will aim to reduce the number of lines of the tactic proof while ensuring that it",
          "page": 15,
          "x0": 143.88252000000017,
          "y0": 70.90874447999994,
          "x1": 504.0127008202934,
          "y1": 80.87138447999993,
          "width": 360.1301808202932,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.5454545454545454,
          "match_type": "word_overlap",
          "common_words_count": 15
        }
      ],
      "page_spans": [
        15
      ],
      "primary_page": 15,
      "bounding_boxes": [
        {
          "page": 15,
          "x0": 143.88252000000017,
          "y0": 70.90874447999994,
          "x1": 504.0127008202934,
          "y1": 80.87138447999993,
          "confidence": 0.5454545454545454,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 333,
      "text": "15\n\n\fUser: Shorten the current theorem (wrapped in <CURRENT>...</CURRENT>) to be as\nshort in length—measured in the number of lines of the proof—as possible, while also\nensuring that the output is still syntactically correct.\"",
      "layout_matches": [
        {
          "text": "User: Shorten the current theorem (wrapped in <CURRENT>...</CURRENT>) to be as\nshort in length—measured in the number of lines of the proof—as possible, while also\nensuring that the output is still syntactically correct.\"",
          "page": 16,
          "x0": 143.87989999999996,
          "y0": 676.06804448,
          "x1": 504.03522203977275,
          "y1": 708.1103361600001,
          "width": 360.1553220397728,
          "height": 32.04229168000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.8872641509433962,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        16
      ],
      "primary_page": 16,
      "bounding_boxes": [
        {
          "page": 16,
          "x0": 143.87989999999996,
          "y0": 676.06804448,
          "x1": 504.03522203977275,
          "y1": 708.1103361600001,
          "confidence": 0.8872641509433962,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 334,
      "text": "Readability Metric\n\nCompletion Metric\n\nSystem: You are an AI assistant who rewrites Lean 4 proofs to be more readable while\nensuring their correctness.",
      "layout_matches": [
        {
          "text": "System: You are an AI assistant who rewrites Lean 4 proofs to be more readable while\nensuring their correctness. We measure readablity by considering the ratio of the number\nofexplicitly typed have tactics against the total number of tactics in the proof, as this is\nproportional to whether a proof is declarative in style, and thus, readable.",
          "page": 16,
          "x0": 143.8798,
          "y0": 598.5482444800001,
          "x1": 504.43621821077403,
          "y1": 641.5104361600002,
          "width": 360.55641821077404,
          "height": 42.962191680000046,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6608695652173914,
          "match_type": "word_overlap",
          "common_words_count": 19
        }
      ],
      "page_spans": [
        16
      ],
      "primary_page": 16,
      "bounding_boxes": [
        {
          "page": 16,
          "x0": 143.8798,
          "y0": 598.5482444800001,
          "x1": 504.43621821077403,
          "y1": 641.5104361600002,
          "confidence": 0.6608695652173914,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 335,
      "text": "We measure readablity by considering the ratio of the number\nofexplicitly typed have tactics against the total number of tactics in the proof, as this is\nproportional to whether a proof is declarative in style, and thus, readable.",
      "layout_matches": [
        {
          "text": "System: You are an AI assistant who rewrites Lean 4 proofs to be more readable while\nensuring their correctness. We measure readablity by considering the ratio of the number\nofexplicitly typed have tactics against the total number of tactics in the proof, as this is\nproportional to whether a proof is declarative in style, and thus, readable.",
          "page": 16,
          "x0": 143.8798,
          "y0": 598.5482444800001,
          "x1": 504.43621821077403,
          "y1": 641.5104361600002,
          "width": 360.55641821077404,
          "height": 42.962191680000046,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6026548672566372,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        16
      ],
      "primary_page": 16,
      "bounding_boxes": [
        {
          "page": 16,
          "x0": 143.8798,
          "y0": 598.5482444800001,
          "x1": 504.43621821077403,
          "y1": 641.5104361600002,
          "confidence": 0.6026548672566372,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 336,
      "text": "User: Rewrite the current theorem (wrapped in <CURRENT>...</CURRENT>) so it is\nmore readable and declarative and modular.",
      "layout_matches": [
        {
          "text": "User: Rewrite the current theorem (wrapped in <CURRENT>...</CURRENT>) so it is\nmore readable and declarative and modular.",
          "page": 16,
          "x0": 143.88029999999992,
          "y0": 572.0283444800001,
          "x1": 504.0358495104812,
          "y1": 593.1503361600002,
          "width": 360.1555495104813,
          "height": 21.121991680000065,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.9,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        16
      ],
      "primary_page": 16,
      "bounding_boxes": [
        {
          "page": 16,
          "x0": 143.88029999999992,
          "y0": 572.0283444800001,
          "x1": 504.0358495104812,
          "y1": 593.1503361600002,
          "confidence": 0.9,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 337,
      "text": "System: You are an AI assistant who automatically solves Lean 4 proofs (as in, generates\nthe tactic proof) and ensures its correctness.",
      "layout_matches": [
        {
          "text": "System: You are an AI assistant who automatically solves Lean 4 proofs (as in, generates",
          "page": 16,
          "x0": 143.88029999999992,
          "y0": 527.3885444800002,
          "x1": 504.2760787924914,
          "y1": 537.4707361600002,
          "width": 360.39577879249146,
          "height": 10.08219168000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.583969465648855,
          "match_type": "substring_match"
        },
        {
          "text": "System: You are an AI assistant who rewrites Lean 4 proofs to be more readable while\nensuring their correctness. We measure readablity by considering the ratio of the number\nofexplicitly typed have tactics against the total number of tactics in the proof, as this is\nproportional to whether a proof is declarative in style, and thus, readable.",
          "page": 16,
          "x0": 143.8798,
          "y0": 598.5482444800001,
          "x1": 504.43621821077403,
          "y1": 641.5104361600002,
          "width": 360.55641821077404,
          "height": 42.962191680000046,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.5818181818181819,
          "match_type": "word_overlap",
          "common_words_count": 16
        }
      ],
      "page_spans": [
        16
      ],
      "primary_page": 16,
      "bounding_boxes": [
        {
          "page": 16,
          "x0": 143.88029999999992,
          "y0": 527.3885444800002,
          "x1": 504.2760787924914,
          "y1": 537.4707361600002,
          "confidence": 0.583969465648855,
          "match_type": "substring_match"
        },
        {
          "page": 16,
          "x0": 143.8798,
          "y0": 598.5482444800001,
          "x1": 504.43621821077403,
          "y1": 641.5104361600002,
          "confidence": 0.5818181818181819,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 338,
      "text": "You will receive a Lean 4 proof you must\nmodify to eliminate any errors so that it compiles correctly and eliminate any “sorry”s with\nfull proofs.",
      "layout_matches": [
        {
          "text": "modify to eliminate any errors so that it compiles correctly and eliminate any “sorry”s with",
          "page": 16,
          "x0": 143.8802999999999,
          "y0": 505.42844448000017,
          "x1": 503.94321620370744,
          "y1": 515.3910844800001,
          "width": 360.0629162037076,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.5625,
          "match_type": "substring_match"
        },
        {
          "text": "System: You are an AI assistant who automatically solves Lean 4 proofs (as in, generates\nthe tactic proof) and ensures its correctness. You will receive a Lean 4 proof you must\nmodify to eliminate any errors so that it compiles correctly and eliminate any “sorry”s with\nfull proofs.",
          "page": 16,
          "x0": 143.8802999999999,
          "y0": 494.5085444800002,
          "x1": 504.2760787924914,
          "y1": 537.4707361600002,
          "width": 360.39577879249146,
          "height": 42.962191680000046,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.46956521739130436,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        16
      ],
      "primary_page": 16,
      "bounding_boxes": [
        {
          "page": 16,
          "x0": 143.8802999999999,
          "y0": 505.42844448000017,
          "x1": 503.94321620370744,
          "y1": 515.3910844800001,
          "confidence": 0.5625,
          "match_type": "substring_match"
        },
        {
          "page": 16,
          "x0": 143.8802999999999,
          "y0": 494.5085444800002,
          "x1": 504.2760787924914,
          "y1": 537.4707361600002,
          "confidence": 0.46956521739130436,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 339,
      "text": "User: Rewrite the current theorem (wrapped in <CURRENT>...</CURRENT>) so it is a\nformal, complete, and correct Lean 4 proof by ﬁlling in its tactic proof.",
      "layout_matches": [
        {
          "text": "User: Rewrite the current theorem (wrapped in <CURRENT>...</CURRENT>) so it is a\nformal, complete, and correct Lean 4 proof by ﬁlling in its tactic proof.",
          "page": 16,
          "x0": 143.88019999999995,
          "y0": 467.9886444800002,
          "x1": 503.9838241768013,
          "y1": 489.1106361600002,
          "width": 360.10362417680136,
          "height": 21.121991680000008,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.9,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        16
      ],
      "primary_page": 16,
      "bounding_boxes": [
        {
          "page": 16,
          "x0": 143.88019999999995,
          "y0": 467.9886444800002,
          "x1": 503.9838241768013,
          "y1": 489.1106361600002,
          "confidence": 0.9,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 340,
      "text": "B ADDITIONAL EXPERIMENTAL RESULTS\n\nIn this section, we provide more detailed information on the experimental setup and results used to\nevaluate ImProver.",
      "layout_matches": [
        {
          "text": "In this section, we provide more detailed information on the experimental setup and results used to\nevaluate ImProver.",
          "page": 16,
          "x0": 108.00059999999993,
          "y0": 403.2296400000002,
          "x1": 503.94326835214093,
          "y1": 424.4313844800002,
          "width": 395.942668352141,
          "height": 21.201744480000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6973509933774834,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        16
      ],
      "primary_page": 16,
      "bounding_boxes": [
        {
          "page": 16,
          "x0": 108.00059999999993,
          "y0": 403.2296400000002,
          "x1": 503.94326835214093,
          "y1": 424.4313844800002,
          "confidence": 0.6973509933774834,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 341,
      "text": "B.1 ABLATION DETAILS\n\nWe now proceed to show detailed results from our ablation testing.",
      "layout_matches": [
        {
          "text": "We now proceed to show detailed results from our ablation testing.",
          "page": 16,
          "x0": 107.52057999999998,
          "y0": 357.1085444800002,
          "x1": 373.8912523770011,
          "y1": 367.0711844800002,
          "width": 266.3706723770011,
          "height": 9.962640000000022,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6827586206896552,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        16
      ],
      "primary_page": 16,
      "bounding_boxes": [
        {
          "page": 16,
          "x0": 107.52057999999998,
          "y0": 357.1085444800002,
          "x1": 373.8912523770011,
          "y1": 367.0711844800002,
          "confidence": 0.6827586206896552,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 342,
      "text": "Table 8: Output and Chain-of-States Ablations\n\nOutput Format\n\nCoS\n\nImprovement Nonempty Improve. Accuracy\n\nImproved Acc.",
      "layout_matches": [
        {
          "text": "Optimization varies based on dataset difﬁculty. Additionally noting Table 2, Table 3, and\nTable 4, we observe that the improvement score for both metrics for both GPT-4o and ImProver\nis highest for the MIL dataset, lower for Compﬁles, and the lowest on the Mathlib theorems. This\nsuggests that the expected improvement in metric score decreases with higher difﬁcultly – with\nundergraduate-level theorems having a signiﬁcantly higher expected improvement than research-\nlevel theorems. However, it should be noted that for both metrics, the nonempty improvement of\nImProver stayed consistent, whereas for GPT-4o, it followed the aforementioned trend of decreas-\ning with difﬁculty. Similarly, the accuracy and improved accuracy scores for both metrics and\nmodels decreased with higher difﬁculty datasets (disregarding ImProver’s accuracy scores, as they\nare ensured to be 100%). This suggests that although the base GPT-4o generator is less likely to\ngenerate a correct output for higher difﬁculty datasets, the improvements that ImProver makes to\nthe base generator allows it to maintain its improvement in the metric score whenever a correct out-\nput is generated. As such, we can speculate that the bottleneck in the improvement score is not the\nmodel’s ability to optimize the proof for a metric, but rather its ability to generate a new correct\nproof at all. As such, we conjecture that with more capable generator models, the accuracy – and\nthus, the improvement score – in optimization tasks will continue to increase, until the improvement\nscores match the nonempty improvement.",
          "page": 8,
          "x0": 107.63940000000011,
          "y0": 187.54854447999998,
          "x1": 505.87730038476985,
          "y1": 372.95023616,
          "width": 398.2379003847698,
          "height": 185.40169168,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.37333333333333335,
          "match_type": "word_overlap",
          "common_words_count": 7
        }
      ],
      "page_spans": [
        8
      ],
      "primary_page": 8,
      "bounding_boxes": [
        {
          "page": 8,
          "x0": 107.63940000000011,
          "y0": 187.54854447999998,
          "x1": 505.87730038476985,
          "y1": 372.95023616,
          "confidence": 0.37333333333333335,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 343,
      "text": "string\nTrue\nstring\nFalse\nstring list True\nstring list\nFalse\nstring tree\nTrue\nstring tree\nFalse\n\n7.53\n7.03\n8.04\n7.04\n7.62\n6.31\n\n16.12\n19.67\n12.38\n13.58\n15.34\n14.17\n\n46.72%\n35.77%\n64.96%\n51.82%\n49.64%\n44.53%\n\n16.79%\n15.33%\n21.17%\n18.98%\n18.25%\n16.06%\n\nBy Table 8, we see that the optimal combination in this testing group is a string list output\nformat with CoS enabled.",
      "layout_matches": [],
      "page_spans": [],
      "primary_page": 1,
      "bounding_boxes": []
    },
    {
      "sentence_id": 344,
      "text": "Fix these values for all future tests.",
      "layout_matches": [
        {
          "text": "With the previous optimal parameters ﬁxed, run the ablation on the number of examples. By Table 9,\nwe see that the optimal combination in this testing group is 10 examples. Fix this value for all future\ntests.",
          "page": 16,
          "x0": 107.52,
          "y0": 59.98834448,
          "x1": 505.2909411920758,
          "y1": 91.79078448,
          "width": 397.77094119207584,
          "height": 31.802439999999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.5714285714285715,
          "match_type": "word_overlap",
          "common_words_count": 5
        }
      ],
      "page_spans": [
        16
      ],
      "primary_page": 16,
      "bounding_boxes": [
        {
          "page": 16,
          "x0": 107.52,
          "y0": 59.98834448,
          "x1": 505.2909411920758,
          "y1": 91.79078448,
          "confidence": 0.5714285714285715,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 345,
      "text": "Examples\n\nTable 9: Example Retrieval Ablations\nImprovement Nonempty Improve. Accuracy\n\nImproved Acc.",
      "layout_matches": [
        {
          "text": "Table 9: Example Retrieval Ablations\nImprovement Nonempty Improve. Accuracy",
          "page": 16,
          "x0": 207.6,
          "y0": 166.04532916,
          "x1": 386.08307741600316,
          "y1": 189.71078448,
          "width": 178.48307741600317,
          "height": 23.665455320000007,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6865979381443299,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        16
      ],
      "primary_page": 16,
      "bounding_boxes": [
        {
          "page": 16,
          "x0": 207.6,
          "y0": 166.04532916,
          "x1": 386.08307741600316,
          "y1": 189.71078448,
          "confidence": 0.6865979381443299,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 346,
      "text": "0\n3\n5\n7\n10\n\n5.67\n8.49\n8.38\n7.56\n9.34\n\n67.15%\n62.04%\n64.96%\n62.77%\n63.5%\n\n16.79%\n19.71%\n21.17%\n19.71%\n21.9%\n\nWith the previous optimal parameters ﬁxed, run the ablation on the number of examples.",
      "layout_matches": [
        {
          "text": "With the previous optimal parameters ﬁxed, run the ablation on the value of n and model. By",
          "page": 17,
          "x0": 107.52,
          "y0": 334.78814447999997,
          "x1": 504.3010950511259,
          "y1": 344.77070976,
          "width": 396.78109505112593,
          "height": 9.982565280000017,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.3345724907063197,
          "match_type": "sequence_match",
          "similarity_ratio": 0.5576208178438662
        },
        {
          "text": "Now, with the previous optimal parameters ﬁxed, run the ablation on the sample method. By",
          "page": 17,
          "x0": 107.99999999999997,
          "y0": 539.2685444800001,
          "x1": 504.30125398789045,
          "y1": 549.23118448,
          "width": 396.3012539878905,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.3293233082706767,
          "match_type": "sequence_match",
          "similarity_ratio": 0.5488721804511278
        },
        {
          "text": "With the previous optimal parameters ﬁxed, run the ablation on the combination methods and if",
          "page": 17,
          "x0": 107.52,
          "y0": 138.10814448,
          "x1": 503.9577096625853,
          "y1": 148.07078448000001,
          "width": 396.4377096625853,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.31439114391143913,
          "match_type": "sequence_match",
          "similarity_ratio": 0.5239852398523985
        },
        {
          "text": "With the previous optimal parameters ﬁxed, run the ablation on the number of examples. By Table 9,\nwe see that the optimal combination in this testing group is 10 examples. Fix this value for all future\ntests.",
          "page": 16,
          "x0": 107.52,
          "y0": 59.98834448,
          "x1": 505.2909411920758,
          "y1": 91.79078448,
          "width": 397.77094119207584,
          "height": 31.802439999999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.3058823529411765,
          "match_type": "word_overlap",
          "common_words_count": 13
        }
      ],
      "page_spans": [
        16,
        17
      ],
      "primary_page": 17,
      "bounding_boxes": [
        {
          "page": 17,
          "x0": 107.52,
          "y0": 334.78814447999997,
          "x1": 504.3010950511259,
          "y1": 344.77070976,
          "confidence": 0.3345724907063197,
          "match_type": "sequence_match"
        },
        {
          "page": 17,
          "x0": 107.99999999999997,
          "y0": 539.2685444800001,
          "x1": 504.30125398789045,
          "y1": 549.23118448,
          "confidence": 0.3293233082706767,
          "match_type": "sequence_match"
        },
        {
          "page": 17,
          "x0": 107.52,
          "y0": 138.10814448,
          "x1": 503.9577096625853,
          "y1": 148.07078448000001,
          "confidence": 0.31439114391143913,
          "match_type": "sequence_match"
        },
        {
          "page": 16,
          "x0": 107.52,
          "y0": 59.98834448,
          "x1": 505.2909411920758,
          "y1": 91.79078448,
          "confidence": 0.3058823529411765,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 347,
      "text": "By Table 9,\nwe see that the optimal combination in this testing group is 10 examples.",
      "layout_matches": [
        {
          "text": "Now, with the previous optimal parameters ﬁxed, run the ablation on the sample method. By\nTable 10, we see that the optimal combination in this testing group is best-of-n. Fix this value\nfor all future tests.",
          "page": 17,
          "x0": 107.63999999999993,
          "y0": 517.4283444800001,
          "x1": 504.30125398789045,
          "y1": 549.23118448,
          "width": 396.6612539878905,
          "height": 31.802839999999946,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.7000000000000001,
          "match_type": "word_overlap",
          "common_words_count": 14
        }
      ],
      "page_spans": [
        17
      ],
      "primary_page": 17,
      "bounding_boxes": [
        {
          "page": 17,
          "x0": 107.63999999999993,
          "y0": 517.4283444800001,
          "x1": 504.30125398789045,
          "y1": 549.23118448,
          "confidence": 0.7000000000000001,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 348,
      "text": "Fix this value for all future\ntests.",
      "layout_matches": [
        {
          "text": "By Table 8, we see that the optimal combination in this testing group is a string list output\nformat with CoS enabled. Fix these values for all future tests.",
          "page": 16,
          "x0": 108.0,
          "y0": 209.02824447999998,
          "x1": 504.2498031453446,
          "y1": 230.22958896,
          "width": 396.2498031453446,
          "height": 21.201344480000017,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6857142857142857,
          "match_type": "word_overlap",
          "common_words_count": 6
        }
      ],
      "page_spans": [
        16
      ],
      "primary_page": 16,
      "bounding_boxes": [
        {
          "page": 16,
          "x0": 108.0,
          "y0": 209.02824447999998,
          "x1": 504.2498031453446,
          "y1": 230.22958896,
          "confidence": 0.6857142857142857,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 349,
      "text": "8.44\n13.68\n12.9\n12.04\n14.7\n\n16\n\n\fTable 10: Sampling Method Ablations\n\nMethod\n\nForward Keep Best\n\nImprovement Nonempty Improve. Accuracy\n\nImproved Acc.",
      "layout_matches": [
        {
          "text": "Table 9: Example Retrieval Ablations\nImprovement Nonempty Improve. Accuracy",
          "page": 16,
          "x0": 207.6,
          "y0": 166.04532916,
          "x1": 386.08307741600316,
          "y1": 189.71078448,
          "width": 178.48307741600317,
          "height": 23.665455320000007,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.35000000000000003,
          "match_type": "sequence_match",
          "similarity_ratio": 0.5833333333333334
        },
        {
          "text": "Table 11: Model and n Ablations\nImprovement Nonempty Improve. Accuracy",
          "page": 17,
          "x0": 221.76,
          "y0": 477.68532916,
          "x1": 400.36299378212317,
          "y1": 499.2109097600001,
          "width": 178.60299378212318,
          "height": 21.525580600000126,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.34123222748815163,
          "match_type": "sequence_match",
          "similarity_ratio": 0.5687203791469194
        },
        {
          "text": "Table 2: MIL Proof optimization results.\nImprovement Nonempty Improvement Accuracy",
          "page": 7,
          "x0": 225.0,
          "y0": 578.96532916,
          "x1": 423.28322653078993,
          "y1": 602.51078448,
          "width": 198.28322653078993,
          "height": 23.545455319999974,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.30672645739910315,
          "match_type": "sequence_match",
          "similarity_ratio": 0.5112107623318386
        }
      ],
      "page_spans": [
        16,
        17,
        7
      ],
      "primary_page": 16,
      "bounding_boxes": [
        {
          "page": 16,
          "x0": 207.6,
          "y0": 166.04532916,
          "x1": 386.08307741600316,
          "y1": 189.71078448,
          "confidence": 0.35000000000000003,
          "match_type": "sequence_match"
        },
        {
          "page": 17,
          "x0": 221.76,
          "y0": 477.68532916,
          "x1": 400.36299378212317,
          "y1": 499.2109097600001,
          "confidence": 0.34123222748815163,
          "match_type": "sequence_match"
        },
        {
          "page": 7,
          "x0": 225.0,
          "y0": 578.96532916,
          "x1": 423.28322653078993,
          "y1": 602.51078448,
          "confidence": 0.30672645739910315,
          "match_type": "sequence_match"
        }
      ]
    },
    {
      "sentence_id": 350,
      "text": "None\nreﬁnement\nreﬁnement\nreﬁnement\nreﬁnement\nbest-of-n\n\nN/A\n1\n5\n1\n5\nN/A\n\nN/A\nFalse\nFalse\nTrue\nTrue\nN/A\n\n9.34\n14.76\n12.5\n14.95\n13.15\n15.35\n\n14.7\n30.63\n20.88\n14.95\n13.15\n18.44\n\n63.5%\n48.18%\n59.85%\n100.0%\n100.0%\n83.21%\n\n21.9%\n30.66%\n30.66%\n30.66%\n29.93%\n36.5%\n\nNote that forward and keep-best values are parameters for reﬁnement of how many previous itera-\ntions to forward, and whether to keep the most recent or the best iteration in subsequent reﬁnement\nsteps.",
      "layout_matches": [
        {
          "text": "Note that forward and keep-best values are parameters for reﬁnement of how many previous itera-\ntions to forward, and whether to keep the most recent or the best iteration in subsequent reﬁnement\nsteps.",
          "page": 17,
          "x0": 107.99999999999997,
          "y0": 556.18844448,
          "x1": 505.75695321854647,
          "y1": 588.11078448,
          "width": 397.7569532185465,
          "height": 31.922339999999963,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.41490825688073396,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        17
      ],
      "primary_page": 17,
      "bounding_boxes": [
        {
          "page": 17,
          "x0": 107.99999999999997,
          "y0": 556.18844448,
          "x1": 505.75695321854647,
          "y1": 588.11078448,
          "confidence": 0.41490825688073396,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 351,
      "text": "Now, with the previous optimal parameters ﬁxed, run the ablation on the sample method.",
      "layout_matches": [
        {
          "text": "Now, with the previous optimal parameters ﬁxed, run the ablation on the sample method. By",
          "page": 17,
          "x0": 107.99999999999997,
          "y0": 539.2685444800001,
          "x1": 504.30125398789045,
          "y1": 549.23118448,
          "width": 396.3012539878905,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.8689655172413794,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        17
      ],
      "primary_page": 17,
      "bounding_boxes": [
        {
          "page": 17,
          "x0": 107.99999999999997,
          "y0": 539.2685444800001,
          "x1": 504.30125398789045,
          "y1": 549.23118448,
          "confidence": 0.8689655172413794,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 352,
      "text": "By\nTable 10, we see that the optimal combination in this testing group is best-of-n.",
      "layout_matches": [
        {
          "text": "With the previous optimal parameters ﬁxed, run the ablation on the number of examples. By Table 9,\nwe see that the optimal combination in this testing group is 10 examples. Fix this value for all future\ntests.",
          "page": 16,
          "x0": 107.52,
          "y0": 59.98834448,
          "x1": 505.2909411920758,
          "y1": 91.79078448,
          "width": 397.77094119207584,
          "height": 31.802439999999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.7466666666666667,
          "match_type": "word_overlap",
          "common_words_count": 14
        }
      ],
      "page_spans": [
        16
      ],
      "primary_page": 16,
      "bounding_boxes": [
        {
          "page": 16,
          "x0": 107.52,
          "y0": 59.98834448,
          "x1": 505.2909411920758,
          "y1": 91.79078448,
          "confidence": 0.7466666666666667,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 353,
      "text": "Fix this value\nfor all future tests.",
      "layout_matches": [
        {
          "text": "By Table 8, we see that the optimal combination in this testing group is a string list output\nformat with CoS enabled. Fix these values for all future tests.",
          "page": 16,
          "x0": 108.0,
          "y0": 209.02824447999998,
          "x1": 504.2498031453446,
          "y1": 230.22958896,
          "width": 396.2498031453446,
          "height": 21.201344480000017,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6857142857142857,
          "match_type": "word_overlap",
          "common_words_count": 6
        }
      ],
      "page_spans": [
        16
      ],
      "primary_page": 16,
      "bounding_boxes": [
        {
          "page": 16,
          "x0": 108.0,
          "y0": 209.02824447999998,
          "x1": 504.2498031453446,
          "y1": 230.22958896,
          "confidence": 0.6857142857142857,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 354,
      "text": "Table 11: Model and n Ablations\nImprovement Nonempty Improve. Accuracy\n\nImproved Acc.",
      "layout_matches": [
        {
          "text": "Table 11: Model and n Ablations\nImprovement Nonempty Improve. Accuracy",
          "page": 17,
          "x0": 221.76,
          "y0": 477.68532916,
          "x1": 400.36299378212317,
          "y1": 499.2109097600001,
          "width": 178.60299378212318,
          "height": 21.525580600000126,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.7481927710843373,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        17
      ],
      "primary_page": 17,
      "bounding_boxes": [
        {
          "page": 17,
          "x0": 221.76,
          "y0": 477.68532916,
          "x1": 400.36299378212317,
          "y1": 499.2109097600001,
          "confidence": 0.7481927710843373,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 355,
      "text": "Model\n\ngpt-4o\ngpt-4o\ngpt-4o\ngpt-4o\ngpt-4o\ngpt-4o-mini\ngpt-4o-mini\ngpt-4o-mini\ngpt-4o-mini\ngpt-4o-mini\ngpt-4o-mini\n\nn\n\n3\n5\n7\n10\n15\n3\n5\n7\n10\n15\n20\n\n19.66\n20.12\n22.44\n21.73\n23.51\n3.65\n5.12\n3.65\n4.99\n4.35\n4.87\n\n24.36\n24.97\n27.21\n25.28\n26.28\n4.63\n6.21\n4.34\n5.69\n5.06\n5.56\n\n80.7%\n80.56%\n82.46%\n85.96%\n89.47%\n78.95%\n82.46%\n84.21%\n87.72%\n85.96%\n87.72%\n\n38.6%\n36.11%\n42.11%\n40.35%\n45.61%\n8.77%\n10.53%\n8.77%\n12.28%\n12.28%\n14.04%\n\nWith the previous optimal parameters ﬁxed, run the ablation on the value of n and model.",
      "layout_matches": [],
      "page_spans": [],
      "primary_page": 1,
      "bounding_boxes": []
    },
    {
      "sentence_id": 356,
      "text": "By\nTable 11, we see that the optimal combination in this testing group is GPT-4o with n = 15.",
      "layout_matches": [
        {
          "text": "Table 11, we see that the optimal combination in this testing group is GPT-4o with n = 15. Fix this",
          "page": 17,
          "x0": 107.63973999999996,
          "y0": 323.54904,
          "x1": 504.0354425660814,
          "y1": 333.85040976,
          "width": 396.3957025660814,
          "height": 10.30136976,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.7555555555555555,
          "match_type": "word_overlap",
          "common_words_count": 17
        }
      ],
      "page_spans": [
        17
      ],
      "primary_page": 17,
      "bounding_boxes": [
        {
          "page": 17,
          "x0": 107.63973999999996,
          "y0": 323.54904,
          "x1": 504.0354425660814,
          "y1": 333.85040976,
          "confidence": 0.7555555555555555,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 357,
      "text": "Fix this\nvalue for all future tests.",
      "layout_matches": [
        {
          "text": "By Table 8, we see that the optimal combination in this testing group is a string list output\nformat with CoS enabled. Fix these values for all future tests.",
          "page": 16,
          "x0": 108.0,
          "y0": 209.02824447999998,
          "x1": 504.2498031453446,
          "y1": 230.22958896,
          "width": 396.2498031453446,
          "height": 21.201344480000017,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6857142857142857,
          "match_type": "word_overlap",
          "common_words_count": 6
        }
      ],
      "page_spans": [
        16
      ],
      "primary_page": 16,
      "bounding_boxes": [
        {
          "page": 16,
          "x0": 108.0,
          "y0": 209.02824447999998,
          "x1": 504.2498031453446,
          "y1": 230.22958896,
          "confidence": 0.6857142857142857,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 358,
      "text": "Table 12: RAG and Combination Sampling Method Ablations\n\nRAG Improvement Nonempty Improve. Accuracy\n\nImproved Acc.",
      "layout_matches": [
        {
          "text": "Table 12: RAG and Combination Sampling Method Ablations",
          "page": 17,
          "x0": 182.16009999999991,
          "y0": 284.74794448,
          "x1": 429.9956806947451,
          "y1": 294.71058448,
          "width": 247.83558069474518,
          "height": 9.962640000000022,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.43783783783783786,
          "match_type": "substring_match"
        },
        {
          "text": "Table 2: MIL Proof optimization results.\nImprovement Nonempty Improvement Accuracy",
          "page": 7,
          "x0": 225.0,
          "y0": 578.96532916,
          "x1": 423.28322653078993,
          "y1": 602.51078448,
          "width": 198.28322653078993,
          "height": 23.545455319999974,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.38125,
          "match_type": "sequence_match",
          "similarity_ratio": 0.6354166666666666
        }
      ],
      "page_spans": [
        17,
        7
      ],
      "primary_page": 7,
      "bounding_boxes": [
        {
          "page": 17,
          "x0": 182.16009999999991,
          "y0": 284.74794448,
          "x1": 429.9956806947451,
          "y1": 294.71058448,
          "confidence": 0.43783783783783786,
          "match_type": "substring_match"
        },
        {
          "page": 7,
          "x0": 225.0,
          "y0": 578.96532916,
          "x1": 423.28322653078993,
          "y1": 602.51078448,
          "confidence": 0.38125,
          "match_type": "sequence_match"
        }
      ]
    },
    {
      "sentence_id": 359,
      "text": "Combination\n\nbest-of-n(reﬁnement)\nbest-of-n(reﬁnement)\nbest-of-n(reﬁnement)\nbest-of-n(reﬁnement)\nreﬁnement(best-of-n)\nreﬁnement(best-of-n)\nreﬁnement(best-of-n)\nreﬁnement(best-of-n)\nbest-of-n\nbest-of-n\n\nm\n\nm′\n\n5\n3\n5\n3\n3\n5\n3\n5\n5\n3\n5\n3\n3\n5\n5\n3\nN/A 15\nN/A 15\n\nTrue\nFalse\nTrue\nFalse\nTrue\nFalse\nTrue\nFalse\nTrue\nFalse\n\n33.78\n31.23\n31.85\n31.35\n51.32\n50.1\n57.56\n49.75\n32.71\n33.48\n\n100.0%\n100.0%\n100.0%\n100.0%\n63.64%\n65.62%\n60.61%\n59.38%\n90.62%\n84.38%\n\n50.0%\n46.88%\n50.0%\n50.0%\n48.48%\n53.12%\n54.55%\n43.75%\n56.25%\n53.12%\n\nWith the previous optimal parameters ﬁxed, run the ablation on the combination methods and if\nRAG is enabled.",
      "layout_matches": [],
      "page_spans": [],
      "primary_page": 1,
      "bounding_boxes": []
    },
    {
      "sentence_id": 360,
      "text": "By Table 12, we see that the optimal combination in this testing group is a 5-step\nreﬁnement with each iteration being a best-of-3 call, with RAG enabled.",
      "layout_matches": [
        {
          "text": "RAG is enabled. By Table 12, we see that the optimal combination in this testing group is a 5-step",
          "page": 17,
          "x0": 108.0,
          "y0": 126.86943999999998,
          "x1": 504.06112816484216,
          "y1": 137.15088448,
          "width": 396.06112816484216,
          "height": 10.281444480000019,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.5333333333333333,
          "match_type": "word_overlap",
          "common_words_count": 18
        },
        {
          "text": "With the previous optimal parameters ﬁxed, run the ablation on the combination methods and if\nRAG is enabled. By Table 12, we see that the optimal combination in this testing group is a 5-step\nreﬁnement with each iteration being a best-of-3 call, with RAG enabled.",
          "page": 17,
          "x0": 107.52,
          "y0": 116.14804448,
          "x1": 504.06112816484216,
          "y1": 148.07078448000001,
          "width": 396.5411281648422,
          "height": 31.92274000000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.5241379310344828,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        17
      ],
      "primary_page": 17,
      "bounding_boxes": [
        {
          "page": 17,
          "x0": 108.0,
          "y0": 126.86943999999998,
          "x1": 504.06112816484216,
          "y1": 137.15088448,
          "confidence": 0.5333333333333333,
          "match_type": "word_overlap"
        },
        {
          "page": 17,
          "x0": 107.52,
          "y0": 116.14804448,
          "x1": 504.06112816484216,
          "y1": 148.07078448000001,
          "confidence": 0.5241379310344828,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 361,
      "text": "B.2 ADDITIONAL QUALITATIVE EXAMPLES\n\nIn this section, we provide qualitative examples demonstrating the improvements ImProver achieves\nin proof optimization.",
      "layout_matches": [
        {
          "text": "In this section, we provide qualitative examples demonstrating the improvements ImProver achieves\nin proof optimization.",
          "page": 17,
          "x0": 107.99999999999997,
          "y0": 59.98834447999999,
          "x1": 504.15587881700105,
          "y1": 80.87088447999999,
          "width": 396.15587881700105,
          "height": 20.88254,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.6909677419354838,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        17
      ],
      "primary_page": 17,
      "bounding_boxes": [
        {
          "page": 17,
          "x0": 107.99999999999997,
          "y0": 59.98834447999999,
          "x1": 504.15587881700105,
          "y1": 80.87088447999999,
          "confidence": 0.6909677419354838,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 362,
      "text": "33.78\n31.23\n31.85\n31.35\n32.66\n32.88\n34.88\n29.54\n29.64\n28.25\n\n17\n\n\fCompﬁles: Length Optimization See (§4.3)\n\nCompﬁles: Readability Optimization Consider Figure 5, in which a lemma from the 2019 IMO\nproblem 1 (from the Compﬁles dataset) is optimized for readability.",
      "layout_matches": [
        {
          "text": "Compﬁles: Readability Optimization Consider Figure 5, in which a lemma from the 2019 IMO\nproblem 1 (from the Compﬁles dataset) is optimized for readability. This introduces multiple new\nhypotheses, which generalize a linear_property of the functions, and then reuses and instanti-\nates that (and others, too) hypothesis throughout the proof, creating a signiﬁcantly more declaritive,\nmodular, and therefore readable proof.",
          "page": 18,
          "x0": 107.99979999999996,
          "y0": 631.06804448,
          "x1": 505.757328382243,
          "y1": 684.95013616,
          "width": 397.757528382243,
          "height": 53.88209168000003,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.42000000000000004,
          "match_type": "word_overlap",
          "common_words_count": 21
        }
      ],
      "page_spans": [
        18
      ],
      "primary_page": 18,
      "bounding_boxes": [
        {
          "page": 18,
          "x0": 107.99979999999996,
          "y0": 631.06804448,
          "x1": 505.757328382243,
          "y1": 684.95013616,
          "confidence": 0.42000000000000004,
          "match_type": "word_overlap"
        }
      ]
    },
    {
      "sentence_id": 363,
      "text": "This introduces multiple new\nhypotheses, which generalize a linear_property of the functions, and then reuses and instanti-\nates that (and others, too) hypothesis throughout the proof, creating a signiﬁcantly more declaritive,\nmodular, and therefore readable proof.",
      "layout_matches": [
        {
          "text": "Compﬁles: Readability Optimization Consider Figure 5, in which a lemma from the 2019 IMO\nproblem 1 (from the Compﬁles dataset) is optimized for readability. This introduces multiple new\nhypotheses, which generalize a linear_property of the functions, and then reuses and instanti-\nates that (and others, too) hypothesis throughout the proof, creating a signiﬁcantly more declaritive,\nmodular, and therefore readable proof.",
          "page": 18,
          "x0": 107.99979999999996,
          "y0": 631.06804448,
          "x1": 505.757328382243,
          "y1": 684.95013616,
          "width": 397.757528382243,
          "height": 53.88209168000003,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.5641463414634147,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        18
      ],
      "primary_page": 18,
      "bounding_boxes": [
        {
          "page": 18,
          "x0": 107.99979999999996,
          "y0": 631.06804448,
          "x1": 505.757328382243,
          "y1": 684.95013616,
          "confidence": 0.5641463414634147,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 364,
      "text": "Original (human-written)\n\nlemma additive_to_int_linear (f : Z → Z) (h:\n∀ (x y : Z), f (x + y) = f x + f y):\n\n∃ c, ∀ a, f a = c * a\n\n:= by\n\nlet g := AddMonoidHom.toIntLinearMap <|\n\nAddMonoidHom.mk' f h\nrefine hf 1, fun a => ?_i\nchange g a = g 1 * a\nrw [mul_comm, ← smul_eq_mul, ←\n\nLinearMap.map_smul, smul_eq_mul, mul_one]\n\nImProver (readability-optimized)\nlemma additive_to_int_linear (f : Z → Z) (h:\n∀ (x y : Z), f (x + y) = f x + f y):\n\n∃ c, ∀ a, f a = c * a\n\n:= by\n\nlet g := AddMonoidHom.toIntLinearMap <|\n\nAddMonoidHom.mk' f h\n\nhave linear_property : ∀ a, f a = g a := by\n\nintro a\nrfl\n\nhave g_smul : ∀ a, g a = g 1 * a := by\n\nintro a\nrw [mul_comm, ← smul_eq_mul, ←\nLinearMap.map_smul, smul_eq_mul, mul_one]\n\nrefine hf 1, fun a => ?_i\nhave f_eq_g : f a = g a := linear_property a\nhave g_a_eq : g a = g 1 * a := g_smul a\nrw [f_eq_g, linear_property 1, g_a_eq]\n\nFigure 5: Optimizing a lemma from IMO 2019 P1 for readability\n\nMIL: Length Optimization Consider Figure 6, which optimizes an exercise solution from MIL\nChapter 8, Section 1 (Group theory) for length, eliminating simp calls and introducing proof terms\ninto the structure of the proof to shorten it from 9 tactic invocations to 7.",
      "layout_matches": [],
      "page_spans": [],
      "primary_page": 1,
      "bounding_boxes": []
    },
    {
      "sentence_id": 365,
      "text": "Original (human-written)\nexample (ϕ : G →* H) (ψ : H →* K) (S :\n\nSubgroup G) :\nmap (ψ.comp ϕ) S = map ψ (S.map ϕ)\n\n:= by\n\next x\nsimp only [mem_map]\nconstructor\n· rintro hy, y_in, hyi\n\nexact hϕ y, hy, y_in, rfli, hyi\n\n· rintro hy, hz, z_in, hzi, hyi\n\nuse z, z_in\ncalc ψ.comp ϕ z = ψ (ϕ z) := rfl\n_\n= ψ y := by congr\n\nImProver (length-optimized)\n\nexample (ϕ : G →* H) (ψ : H →* K) (S :\n\nSubgroup G) :\nmap (ψ.comp ϕ) S = map ψ (S.map ϕ)\nby\next x\nsimp only [mem_map]\nconstructor\nrintro hy, y_in, hyi; exact hϕ y, hy, y_in,\n\n:=\n\nrfli, hyi\n\nrintro hy, hz, z_in, hzi, hyi; exact hz,\nz_in, (congr_arg ψ hz).trans hyi\n\nFigure 6: Optimizing a lemma from the solutions of MIL CH08 S01 for length\n\nMIL: Length Optimization 2 Consider Figure 6, which optimizes an exercise solution from MIL\nChapter 8, Section 1 (Group theory) for length, converting a full tactic proof into a single proof term\nto shorten it from 28 tactic invocations to 1.",
      "layout_matches": [],
      "page_spans": [],
      "primary_page": 1,
      "bounding_boxes": []
    },
    {
      "sentence_id": 366,
      "text": "Note that the model does not have access to the Lean\ncommands that symbolically generate proof terms, and therefore generates and estimates the proof\nterm entirely by itself.",
      "layout_matches": [
        {
          "text": "commands that symbolically generate proof terms, and therefore generates and estimates the proof",
          "page": 18,
          "x0": 108.00007999999994,
          "y0": 201.10811447999993,
          "x1": 504.19785246913153,
          "y1": 211.07075447999995,
          "width": 396.19777246913156,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.49421965317919075,
          "match_type": "substring_match"
        },
        {
          "text": "MIL: Length Optimization 2 Consider Figure 6, which optimizes an exercise solution from MIL\nChapter 8, Section 1 (Group theory) for length, converting a full tactic proof into a single proof term\nto shorten it from 28 tactic invocations to 1. Note that the model does not have access to the Lean\ncommands that symbolically generate proof terms, and therefore generates and estimates the proof\nterm entirely by itself.",
          "page": 18,
          "x0": 108.00007999999991,
          "y0": 190.1882144799999,
          "x1": 504.5662840271703,
          "y1": 244.07030615999997,
          "width": 396.5662040271704,
          "height": 53.88209168000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.3797560975609756,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        18
      ],
      "primary_page": 18,
      "bounding_boxes": [
        {
          "page": 18,
          "x0": 108.00007999999994,
          "y0": 201.10811447999993,
          "x1": 504.19785246913153,
          "y1": 211.07075447999995,
          "confidence": 0.49421965317919075,
          "match_type": "substring_match"
        },
        {
          "page": 18,
          "x0": 108.00007999999991,
          "y0": 190.1882144799999,
          "x1": 504.5662840271703,
          "y1": 244.07030615999997,
          "confidence": 0.3797560975609756,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 367,
      "text": "MIL: Readability Optimization See (§4.3)\n\nMathlib: Length Optimization Consider Figure 8, which optimizes a theorem in algebraic topol-\nogy from mathlib for length, eliminating simp calls and combining tactics to shorten it from 3 tactic\ninvocations to 1.",
      "layout_matches": [
        {
          "text": "Mathlib: Length Optimization Consider Figure 8, which optimizes a theorem in algebraic topol-\nogy from mathlib for length, eliminating simp calls and combining tactics to shorten it from 3 tactic\ninvocations to 1.",
          "page": 18,
          "x0": 108.0000599999999,
          "y0": 121.58930999999993,
          "x1": 505.7576567151365,
          "y1": 153.95040615999994,
          "width": 397.7575967151366,
          "height": 32.36109616000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.7651821862348178,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        18
      ],
      "primary_page": 18,
      "bounding_boxes": [
        {
          "page": 18,
          "x0": 108.0000599999999,
          "y0": 121.58930999999993,
          "x1": 505.7576567151365,
          "y1": 153.95040615999994,
          "confidence": 0.7651821862348178,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 368,
      "text": "Mathlib: Readability Optimization Consider Figure 9, a theorem from Mathlib that we optimize\nfor readability.",
      "layout_matches": [
        {
          "text": "Mathlib: Readability Optimization Consider Figure 9, a theorem from Mathlib that we optimize\nfor readability.",
          "page": 18,
          "x0": 108.00009999999989,
          "y0": 87.82811447999994,
          "x1": 504.10402538265737,
          "y1": 108.95050615999993,
          "width": 396.1039253826575,
          "height": 21.122391679999993,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.9,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        18
      ],
      "primary_page": 18,
      "bounding_boxes": [
        {
          "page": 18,
          "x0": 108.00009999999989,
          "y0": 87.82811447999994,
          "x1": 504.10402538265737,
          "y1": 108.95050615999993,
          "confidence": 0.9,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 369,
      "text": "This original proof carried a score of 0, as it does not contain any declarative statements.",
      "layout_matches": [
        {
          "text": "This original proof carried a score of 0, as it does not contain any declarative statements. In compar-",
          "page": 10,
          "x0": 107.64029999999994,
          "y0": 180.74934,
          "x1": 505.877748902,
          "y1": 191.03078448,
          "width": 398.2374489020001,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.8029411764705883,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        10
      ],
      "primary_page": 10,
      "bounding_boxes": [
        {
          "page": 10,
          "x0": 107.64029999999994,
          "y0": 180.74934,
          "x1": 505.877748902,
          "y1": 191.03078448,
          "confidence": 0.8029411764705883,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 370,
      "text": "It is concise\nand efﬁcient, however, it is difﬁcult to understand and read.",
      "layout_matches": [
        {
          "text": "and efﬁcient, however, it is difﬁcult to understand and read.",
          "page": 18,
          "x0": 108.00078399999995,
          "y0": 59.988314479999936,
          "x1": 344.49144399999994,
          "y1": 69.95095447999994,
          "width": 236.49066,
          "height": 9.96264,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.7273972602739727,
          "match_type": "substring_match"
        },
        {
          "text": "This original proof carried a score of 0, as it does not contain any declarative statements. It is concise\nand efﬁcient, however, it is difﬁcult to understand and read.",
          "page": 18,
          "x0": 107.63994399999989,
          "y0": 59.988314479999936,
          "x1": 504.1041735240709,
          "y1": 80.87085447999993,
          "width": 396.464229524071,
          "height": 20.88254,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.3981818181818182,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        18
      ],
      "primary_page": 18,
      "bounding_boxes": [
        {
          "page": 18,
          "x0": 108.00078399999995,
          "y0": 59.988314479999936,
          "x1": 344.49144399999994,
          "y1": 69.95095447999994,
          "confidence": 0.7273972602739727,
          "match_type": "substring_match"
        },
        {
          "page": 18,
          "x0": 107.63994399999989,
          "y0": 59.988314479999936,
          "x1": 504.1041735240709,
          "y1": 80.87085447999993,
          "confidence": 0.3981818181818182,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 371,
      "text": "18\n\n\fOriginal (human-written)\nexample : s \\ t ∪ t \\ s = (s ∪ t) \\ (s ∩ t)\n\n:= by\n\next x; constructor\n· rintro (hxs, xnti | hxt, xnsi)\n\nImProver (length-optimized)\n\nexample : s \\ t ∪ t \\ s = (s ∪ t) \\ (s ∩ t)\n\n:= by\n\nexact Set.ext fun x => hfun h => h.elim\n\n(fun hxs, xnti => hOr.inl xs, fun h_, xti =\n> xnt xti) (fun hxt, xnsi => hOr.inr xt,\nfun hxs, _i => xns xsi),\n\nfun hh, nxsti => h.elim (fun xs => Or.inl h\nxs, fun xt => nxst hxs, xtii) (fun xt =>\nOr.inr hxt, fun xs => nxst hxs, xtii)i\n\n· constructor\n\nleft\nexact xs\nrintro h_, xti\ncontradiction\n\n.",
      "layout_matches": [],
      "page_spans": [],
      "primary_page": 1,
      "bounding_boxes": []
    },
    {
      "sentence_id": 372,
      "text": "constructor\n\nright\nexact xt\nrintro hxs, _i\ncontradiction\nrintro hxs | xt, nxsti\n· left\n\nuse xs\nintro xt\napply nxst\nconstructor <;> assumption\n\n.",
      "layout_matches": [
        {
          "text": "right\nexact xt\nrintro hxs, _i\ncontradiction\nrintro hxs | xt, nxsti\n· left",
          "page": 19,
          "x0": 116.4,
          "y0": 566.6966975,
          "x1": 204.70205869999998,
          "y1": 613.9567139,
          "width": 88.30205869999998,
          "height": 47.26001639999993,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.46343283582089556,
          "match_type": "substring_match"
        },
        {
          "text": "use xs\nintro xt\napply nxst\nconstructor <;> assumption",
          "page": 19,
          "x0": 124.68,
          "y0": 535.3428639,
          "x1": 233.62434786973049,
          "y1": 566.1965639,
          "width": 108.94434786973048,
          "height": 30.853700000000003,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0,
          "match_confidence": 0.3358208955223881,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        19
      ],
      "primary_page": 19,
      "bounding_boxes": [
        {
          "page": 19,
          "x0": 116.4,
          "y0": 566.6966975,
          "x1": 204.70205869999998,
          "y1": 613.9567139,
          "confidence": 0.46343283582089556,
          "match_type": "substring_match"
        },
        {
          "page": 19,
          "x0": 124.68,
          "y0": 535.3428639,
          "x1": 233.62434786973049,
          "y1": 566.1965639,
          "confidence": 0.3358208955223881,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 373,
      "text": "right; use xt; intro xs\n\napply nxst\nconstructor <;> assumption\n\nFigure 7: Optimizing a lemma from MIL CH04 S01 solution for length\n\nOriginal (human-written)\n/-- If `f(p(t) = g(q(t))` for two paths `p`\n\nand `q`, then the induced path homotopy\nclasses\n\n`f(p)` and `g(p)` are the same as well,\n\ndespite having a priori different types\n-/\n\ntheorem heq_path_of_eq_image : HEq ((πm\n:= by\n\nf).map JpK) ((πm g).map JqK)\n\nsimp only [map_eq, ←\n\nPath.Homotopic.map_lift]; apply\nPath.Homotopic.hpath_hext; exact hfg\n\nImProver (length-optimized)\n\n/-- If `f(p(t) = g(q(t))` for two paths `p`\n\nand `q`, then the induced path homotopy\nclasses\n\n`f(p)` and `g(p)` are the same as well,\n\ndespite having a priori different types\n-/\n\ntheorem heq_path_of_eq_image : HEq ((πm\n\nf).map JpK) ((πm g).map JqK)\nexact Path.Homotopic.hpath_hext hfg\n\n:= by\n\nFigure 8: Optimizing a theorem from Mathlib/FundamentalGroupoid/InducedMaps for\nlength\n\nAfter optimizing for readability, we see that the model did not change the structure of the proof.",
      "layout_matches": [],
      "page_spans": [],
      "primary_page": 1,
      "bounding_boxes": []
    },
    {
      "sentence_id": 374,
      "text": "Rather, it added an intermediate declaration so that users can better understand the state after the\nconvert.",
      "layout_matches": [
        {
          "text": "Rather, it added an intermediate declaration so that users can better understand the state after the",
          "page": 19,
          "x0": 107.99984399999994,
          "y0": 294.34804447999994,
          "x1": 504.1031190691948,
          "y1": 304.31068447999996,
          "width": 396.10327506919486,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.825,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        19
      ],
      "primary_page": 19,
      "bounding_boxes": [
        {
          "page": 19,
          "x0": 107.99984399999994,
          "y0": 294.34804447999994,
          "x1": 504.1031190691948,
          "y1": 304.31068447999996,
          "confidence": 0.825,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 375,
      "text": "This intermediate tactic greatly helps in the understandability and clarity of the proof.",
      "layout_matches": [
        {
          "text": "convert. This intermediate tactic greatly helps in the understandability and clarity of the proof.",
          "page": 19,
          "x0": 107.99984399999994,
          "y0": 283.42814447999996,
          "x1": 496.8907744482916,
          "y1": 293.70958895999996,
          "width": 388.89093044829167,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1,
          "match_confidence": 0.8173469387755102,
          "match_type": "substring_match"
        }
      ],
      "page_spans": [
        19
      ],
      "primary_page": 19,
      "bounding_boxes": [
        {
          "page": 19,
          "x0": 107.99984399999994,
          "y0": 283.42814447999996,
          "x1": 496.8907744482916,
          "y1": 293.70958895999996,
          "confidence": 0.8173469387755102,
          "match_type": "substring_match"
        }
      ]
    },
    {
      "sentence_id": 376,
      "text": "Original (human-written)\n\nImProver (readability-optimized)\n\n/-- Another version of\n\n`simply_connected_iff_paths_homotopic` -/\ntheorem simply_connected_iff_paths_homotopic'\n{Y : Type*} [TopologicalSpace Y] :\nSimplyConnectedSpace Y ↔\n\nPathConnectedSpace Y ∧ ∀ {x y : Y} (p1\n:=\n\np2 : Path x y), Path.Homotopic p1 p2\nby\nconvert\n\nsimply_connected_iff_paths_homotopic (Y\n:= Y)\n\nsimp [Path.Homotopic.Quotient,\nSetoid.eq_top_iff]; rfl\n\n/-- Another version of\n\n`simply_connected_iff_paths_homotopic` -/\ntheorem simply_connected_iff_paths_homotopic'\n{Y : Type*} [TopologicalSpace Y] :\nSimplyConnectedSpace Y ↔\n\nPathConnectedSpace Y ∧ ∀ {x y : Y} (p1\n\np2 : Path x y), Path.Homotopic p1 p2\nby\nconvert\n\n:=\n\nsimply_connected_iff_paths_homotopic (Y\n:= Y)\n\nhave h1 : ∀ x y : Y, Subsingleton\n\n(Path.Homotopic.Quotient x y) ↔ ∀ {p1 p2\n: Path x y}, Path.Homotopic p1 p2 := by\nintro x y\nsimp [Path.Homotopic.Quotient,\nSetoid.eq_top_iff]\nrfl\n\nsimp only [h1]\n\nFigure 9: Optimizing a theorem from Mathlib/FundamentalGroupoid/SimplyConnected\nfor readability\n\n19",
      "layout_matches": [],
      "page_spans": [],
      "primary_page": 1,
      "bounding_boxes": []
    }
  ],
  "pages_layout": [
    {
      "page_num": 1,
      "elements": [
        {
          "text": "IMPROVER: AGENT-BASED AUTOMATED\nPROOF OPTIMIZATION",
          "page": 1,
          "x0": 108.47992000000002,
          "y0": 674.8471428,
          "x1": 407.263186537,
          "y1": 711.9824428,
          "width": 298.78326653700003,
          "height": 37.135299999999916,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "IMPROVER: AGENT-BASED AUTOMATED",
          "page": 1,
          "x0": 108.48,
          "y0": 694.7670428,
          "x1": 407.263186537,
          "y1": 711.9824428,
          "width": 298.783186537,
          "height": 17.21539999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "PROOF OPTIMIZATION",
          "page": 1,
          "x0": 108.47992000000002,
          "y0": 674.8471428,
          "x1": 272.50289702272,
          "y1": 692.0625428,
          "width": 164.02297702271997,
          "height": 17.21539999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Riyaz Ahuja\nCarnegie Mellon University",
          "page": 1,
          "x0": 113.99982,
          "y0": 634.42824448,
          "x1": 225.42122645739238,
          "y1": 655.55023616,
          "width": 111.42140645739238,
          "height": 21.121991680000065,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Riyaz Ahuja",
          "page": 1,
          "x0": 113.99982,
          "y0": 645.58759616,
          "x1": 167.34126951888936,
          "y1": 655.55023616,
          "width": 53.34144951888936,
          "height": 9.962640000000079,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Jeremy Avigad Prasad Tetali Sean Welleck",
          "page": 1,
          "x0": 177.35989955568937,
          "y0": 645.58759616,
          "x1": 373.4586225361716,
          "y1": 655.55023616,
          "width": 196.09872298048225,
          "height": 9.962640000000079,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Jeremy Avigad Prasad Tetali Sean Welleck",
          "page": 1,
          "x0": 177.35989955568937,
          "y0": 645.58759616,
          "x1": 373.4586225361716,
          "y1": 655.55023616,
          "width": 196.09872298048225,
          "height": 9.962640000000079,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Carnegie Mellon University",
          "page": 1,
          "x0": 113.99982,
          "y0": 634.42824448,
          "x1": 225.42122645739238,
          "y1": 644.39088448,
          "width": 111.42140645739238,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ABSTRACT",
          "page": 1,
          "x0": 278.27982,
          "y0": 592.8336664,
          "x1": 332.96332436226396,
          "y1": 604.7888664,
          "width": 54.68350436226399,
          "height": 11.95519999999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "ABSTRACT",
          "page": 1,
          "x0": 278.27982,
          "y0": 592.8336664,
          "x1": 332.96332436226396,
          "y1": 604.7888664,
          "width": 54.68350436226399,
          "height": 11.95519999999999,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "arXiv:2410.04753v1  [cs.AI]  7 Oct 2024",
          "page": 1,
          "x0": 16.34,
          "y0": 256.0,
          "x1": 36.34,
          "y1": 587.06,
          "width": 20.000000000000004,
          "height": 331.05999999999995,
          "element_type": "LTTextBoxVertical",
          "depth": 0
        },
        {
          "text": "arXiv:2410.04753v1  [cs.AI]  7 Oct 2024",
          "page": 1,
          "x0": 16.34,
          "y0": 256.0,
          "x1": 36.34,
          "y1": 587.06,
          "width": 20.000000000000004,
          "height": 331.05999999999995,
          "element_type": "LTTextLineVertical",
          "depth": 1
        },
        {
          "text": "Large language models (LLMs) have been used to generate formal proofs of math-\nematical theorems in proofs assistants such as Lean. However, we often want to\noptimize a formal proof with respect to various criteria, depending on its down-\nstream use. For example, we may want a proof to adhere to a certain style, or to be\nreadable, concise, or modularly structured. Having suitably optimized proofs is\nalso important for learning tasks, especially since human-written proofs may not\noptimal for that purpose. To this end, we study a new problem of automated proof\noptimization: rewriting a proof so that it is correct and optimizes for an arbitrary\ncriterion, such as length or readability. As a ﬁrst method for automated proof opti-\nmization, we present ImProver, a large-language-model agent that rewrites proofs\nto optimize arbitrary user-deﬁned metrics in Lean. We ﬁnd that naively applying\nLLMs to proof optimization falls short, and we incorporate various improvements\ninto ImProver, such as the use of symbolic Lean context in a novel Chain-of-\nStates technique, as well as error-correction and retrieval. We test ImProver on\nrewriting real-world undergraduate, competition, and research-level mathematics\ntheorems, ﬁnding that ImProver is capable of rewriting proofs so that they are\nsubstantially shorter, more modular, and more readable.",
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 383.50874448,
          "x1": 469.99729059724183,
          "y1": 568.7908844799999,
          "width": 326.1175505972419,
          "height": 185.2821399999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Large language models (LLMs) have been used to generate formal proofs of math-",
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 558.82824448,
          "x1": 469.8771722101885,
          "y1": 568.7908844799999,
          "width": 325.99743221018855,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ematical theorems in proofs assistants such as Lean. However, we often want to",
          "page": 1,
          "x0": 143.87973999999997,
          "y0": 547.78844448,
          "x1": 468.18109374797166,
          "y1": 557.7510844799999,
          "width": 324.3013537479717,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "optimize a formal proof with respect to various criteria, depending on its down-",
          "page": 1,
          "x0": 143.87973999999994,
          "y0": 536.86854448,
          "x1": 469.99729059724183,
          "y1": 546.8311844799999,
          "width": 326.1175505972419,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "stream use. For example, we may want a proof to adhere to a certain style, or to be",
          "page": 1,
          "x0": 143.87973999999997,
          "y0": 525.94824448,
          "x1": 468.2231814752958,
          "y1": 535.9108844799999,
          "width": 324.34344147529583,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "readable, concise, or modularly structured. Having suitably optimized proofs is",
          "page": 1,
          "x0": 143.87973999999997,
          "y0": 515.02834448,
          "x1": 468.15524291755474,
          "y1": 524.99098448,
          "width": 324.2755029175548,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "also important for learning tasks, especially since human-written proofs may not",
          "page": 1,
          "x0": 143.87974,
          "y0": 503.98854448,
          "x1": 468.2494683758459,
          "y1": 513.9511844799999,
          "width": 324.36972837584585,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "optimal for that purpose. To this end, we study a new problem of automated proof",
          "page": 1,
          "x0": 143.87974000000003,
          "y0": 493.06864448,
          "x1": 468.3175774656585,
          "y1": 503.03128448,
          "width": 324.43783746565845,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "optimization: rewriting a proof so that it is correct and optimizes for an arbitrary",
          "page": 1,
          "x0": 143.87974000000003,
          "y0": 482.14834448,
          "x1": 468.66189044425425,
          "y1": 492.11098448,
          "width": 324.7821504442542,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "criterion, such as length or readability. As a ﬁrst method for automated proof opti-",
          "page": 1,
          "x0": 143.87974000000003,
          "y0": 471.10854448,
          "x1": 469.87730186716357,
          "y1": 481.07118448,
          "width": 325.99756186716354,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "mization, we present ImProver, a large-language-model agent that rewrites proofs",
          "page": 1,
          "x0": 143.87974000000003,
          "y0": 459.86984,
          "x1": 468.39532479754604,
          "y1": 470.15128448,
          "width": 324.515584797546,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "to optimize arbitrary user-deﬁned metrics in Lean. We ﬁnd that naively applying",
          "page": 1,
          "x0": 143.87974000000003,
          "y0": 449.26874448,
          "x1": 468.4210642139068,
          "y1": 459.23138448000003,
          "width": 324.54132421390676,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "LLMs to proof optimization falls short, and we incorporate various improvements",
          "page": 1,
          "x0": 143.87974000000003,
          "y0": 438.22854448,
          "x1": 468.6351406664046,
          "y1": 448.19118448,
          "width": 324.75540066640457,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "into ImProver, such as the use of symbolic Lean context in a novel Chain-of-",
          "page": 1,
          "x0": 143.87974,
          "y0": 426.98984,
          "x1": 469.99726041487867,
          "y1": 437.27128448,
          "width": 326.11752041487864,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "States technique, as well as error-correction and retrieval. We test ImProver on",
          "page": 1,
          "x0": 143.87973999999997,
          "y0": 416.06994000000003,
          "x1": 468.1812714066359,
          "y1": 426.35138448000004,
          "width": 324.30153140663595,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "rewriting real-world undergraduate, competition, and research-level mathematics",
          "page": 1,
          "x0": 143.87993999999998,
          "y0": 405.34854448,
          "x1": 468.27549384827154,
          "y1": 415.31118448,
          "width": 324.39555384827156,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "theorems, ﬁnding that ImProver is capable of rewriting proofs so that they are",
          "page": 1,
          "x0": 143.87994,
          "y0": 394.10984,
          "x1": 468.22382735374816,
          "y1": 404.39128448,
          "width": 324.3438873537482,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "substantially shorter, more modular, and more readable.",
          "page": 1,
          "x0": 143.88004,
          "y0": 383.50874448,
          "x1": 365.9705699036277,
          "y1": 393.47138448000004,
          "width": 222.09052990362767,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "INTRODUCTION",
          "page": 1,
          "x0": 126.71994905600002,
          "y0": 323.5544664,
          "x1": 205.26462386892402,
          "y1": 335.5096664,
          "width": 78.544674812924,
          "height": 11.95519999999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "INTRODUCTION",
          "page": 1,
          "x0": 126.71994905600002,
          "y0": 323.5544664,
          "x1": 205.26462386892402,
          "y1": 335.5096664,
          "width": 78.544674812924,
          "height": 11.95519999999999,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "The fundamental virtue of a mathematical proof is that it provides certainty: a deductive argument\nshows that the assumptions of a mathematical statement logically guarantee the conclusion.\nIn\npractice, however, informal, natural-language proofs are prone to imprecision, ambiguity, and error.\nUsing a formal language such as Lean (Moura & Ullrich, 2021) removes ambiguity and precision\nand enables a proof assistant to verify correctness down to the primitives of a formal axiomatic\nsystem.",
          "page": 1,
          "x0": 107.63983999999999,
          "y0": 236.26904448000005,
          "x1": 505.8906872255797,
          "y1": 301.07138448000006,
          "width": 398.2508472255797,
          "height": 64.80234000000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "The fundamental virtue of a mathematical proof is that it provides certainty: a deductive argument",
          "page": 1,
          "x0": 107.63983999999999,
          "y0": 291.10874448000004,
          "x1": 504.36974737835715,
          "y1": 301.07138448000006,
          "width": 396.72990737835715,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "shows that the assumptions of a mathematical statement logically guarantee the conclusion.",
          "page": 1,
          "x0": 107.99984000000003,
          "y0": 280.18884448000006,
          "x1": 488.61080603366815,
          "y1": 290.1514844800001,
          "width": 380.6109660336681,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "In",
          "page": 1,
          "x0": 495.7199865354281,
          "y0": 280.18884448000006,
          "x1": 504.06129733619935,
          "y1": 290.1514844800001,
          "width": 8.341310800771225,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "practice, however, informal, natural-language proofs are prone to imprecision, ambiguity, and error.",
          "page": 1,
          "x0": 107.99984000000003,
          "y0": 269.14864448000003,
          "x1": 505.8906872255797,
          "y1": 279.11128448000005,
          "width": 397.8908472255797,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Using a formal language such as Lean (Moura & Ullrich, 2021) removes ambiguity and precision",
          "page": 1,
          "x0": 107.99984,
          "y0": 258.22874448000005,
          "x1": 504.1814633377553,
          "y1": 268.19138448000007,
          "width": 396.1816233377553,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "and enables a proof assistant to verify correctness down to the primitives of a formal axiomatic",
          "page": 1,
          "x0": 107.99984,
          "y0": 247.30884448000003,
          "x1": 504.2222583394943,
          "y1": 257.27148448,
          "width": 396.2224183394943,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "system.",
          "page": 1,
          "x0": 107.99984,
          "y0": 236.26904448000005,
          "x1": 138.21050060947496,
          "y1": 246.23168448000007,
          "width": 30.210660609474957,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Formal proofs, however, can be hard to read and often suffer from low reusability or excessive detail.\nFor example, formal proofs in Lean’s extensive mathematical library, Mathlib (mathlib Community,\n2020), are generally designed to be concise and very general, often at the expense of readability.\nFormal proofs in an expository text, in contrast, may include detailed calculations steps, making\nthem readable but verbose. Machine learning systems trained on such proofs learn to mimic these\nvaried conventions (Hu et al., 2024), which may not be the optimal use of the limited supply of\nhuman-written proofs. As a result, we would like to be able to automatically refactor proofs to meet\na secondary objective such as length or readability.",
          "page": 1,
          "x0": 107.75983999999997,
          "y0": 142.66924448,
          "x1": 506.0108944908015,
          "y1": 229.31138448000007,
          "width": 398.2510544908015,
          "height": 86.64214000000007,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Formal proofs, however, can be hard to read and often suffer from low reusability or excessive detail.",
          "page": 1,
          "x0": 107.99984,
          "y0": 219.34874448000005,
          "x1": 505.7707390897186,
          "y1": 229.31138448000007,
          "width": 397.77089908971857,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "For example, formal proofs in Lean’s extensive mathematical library, Mathlib (mathlib Community,",
          "page": 1,
          "x0": 107.99983999999998,
          "y0": 208.42884448000004,
          "x1": 505.29085162962537,
          "y1": 218.39148448000006,
          "width": 397.29101162962536,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "2020), are generally designed to be concise and very general, often at the expense of readability.",
          "page": 1,
          "x0": 107.99984,
          "y0": 197.50894448000003,
          "x1": 506.0108944908015,
          "y1": 207.47158448000005,
          "width": 398.0110544908015,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Formal proofs in an expository text, in contrast, may include detailed calculations steps, making",
          "page": 1,
          "x0": 107.99983999999998,
          "y0": 186.46914448,
          "x1": 504.1813883785421,
          "y1": 196.43178448000003,
          "width": 396.1815483785422,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "them readable but verbose. Machine learning systems trained on such proofs learn to mimic these",
          "page": 1,
          "x0": 107.99983999999995,
          "y0": 175.54884448,
          "x1": 503.982784177382,
          "y1": 185.51148448000004,
          "width": 395.982944177382,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "varied conventions (Hu et al., 2024), which may not be the optimal use of the limited supply of",
          "page": 1,
          "x0": 107.75983999999997,
          "y0": 164.62894448,
          "x1": 504.07713509310844,
          "y1": 174.59158448000002,
          "width": 396.31729509310844,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "human-written proofs. As a result, we would like to be able to automatically refactor proofs to meet",
          "page": 1,
          "x0": 107.99984,
          "y0": 153.58914448000002,
          "x1": 504.1291051066311,
          "y1": 163.55178448000004,
          "width": 396.12926510663107,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "a secondary objective such as length or readability.",
          "page": 1,
          "x0": 107.99984,
          "y0": 142.66924448,
          "x1": 310.890528302351,
          "y1": 152.63188448000002,
          "width": 202.890688302351,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "To this end, we study a new problem of automated proof optimization: rewriting a proof so that it is\ncorrect and optimizes a criterion such as length or readability. We ﬁnd that naively applying LLMs\nto proof optimization falls short, often resulting in incorrect or poorly optimized proofs. We develop\nvarious improvements that can be applied on top of a black-box language model, including Chain-\nof-States prompting–an analogy to chain-of-thought prompting (Wei et al., 2022) that shows inter-\nmediate proof states–along with error-correction and retrieval. We incorporate these into ImProver:\na large language model agent that rewrites proofs to optimize arbitrary user-deﬁned metrics in Lean.",
          "page": 1,
          "x0": 107.639684,
          "y0": 59.98934448000002,
          "x1": 505.89002930702276,
          "y1": 135.82117352,
          "width": 398.25034530702277,
          "height": 75.83182903999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "To this end, we study a new problem of automated proof optimization: rewriting a proof so that it is",
          "page": 1,
          "x0": 107.639684,
          "y0": 125.74894448000002,
          "x1": 504.0341954791417,
          "y1": 135.82117352,
          "width": 396.3945114791417,
          "height": 10.072229039999982,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "correct and optimizes a criterion such as length or readability. We ﬁnd that naively applying LLMs",
          "page": 1,
          "x0": 107.999684,
          "y0": 114.70914448000002,
          "x1": 504.03468843537246,
          "y1": 124.67178448000001,
          "width": 396.03500443537246,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "to proof optimization falls short, often resulting in incorrect or poorly optimized proofs. We develop",
          "page": 1,
          "x0": 107.99968400000003,
          "y0": 103.78924448000002,
          "x1": 504.1818086720917,
          "y1": 113.75188448000002,
          "width": 396.1821246720916,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "various improvements that can be applied on top of a black-box language model, including Chain-",
          "page": 1,
          "x0": 107.76068400000005,
          "y0": 92.86934448000002,
          "x1": 505.75857159809834,
          "y1": 102.83198448000002,
          "width": 397.99788759809826,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "of-States prompting–an analogy to chain-of-thought prompting (Wei et al., 2022) that shows inter-",
          "page": 1,
          "x0": 108.000684,
          "y0": 81.82914448000002,
          "x1": 505.7583169357716,
          "y1": 91.79178448000002,
          "width": 397.75763293577154,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "mediate proof states–along with error-correction and retrieval. We incorporate these into ImProver:",
          "page": 1,
          "x0": 108.000684,
          "y0": 70.59044000000002,
          "x1": 505.33009791999996,
          "y1": 80.87188448000002,
          "width": 397.32941392,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "a large language model agent that rewrites proofs to optimize arbitrary user-deﬁned metrics in Lean.",
          "page": 1,
          "x0": 107.999484,
          "y0": 59.98934448000002,
          "x1": 505.89002930702276,
          "y1": 69.95198448000002,
          "width": 397.89054530702276,
          "height": 9.96264,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        }
      ]
    },
    {
      "page_num": 2,
      "elements": [
        {
          "text": "We test ImProver on rewriting real-world undergraduate theorems, competition problems, and\nresearch-level mathematics, ﬁnding that ImProver is capable of rewriting proofs so that they are\nsubstantially shorter, more readable, and more declarative in style.1",
          "page": 2,
          "x0": 107.52,
          "y0": 676.06804448,
          "x1": 504.1036773971082,
          "y1": 707.99078448,
          "width": 396.5836773971082,
          "height": 31.922739999999976,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "We test ImProver on rewriting real-world undergraduate theorems, competition problems, and",
          "page": 2,
          "x0": 107.52,
          "y0": 697.70934,
          "x1": 504.06164764188907,
          "y1": 707.99078448,
          "width": 396.5416476418891,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "research-level mathematics, ﬁnding that ImProver is capable of rewriting proofs so that they are",
          "page": 2,
          "x0": 108.0,
          "y0": 686.66954,
          "x1": 504.1036773971082,
          "y1": 696.95098448,
          "width": 396.1036773971082,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "substantially shorter, more readable, and more declarative in style.1",
          "page": 2,
          "x0": 107.9999,
          "y0": 676.06804448,
          "x1": 375.487325,
          "y1": 687.2934507000001,
          "width": 267.48742500000003,
          "height": 11.225406220000082,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Original (human-written)\nlemma lemma0 {α : Type} {p : α → α → Prop}",
          "page": 2,
          "x0": 108.0,
          "y0": 640.6165375,
          "x1": 294.22531,
          "y1": 662.2705361600001,
          "width": 186.22530999999998,
          "height": 21.65399866000007,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Original (human-written)",
          "page": 2,
          "x0": 108.00040000000001,
          "y0": 652.30789616,
          "x1": 217.5178595972289,
          "y1": 662.2705361600001,
          "width": 109.51745959722888,
          "height": 9.962640000000079,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ImProver (length-optimized)",
          "page": 2,
          "x0": 308.88,
          "y0": 651.86934,
          "x1": 430.75770924440246,
          "y1": 662.27033616,
          "width": 121.87770924440247,
          "height": 10.40099616000009,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "ImProver (length-optimized)",
          "page": 2,
          "x0": 308.88,
          "y0": 651.86934,
          "x1": 430.75770924440246,
          "y1": 662.27033616,
          "width": 121.87770924440247,
          "height": 10.40099616000009,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "lemma lemma0 {α : Type} {p : α → α → Prop}",
          "page": 2,
          "x0": 108.0,
          "y0": 640.6165375,
          "x1": 294.22531,
          "y1": 648.0367139,
          "width": 186.22530999999998,
          "height": 7.420176399999946,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "lemma lemma0 {α : Type} {p : α → α → Prop}",
          "page": 2,
          "x0": 308.88,
          "y0": 638.5765375000001,
          "x1": 495.10531,
          "y1": 645.9967139,
          "width": 186.22530999999998,
          "height": 7.420176399999946,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "lemma lemma0 {α : Type} {p : α → α → Prop}",
          "page": 2,
          "x0": 308.88,
          "y0": 638.5765375000001,
          "x1": 495.10531,
          "y1": 645.9967139,
          "width": 186.22530999999998,
          "height": 7.420176399999946,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "(h1 : ∀ x, ∃! y, p x y)\n(h2 : ∀ x y, p x y ↔ p y x) :\n∀ x, Classical.choose",
          "page": 2,
          "x0": 124.68,
          "y0": 616.7365375,
          "x1": 250.184423847777,
          "y1": 640.1167139,
          "width": 125.50442384777699,
          "height": 23.380176399999982,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "(h1 : ∀ x, ∃! y, p x y)",
          "page": 2,
          "x0": 124.68,
          "y0": 632.6965375000001,
          "x1": 221.6243873751165,
          "y1": 640.1167139,
          "width": 96.94438737511649,
          "height": 7.420176399999946,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "(h1 : ∀ x, ∃! y, p x y)\n(h2 : ∀ x y, p x y ↔ p y x) :\n∀ x, Classical.choose",
          "page": 2,
          "x0": 325.56,
          "y0": 614.6965375000001,
          "x1": 450.9444366746519,
          "y1": 638.0767939,
          "width": 125.38443667465191,
          "height": 23.380256399999894,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "(h1 : ∀ x, ∃! y, p x y)",
          "page": 2,
          "x0": 325.56,
          "y0": 630.6565375,
          "x1": 422.50539609242895,
          "y1": 638.0767939,
          "width": 96.94539609242895,
          "height": 7.420256399999971,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "(h2 : ∀ x y, p x y ↔ p y x) :",
          "page": 2,
          "x0": 124.6803,
          "y0": 624.6565375,
          "x1": 250.184423847777,
          "y1": 632.0768739,
          "width": 125.504123847777,
          "height": 7.4203363999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "(h2 : ∀ x y, p x y ↔ p y x) :",
          "page": 2,
          "x0": 325.5605,
          "y0": 622.7365375,
          "x1": 450.9444366746519,
          "y1": 630.1567938999999,
          "width": 125.38393667465192,
          "height": 7.420256399999857,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "∀ x, Classical.choose",
          "page": 2,
          "x0": 124.68,
          "y0": 616.7365375,
          "x1": 212.98441095821997,
          "y1": 624.1567139,
          "width": 88.30441095821996,
          "height": 7.420176399999946,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "∀ x, Classical.choose",
          "page": 2,
          "x0": 325.56,
          "y0": 614.6965375000001,
          "x1": 413.864583770223,
          "y1": 622.1167139,
          "width": 88.30458377022302,
          "height": 7.420176399999946,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "(h1 (Classical.choose (h1",
          "page": 2,
          "x0": 141.47984,
          "y0": 609.1426339000001,
          "x1": 246.104394746868,
          "y1": 616.1164839,
          "width": 104.624554746868,
          "height": 6.97384999999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "(h1 (Classical.choose (h1",
          "page": 2,
          "x0": 141.47984,
          "y0": 609.1426339000001,
          "x1": 246.104394746868,
          "y1": 616.1164839,
          "width": 104.624554746868,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "(h1 (Classical.choose (h1",
          "page": 2,
          "x0": 342.35984,
          "y0": 607.2229439,
          "x1": 446.98440088385604,
          "y1": 614.1967939,
          "width": 104.62456088385602,
          "height": 6.97384999999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "(h1 (Classical.choose (h1",
          "page": 2,
          "x0": 342.35984,
          "y0": 607.2229439,
          "x1": 446.98440088385604,
          "y1": 614.1967939,
          "width": 104.62456088385602,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "x).exists)).exists=x := by",
          "page": 2,
          "x0": 127.91964,
          "y0": 601.2227139,
          "x1": 236.74431827582703,
          "y1": 608.1967139,
          "width": 108.82467827582703,
          "height": 6.973999999999933,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "x).exists)).exists=x := by",
          "page": 2,
          "x0": 127.91964,
          "y0": 601.2227139,
          "x1": 236.74431827582703,
          "y1": 608.1967139,
          "width": 108.82467827582703,
          "height": 6.973999999999933,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "x).exists)).exists=x := by",
          "page": 2,
          "x0": 328.79964,
          "y0": 599.1828639,
          "x1": 437.624293867352,
          "y1": 606.1569539,
          "width": 108.82465386735197,
          "height": 6.974089999999933,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "x).exists)).exists=x := by",
          "page": 2,
          "x0": 328.79964,
          "y0": 599.1828639,
          "x1": 437.624293867352,
          "y1": 606.1569539,
          "width": 108.82465386735197,
          "height": 6.974089999999933,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "-- PROOF START\nintro x\nobtain hy, h1e, h1ui := h1 x\nhave h2' : Classical.choose (h1 x).exists =",
          "page": 2,
          "x0": 116.4,
          "y0": 561.3828639,
          "x1": 296.26430999999997,
          "y1": 593.41529455,
          "width": 179.86430999999996,
          "height": 32.03243065000004,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "-- PROOF START",
          "page": 2,
          "x0": 116.4,
          "y0": 586.4414445499999,
          "x1": 175.0643430220055,
          "y1": 593.41529455,
          "width": 58.66434302200548,
          "height": 6.973850000000084,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "-- PROOF START\nintro x\nobtain hy, h1e, h1ui := h1 x\nrw [h1u _ (Classical.choose_spec _)]\nobtain hw, h1e', h1u'i := h1 y\nrw [h1u' _ ((h2 _ _).mpr h1e)]\nexact h1u' _ (Classical.choose_spec _)",
          "page": 2,
          "x0": 317.16,
          "y0": 535.4628639,
          "x1": 476.26451837791603,
          "y1": 591.37529455,
          "width": 159.104518377916,
          "height": 55.91243065000003,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "-- PROOF START",
          "page": 2,
          "x0": 317.16,
          "y0": 584.40144455,
          "x1": 375.824480755543,
          "y1": 591.37529455,
          "width": 58.66448075554297,
          "height": 6.973850000000084,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "intro x",
          "page": 2,
          "x0": 116.4,
          "y0": 577.3428639,
          "x1": 145.66431,
          "y1": 584.3167139,
          "width": 29.264309999999995,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "intro x",
          "page": 2,
          "x0": 317.16,
          "y0": 575.3028639,
          "x1": 346.54431,
          "y1": 582.2767139,
          "width": 29.38430999999997,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "obtain hy, h1e, h1ui := h1 x",
          "page": 2,
          "x0": 116.4,
          "y0": 568.8565375000001,
          "x1": 231.584405250077,
          "y1": 576.2767139,
          "width": 115.18440525007699,
          "height": 7.420176399999946,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "obtain hy, h1e, h1ui := h1 x",
          "page": 2,
          "x0": 317.16,
          "y0": 566.9365375,
          "x1": 432.464282244652,
          "y1": 574.3567138999999,
          "width": 115.30428224465197,
          "height": 7.420176399999946,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "have h2' : Classical.choose (h1 x).exists =",
          "page": 2,
          "x0": 116.4,
          "y0": 561.3828639,
          "x1": 296.26430999999997,
          "y1": 568.3567138999999,
          "width": 179.86430999999996,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "rw [h1u _ (Classical.choose_spec _)]",
          "page": 2,
          "x0": 317.16,
          "y0": 559.3428639,
          "x1": 467.8645749127851,
          "y1": 566.3167139,
          "width": 150.70457491278506,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "y :=\nh1u _ (Classical.choose_spec (h1\nx).exists)",
          "page": 2,
          "x0": 124.68,
          "y0": 537.5028639,
          "x1": 258.70456776606295,
          "y1": 560.3167139,
          "width": 134.02456776606294,
          "height": 22.813850000000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "y :=",
          "page": 2,
          "x0": 127.92,
          "y0": 553.3428639,
          "x1": 144.7043060715895,
          "y1": 560.3167139,
          "width": 16.784306071589512,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "obtain hw, h1e', h1u'i := h1 y",
          "page": 2,
          "x0": 317.16,
          "y0": 550.9765375000001,
          "x1": 440.864282244652,
          "y1": 558.3967139,
          "width": 123.70428224465195,
          "height": 7.420176399999946,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "h1u _ (Classical.choose_spec (h1",
          "page": 2,
          "x0": 124.68,
          "y0": 545.4228639,
          "x1": 258.70456776606295,
          "y1": 552.3967139,
          "width": 134.02456776606294,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "rw [h1u' _ ((h2 _ _).mpr h1e)]",
          "page": 2,
          "x0": 317.16,
          "y0": 543.3828639,
          "x1": 442.784579527665,
          "y1": 550.3567138999999,
          "width": 125.62457952766499,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "x).exists)",
          "page": 2,
          "x0": 127.91984000000001,
          "y0": 537.5028639,
          "x1": 169.78431,
          "y1": 544.4767939,
          "width": 41.86447,
          "height": 6.973929999999996,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "exact h1u' _ (Classical.choose_spec _)",
          "page": 2,
          "x0": 317.16,
          "y0": 535.4628639,
          "x1": 476.26451837791603,
          "y1": 542.4367139,
          "width": 159.104518377916,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "rw [h2']\nobtain hw, h1e', h1u'i := h1 y\nhave h4 := Classical.choose_spec (h1",
          "page": 2,
          "x0": 116.4,
          "y0": 513.5028639,
          "x1": 266.98461256008454,
          "y1": 536.4367139,
          "width": 150.58461256008454,
          "height": 22.933850000000007,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "rw [h2']",
          "page": 2,
          "x0": 116.4,
          "y0": 529.4628639,
          "x1": 149.864294286358,
          "y1": 536.4367139,
          "width": 33.46429428635798,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "obtain hw, h1e', h1u'i := h1 y",
          "page": 2,
          "x0": 116.4,
          "y0": 521.0965375000001,
          "x1": 239.984327574677,
          "y1": 528.5167139,
          "width": 123.58432757467699,
          "height": 7.420176399999946,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "have h4 := Classical.choose_spec (h1",
          "page": 2,
          "x0": 116.4,
          "y0": 513.5028639,
          "x1": 266.98461256008454,
          "y1": 520.4767138999999,
          "width": 150.58461256008454,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "y).exists",
          "page": 2,
          "x0": 127.91980000000001,
          "y0": 505.5828639,
          "x1": 165.7042903579475,
          "y1": 512.5567939,
          "width": 37.784490357947504,
          "height": 6.973929999999996,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "y).exists",
          "page": 2,
          "x0": 127.91980000000001,
          "y0": 505.5828639,
          "x1": 165.7042903579475,
          "y1": 512.5567939,
          "width": 37.784490357947504,
          "height": 6.973929999999996,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "have hxw : x = w := by",
          "page": 2,
          "x0": 116.40010000000001,
          "y0": 497.5428639,
          "x1": 208.4243060715895,
          "y1": 504.51687389999995,
          "width": 92.0242060715895,
          "height": 6.974009999999964,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "have hxw : x = w := by",
          "page": 2,
          "x0": 116.40010000000001,
          "y0": 497.5428639,
          "x1": 208.4243060715895,
          "y1": 504.51687389999995,
          "width": 92.0242060715895,
          "height": 6.974009999999964,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "apply h1u'\nrw [h2]\nexact h1e",
          "page": 2,
          "x0": 124.68,
          "y0": 473.6628639,
          "x1": 166.544376099384,
          "y1": 496.5967139,
          "width": 41.864376099384,
          "height": 22.933850000000007,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "apply h1u'",
          "page": 2,
          "x0": 124.68,
          "y0": 489.6228639,
          "x1": 166.544376099384,
          "y1": 496.5967139,
          "width": 41.864376099384,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "rw [h2]",
          "page": 2,
          "x0": 124.68,
          "y0": 481.7028639,
          "x1": 154.0642982147685,
          "y1": 488.6767139,
          "width": 29.384298214768506,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "exact h1e",
          "page": 2,
          "x0": 124.68,
          "y0": 473.6628639,
          "x1": 162.464302143179,
          "y1": 480.63671389999996,
          "width": 37.78430214317899,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "rw [hxw]\nexact h1u' _ h4",
          "page": 2,
          "x0": 116.4,
          "y0": 457.7028639,
          "x1": 179.14436266405798,
          "y1": 472.7167139,
          "width": 62.744362664057974,
          "height": 15.01384999999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "rw [hxw]",
          "page": 2,
          "x0": 116.4,
          "y0": 465.74286390000003,
          "x1": 149.864294286358,
          "y1": 472.7167139,
          "width": 33.46429428635798,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "exact h1u' _ h4",
          "page": 2,
          "x0": 116.4,
          "y0": 457.7028639,
          "x1": 179.14436266405798,
          "y1": 464.6767139,
          "width": 62.744362664057974,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Figure 1: ImProver automatically rewrites formal proofs to optimize a criterion such as length\nor readability while remaining correct.\nIn this example, ImProver optimizes a human-written\nlemma (right) from the 2022 International Math Olympiad (Question 2, solution from Comp-\nﬁles (David Renshaw, 2024)) for length. ImProver’s optimized proof is correct and more concise.",
          "page": 2,
          "x0": 107.99990000000003,
          "y0": 403.70924,
          "x1": 505.75748049890035,
          "y1": 446.87068448,
          "width": 397.7575804989003,
          "height": 43.16144448,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Figure 1: ImProver automatically rewrites formal proofs to optimize a criterion such as length",
          "page": 2,
          "x0": 108.0,
          "y0": 436.58924,
          "x1": 504.0615917055579,
          "y1": 446.87068448,
          "width": 396.0615917055579,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "or readability while remaining correct.",
          "page": 2,
          "x0": 107.99990000000003,
          "y0": 425.98814448,
          "x1": 268.770396633889,
          "y1": 435.95078448000004,
          "width": 160.77049663388897,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "In this example, ImProver optimizes a human-written",
          "page": 2,
          "x0": 276.839756453569,
          "y0": 425.66934000000003,
          "x1": 504.3014227048956,
          "y1": 435.95078448000004,
          "width": 227.46166625132656,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "lemma (right) from the 2022 International Math Olympiad (Question 2, solution from Comp-",
          "page": 2,
          "x0": 108.0,
          "y0": 415.06824448000003,
          "x1": 505.75748049890035,
          "y1": 425.03088448000005,
          "width": 397.75748049890035,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ﬁles (David Renshaw, 2024)) for length. ImProver’s optimized proof is correct and more concise.",
          "page": 2,
          "x0": 108.0,
          "y0": 403.70924,
          "x1": 499.7703782030139,
          "y1": 413.99068448,
          "width": 391.7703782030139,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "2 RELATED WORK",
          "page": 2,
          "x0": 108.23979999999995,
          "y0": 368.91356640000004,
          "x1": 208.50565864253596,
          "y1": 380.8687664,
          "width": 100.26585864253602,
          "height": 11.95519999999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "2 RELATED WORK",
          "page": 2,
          "x0": 108.23979999999995,
          "y0": 368.91356640000004,
          "x1": 208.50565864253596,
          "y1": 380.8687664,
          "width": 100.26585864253602,
          "height": 11.95519999999999,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Recently there has been wide interest in automating theorem proving in interactive proof assistants;\nsee (Lu et al., 2023; Li et al., 2024) for surveys.",
          "page": 2,
          "x0": 107.99999999999994,
          "y0": 334.78824448,
          "x1": 504.72936206245674,
          "y1": 355.79068448000004,
          "width": 396.7293620624568,
          "height": 21.002440000000036,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Recently there has been wide interest in automating theorem proving in interactive proof assistants;",
          "page": 2,
          "x0": 107.99999999999994,
          "y0": 345.82804448,
          "x1": 504.72936206245674,
          "y1": 355.79068448000004,
          "width": 396.7293620624568,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "see (Lu et al., 2023; Li et al., 2024) for surveys.",
          "page": 2,
          "x0": 107.99999999999994,
          "y0": 334.78824448,
          "x1": 298.05075284918115,
          "y1": 344.75088448,
          "width": 190.0507528491812,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "A typical approach (Polu & Sutskever, 2020) is to train on a large corpus of mathematical proofs\nsuch as Lean’s Mathlib (mathlib Community, 2020; Han et al., 2022; Polu et al., 2022; Lample et al.,\n2022; Yang et al., 2023; Hu et al., 2024). A model learns from the distribution of proofs in the cor-\npus, such as Mathlib-style proofs. Recently, the AlphaProof (AlphaProof & Teams, 2024) system\nwas shown to produce proofs with an arcane, non-human structure and syntax. We consider the\nnew problem of rewriting a proof to optimize a metric, such as rewriting a proof into a more read-\nable or more concise one. Proof optimization is more general than theorem proving, since we can\nalso rewrite an empty proof to optimize correctness. Finally, there is a rich literature on the var-\nied styles of (human) formal proofs (e.g., (Autexier & Dietrich, 2010; Wiedijk, 2004)). Our model,\nImProver, builds on neural theorem proving techniques including full proof generation (Jiang et al.,\n2023; First et al., 2023), conditioning on example proofs (Jiang et al., 2023), retrieval (Yang et al.,\n2023; Thakur et al., 2024), and preceding ﬁle context (First et al., 2023; Hu et al., 2024), as well as\nerror correction (Madaan et al., 2023; Chen et al., 2023) and documentation retrieval (Zhou et al.,\n2023) from code generation. ImProver brings these code generation techniques, along with new\nChain-of-States prompting and meta-programmed contextual information, into a uniﬁed proof opti-\nmization agent.",
          "page": 2,
          "x0": 107.6398439999999,
          "y0": 153.46874447999994,
          "x1": 505.7580729187221,
          "y1": 327.83058448,
          "width": 398.11822891872225,
          "height": 174.3618400000001,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "A typical approach (Polu & Sutskever, 2020) is to train on a large corpus of mathematical proofs",
          "page": 2,
          "x0": 107.63984399999994,
          "y0": 317.86794448,
          "x1": 504.2752605431605,
          "y1": 327.83058448,
          "width": 396.6354165431606,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "such as Lean’s Mathlib (mathlib Community, 2020; Han et al., 2022; Polu et al., 2022; Lample et al.,",
          "page": 2,
          "x0": 107.99984399999994,
          "y0": 306.94804448,
          "x1": 505.2909145521398,
          "y1": 316.91068448000004,
          "width": 397.29107055213984,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "2022; Yang et al., 2023; Hu et al., 2024). A model learns from the distribution of proofs in the cor-",
          "page": 2,
          "x0": 107.99984399999991,
          "y0": 296.02814448000004,
          "x1": 505.7572543228158,
          "y1": 305.99078448000006,
          "width": 397.7574103228159,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "pus, such as Mathlib-style proofs. Recently, the AlphaProof (AlphaProof & Teams, 2024) system",
          "page": 2,
          "x0": 107.99984399999988,
          "y0": 284.98834448,
          "x1": 503.95100358306667,
          "y1": 294.95098448000005,
          "width": 395.9511595830668,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "was shown to produce proofs with an arcane, non-human structure and syntax. We consider the",
          "page": 2,
          "x0": 107.6398439999999,
          "y0": 274.06844448000004,
          "x1": 504.1031417397853,
          "y1": 284.03108448000006,
          "width": 396.4632977397854,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "new problem of rewriting a proof to optimize a metric, such as rewriting a proof into a more read-",
          "page": 2,
          "x0": 107.99984399999994,
          "y0": 263.14814448000004,
          "x1": 505.7578007086814,
          "y1": 273.11078448000006,
          "width": 397.75795670868143,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "able or more concise one. Proof optimization is more general than theorem proving, since we can",
          "page": 2,
          "x0": 107.99984399999994,
          "y0": 252.10834448000003,
          "x1": 504.0617410612135,
          "y1": 262.07098448000005,
          "width": 396.0618970612136,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "also rewrite an empty proof to optimize correctness. Finally, there is a rich literature on the var-",
          "page": 2,
          "x0": 107.99984399999991,
          "y0": 241.18844448000002,
          "x1": 505.7578581933911,
          "y1": 251.15108448000004,
          "width": 397.7580141933912,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ied styles of (human) formal proofs (e.g., (Autexier & Dietrich, 2010; Wiedijk, 2004)). Our model,",
          "page": 2,
          "x0": 107.99984399999994,
          "y0": 230.26854448,
          "x1": 505.41029078731316,
          "y1": 240.23118448000002,
          "width": 397.4104467873132,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ImProver, builds on neural theorem proving techniques including full proof generation (Jiang et al.,",
          "page": 2,
          "x0": 107.99984399999991,
          "y0": 218.90954000000002,
          "x1": 505.2910728682587,
          "y1": 229.19098448000003,
          "width": 397.2912288682588,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "2023; First et al., 2023), conditioning on example proofs (Jiang et al., 2023), retrieval (Yang et al.,",
          "page": 2,
          "x0": 108.00064399999991,
          "y0": 208.30844448,
          "x1": 505.2910055007521,
          "y1": 218.27108448,
          "width": 397.29036150075217,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "2023; Thakur et al., 2024), and preceding ﬁle context (First et al., 2023; Hu et al., 2024), as well as",
          "page": 2,
          "x0": 108.00064399999994,
          "y0": 197.38854447999998,
          "x1": 504.0356270338085,
          "y1": 207.35118448,
          "width": 396.03498303380854,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "error correction (Madaan et al., 2023; Chen et al., 2023) and documentation retrieval (Zhou et al.,",
          "page": 2,
          "x0": 108.00064399999997,
          "y0": 186.34834447999998,
          "x1": 505.2917561768871,
          "y1": 196.31098448,
          "width": 397.2911121768871,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "2023) from code generation. ImProver brings these code generation techniques, along with new",
          "page": 2,
          "x0": 108.000644,
          "y0": 175.10963999999998,
          "x1": 504.47346184827313,
          "y1": 185.39108448,
          "width": 396.47281784827317,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Chain-of-States prompting and meta-programmed contextual information, into a uniﬁed proof opti-",
          "page": 2,
          "x0": 108.00054399999999,
          "y0": 164.50854447999996,
          "x1": 505.7580729187221,
          "y1": 174.47118447999998,
          "width": 397.75752891872213,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "mization agent.",
          "page": 2,
          "x0": 108.00054399999999,
          "y0": 153.46874447999994,
          "x1": 169.5311012526894,
          "y1": 163.43138447999996,
          "width": 61.53055725268942,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "3 AUTOMATED PROOF OPTIMIZATION WITH ImProver",
          "page": 2,
          "x0": 108.240388,
          "y0": 124.23436639999996,
          "x1": 389.98439468364796,
          "y1": 138.67624799999996,
          "width": 281.74400668364797,
          "height": 14.441881600000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "3 AUTOMATED PROOF OPTIMIZATION WITH ImProver",
          "page": 2,
          "x0": 108.240388,
          "y0": 124.23436639999996,
          "x1": 389.98439468364796,
          "y1": 138.67624799999996,
          "width": 281.74400668364797,
          "height": 14.441881600000002,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Automated Proof Optimization. Given a theorem statement x, additional context c, and an initial\nproof y0, proof optimization consists of generating a new proof y that is correct and minimizes (or\nmaximizes) a metric µ(x, c, y0, y) → R.",
          "page": 2,
          "x0": 108.00118799999998,
          "y0": 78.18388134999995,
          "x1": 504.3204630560572,
          "y1": 111.11073615999995,
          "width": 396.3192750560572,
          "height": 32.926854809999995,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Automated Proof Optimization. Given a theorem statement x, additional context c, and an initial",
          "page": 2,
          "x0": 108.00118799999998,
          "y0": 101.02854447999995,
          "x1": 504.0106139899372,
          "y1": 111.11073615999995,
          "width": 396.0094259899372,
          "height": 10.082191679999994,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "proof y0, proof optimization consists of generating a new proof y that is correct and minimizes (or",
          "page": 2,
          "x0": 108.00174800000002,
          "y0": 89.10417134999994,
          "x1": 504.3204630560572,
          "y1": 100.09120975999994,
          "width": 396.31871505605716,
          "height": 10.987038409999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "maximizes) a metric µ(x, c, y0, y) → R.",
          "page": 2,
          "x0": 108.00154800000001,
          "y0": 78.18388134999995,
          "x1": 268.652008,
          "y1": 91.32323999999994,
          "width": 160.65046,
          "height": 13.139358649999991,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "1Code is available at https://github.com/riyazahuja/ImProver.",
          "page": 2,
          "x0": 120.6,
          "y0": 60.20548916,
          "x1": 339.8020359006824,
          "y1": 70.67446756,
          "width": 219.20203590068243,
          "height": 10.468978399999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "1Code is available at https://github.com/riyazahuja/ImProver.",
          "page": 2,
          "x0": 120.6,
          "y0": 60.20548916,
          "x1": 339.8020359006824,
          "y1": 70.67446756,
          "width": 219.20203590068243,
          "height": 10.468978399999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        }
      ]
    },
    {
      "page_num": 3,
      "elements": [
        {
          "text": "By varying the metric, we can perform tasks such as shortening proofs, making them more readable,\nor even automated proving. We consider 3 metrics:",
          "page": 3,
          "x0": 108.0,
          "y0": 686.98834448,
          "x1": 505.41030037860736,
          "y1": 707.99078448,
          "width": 397.41030037860736,
          "height": 21.00243999999998,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "By varying the metric, we can perform tasks such as shortening proofs, making them more readable,",
          "page": 3,
          "x0": 108.0,
          "y0": 698.02814448,
          "x1": 505.41030037860736,
          "y1": 707.99078448,
          "width": 397.41030037860736,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "or even automated proving. We consider 3 metrics:",
          "page": 3,
          "x0": 108.00000000000003,
          "y0": 686.98834448,
          "x1": 311.5289930730539,
          "y1": 696.95098448,
          "width": 203.5289930730539,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Length Metric: The length metric measures the number of tactic invocations in the tactic proof,\naiming to reduce the proof’s length while ensuring its correctness. Note that shorter proofs often\nrepresent more efﬁcient proofs.",
          "page": 3,
          "x0": 108.00000000000003,
          "y0": 648.2282444800001,
          "x1": 505.53082666285553,
          "y1": 680.1502361600001,
          "width": 397.5308266628555,
          "height": 31.92199168000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Length Metric: The length metric measures the number of tactic invocations in the tactic proof,",
          "page": 3,
          "x0": 108.00000000000003,
          "y0": 670.06804448,
          "x1": 505.53082666285553,
          "y1": 680.1502361600001,
          "width": 397.5308266628555,
          "height": 10.08219168000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "aiming to reduce the proof’s length while ensuring its correctness. Note that shorter proofs often",
          "page": 3,
          "x0": 108.0007,
          "y0": 659.14814448,
          "x1": 504.0622457295678,
          "y1": 669.11078448,
          "width": 396.0615457295678,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "represent more efﬁcient proofs.",
          "page": 3,
          "x0": 108.0007,
          "y0": 648.2282444800001,
          "x1": 233.0115970711861,
          "y1": 658.19088448,
          "width": 125.0108970711861,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Readability Metric: We consider a proof to be readable if it\nis written in a declarative\nstyle (Autexier & Dietrich, 2010; Wiedijk, 2004), which is related to the number of independent\nsubproofs in a proof. Concretely, we evaluate this using the ratio of number of explicitly typed\nhave tactics to total number of tactic invocations.",
          "page": 3,
          "x0": 108.0007,
          "y0": 598.4279444800001,
          "x1": 504.3707425656763,
          "y1": 641.3901361600001,
          "width": 396.37004256567633,
          "height": 42.962191680000046,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Readability Metric: We consider a proof to be readable if it",
          "page": 3,
          "x0": 108.0007,
          "y0": 631.3079444800001,
          "x1": 385.2104468602004,
          "y1": 641.3901361600001,
          "width": 277.2097468602004,
          "height": 10.08219168000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "is written in a declarative",
          "page": 3,
          "x0": 390.96091255612043,
          "y0": 631.3079444800001,
          "x1": 504.2241061352115,
          "y1": 641.27058448,
          "width": 113.26319357909108,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "style (Autexier & Dietrich, 2010; Wiedijk, 2004), which is related to the number of independent",
          "page": 3,
          "x0": 108.00079999999997,
          "y0": 620.26774448,
          "x1": 504.3707425656763,
          "y1": 630.23038448,
          "width": 396.36994256567635,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "subproofs in a proof. Concretely, we evaluate this using the ratio of number of explicitly typed",
          "page": 3,
          "x0": 108.00079999999994,
          "y0": 609.34784448,
          "x1": 504.1819937060196,
          "y1": 619.31048448,
          "width": 396.1811937060197,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "have tactics to total number of tactic invocations.",
          "page": 3,
          "x0": 108.00079999999994,
          "y0": 598.4279444800001,
          "x1": 308.61162902252426,
          "y1": 608.7093889600001,
          "width": 200.6108290225243,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Completion Metric: The completion of a proof simply describes its correctness. This is a trivial\nmetric which measures the number of errors present. The completion metric is used for concretely\nviewing proof optimization as a generalization of neural theorem proving.",
          "page": 3,
          "x0": 107.76089999999994,
          "y0": 559.5479444800001,
          "x1": 504.5422952814268,
          "y1": 591.4703361600001,
          "width": 396.78139528142685,
          "height": 31.922391680000032,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Completion Metric: The completion of a proof simply describes its correctness. This is a trivial",
          "page": 3,
          "x0": 108.00079999999994,
          "y0": 581.38814448,
          "x1": 504.130404100415,
          "y1": 591.4703361600001,
          "width": 396.129604100415,
          "height": 10.08219168000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "metric which measures the number of errors present. The completion metric is used for concretely",
          "page": 3,
          "x0": 108.00089999999994,
          "y0": 570.4682444800001,
          "x1": 504.5422952814268,
          "y1": 580.43088448,
          "width": 396.54139528142684,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "viewing proof optimization as a generalization of neural theorem proving.",
          "page": 3,
          "x0": 107.76089999999994,
          "y0": 559.5479444800001,
          "x1": 402.6916499648349,
          "y1": 569.51058448,
          "width": 294.93074996483494,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "3.1",
          "page": 3,
          "x0": 108.24089999999993,
          "y0": 532.42804448,
          "x1": 121.74213622862392,
          "y1": 542.39068448,
          "width": 13.501236228623995,
          "height": 9.962639999999965,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "3.1",
          "page": 3,
          "x0": 108.24089999999993,
          "y0": 532.42804448,
          "x1": 121.74213622862392,
          "y1": 542.39068448,
          "width": 13.501236228623995,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "IMPROVER",
          "page": 3,
          "x0": 132.12101532782393,
          "y0": 532.42804448,
          "x1": 176.6768609074059,
          "y1": 542.39068448,
          "width": 44.555845579581984,
          "height": 9.962639999999965,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "IMPROVER",
          "page": 3,
          "x0": 132.12101532782393,
          "y0": 532.42804448,
          "x1": 176.6768609074059,
          "y1": 542.39068448,
          "width": 44.555845579581984,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "We develop several improvements that can be applied to a black-box LLM generator yout ∼\nG(·|xin), such as GPT-4 (OpenAI et al., 2024), and specify ImProver with respect to these pa-\nrameters. The explicit prompts and templates that are sent to the LLM can be found in (§A).",
          "page": 3,
          "x0": 107.52099999999992,
          "y0": 489.1081444800001,
          "x1": 505.7586358685687,
          "y1": 521.0508097600001,
          "width": 398.2376358685688,
          "height": 31.94266528000003,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "We develop several improvements that can be applied to a black-box LLM generator yout ∼",
          "page": 3,
          "x0": 107.52099999999992,
          "y0": 510.2935184000001,
          "x1": 503.9419712799999,
          "y1": 521.0508097600001,
          "width": 396.42097128,
          "height": 10.75729136000001,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "G(·|xin), such as GPT-4 (OpenAI et al., 2024), and specify ImProver with respect to these pa-",
          "page": 3,
          "x0": 108.00099999999992,
          "y0": 499.3736084000001,
          "x1": 505.7586358685687,
          "y1": 510.1305097600001,
          "width": 397.7576358685688,
          "height": 10.756901360000029,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "rameters. The explicit prompts and templates that are sent to the LLM can be found in (§A).",
          "page": 3,
          "x0": 108.0008299999999,
          "y0": 489.1081444800001,
          "x1": 475.411331382389,
          "y1": 499.0707844800001,
          "width": 367.4105013823891,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "3.1.1 CHAIN-OF-STATES PROMPTING",
          "page": 3,
          "x0": 108.24082999999993,
          "y0": 463.4280444800001,
          "x1": 273.2340315537789,
          "y1": 473.3906844800001,
          "width": 164.99320155377896,
          "height": 9.962640000000022,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "3.1.1 CHAIN-OF-STATES PROMPTING",
          "page": 3,
          "x0": 108.24082999999993,
          "y0": 463.4280444800001,
          "x1": 273.2340315537789,
          "y1": 473.3906844800001,
          "width": 164.99320155377896,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Typical formal proofs are a sequence of tactics (akin to steps) and states that show the hypotheses and\ngoals at each step. The intermediate states often contain valuable information (e.g., an expression\nafter it has been simpliﬁed) that is not present in the tactics. To allow the model to reason about\nthese intermediate goals and hypotheses, we use tools from Lean metaprogramming to automatically\nannotate each proof state as a comment prior to each tactic. We refer to this method as Chain-of-\nStates (CoS) prompting since it makes intermediate states explicit, akin to how chain-of-thought\nprompting (Wei et al., 2022) makes intermediate steps of a solution explicit.",
          "page": 3,
          "x0": 107.64090999999993,
          "y0": 377.6282444800001,
          "x1": 505.8784075979707,
          "y1": 453.4604735200001,
          "width": 398.2374975979708,
          "height": 75.83222904000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Typical formal proofs are a sequence of tactics (akin to steps) and states that show the hypotheses and",
          "page": 3,
          "x0": 107.64090999999993,
          "y0": 443.3882444800001,
          "x1": 504.06256145474083,
          "y1": 453.4604735200001,
          "width": 396.42165145474087,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "goals at each step. The intermediate states often contain valuable information (e.g., an expression",
          "page": 3,
          "x0": 108.00081,
          "y0": 432.4683444800001,
          "x1": 504.1821730644514,
          "y1": 442.4309844800001,
          "width": 396.1813630644514,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "after it has been simpliﬁed) that is not present in the tactics. To allow the model to reason about",
          "page": 3,
          "x0": 108.00081,
          "y0": 421.42814448000007,
          "x1": 504.251082265823,
          "y1": 431.3907844800001,
          "width": 396.250272265823,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "these intermediate goals and hypotheses, we use tools from Lean metaprogramming to automatically",
          "page": 3,
          "x0": 108.00080999999997,
          "y0": 410.5082444800001,
          "x1": 504.5422383807192,
          "y1": 420.4708844800001,
          "width": 396.54142838071925,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "annotate each proof state as a comment prior to each tactic. We refer to this method as Chain-of-",
          "page": 3,
          "x0": 108.00080999999997,
          "y0": 399.5883444800001,
          "x1": 505.8784075979707,
          "y1": 409.6605735200001,
          "width": 397.87759759797075,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "States (CoS) prompting since it makes intermediate states explicit, akin to how chain-of-thought",
          "page": 3,
          "x0": 107.76080999999994,
          "y0": 388.5481444800001,
          "x1": 504.6107776177024,
          "y1": 398.6203735200001,
          "width": 396.8499676177025,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "prompting (Wei et al., 2022) makes intermediate steps of a solution explicit.",
          "page": 3,
          "x0": 108.00000999999992,
          "y0": 377.6282444800001,
          "x1": 410.970703644943,
          "y1": 387.5908844800001,
          "width": 302.9706936449431,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "These states are extracted directly and symbolically from the underlying Lean compilation steps\nusing Lean’s rich metaprogramming suite. The implementation of this extraction system is mod-\neled from the work (Kim Morrison, 2024). Speciﬁcally, in the compiler’s elaboration and eval-\nuation stages – where the parsed theorem code is ﬁrst converted into concrete syntax trees (in\npractice, Syntax objects) and abstract syntax trees (Expr objects) – we convert the CST and\nAST output objects into the relevant proof data and proof states in the form of proof trees\n(Lean.Elab.InfoTree). These proof trees contain detailed context and information on a tactic-\nby-tactic level relating to the modiﬁcation of the proof state, metavariable context, and proof cor-\nrectness.",
          "page": 3,
          "x0": 107.63990999999987,
          "y0": 272.9886444800001,
          "x1": 505.8777839804396,
          "y1": 370.67098448000013,
          "width": 398.2378739804397,
          "height": 97.68234000000001,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "These states are extracted directly and symbolically from the underlying Lean compilation steps",
          "page": 3,
          "x0": 107.64000999999993,
          "y0": 360.7083444800001,
          "x1": 504.0352944527564,
          "y1": 370.67098448000013,
          "width": 396.3952844527564,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "using Lean’s rich metaprogramming suite. The implementation of this extraction system is mod-",
          "page": 3,
          "x0": 108.00000999999992,
          "y0": 349.7884444800001,
          "x1": 505.8777839804396,
          "y1": 359.75108448000015,
          "width": 397.87777398043966,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "eled from the work (Kim Morrison, 2024). Speciﬁcally, in the compiler’s elaboration and eval-",
          "page": 3,
          "x0": 108.00000999999989,
          "y0": 338.7482444800001,
          "x1": 505.7579998375582,
          "y1": 348.7108844800001,
          "width": 397.7579898375583,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "uation stages – where the parsed theorem code is ﬁrst converted into concrete syntax trees (in",
          "page": 3,
          "x0": 108.00000999999992,
          "y0": 327.8283444800001,
          "x1": 504.0604358286678,
          "y1": 337.79098448000013,
          "width": 396.06042582866786,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "practice, Syntax objects) and abstract syntax trees (Expr objects) – we convert the CST and",
          "page": 3,
          "x0": 108.00000999999992,
          "y0": 316.9084444800001,
          "x1": 504.0619271527913,
          "y1": 327.18988896000013,
          "width": 396.0619171527914,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "AST output objects into the relevant proof data and proof states in the form of proof trees",
          "page": 3,
          "x0": 107.63990999999987,
          "y0": 305.8686444800001,
          "x1": 504.0353276462245,
          "y1": 315.83128448000014,
          "width": 396.39541764622464,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "(Lean.Elab.InfoTree). These proof trees contain detailed context and information on a tactic-",
          "page": 3,
          "x0": 107.63990999999987,
          "y0": 294.9483444800001,
          "x1": 505.63734841387515,
          "y1": 305.2297889600001,
          "width": 397.9974384138753,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "by-tactic level relating to the modiﬁcation of the proof state, metavariable context, and proof cor-",
          "page": 3,
          "x0": 108.00006999999988,
          "y0": 284.02844448000013,
          "x1": 505.75776376357663,
          "y1": 293.99108448000015,
          "width": 397.75769376357675,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "rectness.",
          "page": 3,
          "x0": 108.00006999999988,
          "y0": 272.9886444800001,
          "x1": 142.65073046544842,
          "y1": 282.95128448000014,
          "width": 34.65066046544854,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "After state extraction is completed and cached for efﬁcient future access, we annotate the proof text\nitself to contain the intermediate states in the form as comments. Figure 2 shows an example.",
          "page": 3,
          "x0": 107.63991399999988,
          "y0": 245.14844448000014,
          "x1": 504.12977128106695,
          "y1": 266.03138448000016,
          "width": 396.4898572810671,
          "height": 20.88294000000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "After state extraction is completed and cached for efﬁcient future access, we annotate the proof text",
          "page": 3,
          "x0": 107.63991399999988,
          "y0": 256.06874448000013,
          "x1": 504.12977128106695,
          "y1": 266.03138448000016,
          "width": 396.4898572810671,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "itself to contain the intermediate states in the form as comments. Figure 2 shows an example.",
          "page": 3,
          "x0": 107.99991399999988,
          "y0": 245.14844448000014,
          "x1": 479.49124913016794,
          "y1": 255.11108448000016,
          "width": 371.49133513016807,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "This explicit reasoning aims to help the generator model construct more optimized proofs via addi-\ntional symbolic data.",
          "page": 3,
          "x0": 107.63991399999989,
          "y0": 217.18874448000014,
          "x1": 505.7576245668118,
          "y1": 238.19118448000017,
          "width": 398.11771056681187,
          "height": 21.002440000000036,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "This explicit reasoning aims to help the generator model construct more optimized proofs via addi-",
          "page": 3,
          "x0": 107.63991399999989,
          "y0": 228.22854448000015,
          "x1": 505.7576245668118,
          "y1": 238.19118448000017,
          "width": 398.11771056681187,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "tional symbolic data.",
          "page": 3,
          "x0": 108.00091399999988,
          "y0": 217.18874448000014,
          "x1": 191.37153518372827,
          "y1": 227.15138448000016,
          "width": 83.37062118372839,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "3.1.2 OUTPUT FORMATTING.",
          "page": 3,
          "x0": 108.24075799999989,
          "y0": 191.50864448000013,
          "x1": 237.69081799999987,
          "y1": 201.47128448000015,
          "width": 129.45005999999998,
          "height": 9.962640000000022,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "3.1.2 OUTPUT FORMATTING.",
          "page": 3,
          "x0": 108.24075799999989,
          "y0": 191.50864448000013,
          "x1": 237.69081799999987,
          "y1": 201.47128448000015,
          "width": 129.45005999999998,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "LLM outputs often contain ancillary and syntactically invalid content, especially before and after\nthe actual proof. Additionally, by applying additional structure to the LLM outputs, we may hope to\ngenerate more structured proofs. To analyze this hypothesis, we introduce two additional output for-\nmats to the standard str output: flat and structured. The former enforces a tactic sequence\noutput as a list of strings, and the latter enforces a proof tree output as a tree of strings.",
          "page": 3,
          "x0": 108.00115799999986,
          "y0": 127.66894448000012,
          "x1": 505.7582681161254,
          "y1": 181.43148448000017,
          "width": 397.75711011612555,
          "height": 53.762540000000044,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "LLM outputs often contain ancillary and syntactically invalid content, especially before and after",
          "page": 3,
          "x0": 108.00115799999988,
          "y0": 171.46884448000014,
          "x1": 504.19774798370514,
          "y1": 181.43148448000017,
          "width": 396.1965899837053,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "the actual proof. Additionally, by applying additional structure to the LLM outputs, we may hope to",
          "page": 3,
          "x0": 108.00115799999986,
          "y0": 160.54854448000015,
          "x1": 503.9418198800777,
          "y1": 170.51118448000017,
          "width": 395.9406618800778,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "generate more structured proofs. To analyze this hypothesis, we introduce two additional output for-",
          "page": 3,
          "x0": 108.00115799999989,
          "y0": 149.50874448000013,
          "x1": 505.7582681161254,
          "y1": 159.47138448000015,
          "width": 397.75711011612555,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "mats to the standard str output: flat and structured. The former enforces a tactic sequence",
          "page": 3,
          "x0": 108.00115799999989,
          "y0": 138.58884448000012,
          "x1": 504.2254325068415,
          "y1": 148.87028896000012,
          "width": 396.22427450684165,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "output as a list of strings, and the latter enforces a proof tree output as a tree of strings.",
          "page": 3,
          "x0": 108.00135799999987,
          "y0": 127.66894448000012,
          "x1": 452.85231701609246,
          "y1": 137.63158448000013,
          "width": 344.8509590160926,
          "height": 9.962640000000007,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "3.1.3 SAMPLING METHOD",
          "page": 3,
          "x0": 108.24135799999985,
          "y0": 101.86894448000012,
          "x1": 227.27543326326088,
          "y1": 111.83158448000012,
          "width": 119.03407526326103,
          "height": 9.962639999999993,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "3.1.3 SAMPLING METHOD",
          "page": 3,
          "x0": 108.24135799999985,
          "y0": 101.86894448000012,
          "x1": 227.27543326326088,
          "y1": 111.83158448000012,
          "width": 119.03407526326103,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "We also introduce different methods of sampling between many (sequential or parallel) LLM infer-\nence calls, involving best-of-n and iterative reﬁnement implementations, as well as combinations\nthereof.",
          "page": 3,
          "x0": 107.52141799999987,
          "y0": 59.98894448000012,
          "x1": 505.75902962373283,
          "y1": 91.79138448000012,
          "width": 398.23761162373296,
          "height": 31.802439999999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "We also introduce different methods of sampling between many (sequential or parallel) LLM infer-",
          "page": 3,
          "x0": 107.52141799999987,
          "y0": 81.82874448000013,
          "x1": 505.75902962373283,
          "y1": 91.79138448000012,
          "width": 398.23761162373296,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ence calls, involving best-of-n and iterative reﬁnement implementations, as well as combinations",
          "page": 3,
          "x0": 108.00241799999992,
          "y0": 70.90884448000013,
          "x1": 504.39836829045134,
          "y1": 80.87148448000012,
          "width": 396.3959502904514,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "thereof.",
          "page": 3,
          "x0": 108.00241799999989,
          "y0": 59.98894448000012,
          "x1": 138.93308029592365,
          "y1": 69.95158448000012,
          "width": 30.930662295923753,
          "height": 9.96264,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        }
      ]
    },
    {
      "page_num": 4,
      "elements": [
        {
          "text": "Without Chain-of-States",
          "page": 4,
          "x0": 107.52,
          "y0": 698.14769616,
          "x1": 211.9551533566447,
          "y1": 708.1103361600001,
          "width": 104.4351533566447,
          "height": 9.962640000000079,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Without Chain-of-States",
          "page": 4,
          "x0": 107.52,
          "y0": 698.14769616,
          "x1": 211.9551533566447,
          "y1": 708.1103361600001,
          "width": 104.4351533566447,
          "height": 9.962640000000079,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "With Chain-of-States",
          "page": 4,
          "x0": 308.27979999999997,
          "y0": 698.1475961599999,
          "x1": 399.0352965669157,
          "y1": 708.11023616,
          "width": 90.75549656691572,
          "height": 9.962640000000079,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "With Chain-of-States",
          "page": 4,
          "x0": 308.27979999999997,
          "y0": 698.1475961599999,
          "x1": 399.0352965669157,
          "y1": 708.11023616,
          "width": 90.75549656691572,
          "height": 9.962640000000079,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "example : s ∩ t ∪ s ∩ u ⊆ s ∩ (t ∪ u) := by",
          "page": 4,
          "x0": 108.0,
          "y0": 684.5365375,
          "x1": 300.104318275827,
          "y1": 691.9567139,
          "width": 192.10431827582698,
          "height": 7.420176399999946,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "example : s ∩ t ∪ s ∩ u ⊆ s ∩ (t ∪ u) := by",
          "page": 4,
          "x0": 108.0,
          "y0": 684.5365375,
          "x1": 300.104318275827,
          "y1": 691.9567139,
          "width": 192.10431827582698,
          "height": 7.420176399999946,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "example : s ∩ t ∪ s ∩ u ⊆ s ∩ (t ∪ u)",
          "page": 4,
          "x0": 308.88,
          "y0": 683.9365375,
          "x1": 471.5845138673519,
          "y1": 691.3567138999999,
          "width": 162.70451386735192,
          "height": 7.420176399999946,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "example : s ∩ t ∪ s ∩ u ⊆ s ∩ (t ∪ u)",
          "page": 4,
          "x0": 308.88,
          "y0": 683.9365375,
          "x1": 471.5845138673519,
          "y1": 691.3567138999999,
          "width": 162.70451386735192,
          "height": 7.420176399999946,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": ":= by",
          "page": 4,
          "x0": 480.0,
          "y0": 684.3828639,
          "x1": 500.984293867352,
          "y1": 691.3567138999999,
          "width": 20.984293867351994,
          "height": 6.97384999999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": ":= by",
          "page": 4,
          "x0": 480.0,
          "y0": 684.3828639,
          "x1": 500.984293867352,
          "y1": 691.3567138999999,
          "width": 20.984293867351994,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "rintro x (hxs, xti | hxs, xui)\n· use xs; left; exact xt\n. use xs; right; exact xu",
          "page": 4,
          "x0": 116.39977999999994,
          "y0": 660.9828639,
          "x1": 236.26408999999995,
          "y1": 683.9167139,
          "width": 119.86431000000002,
          "height": 22.933850000000007,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "rintro x (hxs, xti | hxs, xui)",
          "page": 4,
          "x0": 116.4,
          "y0": 676.4965375,
          "x1": 236.26408999999995,
          "y1": 683.9167139,
          "width": 119.86408999999995,
          "height": 7.420176399999946,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "rintro x (hxs, xti | hxs, xui)\n/-\ncase inl.intro\nα : Type u_1\ns t u : Set α\nx : α\nxs : x ∈ s\nxt : x ∈ t\n⊢ x ∈ s ∩ (t ∪ u)\ncase inr.intro\nα : Type u_1\ns t u : Set α\nx : α\nxs : x ∈ s\nxu : x ∈ u\n⊢ x ∈ s ∩ (t ∪ u)\n-/\n· use xs; left; exact xt\n/-\nGoals Solved!\n-/\n. use xs; right; exact xu\n/-\nGoals Solved!\n-/",
          "page": 4,
          "x0": 317.1599600000001,
          "y0": 485.1827139,
          "x1": 437.02407000000005,
          "y1": 683.4367139,
          "width": 119.86410999999993,
          "height": 198.25399999999996,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "rintro x (hxs, xti | hxs, xui)",
          "page": 4,
          "x0": 317.16,
          "y0": 676.0165375,
          "x1": 437.02407000000005,
          "y1": 683.4367139,
          "width": 119.86407000000003,
          "height": 7.420176399999946,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "· use xs; left; exact xt",
          "page": 4,
          "x0": 116.39977999999994,
          "y0": 668.5766175,
          "x1": 215.024318275827,
          "y1": 675.9967939,
          "width": 98.62453827582706,
          "height": 7.420176399999946,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "/-",
          "page": 4,
          "x0": 317.16,
          "y0": 668.5428639,
          "x1": 325.544318275827,
          "y1": 675.5167139,
          "width": 8.384318275826956,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": ". use xs; right; exact xu",
          "page": 4,
          "x0": 116.39979999999998,
          "y0": 660.9828639,
          "x1": 221.024318275827,
          "y1": 667.9568739,
          "width": 104.62451827582701,
          "height": 6.974010000000021,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "case inl.intro",
          "page": 4,
          "x0": 317.16,
          "y0": 660.5030239,
          "x1": 375.824488566255,
          "y1": 667.4768739,
          "width": 58.66448856625499,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "α : Type u_1",
          "page": 4,
          "x0": 317.16,
          "y0": 652.3738883999999,
          "x1": 368.384607652235,
          "y1": 659.5569538999999,
          "width": 51.224607652234965,
          "height": 7.183065499999998,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "s t u : Set α",
          "page": 4,
          "x0": 317.16,
          "y0": 644.3336584,
          "x1": 372.6146967,
          "y1": 651.5167239,
          "width": 55.4546967,
          "height": 7.183065499999998,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "x : α",
          "page": 4,
          "x0": 317.16,
          "y0": 636.4137383999999,
          "x1": 339.13459670000003,
          "y1": 643.5968038999999,
          "width": 21.974596700000006,
          "height": 7.183065499999998,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "xs : x ∈ s",
          "page": 4,
          "x0": 317.16,
          "y0": 628.1367875,
          "x1": 360.22441000000003,
          "y1": 635.5569638999999,
          "width": 43.06441000000001,
          "height": 7.420176399999946,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "xt : x ∈ t",
          "page": 4,
          "x0": 317.1600000000001,
          "y0": 620.2168674999999,
          "x1": 360.2244100000001,
          "y1": 627.6370438999999,
          "width": 43.06441000000001,
          "height": 7.420176399999946,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "⊢ x ∈ s ∩ (t ∪ u)",
          "page": 4,
          "x0": 317.1600000000001,
          "y0": 612.2965575,
          "x1": 392.62439827582705,
          "y1": 619.7167338999999,
          "width": 75.46439827582697,
          "height": 7.420176399999946,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "case inr.intro",
          "page": 4,
          "x0": 317.1599800000001,
          "y0": 604.7030438999999,
          "x1": 375.82446856625506,
          "y1": 611.6768938999999,
          "width": 58.66448856625499,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "α : Type u_1",
          "page": 4,
          "x0": 317.1599800000001,
          "y0": 596.5739083999998,
          "x1": 368.38458765223504,
          "y1": 603.7569738999998,
          "width": 51.224607652234965,
          "height": 7.183065499999998,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "s t u : Set α",
          "page": 4,
          "x0": 317.1599800000001,
          "y0": 588.5336783999999,
          "x1": 372.6146767000001,
          "y1": 595.7167438999999,
          "width": 55.4546967,
          "height": 7.183065499999998,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "x : α",
          "page": 4,
          "x0": 317.1599800000001,
          "y0": 580.6137583999998,
          "x1": 339.1345767000001,
          "y1": 587.7968238999998,
          "width": 21.974596700000006,
          "height": 7.183065499999998,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "xs : x ∈ s",
          "page": 4,
          "x0": 317.1599800000001,
          "y0": 572.4567274999998,
          "x1": 360.2243900000001,
          "y1": 579.8769038999998,
          "width": 43.06441000000001,
          "height": 7.420176399999946,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "xu : x ∈ u",
          "page": 4,
          "x0": 317.15998000000013,
          "y0": 564.4168874999998,
          "x1": 360.22439000000014,
          "y1": 571.8370638999997,
          "width": 43.06441000000001,
          "height": 7.420176399999946,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "⊢ x ∈ s ∩ (t ∪ u)",
          "page": 4,
          "x0": 317.15998000000013,
          "y0": 556.4969674999998,
          "x1": 392.6243782758271,
          "y1": 563.9171438999997,
          "width": 75.46439827582697,
          "height": 7.420176399999946,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "-/",
          "page": 4,
          "x0": 317.1599600000001,
          "y0": 548.9030638999998,
          "x1": 325.5442782758271,
          "y1": 555.8769138999997,
          "width": 8.384318275826956,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "· use xs; left; exact xt",
          "page": 4,
          "x0": 317.16,
          "y0": 540.5365375,
          "x1": 415.78429386735195,
          "y1": 547.9567139,
          "width": 98.62429386735192,
          "height": 7.420176399999946,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "/-",
          "page": 4,
          "x0": 317.16,
          "y0": 532.9428639,
          "x1": 325.544318275827,
          "y1": 539.9167139,
          "width": 8.384318275826956,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Goals Solved!",
          "page": 4,
          "x0": 317.16,
          "y0": 525.0225539,
          "x1": 371.624480290428,
          "y1": 531.9964039,
          "width": 54.46448029042796,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "-/",
          "page": 4,
          "x0": 317.16,
          "y0": 517.1022439000001,
          "x1": 325.544318275827,
          "y1": 524.0760939,
          "width": 8.384318275826956,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": ". use xs; right; exact xu",
          "page": 4,
          "x0": 317.16,
          "y0": 509.0628639,
          "x1": 421.78429386735195,
          "y1": 516.0367139,
          "width": 104.62429386735192,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "/-",
          "page": 4,
          "x0": 317.16,
          "y0": 501.1428639,
          "x1": 325.544318275827,
          "y1": 508.1167139,
          "width": 8.384318275826956,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Goals Solved!",
          "page": 4,
          "x0": 317.16,
          "y0": 493.1026339,
          "x1": 371.624480290428,
          "y1": 500.07648389999997,
          "width": 54.46448029042796,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "-/",
          "page": 4,
          "x0": 317.16,
          "y0": 485.1827139,
          "x1": 325.544318275827,
          "y1": 492.1565639,
          "width": 8.384318275826956,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Figure 2: A Lean proof (left) with Chain-of-States prompting annotations (right).",
          "page": 4,
          "x0": 144.24,
          "y0": 467.50814448,
          "x1": 467.9705957554711,
          "y1": 477.47078448,
          "width": 323.7305957554711,
          "height": 9.962640000000022,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Figure 2: A Lean proof (left) with Chain-of-States prompting annotations (right).",
          "page": 4,
          "x0": 144.24,
          "y0": 467.50814448,
          "x1": 467.9705957554711,
          "y1": 477.47078448,
          "width": 323.7305957554711,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Best-of-n The best-of-n technique generates multiple (n) calls to the language model and selects\nthe “best” via a simple selection policy that ﬁrst prioritizes output correctness, and secondly priori-\ntizes the evaluated metric delta score. More speciﬁcally, our scoring function is given by the 2-ary\ncomparison function S, whose arguments are output objects y, y′.",
          "page": 4,
          "x0": 107.99974000000009,
          "y0": 410.62814448,
          "x1": 505.87772938225885,
          "y1": 453.59033616,
          "width": 397.87798938225876,
          "height": 42.96219167999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Best-of-n The best-of-n technique generates multiple (n) calls to the language model and selects",
          "page": 4,
          "x0": 108.0,
          "y0": 443.50814448,
          "x1": 504.03595597522445,
          "y1": 453.59033616,
          "width": 396.03595597522445,
          "height": 10.082191679999994,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "the “best” via a simple selection policy that ﬁrst prioritizes output correctness, and secondly priori-",
          "page": 4,
          "x0": 107.9999,
          "y0": 432.46834448,
          "x1": 505.87772938225885,
          "y1": 442.43098448,
          "width": 397.8778293822588,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "tizes the evaluated metric delta score. More speciﬁcally, our scoring function is given by the 2-ary",
          "page": 4,
          "x0": 107.99990000000003,
          "y0": 421.22924,
          "x1": 504.54105530558564,
          "y1": 431.51068448,
          "width": 396.5411553055856,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "comparison function S, whose arguments are output objects y, y′.",
          "page": 4,
          "x0": 107.99974000000009,
          "y0": 410.62814448,
          "x1": 369.57085000000006,
          "y1": 421.63038750000004,
          "width": 261.57111,
          "height": 11.002243020000037,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "max(y, y′, key: x 7→ µ(x)), E(y) = E(y′) = 0\ny,\ny′,\nmin(y, y′, key: x 7→ E(x)), E(y) = E(y′) > 0",
          "page": 4,
          "x0": 228.83921999999995,
          "y0": 340.82916,
          "x1": 426.7807199999998,
          "y1": 391.6303275,
          "width": 197.94149999999985,
          "height": 50.80116750000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "max(y, y′, key: x 7→ µ(x)), E(y) = E(y′) = 0",
          "page": 4,
          "x0": 228.8396800000001,
          "y0": 380.18936,
          "x1": 426.78031068767996,
          "y1": 391.6303275,
          "width": 197.94063068767986,
          "height": 11.4409675,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": " ",
          "page": 4,
          "x0": 219.9599900000001,
          "y0": 332.60744159999996,
          "x1": 228.8068143200001,
          "y1": 381.4501616,
          "width": 8.846824319999996,
          "height": 48.84272000000004,
          "element_type": "LTTextBoxVertical",
          "depth": 0
        },
        {
          "text": " ",
          "page": 4,
          "x0": 219.9599900000001,
          "y0": 332.60744159999996,
          "x1": 228.8068143200001,
          "y1": 381.4501616,
          "width": 8.846824319999996,
          "height": 48.84272000000004,
          "element_type": "LTTextLineVertical",
          "depth": 1
        },
        {
          "text": "E(y) = 0, E(y′) > 0\nE(y) > 0, E(y′) = 0",
          "page": 4,
          "x0": 350.639251104,
          "y0": 353.90926,
          "x1": 436.26114930536,
          "y1": 378.4303075,
          "width": 85.62189820136001,
          "height": 24.52104750000001,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "E(y) = 0, E(y′) > 0",
          "page": 4,
          "x0": 350.63935128511196,
          "y0": 367.10926,
          "x1": 436.26093,
          "y1": 378.4303075,
          "width": 85.62157871488802,
          "height": 11.32104750000002,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "y,",
          "page": 4,
          "x0": 228.83921999999995,
          "y0": 367.44798976,
          "x1": 236.87895391711197,
          "y1": 377.41062976,
          "width": 8.039733917112017,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "S(y, y′) =",
          "page": 4,
          "x0": 174.60019000000008,
          "y0": 360.62924000000004,
          "x1": 217.26068151168008,
          "y1": 372.5502875,
          "width": 42.66049151167999,
          "height": 11.921047499999986,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "S(y, y′) =",
          "page": 4,
          "x0": 174.60019000000008,
          "y0": 360.62924000000004,
          "x1": 217.26068151168008,
          "y1": 372.5502875,
          "width": 42.66049151167999,
          "height": 11.921047499999986,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "y′,",
          "page": 4,
          "x0": 228.83961,
          "y0": 354.24798976,
          "x1": 239.63950128000002,
          "y1": 365.23030750000004,
          "width": 10.799891280000026,
          "height": 10.982317740000042,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "E(y) > 0, E(y′) = 0",
          "page": 4,
          "x0": 350.639251104,
          "y0": 353.90926,
          "x1": 436.26114930536,
          "y1": 365.23030750000004,
          "width": 85.62189820136001,
          "height": 11.32104750000002,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "min(y, y′, key: x 7→ E(x)), E(y) = E(y′) > 0",
          "page": 4,
          "x0": 228.83969,
          "y0": 340.82916,
          "x1": 426.7807199999998,
          "y1": 352.1502075,
          "width": 197.9410299999998,
          "height": 11.32104750000002,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Where µ(x) is the metric score of x, and E(x) is the number of errors in x.",
          "page": 4,
          "x0": 107.51939999999985,
          "y0": 315.50926,
          "x1": 407.60865999999976,
          "y1": 325.81062976,
          "width": 300.0892599999999,
          "height": 10.30136976,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Where µ(x) is the metric score of x, and E(x) is the number of errors in x.",
          "page": 4,
          "x0": 107.51939999999985,
          "y0": 315.50926,
          "x1": 407.60865999999976,
          "y1": 325.81062976,
          "width": 300.0892599999999,
          "height": 10.30136976,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "This comparison function can be extended to evaluate the best output of any ﬁnite n via induction.",
          "page": 4,
          "x0": 107.63899999999978,
          "y0": 298.90816448,
          "x1": 499.7701493362105,
          "y1": 308.89072976,
          "width": 392.13114933621074,
          "height": 9.982565280000017,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "This comparison function can be extended to evaluate the best output of any ﬁnite n via induction.",
          "page": 4,
          "x0": 107.63899999999978,
          "y0": 298.90816448,
          "x1": 499.7701493362105,
          "y1": 308.89072976,
          "width": 392.13114933621074,
          "height": 9.982565280000017,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "This best-of-n technique is implemented as a curried function such that each of the n calls can be\nhandled by any arbitrary sampling method, or just a single standard prompt at user discretion. It\nutilizes thread-based parallelism to speed up the relatively large number of calls to the language\nmodel, as well as process-based parallelism for the n evaluation calls to the Lean language server.",
          "page": 4,
          "x0": 107.6381999999997,
          "y0": 249.10826447999997,
          "x1": 504.2223621634564,
          "y1": 291.97082976,
          "width": 396.5841621634567,
          "height": 42.86256528000004,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "This best-of-n technique is implemented as a curried function such that each of the n calls can be",
          "page": 4,
          "x0": 107.6381999999997,
          "y0": 281.98826448,
          "x1": 504.1014176856576,
          "y1": 291.97082976,
          "width": 396.4632176856579,
          "height": 9.982565280000017,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "handled by any arbitrary sampling method, or just a single standard prompt at user discretion. It",
          "page": 4,
          "x0": 107.99791999999968,
          "y0": 271.06836448,
          "x1": 504.0075357425829,
          "y1": 281.03100448000004,
          "width": 396.0096157425832,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "utilizes thread-based parallelism to speed up the relatively large number of calls to the language",
          "page": 4,
          "x0": 107.99791999999971,
          "y0": 260.02816448,
          "x1": 504.2223621634564,
          "y1": 269.99080448,
          "width": 396.22444216345673,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "model, as well as process-based parallelism for the n evaluation calls to the Lean language server.",
          "page": 4,
          "x0": 107.99791999999971,
          "y0": 249.10826447999997,
          "x1": 497.72853305193854,
          "y1": 259.09082975999996,
          "width": 389.7306130519388,
          "height": 9.982565279999989,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Error correction and Reﬁnement\nInspired by self-debugging techniques in code genera-\ntion (Madaan et al., 2023; Chen et al., 2023), ImProver identiﬁes and corrects errors in the gen-\nerated proofs by iteratively reﬁning its outputs. The reﬁnement process relies on user-deﬁned pa-\nrameters n and prev_num to specify the number of iterations and the number of previous iteration\ninfo to forward, respectively. Each iteration carries information on the last prev_num iterations,\nincluding input, output, metric score, correctness, and error messages.",
          "page": 4,
          "x0": 107.9976399999997,
          "y0": 168.46856447999997,
          "x1": 505.8756471734309,
          "y1": 233.39045615999999,
          "width": 397.8780071734312,
          "height": 64.92189168000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Error correction and Reﬁnement",
          "page": 4,
          "x0": 107.99783999999974,
          "y0": 223.42781615999996,
          "x1": 258.79525687309655,
          "y1": 233.39045615999999,
          "width": 150.7974168730968,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Inspired by self-debugging techniques in code genera-",
          "page": 4,
          "x0": 268.7978399999997,
          "y0": 223.30826447999996,
          "x1": 505.8756471734309,
          "y1": 233.27090447999998,
          "width": 237.07780717343115,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "tion (Madaan et al., 2023; Chen et al., 2023), ImProver identiﬁes and corrects errors in the gen-",
          "page": 4,
          "x0": 107.99783999999971,
          "y0": 211.94966,
          "x1": 505.75541766198313,
          "y1": 222.23110448,
          "width": 397.7575776619834,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "erated proofs by iteratively reﬁning its outputs. The reﬁnement process relies on user-deﬁned pa-",
          "page": 4,
          "x0": 107.99783999999971,
          "y0": 201.34816447999998,
          "x1": 505.7551685986072,
          "y1": 211.31080448,
          "width": 397.7573285986075,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "rameters n and prev_num to specify the number of iterations and the number of previous iteration",
          "page": 4,
          "x0": 107.99783999999971,
          "y0": 190.42826447999997,
          "x1": 504.05924837410896,
          "y1": 200.70970895999997,
          "width": 396.06140837410925,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "info to forward, respectively. Each iteration carries information on the last prev_num iterations,",
          "page": 4,
          "x0": 107.99783999999977,
          "y0": 179.38846447999998,
          "x1": 505.40828901778815,
          "y1": 189.66990896,
          "width": 397.4104490177884,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "including input, output, metric score, correctness, and error messages.",
          "page": 4,
          "x0": 107.9976399999997,
          "y0": 168.46856447999997,
          "x1": 386.7284757207013,
          "y1": 178.43120448,
          "width": 278.7308357207016,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "The reﬁnement technique iteratively improves the prompt output by feeding back the results into\nthe prompt function, additionally forwarding errors and metric scores. Similar to the best-of-n tech-\nnique, it relies on an argument n for the number of reﬁnement steps, and is curried such that each\nreﬁnement step can be handled by any other prompting function. However, unlike best-of-n, there is\nno opportunity for parallelism as each iteration is dependent on information from the previous call.",
          "page": 4,
          "x0": 107.63663999999969,
          "y0": 107.74836447999996,
          "x1": 505.7544687190605,
          "y1": 161.51090448,
          "width": 398.11782871906087,
          "height": 53.76254000000003,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "The reﬁnement technique iteratively improves the prompt output by feeding back the results into",
          "page": 4,
          "x0": 107.63663999999969,
          "y0": 151.54826447999997,
          "x1": 504.0578409407092,
          "y1": 161.51090448,
          "width": 396.42120094070947,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "the prompt function, additionally forwarding errors and metric scores. Similar to the best-of-n tech-",
          "page": 4,
          "x0": 107.9966399999997,
          "y0": 140.62836447999996,
          "x1": 505.7544687190605,
          "y1": 150.59100447999998,
          "width": 397.75782871906085,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "nique, it relies on an argument n for the number of reﬁnement steps, and is curried such that each",
          "page": 4,
          "x0": 107.9966399999997,
          "y0": 129.58856447999995,
          "x1": 504.0581025209789,
          "y1": 139.57112975999996,
          "width": 396.06146252097915,
          "height": 9.982565280000017,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "reﬁnement step can be handled by any other prompting function. However, unlike best-of-n, there is",
          "page": 4,
          "x0": 107.9967199999997,
          "y0": 118.66866447999996,
          "x1": 504.03229098930666,
          "y1": 128.63130447999995,
          "width": 396.03557098930696,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "no opportunity for parallelism as each iteration is dependent on information from the previous call.",
          "page": 4,
          "x0": 107.9967199999997,
          "y0": 107.74836447999996,
          "x1": 502.04734526069643,
          "y1": 117.71100447999996,
          "width": 394.05062526069673,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Combination Sampling and Compound Prompt Functions Compound prompt functions utilize\nthe curried nature of the implementations of best-of-n and reﬁnement to nest these techniques within\none another. For example:",
          "page": 4,
          "x0": 107.9967199999997,
          "y0": 59.98866447999996,
          "x1": 504.0582670980756,
          "y1": 91.91065615999996,
          "width": 396.0615470980759,
          "height": 31.921991679999998,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Combination Sampling and Compound Prompt Functions Compound prompt functions utilize",
          "page": 4,
          "x0": 107.9967199999997,
          "y0": 81.82846447999997,
          "x1": 503.97987637606207,
          "y1": 91.91065615999996,
          "width": 395.98315637606237,
          "height": 10.082191679999994,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "the curried nature of the implementations of best-of-n and reﬁnement to nest these techniques within",
          "page": 4,
          "x0": 107.9967199999997,
          "y0": 70.90856447999997,
          "x1": 504.0582670980756,
          "y1": 80.87120447999996,
          "width": 396.0615470980759,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "one another. For example:",
          "page": 4,
          "x0": 107.9967199999997,
          "y0": 59.98866447999996,
          "x1": 212.5261618239456,
          "y1": 69.95130447999996,
          "width": 104.52944182394592,
          "height": 9.96264,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        }
      ]
    },
    {
      "page_num": 5,
      "elements": [
        {
          "text": "best_of_n((refinement,m),n) is a compound sampling method that run a best-of-n,\nwhere each call is a m-step reﬁnement.",
          "page": 5,
          "x0": 107.63999999999999,
          "y0": 686.98834448,
          "x1": 505.53065999999995,
          "y1": 708.30958896,
          "width": 397.89065999999997,
          "height": 21.32124448000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "best_of_n((refinement,m),n) is a compound sampling method that run a best-of-n,",
          "page": 5,
          "x0": 108.0,
          "y0": 698.02814448,
          "x1": 505.53065999999995,
          "y1": 708.30958896,
          "width": 397.53065999999995,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "where each call is a m-step reﬁnement.",
          "page": 5,
          "x0": 107.63999999999999,
          "y0": 686.98834448,
          "x1": 264.0905739783571,
          "y1": 696.97090976,
          "width": 156.4505739783571,
          "height": 9.982565280000017,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "refinement((best_of_n,m),n) is a compound sampling method that runs a n-step reﬁne-\nment, where each call is a best-of-m call to the LLM.",
          "page": 5,
          "x0": 108.00016,
          "y0": 659.14814448,
          "x1": 505.7577751482061,
          "y1": 680.34948896,
          "width": 397.7576151482061,
          "height": 21.20134447999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "refinement((best_of_n,m),n) is a compound sampling method that runs a n-step reﬁne-",
          "page": 5,
          "x0": 108.00016000000001,
          "y0": 670.06804448,
          "x1": 505.7577751482061,
          "y1": 680.34948896,
          "width": 397.7576151482061,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ment, where each call is a best-of-m call to the LLM.",
          "page": 5,
          "x0": 108.00016,
          "y0": 659.14814448,
          "x1": 320.9703895032073,
          "y1": 669.1307097600001,
          "width": 212.9702295032073,
          "height": 9.982565280000017,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Note that with each of these compound prompt functions, there are always a total of mn iterations.",
          "page": 5,
          "x0": 107.99996000000002,
          "y0": 642.2282444800001,
          "x1": 501.69040901778845,
          "y1": 652.2108097600001,
          "width": 393.6904490177884,
          "height": 9.982565280000017,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Note that with each of these compound prompt functions, there are always a total of mn iterations.",
          "page": 5,
          "x0": 107.99996000000002,
          "y0": 642.2282444800001,
          "x1": 501.69040901778845,
          "y1": 652.2108097600001,
          "width": 393.6904490177884,
          "height": 9.982565280000017,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "3.1.4 RETRIEVAL",
          "page": 5,
          "x0": 108.23976000000005,
          "y0": 617.7481444800001,
          "x1": 189.06966261003404,
          "y1": 627.71078448,
          "width": 80.829902610034,
          "height": 9.962639999999965,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "3.1.4 RETRIEVAL",
          "page": 5,
          "x0": 108.23976000000005,
          "y0": 617.7481444800001,
          "x1": 189.06966261003404,
          "y1": 627.71078448,
          "width": 80.829902610034,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ImProver uses MMR (Maximum Marginal Relevance)-based (Carbonell & Goldstein, 1998)\nretrieval-augmented generation to select relevant examples and documents.",
          "page": 5,
          "x0": 107.99996000000004,
          "y0": 587.26814448,
          "x1": 504.6775328351137,
          "y1": 608.27098448,
          "width": 396.67757283511366,
          "height": 21.002839999999992,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "ImProver uses MMR (Maximum Marginal Relevance)-based (Carbonell & Goldstein, 1998)",
          "page": 5,
          "x0": 107.99996000000004,
          "y0": 597.98954,
          "x1": 504.6775328351137,
          "y1": 608.27098448,
          "width": 396.67757283511366,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "retrieval-augmented generation to select relevant examples and documents.",
          "page": 5,
          "x0": 107.99996000000004,
          "y0": 587.26814448,
          "x1": 407.01044453733175,
          "y1": 597.23078448,
          "width": 299.0104845373317,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "More speciﬁcally, example retrieval selects the most relevant user-generated examples of proof op-\ntimization on a speciﬁc metric. Namely, each metric is loaded with a cached (vector) database\npopulated with human-made examples of preoptimized and postoptimized pairs of Lean theorems.\nThe number of examples that are retrieved is user-speciﬁed.",
          "page": 5,
          "x0": 107.63996000000003,
          "y0": 537.4686444800001,
          "x1": 505.8907092130482,
          "y1": 580.31088448,
          "width": 398.25074921304815,
          "height": 42.84223999999995,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "More speciﬁcally, example retrieval selects the most relevant user-generated examples of proof op-",
          "page": 5,
          "x0": 107.99996000000002,
          "y0": 570.3482444800001,
          "x1": 505.7580654165121,
          "y1": 580.31088448,
          "width": 397.7581054165121,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "timization on a speciﬁc metric. Namely, each metric is loaded with a cached (vector) database",
          "page": 5,
          "x0": 107.99996000000004,
          "y0": 559.4283444800001,
          "x1": 504.1038353368153,
          "y1": 569.39098448,
          "width": 396.10387533681524,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "populated with human-made examples of preoptimized and postoptimized pairs of Lean theorems.",
          "page": 5,
          "x0": 107.99996000000004,
          "y0": 548.5084444800001,
          "x1": 505.8907092130482,
          "y1": 558.4710844800001,
          "width": 397.89074921304814,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "The number of examples that are retrieved is user-speciﬁed.",
          "page": 5,
          "x0": 107.63996000000003,
          "y0": 537.4686444800001,
          "x1": 345.9302013431251,
          "y1": 547.43128448,
          "width": 238.29024134312505,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Document retrieval extracts information using MMR from a pair of ﬁxed (vector) databases. The\ndatabases store semantically chunked data from the Theorem Proving in Lean (TPiL) handbook –\ncontaining syntax guides and tactic explanations – and the Mathlib mathematics libary – containing\nthousands of theorems and lemmas. The chunking is handled by a recursive character splitter, which\nsplits the TPiL markdown ﬁles at on its headers and Mathlib ﬁles at the start of theorems, examples,\nlemmas, and deﬁnitions – with chunk sizes of 1000 characters with a 200 character overlap.",
          "page": 5,
          "x0": 108.00011600000002,
          "y0": 465.8285444800001,
          "x1": 505.50199106958246,
          "y1": 530.51098448,
          "width": 397.5018750695824,
          "height": 64.68243999999993,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Document retrieval extracts information using MMR from a pair of ﬁxed (vector) databases. The",
          "page": 5,
          "x0": 108.00011600000003,
          "y0": 520.5483444800001,
          "x1": 504.1035135286009,
          "y1": 530.51098448,
          "width": 396.10339752860085,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "databases store semantically chunked data from the Theorem Proving in Lean (TPiL) handbook –",
          "page": 5,
          "x0": 108.00011600000005,
          "y0": 509.6284444800001,
          "x1": 505.50199106958246,
          "y1": 519.5910844800001,
          "width": 397.5018750695824,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "containing syntax guides and tactic explanations – and the Mathlib mathematics libary – containing",
          "page": 5,
          "x0": 108.00011600000002,
          "y0": 498.7085444800001,
          "x1": 504.1816561357268,
          "y1": 508.67118448000014,
          "width": 396.1815401357268,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "thousands of theorems and lemmas. The chunking is handled by a recursive character splitter, which",
          "page": 5,
          "x0": 108.00011600000005,
          "y0": 487.6687444800001,
          "x1": 504.0615665043405,
          "y1": 497.6313844800001,
          "width": 396.0614505043404,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "splits the TPiL markdown ﬁles at on its headers and Mathlib ﬁles at the start of theorems, examples,",
          "page": 5,
          "x0": 108.00011600000008,
          "y0": 476.7484444800001,
          "x1": 505.41099209064447,
          "y1": 486.7110844800001,
          "width": 397.41087609064436,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "lemmas, and deﬁnitions – with chunk sizes of 1000 characters with a 200 character overlap.",
          "page": 5,
          "x0": 108.0001160000001,
          "y0": 465.8285444800001,
          "x1": 473.72967740149295,
          "y1": 475.79118448000014,
          "width": 365.72956140149284,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "The Mathlib retriever ﬁnds the top k documents that score the highest MMR score against the current\ntheorem, the TPiL retriever ﬁnds the top k documents that score the highest MMR score against the\ncurrent theorem in context and all current error messages. This retrieval process helps in generating\nmore contextually accurate prompts that allow the language model to better correct its own errors as\nwell as ﬁnd useful lemmas to reference.",
          "page": 5,
          "x0": 107.63887600000018,
          "y0": 404.9888444800001,
          "x1": 504.30061880236303,
          "y1": 458.7713097600001,
          "width": 396.6617428023628,
          "height": 53.78246528,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "The Mathlib retriever ﬁnds the top k documents that score the highest MMR score against the current",
          "page": 5,
          "x0": 107.63911600000012,
          "y0": 448.7887444800001,
          "x1": 504.2485813266361,
          "y1": 458.7713097600001,
          "width": 396.609465326636,
          "height": 9.982565280000017,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "theorem, the TPiL retriever ﬁnds the top k documents that score the highest MMR score against the",
          "page": 5,
          "x0": 107.99895600000013,
          "y0": 437.8688444800001,
          "x1": 504.10217011278485,
          "y1": 447.85140976000014,
          "width": 396.1032141127847,
          "height": 9.982565280000017,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "current theorem in context and all current error messages. This retrieval process helps in generating",
          "page": 5,
          "x0": 107.99887600000014,
          "y0": 426.9485444800001,
          "x1": 504.30061880236303,
          "y1": 436.91118448000014,
          "width": 396.3017428023629,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "more contextually accurate prompts that allow the language model to better correct its own errors as",
          "page": 5,
          "x0": 107.99887600000017,
          "y0": 415.9087444800001,
          "x1": 504.03479249608876,
          "y1": 425.87138448000013,
          "width": 396.0359164960886,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "well as ﬁnd useful lemmas to reference.",
          "page": 5,
          "x0": 107.63887600000018,
          "y0": 404.9888444800001,
          "x1": 266.4897747552023,
          "y1": 414.95148448000015,
          "width": 158.8508987552021,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "4 EXPERIMENTS",
          "page": 5,
          "x0": 108.23887600000018,
          "y0": 374.91426640000014,
          "x1": 199.35654129206017,
          "y1": 386.86946640000014,
          "width": 91.11766529206,
          "height": 11.95519999999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "4 EXPERIMENTS",
          "page": 5,
          "x0": 108.23887600000018,
          "y0": 374.91426640000014,
          "x1": 199.35654129206017,
          "y1": 386.86946640000014,
          "width": 91.11766529206,
          "height": 11.95519999999999,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "We test ImProver on rewriting real-world undergraduate theorems, competition problems, and\nresearch-level mathematics and compare its results to those of the base GPT-4o and GPT-4o-mini\nmodels. We examine the optimization capabilities of ImProver for the length and readability met-\nrics - studying the effectiveness in maintaining the correctness of the tactic proof while making it\nmore concise, as well as making it more declarative in style and readable in practice.",
          "page": 5,
          "x0": 107.51897600000018,
          "y0": 307.4288444800002,
          "x1": 505.7563586841628,
          "y1": 361.1913844800002,
          "width": 398.23738268416264,
          "height": 53.76254,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "We test ImProver on rewriting real-world undergraduate theorems, competition problems, and",
          "page": 5,
          "x0": 107.51897600000018,
          "y0": 350.9099400000002,
          "x1": 504.06062364188926,
          "y1": 361.1913844800002,
          "width": 396.5416476418891,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "research-level mathematics and compare its results to those of the base GPT-4o and GPT-4o-mini",
          "page": 5,
          "x0": 107.9989760000002,
          "y0": 340.18894448000015,
          "x1": 504.24896154849455,
          "y1": 350.15158448000017,
          "width": 396.24998554849435,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "models. We examine the optimization capabilities of ImProver for the length and readability met-",
          "page": 5,
          "x0": 107.99897600000017,
          "y0": 328.94984000000017,
          "x1": 505.7563586841628,
          "y1": 339.23128448000017,
          "width": 397.7573826841626,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "rics - studying the effectiveness in maintaining the correctness of the tactic proof while making it",
          "page": 5,
          "x0": 107.99877600000019,
          "y0": 318.34874448000016,
          "x1": 504.00834480238876,
          "y1": 328.3113844800002,
          "width": 396.00956880238857,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "more concise, as well as making it more declarative in style and readable in practice.",
          "page": 5,
          "x0": 107.99877600000022,
          "y0": 307.4288444800002,
          "x1": 445.2892645933792,
          "y1": 317.3914844800002,
          "width": 337.290488593379,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "4.1 SETUP",
          "page": 5,
          "x0": 108.23877600000017,
          "y0": 281.62884448000017,
          "x1": 159.59009729648017,
          "y1": 291.5914844800002,
          "width": 51.351321296479995,
          "height": 9.962640000000022,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "4.1 SETUP",
          "page": 5,
          "x0": 108.23877600000017,
          "y0": 281.62884448000017,
          "x1": 159.59009729648017,
          "y1": 291.5914844800002,
          "width": 51.351321296479995,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Our experimentation is split into three distinct stages. We ﬁrst perform ablation testing on the\nImProver model parameters (§3.1) to ensure that ImProver’s parameter speciﬁcation is the optimal\none with respect to correctness and metric optimization score. We then evaluate this optimal param-\neter combination on datasets of varying complexity and analyze the performance and results thereof.\nLastly, we note the performance of ImProver in NTP applications in comparison to the base GPT-4o\nand GPT-4o-mini models.",
          "page": 5,
          "x0": 107.99887600000008,
          "y0": 205.90904448000015,
          "x1": 506.0095274203015,
          "y1": 270.71138448000016,
          "width": 398.01065142030143,
          "height": 64.80234000000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Our experimentation is split into three distinct stages. We ﬁrst perform ablation testing on the",
          "page": 5,
          "x0": 107.99897600000017,
          "y0": 260.74874448000014,
          "x1": 504.10221599143847,
          "y1": 270.71138448000016,
          "width": 396.1032399914383,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ImProver model parameters (§3.1) to ensure that ImProver’s parameter speciﬁcation is the optimal",
          "page": 5,
          "x0": 107.99897600000014,
          "y0": 249.51004000000015,
          "x1": 504.1287780955339,
          "y1": 259.7914844800001,
          "width": 396.12980209553376,
          "height": 10.281444479999976,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "one with respect to correctness and metric optimization score. We then evaluate this optimal param-",
          "page": 5,
          "x0": 107.99887600000011,
          "y0": 238.78904448000014,
          "x1": 505.87678405156316,
          "y1": 248.75168448000016,
          "width": 397.87790805156305,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "eter combination on datasets of varying complexity and analyze the performance and results thereof.",
          "page": 5,
          "x0": 107.99887600000008,
          "y0": 227.86914448000013,
          "x1": 506.0095274203015,
          "y1": 237.83178448000015,
          "width": 398.01065142030143,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Lastly, we note the performance of ImProver in NTP applications in comparison to the base GPT-4o",
          "page": 5,
          "x0": 107.99887600000008,
          "y0": 216.63004000000015,
          "x1": 504.0602798026822,
          "y1": 226.91148448000015,
          "width": 396.0614038026821,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "and GPT-4o-mini models.",
          "page": 5,
          "x0": 107.99887600000011,
          "y0": 205.90904448000015,
          "x1": 211.52944993854237,
          "y1": 215.87168448000017,
          "width": 103.53057393854226,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Datasets. We evaluate ImProver on subsets of the following datasets.",
          "page": 5,
          "x0": 107.99887600000011,
          "y0": 181.23004000000017,
          "x1": 394.41024662762976,
          "y1": 191.63103616000018,
          "width": 286.41137062762965,
          "height": 10.400996160000005,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Datasets. We evaluate ImProver on subsets of the following datasets.",
          "page": 5,
          "x0": 107.99887600000011,
          "y0": 181.23004000000017,
          "x1": 394.41024662762976,
          "y1": 191.63103616000018,
          "width": 286.41137062762965,
          "height": 10.400996160000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Mathematics in Lean (MIL) (leanprover-community, 2024):\nthis dataset contains pedagogical so-\nlutions of common undergraduate-level exercises, and as such contains many readable, yet verbose\nand inefﬁcient proofs. We use exercise solutions from set theory, elementary number theory, group\ntheory, topology, differential calculus, and integration & measure theory. This dataset contains the-\norems at an undergraduate-level of complexity. For our main results, we evaluated on 72 theorems\nfrom exercise solutions from MIL chapters 4, 5, 8, 9, and 10.",
          "page": 5,
          "x0": 107.63837600000008,
          "y0": 109.47044000000012,
          "x1": 505.75602891524295,
          "y1": 174.70117352000014,
          "width": 398.11765291524284,
          "height": 65.23073352000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Mathematics in Lean (MIL) (leanprover-community, 2024):",
          "page": 5,
          "x0": 107.63837600000008,
          "y0": 164.73853352000015,
          "x1": 348.676053988129,
          "y1": 174.70117352000014,
          "width": 241.03767798812893,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "this dataset contains pedagogical so-",
          "page": 5,
          "x0": 357.4783760000001,
          "y0": 164.62894448000014,
          "x1": 505.63580268280936,
          "y1": 174.59158448000017,
          "width": 148.15742668280927,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "lutions of common undergraduate-level exercises, and as such contains many readable, yet verbose",
          "page": 5,
          "x0": 107.99837600000009,
          "y0": 153.58914448000013,
          "x1": 504.2224958392537,
          "y1": 163.55178448000015,
          "width": 396.2241198392536,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "and inefﬁcient proofs. We use exercise solutions from set theory, elementary number theory, group",
          "page": 5,
          "x0": 107.99837600000006,
          "y0": 142.66924448000012,
          "x1": 504.1797256459753,
          "y1": 152.63188448000014,
          "width": 396.1813496459752,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "theory, topology, differential calculus, and integration & measure theory. This dataset contains the-",
          "page": 5,
          "x0": 107.99837600000004,
          "y0": 131.74894448000012,
          "x1": 505.75602891524295,
          "y1": 141.71158448000014,
          "width": 397.75765291524294,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "orems at an undergraduate-level of complexity. For our main results, we evaluated on 72 theorems",
          "page": 5,
          "x0": 107.99837600000006,
          "y0": 120.39034000000012,
          "x1": 504.2737849624574,
          "y1": 130.67178448000013,
          "width": 396.27540896245733,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "from exercise solutions from MIL chapters 4, 5, 8, 9, and 10.",
          "page": 5,
          "x0": 107.99827600000009,
          "y0": 109.47044000000012,
          "x1": 349.40765600000026,
          "y1": 119.77180976000012,
          "width": 241.40938000000017,
          "height": 10.30136976,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Compﬁles (David Renshaw, 2024): Solutions of International Mathematics Olympiad (IMO) and\nAmerican Mathematics Olympiad (USAMO) competition problems from 2016 to 2024. This is a\ndataset of internationally-renowned competitive math problems, many of which are readable, yet\nquite verbose. This dataset contains theorems of a competitive format, and although they contain",
          "page": 5,
          "x0": 107.63799600000024,
          "y0": 59.989344480000135,
          "x1": 504.17955663607745,
          "y1": 102.94157352000013,
          "width": 396.5415606360772,
          "height": 42.95222904,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Compﬁles (David Renshaw, 2024): Solutions of International Mathematics Olympiad (IMO) and",
          "page": 5,
          "x0": 107.63799600000027,
          "y0": 92.86934448000014,
          "x1": 504.05925989213324,
          "y1": 102.94157352000013,
          "width": 396.42126389213297,
          "height": 10.072229039999996,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "American Mathematics Olympiad (USAMO) competition problems from 2016 to 2024. This is a",
          "page": 5,
          "x0": 107.63799600000024,
          "y0": 81.82914448000014,
          "x1": 503.98141968711786,
          "y1": 91.79178448000013,
          "width": 396.3434236871176,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "dataset of internationally-renowned competitive math problems, many of which are readable, yet",
          "page": 5,
          "x0": 107.99799600000023,
          "y0": 70.90924448000014,
          "x1": 504.12831276114935,
          "y1": 80.87188448000013,
          "width": 396.1303167611491,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "quite verbose. This dataset contains theorems of a competitive format, and although they contain",
          "page": 5,
          "x0": 107.99799600000023,
          "y0": 59.989344480000135,
          "x1": 504.17955663607745,
          "y1": 69.95198448000014,
          "width": 396.1815606360772,
          "height": 9.96264,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        }
      ]
    },
    {
      "page_num": 6,
      "elements": [
        {
          "text": "concepts only at a high-school level, the logical complexity of internationally-renowned competi-\ntion results is far above that. For our main results, we used all 26 theorems and lemmas from the\nCompﬁles database of complete solutions to the International Mathematics Olympiad (IMO) and\nthe American Mathematics Olympiad (USAMO) from 2016-2024.",
          "page": 6,
          "x0": 108.0,
          "y0": 665.14814448,
          "x1": 505.8776140704941,
          "y1": 707.99078448,
          "width": 397.8776140704941,
          "height": 42.84263999999996,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "concepts only at a high-school level, the logical complexity of internationally-renowned competi-",
          "page": 6,
          "x0": 108.0,
          "y0": 698.02814448,
          "x1": 505.8776140704941,
          "y1": 707.99078448,
          "width": 397.8776140704941,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "tion results is far above that. For our main results, we used all 26 theorems and lemmas from the",
          "page": 6,
          "x0": 108.0,
          "y0": 686.66954,
          "x1": 504.10357999416885,
          "y1": 696.95098448,
          "width": 396.10357999416885,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Compﬁles database of complete solutions to the International Mathematics Olympiad (IMO) and",
          "page": 6,
          "x0": 108.00027,
          "y0": 676.06804448,
          "x1": 504.0618062810224,
          "y1": 686.03068448,
          "width": 396.0615362810224,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "the American Mathematics Olympiad (USAMO) from 2016-2024.",
          "page": 6,
          "x0": 108.00027000000003,
          "y0": 665.14814448,
          "x1": 373.8909080584038,
          "y1": 675.11078448,
          "width": 265.89063805840374,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Mathlib (mathlib Community, 2020): Mathlib contains many advanced results at the forefront of\nmathematics, and has been at the center of research-level formalizations. These proofs are extremely\nefﬁcient, concise, and generalized - which often comes at the cost of readability and understandabil-\nity. These results and theorems often are at the cutting edge of research.",
          "page": 6,
          "x0": 107.64011400000003,
          "y0": 615.3482444800001,
          "x1": 505.99782161884633,
          "y1": 658.3004735200001,
          "width": 398.3577076188463,
          "height": 42.95222904000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Mathlib (mathlib Community, 2020): Mathlib contains many advanced results at the forefront of",
          "page": 6,
          "x0": 107.64011400000003,
          "y0": 648.2282444800001,
          "x1": 504.07783852878293,
          "y1": 658.3004735200001,
          "width": 396.4377245287829,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "mathematics, and has been at the center of research-level formalizations. These proofs are extremely",
          "page": 6,
          "x0": 108.000114,
          "y0": 637.18844448,
          "x1": 504.5415769261305,
          "y1": 647.15108448,
          "width": 396.5414629261305,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "efﬁcient, concise, and generalized - which often comes at the cost of readability and understandabil-",
          "page": 6,
          "x0": 108.000114,
          "y0": 626.26814448,
          "x1": 505.99782161884633,
          "y1": 636.23078448,
          "width": 397.99770761884633,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ity. These results and theorems often are at the cutting edge of research.",
          "page": 6,
          "x0": 108.00011399999997,
          "y0": 615.3482444800001,
          "x1": 394.1707731598944,
          "y1": 625.31088448,
          "width": 286.1706591598944,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "For our main results, we evaluated our methods on 43 advanced research-level proofs from\nMathlib/AlgebraicTopology/FundamentalGroupoid. This is the most difﬁcult dataset.",
          "page": 6,
          "x0": 108.00001399999991,
          "y0": 587.3885444800001,
          "x1": 504.1911852513554,
          "y1": 608.39098448,
          "width": 396.1911712513555,
          "height": 21.00243999999998,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "For our main results, we evaluated our methods on 43 advanced research-level proofs from",
          "page": 6,
          "x0": 108.00011399999997,
          "y0": 598.10954,
          "x1": 504.1911852513554,
          "y1": 608.39098448,
          "width": 396.1910712513554,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Mathlib/AlgebraicTopology/FundamentalGroupoid. This is the most difﬁcult dataset.",
          "page": 6,
          "x0": 108.00001399999991,
          "y0": 587.3885444800001,
          "x1": 485.4906948245486,
          "y1": 597.35118448,
          "width": 377.4906808245487,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Models. Our base generator uses GPT-4o (OpenAI et al., 2024). Since no prior methods currently\nexist for automated proof optimization, we consider a prompted GPT-4o without the improvements\ndescribed in (§3.1) as our baseline. Additionally, for a given metric, we write a prompt that brieﬂy\ndescribes the metric and the proof optimization task. We also provide instructions, context, and in-\nformation depending on the features selected, and add the theorem and proof to the prompt. Speciﬁc\nprompt information is detailed in (§A)",
          "page": 6,
          "x0": 107.99981399999987,
          "y0": 507.8285444800001,
          "x1": 505.75748846892975,
          "y1": 572.6305361600001,
          "width": 397.75767446892985,
          "height": 64.80199168000001,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Models. Our base generator uses GPT-4o (OpenAI et al., 2024). Since no prior methods currently",
          "page": 6,
          "x0": 108.00001399999991,
          "y0": 562.5483444800001,
          "x1": 504.54112183719246,
          "y1": 572.6305361600001,
          "width": 396.54110783719256,
          "height": 10.08219168000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "exist for automated proof optimization, we consider a prompted GPT-4o without the improvements",
          "page": 6,
          "x0": 107.9998139999999,
          "y0": 551.6284444800001,
          "x1": 504.3958104248987,
          "y1": 561.5910844800001,
          "width": 396.3959964248988,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "described in (§3.1) as our baseline. Additionally, for a given metric, we write a prompt that brieﬂy",
          "page": 6,
          "x0": 107.9998139999999,
          "y0": 540.7085444800001,
          "x1": 504.4213096063522,
          "y1": 550.6711844800001,
          "width": 396.4214956063523,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "describes the metric and the proof optimization task. We also provide instructions, context, and in-",
          "page": 6,
          "x0": 107.99981399999987,
          "y0": 529.6687444800001,
          "x1": 505.75748846892975,
          "y1": 539.6313844800001,
          "width": 397.75767446892985,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "formation depending on the features selected, and add the theorem and proof to the prompt. Speciﬁc",
          "page": 6,
          "x0": 107.99981399999987,
          "y0": 518.7484444800001,
          "x1": 504.10370836754777,
          "y1": 528.7110844800001,
          "width": 396.1038943675479,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "prompt information is detailed in (§A)",
          "page": 6,
          "x0": 107.99981399999987,
          "y0": 507.8285444800001,
          "x1": 261.07718345801817,
          "y1": 517.7911844800001,
          "width": 153.0773694580183,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Performance metrics. Since proof optimization is a new task, we deﬁne four performance metrics\nfor measuring aspects of correctness and improvement.",
          "page": 6,
          "x0": 107.99981399999987,
          "y0": 471.94854448000007,
          "x1": 504.15423306190814,
          "y1": 493.0709361600001,
          "width": 396.15441906190824,
          "height": 21.12239168000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Performance metrics. Since proof optimization is a new task, we deﬁne four performance metrics",
          "page": 6,
          "x0": 107.99981399999987,
          "y0": 482.9887444800001,
          "x1": 504.15423306190814,
          "y1": 493.0709361600001,
          "width": 396.15441906190824,
          "height": 10.082191679999994,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "for measuring aspects of correctness and improvement.",
          "page": 6,
          "x0": 107.9998139999999,
          "y0": 471.94854448000007,
          "x1": 328.0505814632532,
          "y1": 481.9111844800001,
          "width": 220.0507674632533,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "First, we deﬁne improvement for length as percentage change in length, µlen(y0)−µlen(y)\n× 100. For\nreadability, we use the difference, µread(y)−µread(yo). If no correct output is generated by the model\nfor a speciﬁc theorem, improvement is deﬁned to be zero. We deﬁne nonempty improvement as\nthe improvement restricted to theorems for which some output has nonzero improvement.",
          "page": 6,
          "x0": 107.99979999999988,
          "y0": 417.22801448,
          "x1": 504.19744998037197,
          "y1": 465.30820840000007,
          "width": 396.1976499803721,
          "height": 48.080193920000056,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "First, we deﬁne improvement for length as percentage change in length, µlen(y0)−µlen(y)",
          "page": 6,
          "x0": 107.9998139999999,
          "y0": 452.7485444800001,
          "x1": 456.2299110999999,
          "y1": 465.30820840000007,
          "width": 348.2300971,
          "height": 12.559663919999991,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "× 100. For",
          "page": 6,
          "x0": 459.60003,
          "y0": 452.42911000000004,
          "x1": 504.19744998037197,
          "y1": 462.71055448000004,
          "width": 44.59741998037197,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "µlen(y0)",
          "page": 6,
          "x0": 416.52,
          "y0": 449.51391624,
          "x1": 442.0705671,
          "y1": 457.0274984,
          "width": 25.550567100000023,
          "height": 7.513582159999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "µlen(y0)",
          "page": 6,
          "x0": 416.52,
          "y0": 449.51391624,
          "x1": 442.0705671,
          "y1": 457.0274984,
          "width": 25.550567100000023,
          "height": 7.513582159999999,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "readability, we use the difference, µread(y)−µread(yo). If no correct output is generated by the model",
          "page": 6,
          "x0": 108.00002999999998,
          "y0": 438.39944070000007,
          "x1": 504.13010556031975,
          "y1": 449.17067976000004,
          "width": 396.13007556031977,
          "height": 10.77123905999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "for a speciﬁc theorem, improvement is deﬁned to be zero. We deﬁne nonempty improvement as",
          "page": 6,
          "x0": 107.99979999999988,
          "y0": 428.14791448,
          "x1": 504.0354806640431,
          "y1": 438.23010616,
          "width": 396.03568066404324,
          "height": 10.082191679999994,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "the improvement restricted to theorems for which some output has nonzero improvement.",
          "page": 6,
          "x0": 107.99999999999989,
          "y0": 417.22801448,
          "x1": 465.3309743012943,
          "y1": 427.19065448000003,
          "width": 357.3309743012944,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Intuitively, improvement is the expected improvement in metric score from the input to output, ac-\ncounting for errors in the generation. The nonempty improvement score is the expected improvement\nin metric score, given that there are no errors in the generation. Similar improvement scores can be\ndeﬁned for other metrics using a binary function of the metric assigned to the original and optimized\nproofs.",
          "page": 6,
          "x0": 107.99999999999983,
          "y0": 356.50821448000005,
          "x1": 505.63790622069877,
          "y1": 410.27075448000005,
          "width": 397.63790622069894,
          "height": 53.76254,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Intuitively, improvement is the expected improvement in metric score from the input to output, ac-",
          "page": 6,
          "x0": 107.99999999999989,
          "y0": 400.30811448000003,
          "x1": 505.63790622069877,
          "y1": 410.27075448000005,
          "width": 397.6379062206989,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "counting for errors in the generation. The nonempty improvement score is the expected improvement",
          "page": 6,
          "x0": 107.99999999999989,
          "y0": 389.26791448,
          "x1": 504.48949865842684,
          "y1": 399.23055448,
          "width": 396.48949865842695,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "in metric score, given that there are no errors in the generation. Similar improvement scores can be",
          "page": 6,
          "x0": 107.99999999999986,
          "y0": 378.34801448,
          "x1": 504.10428473284344,
          "y1": 388.31065448000004,
          "width": 396.10428473284355,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "deﬁned for other metrics using a binary function of the metric assigned to the original and optimized",
          "page": 6,
          "x0": 107.99999999999986,
          "y0": 367.42811448000003,
          "x1": 504.1827252729163,
          "y1": 377.39075448000006,
          "width": 396.1827252729164,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "proofs.",
          "page": 6,
          "x0": 107.99999999999983,
          "y0": 356.50821448000005,
          "x1": 136.17065695366063,
          "y1": 366.47085448000007,
          "width": 28.170656953660796,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Additionally, the accuracy is the percentage of theorems in the dataset which the model was able to\ngenerate a correct output for. The improved accuracy is the percentage of theorems in the dataset\nwhich the model was able to generate a correct output for, as well as improve the metric to be\nnonzero.",
          "page": 6,
          "x0": 107.63964399999983,
          "y0": 306.5884144800001,
          "x1": 504.10319602643284,
          "y1": 349.5502061600001,
          "width": 396.46355202643304,
          "height": 42.961791679999976,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Additionally, the accuracy is the percentage of theorems in the dataset which the model was able to",
          "page": 6,
          "x0": 107.63984399999983,
          "y0": 339.4680144800001,
          "x1": 503.94145127749135,
          "y1": 349.5502061600001,
          "width": 396.30160727749154,
          "height": 10.082191679999994,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "generate a correct output for. The improved accuracy is the percentage of theorems in the dataset",
          "page": 6,
          "x0": 107.99984399999983,
          "y0": 328.5481144800001,
          "x1": 504.00973783510534,
          "y1": 338.6303061600001,
          "width": 396.0098938351055,
          "height": 10.082191679999994,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "which the model was able to generate a correct output for, as well as improve the metric to be",
          "page": 6,
          "x0": 107.63964399999983,
          "y0": 317.6282144800001,
          "x1": 504.10319602643284,
          "y1": 327.59085448000013,
          "width": 396.46355202643304,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "nonzero.",
          "page": 6,
          "x0": 107.99964399999988,
          "y0": 306.5884144800001,
          "x1": 142.89029480925026,
          "y1": 316.5510544800001,
          "width": 34.89065080925039,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "4.1.1 ABLATIONS",
          "page": 6,
          "x0": 108.23948799999988,
          "y0": 281.7482144800001,
          "x1": 190.31072384243691,
          "y1": 291.71085448000014,
          "width": 82.07123584243703,
          "height": 9.962640000000022,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "4.1.1 ABLATIONS",
          "page": 6,
          "x0": 108.23948799999988,
          "y0": 281.7482144800001,
          "x1": 190.31072384243691,
          "y1": 291.71085448000014,
          "width": 82.07123584243703,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "When performing our ablation studies, we used a ﬁxed dataset (MIL) and metric (length) and varied\nthe parameters of all the features to ﬁnd the optimal combination. However, as there are over 8640\npossible combinations, it is inefﬁcient to test all combinations at once. As such, we evaluate using a\nfactorial testing method.",
          "page": 6,
          "x0": 107.5195879999999,
          "y0": 229.3084144800001,
          "x1": 504.41999103684384,
          "y1": 272.15105448000014,
          "width": 396.90040303684395,
          "height": 42.842640000000046,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "When performing our ablation studies, we used a ﬁxed dataset (MIL) and metric (length) and varied",
          "page": 6,
          "x0": 107.5195879999999,
          "y0": 262.1884144800001,
          "x1": 504.17963345222427,
          "y1": 272.15105448000014,
          "width": 396.6600454522244,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "the parameters of all the features to ﬁnd the optimal combination. However, as there are over 8640",
          "page": 6,
          "x0": 107.99958799999993,
          "y0": 250.82941000000014,
          "x1": 504.41999103684384,
          "y1": 261.1108544800001,
          "width": 396.42040303684394,
          "height": 10.281444479999976,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "possible combinations, it is inefﬁcient to test all combinations at once. As such, we evaluate using a",
          "page": 6,
          "x0": 107.99958799999985,
          "y0": 240.2283144800001,
          "x1": 503.9829686906184,
          "y1": 250.19095448000013,
          "width": 395.98338069061856,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "factorial testing method.",
          "page": 6,
          "x0": 107.99958799999985,
          "y0": 229.3084144800001,
          "x1": 205.28990278301194,
          "y1": 239.27105448000012,
          "width": 97.2903147830121,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Testing Groups. We deﬁne the following testing groups with the speciﬁed parameter combina-\ntions:",
          "page": 6,
          "x0": 107.99958799999985,
          "y0": 193.4284144800001,
          "x1": 505.87691611300284,
          "y1": 214.5508061600001,
          "width": 397.877328113003,
          "height": 21.122391679999993,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Testing Groups. We deﬁne the following testing groups with the speciﬁed parameter combina-",
          "page": 6,
          "x0": 107.99958799999985,
          "y0": 204.4686144800001,
          "x1": 505.87691611300284,
          "y1": 214.5508061600001,
          "width": 397.877328113003,
          "height": 10.082191679999994,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "tions:",
          "page": 6,
          "x0": 108.00028799999978,
          "y0": 193.4284144800001,
          "x1": 130.2098955288377,
          "y1": 203.39105448000012,
          "width": 22.20960752883792,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "GPT-4o-mini/GPT-4o: This varies the GPT-4o model, outputting a string with no other features.",
          "page": 6,
          "x0": 107.64013199999978,
          "y0": 176.5085144800001,
          "x1": 503.6096399383534,
          "y1": 186.7899589600001,
          "width": 395.9695079383536,
          "height": 10.281444480000005,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "GPT-4o-mini/GPT-4o: This varies the GPT-4o model, outputting a string with no other features.",
          "page": 6,
          "x0": 107.64013199999978,
          "y0": 176.5085144800001,
          "x1": 503.6096399383534,
          "y1": 186.7899589600001,
          "width": 395.9695079383536,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Output and CoS: We evaluate the effects of different output formatting styles (string, string\nlist, string tree) and CoS (True, False), with the model ﬁxed as GPT-4o, with no other\nfeatures enabled.",
          "page": 6,
          "x0": 107.63983199999973,
          "y0": 137.6285144800001,
          "x1": 504.3185624191795,
          "y1": 169.8700589600001,
          "width": 396.6787304191798,
          "height": 32.241544480000016,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Output and CoS: We evaluate the effects of different output formatting styles (string, string",
          "page": 6,
          "x0": 107.63983199999973,
          "y0": 159.5886144800001,
          "x1": 504.0982567709837,
          "y1": 169.8700589600001,
          "width": 396.458424770984,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "list, string tree) and CoS (True, False), with the model ﬁxed as GPT-4o, with no other",
          "page": 6,
          "x0": 108.00069199999973,
          "y0": 148.6687144800001,
          "x1": 504.3185624191795,
          "y1": 158.9501589600001,
          "width": 396.31787041917977,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "features enabled.",
          "page": 6,
          "x0": 107.99997199999973,
          "y0": 137.6285144800001,
          "x1": 175.77070116538084,
          "y1": 147.5911544800001,
          "width": 67.77072916538111,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Example Retrieval: We evaluate the effects of increasing the number of examples provided (multi-\nshot prompting) in the range of 0, 3, 5, 7, and 10, with the model ﬁxed as GPT-4o, CoS and output\nformatting ﬁxed as the best combination from the previous test, and no other features enabled.",
          "page": 6,
          "x0": 107.63981599999973,
          "y0": 98.86881448000011,
          "x1": 505.75723539263777,
          "y1": 130.7808435200001,
          "width": 398.11741939263806,
          "height": 31.912029039999993,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Example Retrieval: We evaluate the effects of increasing the number of examples provided (multi-",
          "page": 6,
          "x0": 107.63981599999973,
          "y0": 120.70861448000011,
          "x1": 505.75723539263777,
          "y1": 130.7808435200001,
          "width": 398.11741939263806,
          "height": 10.072229039999996,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "shot prompting) in the range of 0, 3, 5, 7, and 10, with the model ﬁxed as GPT-4o, CoS and output",
          "page": 6,
          "x0": 107.99971599999975,
          "y0": 109.4699100000001,
          "x1": 504.24842890794014,
          "y1": 119.7712797600001,
          "width": 396.2487129079404,
          "height": 10.30136976,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "formatting ﬁxed as the best combination from the previous test, and no other features enabled.",
          "page": 6,
          "x0": 107.99997599999978,
          "y0": 98.86881448000011,
          "x1": 482.97071088314516,
          "y1": 108.8314544800001,
          "width": 374.9707348831454,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Sampling Method: Here, we evaluate the effects of best-of-n and reﬁnement for a ﬁxed n = 5.\nAdditionally we test on the reﬁnement cases if forwarding the most recent iteration result, or all\nprevious iteration results is the best, and if we should keep the best out of the iterations, or the most",
          "page": 6,
          "x0": 107.64037599999978,
          "y0": 59.98881448000011,
          "x1": 505.7700359999998,
          "y1": 91.90084352000011,
          "width": 398.12966,
          "height": 31.91202904,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Sampling Method: Here, we evaluate the effects of best-of-n and reﬁnement for a ﬁxed n = 5.",
          "page": 6,
          "x0": 107.7599759999998,
          "y0": 81.5098100000001,
          "x1": 505.7700359999998,
          "y1": 91.90084352000011,
          "width": 398.01005999999995,
          "height": 10.391033520000008,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Additionally we test on the reﬁnement cases if forwarding the most recent iteration result, or all",
          "page": 6,
          "x0": 107.64037599999978,
          "y0": 70.90871448000011,
          "x1": 504.0097433337546,
          "y1": 80.87135448000011,
          "width": 396.36936733375484,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "previous iteration results is the best, and if we should keep the best out of the iterations, or the most",
          "page": 6,
          "x0": 108.00037599999979,
          "y0": 59.98881448000011,
          "x1": 504.1288293557907,
          "y1": 69.95145448000011,
          "width": 396.1284533557909,
          "height": 9.96264,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        }
      ]
    },
    {
      "page_num": 7,
      "elements": [
        {
          "text": "Table 1: Average Proof optimization results.",
          "page": 7,
          "x0": 217.68,
          "y0": 691.30814448,
          "x1": 394.29080263737893,
          "y1": 701.27078448,
          "width": 176.61080263737892,
          "height": 9.962639999999965,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Table 1: Average Proof optimization results.",
          "page": 7,
          "x0": 217.68,
          "y0": 691.30814448,
          "x1": 394.29080263737893,
          "y1": 701.27078448,
          "width": 176.61080263737892,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Metric",
          "page": 7,
          "x0": 123.24,
          "y0": 677.60532916,
          "x1": 147.14108550198017,
          "y1": 686.57170916,
          "width": 23.901085501980177,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Metric",
          "page": 7,
          "x0": 123.24,
          "y0": 677.60532916,
          "x1": 147.14108550198017,
          "y1": 686.57170916,
          "width": 23.901085501980177,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Model",
          "page": 7,
          "x0": 179.5201183027802,
          "y0": 677.60532916,
          "x1": 202.77277914339496,
          "y1": 686.57170916,
          "width": 23.252660840614766,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Model",
          "page": 7,
          "x0": 179.5201183027802,
          "y0": 677.60532916,
          "x1": 202.77277914339496,
          "y1": 686.57170916,
          "width": 23.252660840614766,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Improvement Nonempty Improvement Accuracy",
          "page": 7,
          "x0": 228.96,
          "y0": 677.60532916,
          "x1": 423.28322653078993,
          "y1": 686.57170916,
          "width": 194.32322653078992,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Improvement Nonempty Improvement Accuracy",
          "page": 7,
          "x0": 228.96,
          "y0": 677.60532916,
          "x1": 423.28322653078993,
          "y1": 686.57170916,
          "width": 194.32322653078992,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Improved Acc.",
          "page": 7,
          "x0": 435.23998392459,
          "y0": 677.60532916,
          "x1": 488.7214596529288,
          "y1": 686.57170916,
          "width": 53.48147572833881,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Improved Acc.",
          "page": 7,
          "x0": 435.23998392459,
          "y0": 677.60532916,
          "x1": 488.7214596529288,
          "y1": 686.57170916,
          "width": 53.48147572833881,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "3.7\n20.96",
          "page": 7,
          "x0": 243.0,
          "y0": 652.63292572,
          "x1": 263.08321721679175,
          "y1": 671.4517091600001,
          "width": 20.083217216791752,
          "height": 18.81878344000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "3.7",
          "page": 7,
          "x0": 247.44,
          "y0": 662.4853291600001,
          "x1": 258.6431898223216,
          "y1": 671.4517091600001,
          "width": 11.203189822321576,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "15.15\n55.29",
          "page": 7,
          "x0": 323.0400553197918,
          "y0": 652.63292572,
          "x1": 343.12330685431334,
          "y1": 671.4517091600001,
          "width": 20.083251534521537,
          "height": 18.81878344000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "15.15",
          "page": 7,
          "x0": 323.0400896375216,
          "y0": 662.4853291600001,
          "x1": 343.12330685431334,
          "y1": 671.4517091600001,
          "width": 20.083217216791752,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "26.36%\n100.0%",
          "page": 7,
          "x0": 391.67998611618356,
          "y0": 652.63292572,
          "x1": 420.6863704025482,
          "y1": 671.4517091600001,
          "width": 29.006384286364664,
          "height": 18.81878344000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "26.36%",
          "page": 7,
          "x0": 392.4002897393134,
          "y0": 662.4853291600001,
          "x1": 419.90928856567797,
          "y1": 671.4517091600001,
          "width": 27.508998826364575,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "8.31%\n35.44%",
          "page": 7,
          "x0": 447.48006577374815,
          "y0": 652.63292572,
          "x1": 476.4863768047882,
          "y1": 671.4517091600001,
          "width": 29.00631103104007,
          "height": 18.81878344000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "8.31%",
          "page": 7,
          "x0": 450.480430167078,
          "y0": 662.4853291600001,
          "x1": 473.5493786685452,
          "y1": 671.4517091600001,
          "width": 23.06894850146722,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "GPT-4o\nImProver",
          "page": 7,
          "x0": 179.52009999999999,
          "y0": 654.38159982,
          "x1": 217.08471328794207,
          "y1": 671.45154916,
          "width": 37.56461328794208,
          "height": 17.069949339999994,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "GPT-4o",
          "page": 7,
          "x0": 179.52009999999999,
          "y0": 662.48516916,
          "x1": 207.64330897417852,
          "y1": 671.45154916,
          "width": 28.12320897417854,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Length",
          "page": 7,
          "x0": 123.24,
          "y0": 657.55292572,
          "x1": 150.6653295893774,
          "y1": 666.5193057199999,
          "width": 27.425329589377398,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Length",
          "page": 7,
          "x0": 123.24,
          "y0": 657.55292572,
          "x1": 150.6653295893774,
          "y1": 666.5193057199999,
          "width": 27.425329589377398,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ImProver",
          "page": 7,
          "x0": 179.5201,
          "y0": 654.38159982,
          "x1": 217.08471328794207,
          "y1": 663.34797982,
          "width": 37.56461328794205,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "20.96",
          "page": 7,
          "x0": 243.0,
          "y0": 652.63292572,
          "x1": 263.08321721679175,
          "y1": 661.59930572,
          "width": 20.083217216791752,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "55.29",
          "page": 7,
          "x0": 323.0400553197918,
          "y0": 652.63292572,
          "x1": 343.12327253658356,
          "y1": 661.59930572,
          "width": 20.083217216791752,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "100.0%",
          "page": 7,
          "x0": 391.67998611618356,
          "y0": 652.63292572,
          "x1": 420.6863704025482,
          "y1": 661.59930572,
          "width": 29.006384286364664,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "35.44%",
          "page": 7,
          "x0": 447.48006577374815,
          "y0": 652.63292572,
          "x1": 476.4863768047882,
          "y1": 661.59930572,
          "width": 29.00631103104007,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "2.21\n9.34",
          "page": 7,
          "x0": 245.16,
          "y0": 627.43292572,
          "x1": 260.8032157586654,
          "y1": 646.25170916,
          "width": 15.643215758665377,
          "height": 18.81878344000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "2.21",
          "page": 7,
          "x0": 245.16,
          "y0": 637.2853291600001,
          "x1": 260.8032157586654,
          "y1": 646.25170916,
          "width": 15.643215758665377,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "8.02\n30.53",
          "page": 7,
          "x0": 323.0401146318654,
          "y0": 627.43292572,
          "x1": 343.12333184865713,
          "y1": 646.25170916,
          "width": 20.083217216791752,
          "height": 18.81878344000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "8.02",
          "page": 7,
          "x0": 325.1999362462654,
          "y0": 637.2853291600001,
          "x1": 340.84315200493074,
          "y1": 646.25170916,
          "width": 15.643215758665349,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "18.75%\n100.0%",
          "page": 7,
          "x0": 392.40001633253075,
          "y0": 627.32532916,
          "x1": 419.9090151588954,
          "y1": 646.25170916,
          "width": 27.508998826364632,
          "height": 18.926379999999995,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "18.75%",
          "page": 7,
          "x0": 392.40001633253075,
          "y0": 637.2853291600001,
          "x1": 419.9090151588954,
          "y1": 646.25170916,
          "width": 27.508998826364632,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "6.13 %\n24.56%",
          "page": 7,
          "x0": 447.4798,
          "y0": 627.43292572,
          "x1": 476.48611103104,
          "y1": 646.25170916,
          "width": 29.006311031040013,
          "height": 18.81878344000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "6.13 %",
          "page": 7,
          "x0": 449.2800964610954,
          "y0": 637.2853291600001,
          "x1": 474.7490439768498,
          "y1": 646.25170916,
          "width": 25.468947515754394,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "GPT-4o\nImProver",
          "page": 7,
          "x0": 179.52009999999999,
          "y0": 629.18159982,
          "x1": 217.08481328794204,
          "y1": 646.2516291600001,
          "width": 37.564713287942055,
          "height": 17.070029340000133,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "GPT-4o",
          "page": 7,
          "x0": 179.52009999999999,
          "y0": 637.2852491600001,
          "x1": 207.64330897417852,
          "y1": 646.2516291600001,
          "width": 28.12320897417854,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Readability",
          "page": 7,
          "x0": 123.24,
          "y0": 632.47292572,
          "x1": 167.68321695826194,
          "y1": 641.43930572,
          "width": 44.44321695826194,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Readability",
          "page": 7,
          "x0": 123.24,
          "y0": 632.47292572,
          "x1": 167.68321695826194,
          "y1": 641.43930572,
          "width": 44.44321695826194,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ImProver",
          "page": 7,
          "x0": 179.5202,
          "y0": 629.18159982,
          "x1": 217.08481328794204,
          "y1": 638.1479798199999,
          "width": 37.56461328794205,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "9.34",
          "page": 7,
          "x0": 245.16,
          "y0": 627.43292572,
          "x1": 260.8032157586654,
          "y1": 636.3993057199999,
          "width": 15.643215758665377,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "30.53",
          "page": 7,
          "x0": 323.0401146318654,
          "y0": 627.43292572,
          "x1": 343.12333184865713,
          "y1": 636.3993057199999,
          "width": 20.083217216791752,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "100.0%",
          "page": 7,
          "x0": 392.4003147336572,
          "y0": 627.32532916,
          "x1": 419.90899454,
          "y1": 636.3993057199999,
          "width": 27.508679806342798,
          "height": 9.073976559999892,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "24.56%",
          "page": 7,
          "x0": 447.4798,
          "y0": 627.43292572,
          "x1": 476.48611103104,
          "y1": 636.3993057199999,
          "width": 29.006311031040013,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Table 2: MIL Proof optimization results.\nImprovement Nonempty Improvement Accuracy",
          "page": 7,
          "x0": 225.0,
          "y0": 578.96532916,
          "x1": 423.28322653078993,
          "y1": 602.51078448,
          "width": 198.28322653078993,
          "height": 23.545455319999974,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Table 2: MIL Proof optimization results.",
          "page": 7,
          "x0": 225.0,
          "y0": 592.54814448,
          "x1": 386.9709570054461,
          "y1": 602.51078448,
          "width": 161.9709570054461,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Metric",
          "page": 7,
          "x0": 123.24,
          "y0": 578.96532916,
          "x1": 147.14108550198017,
          "y1": 587.93170916,
          "width": 23.901085501980177,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Metric",
          "page": 7,
          "x0": 123.24,
          "y0": 578.96532916,
          "x1": 147.14108550198017,
          "y1": 587.93170916,
          "width": 23.901085501980177,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Model",
          "page": 7,
          "x0": 179.5201183027802,
          "y0": 578.96532916,
          "x1": 202.77277914339496,
          "y1": 587.93170916,
          "width": 23.252660840614766,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Model",
          "page": 7,
          "x0": 179.5201183027802,
          "y0": 578.96532916,
          "x1": 202.77277914339496,
          "y1": 587.93170916,
          "width": 23.252660840614766,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Improvement Nonempty Improvement Accuracy",
          "page": 7,
          "x0": 228.96,
          "y0": 578.96532916,
          "x1": 423.28322653078993,
          "y1": 587.93170916,
          "width": 194.32322653078992,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Improved Acc.",
          "page": 7,
          "x0": 435.23998392459,
          "y0": 578.96532916,
          "x1": 488.7214596529288,
          "y1": 587.93170916,
          "width": 53.48147572833881,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Improved Acc.",
          "page": 7,
          "x0": 435.23998392459,
          "y0": 578.96532916,
          "x1": 488.7214596529288,
          "y1": 587.93170916,
          "width": 53.48147572833881,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "6.25\n30.54",
          "page": 7,
          "x0": 243.0,
          "y0": 553.99292572,
          "x1": 263.08321721679175,
          "y1": 572.81170916,
          "width": 20.083217216791752,
          "height": 18.818783439999947,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "6.25",
          "page": 7,
          "x0": 245.16,
          "y0": 563.84532916,
          "x1": 260.8032157586654,
          "y1": 572.81170916,
          "width": 15.643215758665377,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "18.58\n56.56",
          "page": 7,
          "x0": 323.0400553197918,
          "y0": 553.99292572,
          "x1": 343.12333184865713,
          "y1": 572.81170916,
          "width": 20.083276528865326,
          "height": 18.818783439999947,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "18.58",
          "page": 7,
          "x0": 323.0401146318654,
          "y0": 563.84532916,
          "x1": 343.12333184865713,
          "y1": 572.81170916,
          "width": 20.083217216791752,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "37.5%\n100.0%",
          "page": 7,
          "x0": 391.67998611618356,
          "y0": 553.99292572,
          "x1": 420.6863704025482,
          "y1": 572.81170916,
          "width": 29.006384286364664,
          "height": 18.818783439999947,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "37.5%",
          "page": 7,
          "x0": 394.68001684865715,
          "y0": 563.84532916,
          "x1": 417.7490142168953,
          "y1": 572.81170916,
          "width": 23.068997368238172,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "14.42%\n50.0%",
          "page": 7,
          "x0": 448.1999166624954,
          "y0": 553.99292572,
          "x1": 475.70884223353545,
          "y1": 572.81170916,
          "width": 27.508925571040038,
          "height": 18.818783439999947,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "14.42%",
          "page": 7,
          "x0": 448.1999166624954,
          "y0": 563.84532916,
          "x1": 475.70884223353545,
          "y1": 572.81170916,
          "width": 27.508925571040038,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "GPT-4o\nImProver",
          "page": 7,
          "x0": 179.52009999999999,
          "y0": 555.7415998199999,
          "x1": 217.08481328794204,
          "y1": 572.81154916,
          "width": 37.564713287942055,
          "height": 17.069949340000107,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "GPT-4o",
          "page": 7,
          "x0": 179.52009999999999,
          "y0": 563.8451691600001,
          "x1": 207.64330897417852,
          "y1": 572.81154916,
          "width": 28.12320897417854,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Length",
          "page": 7,
          "x0": 123.24,
          "y0": 558.91292572,
          "x1": 150.6653295893774,
          "y1": 567.8793057199999,
          "width": 27.425329589377398,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Length",
          "page": 7,
          "x0": 123.24,
          "y0": 558.91292572,
          "x1": 150.6653295893774,
          "y1": 567.8793057199999,
          "width": 27.425329589377398,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ImProver",
          "page": 7,
          "x0": 179.5202,
          "y0": 555.7415998199999,
          "x1": 217.08481328794204,
          "y1": 564.7079798199999,
          "width": 37.56461328794205,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "30.54",
          "page": 7,
          "x0": 243.0,
          "y0": 553.99292572,
          "x1": 263.08321721679175,
          "y1": 562.95930572,
          "width": 20.083217216791752,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "56.56",
          "page": 7,
          "x0": 323.0400553197918,
          "y0": 553.99292572,
          "x1": 343.12327253658356,
          "y1": 562.95930572,
          "width": 20.083217216791752,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "100.0%",
          "page": 7,
          "x0": 391.67998611618356,
          "y0": 553.99292572,
          "x1": 420.6863704025482,
          "y1": 562.95930572,
          "width": 29.006384286364664,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "50.0%",
          "page": 7,
          "x0": 449.64015637954816,
          "y0": 553.99292572,
          "x1": 474.2064903410154,
          "y1": 562.95930572,
          "width": 24.56633396146725,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "4.18\n13.45",
          "page": 7,
          "x0": 243.0,
          "y0": 528.79292572,
          "x1": 263.08321721679175,
          "y1": 547.61170916,
          "width": 20.083217216791752,
          "height": 18.81878344000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "4.18",
          "page": 7,
          "x0": 245.16,
          "y0": 538.6453291600001,
          "x1": 260.8032157586654,
          "y1": 547.61170916,
          "width": 15.643215758665377,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "14.48\n30.97",
          "page": 7,
          "x0": 323.0400553197918,
          "y0": 528.79292572,
          "x1": 343.12333184865713,
          "y1": 547.61170916,
          "width": 20.083276528865326,
          "height": 18.81878344000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "14.48",
          "page": 7,
          "x0": 323.0401146318654,
          "y0": 538.6453291600001,
          "x1": 343.12333184865713,
          "y1": 547.61170916,
          "width": 20.083217216791752,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "28.85%\n100.0%",
          "page": 7,
          "x0": 391.67998611618356,
          "y0": 528.79292572,
          "x1": 420.6863704025482,
          "y1": 547.61170916,
          "width": 29.006384286364664,
          "height": 18.81878344000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "28.85%",
          "page": 7,
          "x0": 392.4003147336572,
          "y0": 538.6453291600001,
          "x1": 419.90931356002176,
          "y1": 547.61170916,
          "width": 27.508998826364575,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "11.54%\n34.21%",
          "page": 7,
          "x0": 447.48006577374815,
          "y0": 528.79292572,
          "x1": 476.4863768047882,
          "y1": 547.61170916,
          "width": 29.00631103104007,
          "height": 18.81878344000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "11.54%",
          "page": 7,
          "x0": 448.2003047274218,
          "y0": 538.6453291600001,
          "x1": 475.7092302984618,
          "y1": 547.61170916,
          "width": 27.508925571040038,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "GPT-4o\nImProver",
          "page": 7,
          "x0": 179.52009999999999,
          "y0": 530.54159982,
          "x1": 217.08481328794204,
          "y1": 547.61162916,
          "width": 37.564713287942055,
          "height": 17.07002934000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "GPT-4o",
          "page": 7,
          "x0": 179.52009999999999,
          "y0": 538.64524916,
          "x1": 207.64330897417852,
          "y1": 547.61162916,
          "width": 28.12320897417854,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Readability",
          "page": 7,
          "x0": 123.24,
          "y0": 533.8329257199999,
          "x1": 167.68321695826194,
          "y1": 542.7993057199999,
          "width": 44.44321695826194,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Readability",
          "page": 7,
          "x0": 123.24,
          "y0": 533.8329257199999,
          "x1": 167.68321695826194,
          "y1": 542.7993057199999,
          "width": 44.44321695826194,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ImProver",
          "page": 7,
          "x0": 179.5202,
          "y0": 530.54159982,
          "x1": 217.08481328794204,
          "y1": 539.50797982,
          "width": 37.56461328794205,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "13.45",
          "page": 7,
          "x0": 243.0,
          "y0": 528.79292572,
          "x1": 263.08321721679175,
          "y1": 537.7593057199999,
          "width": 20.083217216791752,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "30.97",
          "page": 7,
          "x0": 323.0400553197918,
          "y0": 528.79292572,
          "x1": 343.12327253658356,
          "y1": 537.7593057199999,
          "width": 20.083217216791752,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "100.0%",
          "page": 7,
          "x0": 391.67998611618356,
          "y0": 528.79292572,
          "x1": 420.6863704025482,
          "y1": 537.7593057199999,
          "width": 29.006384286364664,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "34.21%",
          "page": 7,
          "x0": 447.48006577374815,
          "y0": 528.79292572,
          "x1": 476.4863768047882,
          "y1": 537.7593057199999,
          "width": 29.00631103104007,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "recent. The model is ﬁxed as GPT-4o, CoS, output formatting, and examples are ﬁxed as the best\ncombination from the previous test, and no other features enabled.",
          "page": 7,
          "x0": 108.0,
          "y0": 490.66834448,
          "x1": 504.0104218579451,
          "y1": 511.67078448,
          "width": 396.0104218579451,
          "height": 21.002440000000036,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "recent. The model is ﬁxed as GPT-4o, CoS, output formatting, and examples are ﬁxed as the best",
          "page": 7,
          "x0": 108.0,
          "y0": 501.70814448,
          "x1": 504.0104218579451,
          "y1": 511.67078448,
          "width": 396.0104218579451,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "combination from the previous test, and no other features enabled.",
          "page": 7,
          "x0": 108.0,
          "y0": 490.66834448,
          "x1": 372.21065618628694,
          "y1": 500.63098448,
          "width": 264.21065618628694,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "n and Model: Here, we evaluate the effects of larger n values and different models. We test n =\n3, 5, 7, 10, 15 on GPT-4o and GPT-4o-mini, as well as n = 20 for GPT-4o-mini (as it is of a far\nlower token cost). CoS, output formatting, examples, and sampling method are ﬁxed as the best\ncombination from the previous test, and no other features enabled.",
          "page": 7,
          "x0": 107.76092,
          "y0": 440.86844448,
          "x1": 504.1973667914619,
          "y1": 483.82027352,
          "width": 396.4364467914619,
          "height": 42.95182904000001,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "n and Model: Here, we evaluate the effects of larger n values and different models. We test n =",
          "page": 7,
          "x0": 108.0,
          "y0": 473.42924,
          "x1": 503.94089128,
          "y1": 483.82027352,
          "width": 395.94089128,
          "height": 10.391033520000008,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "3, 5, 7, 10, 15 on GPT-4o and GPT-4o-mini, as well as n = 20 for GPT-4o-mini (as it is of a far",
          "page": 7,
          "x0": 107.76092,
          "y0": 462.50934,
          "x1": 504.1973667914619,
          "y1": 472.81070976,
          "width": 396.4364467914619,
          "height": 10.30136976,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "lower token cost). CoS, output formatting, examples, and sampling method are ﬁxed as the best",
          "page": 7,
          "x0": 108.00059999999996,
          "y0": 451.90824448,
          "x1": 504.010379211143,
          "y1": 461.87088448000003,
          "width": 396.00977921114304,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "combination from the previous test, and no other features enabled.",
          "page": 7,
          "x0": 108.00059999999996,
          "y0": 440.86844448,
          "x1": 372.2112561862869,
          "y1": 450.83108448,
          "width": 264.21065618628694,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Combos and RAG: We evaluate combination methods refinement(best_of_m',m) and\nbest_of_m'(refinement(m)), for m 6= m′ with mm′ equal to the optimal value m from\nthe previous test. We also test the effect of enabling document retrieval. Model, CoS, output for-\nmatting, examples, n, and sampling method are ﬁxed as the best combination from the previous\ntest.",
          "page": 7,
          "x0": 107.64059999999995,
          "y0": 380.14824448,
          "x1": 505.7583662150179,
          "y1": 434.22958896,
          "width": 398.1177662150179,
          "height": 54.081344479999984,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Combos and RAG: We evaluate combination methods refinement(best_of_m',m) and",
          "page": 7,
          "x0": 107.64059999999995,
          "y0": 423.94814448,
          "x1": 504.0621451106791,
          "y1": 434.22958896,
          "width": 396.4215451106792,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "best_of_m'(refinement(m)), for m 6= m′ with mm′ equal to the optimal value m from",
          "page": 7,
          "x0": 108.00079999999991,
          "y0": 412.70944000000003,
          "x1": 504.1918169281783,
          "y1": 424.03048750000005,
          "width": 396.1910169281784,
          "height": 11.32104750000002,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "the previous test. We also test the effect of enabling document retrieval. Model, CoS, output for-",
          "page": 7,
          "x0": 108.00088999999986,
          "y0": 402.10834448,
          "x1": 505.7583662150179,
          "y1": 412.07098448000005,
          "width": 397.757476215018,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "matting, examples, n, and sampling method are ﬁxed as the best combination from the previous",
          "page": 7,
          "x0": 108.00088999999988,
          "y0": 391.06814448,
          "x1": 504.2763621451157,
          "y1": 401.05070976,
          "width": 396.2754721451158,
          "height": 9.982565280000017,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "test.",
          "page": 7,
          "x0": 108.00088999999991,
          "y0": 380.14824448,
          "x1": 124.29154665402984,
          "y1": 390.11088448000004,
          "width": 16.29065665402993,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Ablation data. We evaluate our ablations on a subset of MIL. However, due to the increase in\nmodel calls for larger n values, we switch a representative sample of this subset for some test groups.\nNamely,",
          "page": 7,
          "x0": 108.0008299999999,
          "y0": 334.18854448,
          "x1": 506.0117768458276,
          "y1": 366.23043616,
          "width": 398.01094684582773,
          "height": 32.04189167999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Ablation data. We evaluate our ablations on a subset of MIL. However, due to the increase in",
          "page": 7,
          "x0": 108.00088999999991,
          "y0": 356.14824448,
          "x1": 503.942491755481,
          "y1": 366.23043616,
          "width": 395.9416017554811,
          "height": 10.082191679999994,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "model calls for larger n values, we switch a representative sample of this subset for some test groups.",
          "page": 7,
          "x0": 108.00108999999992,
          "y0": 345.22834448000003,
          "x1": 506.0117768458276,
          "y1": 355.21090976000005,
          "width": 398.0106868458277,
          "height": 9.982565280000017,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Namely,",
          "page": 7,
          "x0": 108.0008299999999,
          "y0": 334.18854448,
          "x1": 141.57156300426766,
          "y1": 344.15118448000004,
          "width": 33.570733004267765,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "GPT-4o-mini, GPT-4o, Output and Cos, Example Retrieval, and Sampling Method are tested\non the 133 theorems in the solutions of C03_Logic, C04_Sets_and_Functions, and\nC05_Elementary_Number_Theory.",
          "page": 7,
          "x0": 108.0008299999999,
          "y0": 295.30854448,
          "x1": 504.0623453677191,
          "y1": 327.23088448000004,
          "width": 396.0615153677192,
          "height": 31.92234000000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "GPT-4o-mini, GPT-4o, Output and Cos, Example Retrieval, and Sampling Method are tested",
          "page": 7,
          "x0": 108.0008299999999,
          "y0": 317.26824448,
          "x1": 503.9426262159592,
          "y1": 327.23088448000004,
          "width": 395.9417962159593,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "on the 133 theorems in the solutions of C03_Logic, C04_Sets_and_Functions, and",
          "page": 7,
          "x0": 108.0008299999999,
          "y0": 306.02954000000005,
          "x1": 504.0623453677191,
          "y1": 316.62978896000004,
          "width": 396.0615153677192,
          "height": 10.600248959999988,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "C05_Elementary_Number_Theory.",
          "page": 7,
          "x0": 108.00108999999992,
          "y0": 295.30854448,
          "x1": 278.4917499999999,
          "y1": 305.58998896,
          "width": 170.49066,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "n and Model are tested on 55 theorems from a representative sample of the aforementioned, and\nCombos and RAG are tested on a representative sample of 32 theorems from the aforementioned.",
          "page": 7,
          "x0": 108.00108999999992,
          "y0": 267.1499400000001,
          "x1": 504.06246661155507,
          "y1": 288.37120976000006,
          "width": 396.06137661155515,
          "height": 21.221269759999984,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "n and Model are tested on 55 theorems from a representative sample of the aforementioned, and",
          "page": 7,
          "x0": 108.00108999999992,
          "y0": 278.06984000000006,
          "x1": 504.06246661155507,
          "y1": 288.37120976000006,
          "width": 396.06137661155515,
          "height": 10.30136976,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Combos and RAG are tested on a representative sample of 32 theorems from the aforementioned.",
          "page": 7,
          "x0": 108.00214999999992,
          "y0": 267.1499400000001,
          "x1": 496.41280007223713,
          "y1": 277.4313844800001,
          "width": 388.4106500722372,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "4.2 RESULTS",
          "page": 7,
          "x0": 108.24224999999996,
          "y0": 242.14844448000005,
          "x1": 170.27366640044696,
          "y1": 252.11108448000007,
          "width": 62.031416400447,
          "height": 9.962640000000022,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "4.2 RESULTS",
          "page": 7,
          "x0": 108.24224999999996,
          "y0": 242.14844448000005,
          "x1": 170.27366640044696,
          "y1": 252.11108448000007,
          "width": 62.031416400447,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ImProver is capable of optimizing proofs in all settings. From Table 2, Table 3, and Table 4,\nwe can see that ImProver is capable of optimizing proofs on all datasets for both the length and\nreadability metrics. Furthermore, Table 1 shows that across all metrics, ImProver signiﬁcantly\noutperforms GPT-4o on proof optimization tasks on every experimental measure – aggregated from\nall datasets. Additionally, from Table 2, Table 3, and Table 4, we can see that ImProver outperforms\nGPT-4o on each dataset as well.",
          "page": 7,
          "x0": 107.64224999999993,
          "y0": 166.66894448000002,
          "x1": 505.29405673157197,
          "y1": 231.59083616000004,
          "width": 397.65180673157204,
          "height": 64.92189168000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "ImProver is capable of optimizing proofs in all settings. From Table 2, Table 3, and Table 4,",
          "page": 7,
          "x0": 108.00244999999994,
          "y0": 221.18984000000006,
          "x1": 505.29405673157197,
          "y1": 231.59083616000004,
          "width": 397.291606731572,
          "height": 10.400996159999977,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "we can see that ImProver is capable of optimizing proofs on all datasets for both the length and",
          "page": 7,
          "x0": 107.64224999999993,
          "y0": 210.15004000000005,
          "x1": 504.0637562161789,
          "y1": 220.43148448000005,
          "width": 396.42150621617895,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "readability metrics. Furthermore, Table 1 shows that across all metrics, ImProver signiﬁcantly",
          "page": 7,
          "x0": 108.00234999999992,
          "y0": 199.22974000000005,
          "x1": 504.4234180342061,
          "y1": 209.51118448000005,
          "width": 396.4210680342062,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "outperforms GPT-4o on proof optimization tasks on every experimental measure – aggregated from",
          "page": 7,
          "x0": 108.00204999999988,
          "y0": 188.62864448000002,
          "x1": 504.1928152085863,
          "y1": 198.59128448000004,
          "width": 396.1907652085864,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "all datasets. Additionally, from Table 2, Table 3, and Table 4, we can see that ImProver outperforms",
          "page": 7,
          "x0": 108.00204999999988,
          "y0": 177.27004000000005,
          "x1": 504.397749573602,
          "y1": 187.55148448000006,
          "width": 396.39569957360214,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "GPT-4o on each dataset as well.",
          "page": 7,
          "x0": 108.00224999999989,
          "y0": 166.66894448000002,
          "x1": 235.41307216798376,
          "y1": 176.63158448000004,
          "width": 127.41082216798387,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "We proceed to analyze this data and its implications.",
          "page": 7,
          "x0": 107.52217199999988,
          "y0": 149.74864448000002,
          "x1": 316.89311235211875,
          "y1": 159.71128448000005,
          "width": 209.37094035211885,
          "height": 9.962640000000022,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "We proceed to analyze this data and its implications.",
          "page": 7,
          "x0": 107.52217199999988,
          "y0": 149.74864448000002,
          "x1": 316.89311235211875,
          "y1": 159.71128448000005,
          "width": 209.37094035211885,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Length optimization. First focusing on the length metric, we see that ImProver outperforms GPT-\n4o with respect to the improvement score by 566% (aggregated over all datasets). Additionally, we\nare guaranteed that ImProver produces a correct output, although that output may just be the same\nas the input. However, 35.44% of the time, it generates a correct output that is not the same length\nas the input, and in that case, we expect an average of a 55.29% reduction in length. Comparing\nthis with GPT-4o, we conclude that not only can ImProver optimize at a higher level on arbitrary\ntheorems, but its ability to generate nontrivial correct outputs is far greater in comparison to GPT-4o.",
          "page": 7,
          "x0": 107.6421499999999,
          "y0": 59.98904448000004,
          "x1": 505.8936797031022,
          "y1": 135.83083616000005,
          "width": 398.2515297031023,
          "height": 75.84179168,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Length optimization. First focusing on the length metric, we see that ImProver outperforms GPT-",
          "page": 7,
          "x0": 108.00224999999989,
          "y0": 125.42984000000003,
          "x1": 505.63969289308153,
          "y1": 135.83083616000005,
          "width": 397.63744289308164,
          "height": 10.40099616000002,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "4o with respect to the improvement score by 566% (aggregated over all datasets). Additionally, we",
          "page": 7,
          "x0": 107.6421499999999,
          "y0": 114.39004000000003,
          "x1": 503.9852753320631,
          "y1": 124.67148448000003,
          "width": 396.3431253320632,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "are guaranteed that ImProver produces a correct output, although that output may just be the same",
          "page": 7,
          "x0": 108.00204999999991,
          "y0": 103.47014000000003,
          "x1": 503.9854416052255,
          "y1": 113.75158448000003,
          "width": 395.9833916052256,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "as the input. However, 35.44% of the time, it generates a correct output that is not the same length",
          "page": 7,
          "x0": 108.00184999999988,
          "y0": 92.55024000000003,
          "x1": 504.0632560810442,
          "y1": 102.85160976000003,
          "width": 396.0614060810443,
          "height": 10.30136976,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "as the input, and in that case, we expect an average of a 55.29% reduction in length. Comparing",
          "page": 7,
          "x0": 108.00190999999984,
          "y0": 81.51004000000003,
          "x1": 504.18256256880153,
          "y1": 91.81140976000003,
          "width": 396.1806525688017,
          "height": 10.30136976,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "this with GPT-4o, we conclude that not only can ImProver optimize at a higher level on arbitrary",
          "page": 7,
          "x0": 108.00136999999984,
          "y0": 70.59014000000003,
          "x1": 504.5428012739573,
          "y1": 80.87158448000004,
          "width": 396.54143127395747,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "theorems, but its ability to generate nontrivial correct outputs is far greater in comparison to GPT-4o.",
          "page": 7,
          "x0": 108.00216999999984,
          "y0": 59.98904448000004,
          "x1": 505.8936797031022,
          "y1": 69.95168448000004,
          "width": 397.8915097031023,
          "height": 9.96264,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        }
      ]
    },
    {
      "page_num": 8,
      "elements": [
        {
          "text": "Table 3: Compﬁles Proof optimization results.",
          "page": 8,
          "x0": 213.72,
          "y0": 691.30814448,
          "x1": 398.3706434436555,
          "y1": 701.27078448,
          "width": 184.65064344365553,
          "height": 9.962639999999965,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Table 3: Compﬁles Proof optimization results.",
          "page": 8,
          "x0": 213.72,
          "y0": 691.30814448,
          "x1": 398.3706434436555,
          "y1": 701.27078448,
          "width": 184.65064344365553,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Metric",
          "page": 8,
          "x0": 123.24,
          "y0": 677.60532916,
          "x1": 147.14108550198017,
          "y1": 686.57170916,
          "width": 23.901085501980177,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Metric",
          "page": 8,
          "x0": 123.24,
          "y0": 677.60532916,
          "x1": 147.14108550198017,
          "y1": 686.57170916,
          "width": 23.901085501980177,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Model",
          "page": 8,
          "x0": 179.5201183027802,
          "y0": 677.60532916,
          "x1": 202.77277914339496,
          "y1": 686.57170916,
          "width": 23.252660840614766,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Model",
          "page": 8,
          "x0": 179.5201183027802,
          "y0": 677.60532916,
          "x1": 202.77277914339496,
          "y1": 686.57170916,
          "width": 23.252660840614766,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Improvement Nonempty Improvement Accuracy",
          "page": 8,
          "x0": 228.96,
          "y0": 677.60532916,
          "x1": 423.28322653078993,
          "y1": 686.57170916,
          "width": 194.32322653078992,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Improvement Nonempty Improvement Accuracy",
          "page": 8,
          "x0": 228.96,
          "y0": 677.60532916,
          "x1": 423.28322653078993,
          "y1": 686.57170916,
          "width": 194.32322653078992,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Improved Acc.",
          "page": 8,
          "x0": 435.23998392459,
          "y0": 677.60532916,
          "x1": 488.7214596529288,
          "y1": 686.57170916,
          "width": 53.48147572833881,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Improved Acc.",
          "page": 8,
          "x0": 435.23998392459,
          "y0": 677.60532916,
          "x1": 488.7214596529288,
          "y1": 686.57170916,
          "width": 53.48147572833881,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "2.75\n18.86",
          "page": 8,
          "x0": 243.0,
          "y0": 652.63292572,
          "x1": 263.08321721679175,
          "y1": 671.4517091600001,
          "width": 20.083217216791752,
          "height": 18.81878344000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "2.75",
          "page": 8,
          "x0": 245.16,
          "y0": 662.4853291600001,
          "x1": 260.8032157586654,
          "y1": 671.4517091600001,
          "width": 15.643215758665377,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "30.7\n54.48",
          "page": 8,
          "x0": 323.0400553197918,
          "y0": 652.63292572,
          "x1": 343.12327253658356,
          "y1": 671.4517091600001,
          "width": 20.083217216791752,
          "height": 18.81878344000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "30.7",
          "page": 8,
          "x0": 325.1999362462654,
          "y0": 662.4853291600001,
          "x1": 340.84315200493074,
          "y1": 671.4517091600001,
          "width": 15.643215758665349,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "11.54%\n100.0%",
          "page": 8,
          "x0": 391.67998611618356,
          "y0": 652.63292572,
          "x1": 420.6863704025482,
          "y1": 671.4517091600001,
          "width": 29.006384286364664,
          "height": 18.81878344000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "11.54%",
          "page": 8,
          "x0": 392.40001633253075,
          "y0": 662.4853291600001,
          "x1": 419.9090151588954,
          "y1": 671.4517091600001,
          "width": 27.508998826364632,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "5.13%\n34.62%",
          "page": 8,
          "x0": 447.48006577374815,
          "y0": 652.63292572,
          "x1": 476.4863768047882,
          "y1": 671.4517091600001,
          "width": 29.00631103104007,
          "height": 18.81878344000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "5.13%",
          "page": 8,
          "x0": 450.4801567602954,
          "y0": 662.4853291600001,
          "x1": 473.54910526176263,
          "y1": 671.4517091600001,
          "width": 23.06894850146722,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "GPT-4o\nImProver",
          "page": 8,
          "x0": 179.52009999999999,
          "y0": 654.38159982,
          "x1": 217.08481328794204,
          "y1": 671.45154916,
          "width": 37.564713287942055,
          "height": 17.069949339999994,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "GPT-4o",
          "page": 8,
          "x0": 179.52009999999999,
          "y0": 662.48516916,
          "x1": 207.64330897417852,
          "y1": 671.45154916,
          "width": 28.12320897417854,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Length",
          "page": 8,
          "x0": 123.24,
          "y0": 657.55292572,
          "x1": 150.6653295893774,
          "y1": 666.5193057199999,
          "width": 27.425329589377398,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Length",
          "page": 8,
          "x0": 123.24,
          "y0": 657.55292572,
          "x1": 150.6653295893774,
          "y1": 666.5193057199999,
          "width": 27.425329589377398,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ImProver",
          "page": 8,
          "x0": 179.5202,
          "y0": 654.38159982,
          "x1": 217.08481328794204,
          "y1": 663.34797982,
          "width": 37.56461328794205,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "18.86",
          "page": 8,
          "x0": 243.0,
          "y0": 652.63292572,
          "x1": 263.08321721679175,
          "y1": 661.59930572,
          "width": 20.083217216791752,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "54.48",
          "page": 8,
          "x0": 323.0400553197918,
          "y0": 652.63292572,
          "x1": 343.12327253658356,
          "y1": 661.59930572,
          "width": 20.083217216791752,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "100.0%",
          "page": 8,
          "x0": 391.67998611618356,
          "y0": 652.63292572,
          "x1": 420.6863704025482,
          "y1": 661.59930572,
          "width": 29.006384286364664,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "34.62%",
          "page": 8,
          "x0": 447.48006577374815,
          "y0": 652.63292572,
          "x1": 476.4863768047882,
          "y1": 661.59930572,
          "width": 29.00631103104007,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "0.39\n5.74",
          "page": 8,
          "x0": 245.16,
          "y0": 627.43292572,
          "x1": 260.8032157586654,
          "y1": 646.25170916,
          "width": 15.643215758665377,
          "height": 18.81878344000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "0.39",
          "page": 8,
          "x0": 245.16,
          "y0": 637.2853291600001,
          "x1": 260.8032157586654,
          "y1": 646.25170916,
          "width": 15.643215758665377,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "3.38\n24.89",
          "page": 8,
          "x0": 323.0401146318654,
          "y0": 627.43292572,
          "x1": 343.12333184865713,
          "y1": 646.25170916,
          "width": 20.083217216791752,
          "height": 18.81878344000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "3.38",
          "page": 8,
          "x0": 325.1999362462654,
          "y0": 637.2853291600001,
          "x1": 340.84315200493074,
          "y1": 646.25170916,
          "width": 15.643215758665349,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "14.1%\n100.0%",
          "page": 8,
          "x0": 391.68004542825713,
          "y0": 627.43292572,
          "x1": 420.6864297146218,
          "y1": 646.25170916,
          "width": 29.006384286364664,
          "height": 18.81878344000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "14.1%",
          "page": 8,
          "x0": 394.68007710273076,
          "y0": 637.2853291600001,
          "x1": 417.749074470969,
          "y1": 646.25170916,
          "width": 23.06899736823823,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "1.28%\n19.23%",
          "page": 8,
          "x0": 447.4801250858218,
          "y0": 627.43292572,
          "x1": 476.48643611686185,
          "y1": 646.25170916,
          "width": 29.00631103104007,
          "height": 18.81878344000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "1.28%",
          "page": 8,
          "x0": 450.480127350569,
          "y0": 637.2853291600001,
          "x1": 473.5490758520362,
          "y1": 646.25170916,
          "width": 23.06894850146722,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "GPT-4o\nImProver",
          "page": 8,
          "x0": 179.52009999999999,
          "y0": 629.18159982,
          "x1": 217.08481328794204,
          "y1": 646.2516291600001,
          "width": 37.564713287942055,
          "height": 17.070029340000133,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "GPT-4o",
          "page": 8,
          "x0": 179.52009999999999,
          "y0": 637.2852491600001,
          "x1": 207.64330897417852,
          "y1": 646.2516291600001,
          "width": 28.12320897417854,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Readability",
          "page": 8,
          "x0": 123.24,
          "y0": 632.47292572,
          "x1": 167.68321695826194,
          "y1": 641.43930572,
          "width": 44.44321695826194,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Readability",
          "page": 8,
          "x0": 123.24,
          "y0": 632.47292572,
          "x1": 167.68321695826194,
          "y1": 641.43930572,
          "width": 44.44321695826194,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ImProver",
          "page": 8,
          "x0": 179.5202,
          "y0": 629.18159982,
          "x1": 217.08481328794204,
          "y1": 638.1479798199999,
          "width": 37.56461328794205,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "5.74",
          "page": 8,
          "x0": 245.16,
          "y0": 627.43292572,
          "x1": 260.8032157586654,
          "y1": 636.3993057199999,
          "width": 15.643215758665377,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "24.89",
          "page": 8,
          "x0": 323.0401146318654,
          "y0": 627.43292572,
          "x1": 343.12333184865713,
          "y1": 636.3993057199999,
          "width": 20.083217216791752,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "100.0%",
          "page": 8,
          "x0": 391.68004542825713,
          "y0": 627.43292572,
          "x1": 420.6864297146218,
          "y1": 636.3993057199999,
          "width": 29.006384286364664,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "19.23%",
          "page": 8,
          "x0": 447.4801250858218,
          "y0": 627.43292572,
          "x1": 476.48643611686185,
          "y1": 636.3993057199999,
          "width": 29.00631103104007,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Table 4: Mathlib Proof optimization results.",
          "page": 8,
          "x0": 218.4,
          "y0": 600.58814448,
          "x1": 393.69090593326786,
          "y1": 610.55078448,
          "width": 175.29090593326785,
          "height": 9.962639999999965,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Table 4: Mathlib Proof optimization results.",
          "page": 8,
          "x0": 218.4,
          "y0": 600.58814448,
          "x1": 393.69090593326786,
          "y1": 610.55078448,
          "width": 175.29090593326785,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Metric",
          "page": 8,
          "x0": 123.24,
          "y0": 586.8853291600001,
          "x1": 147.14108550198017,
          "y1": 595.85170916,
          "width": 23.901085501980177,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Metric",
          "page": 8,
          "x0": 123.24,
          "y0": 586.8853291600001,
          "x1": 147.14108550198017,
          "y1": 595.85170916,
          "width": 23.901085501980177,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Model",
          "page": 8,
          "x0": 179.5201183027802,
          "y0": 586.8853291600001,
          "x1": 202.77277914339496,
          "y1": 595.85170916,
          "width": 23.252660840614766,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Model",
          "page": 8,
          "x0": 179.5201183027802,
          "y0": 586.8853291600001,
          "x1": 202.77277914339496,
          "y1": 595.85170916,
          "width": 23.252660840614766,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Improvement Nonempty Improvement Accuracy",
          "page": 8,
          "x0": 228.96,
          "y0": 586.8853291600001,
          "x1": 423.28322653078993,
          "y1": 595.85170916,
          "width": 194.32322653078992,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Improvement Nonempty Improvement Accuracy",
          "page": 8,
          "x0": 228.96,
          "y0": 586.8853291600001,
          "x1": 423.28322653078993,
          "y1": 595.85170916,
          "width": 194.32322653078992,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Improved Acc.",
          "page": 8,
          "x0": 435.23998392459,
          "y0": 586.8853291600001,
          "x1": 488.7214596529288,
          "y1": 595.85170916,
          "width": 53.48147572833881,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Improved Acc.",
          "page": 8,
          "x0": 435.23998392459,
          "y0": 586.8853291600001,
          "x1": 488.7214596529288,
          "y1": 595.85170916,
          "width": 53.48147572833881,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "0.0\n6.19",
          "page": 8,
          "x0": 245.16,
          "y0": 561.91292572,
          "x1": 260.8032157586654,
          "y1": 580.73170916,
          "width": 15.643215758665377,
          "height": 18.81878344000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "0.0",
          "page": 8,
          "x0": 247.44,
          "y0": 571.7653291600001,
          "x1": 258.6431898223216,
          "y1": 580.73170916,
          "width": 11.203189822321576,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "0.0\n53.65",
          "page": 8,
          "x0": 323.0401146318654,
          "y0": 561.91292572,
          "x1": 343.12333184865713,
          "y1": 580.73170916,
          "width": 20.083217216791752,
          "height": 18.81878344000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "0.0",
          "page": 8,
          "x0": 327.4798823583216,
          "y0": 571.7653291600001,
          "x1": 338.6830721806432,
          "y1": 580.73170916,
          "width": 11.203189822321576,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "16.67%\n100.0%",
          "page": 8,
          "x0": 391.68004542825713,
          "y0": 561.91292572,
          "x1": 420.6864297146218,
          "y1": 580.73170916,
          "width": 29.006384286364664,
          "height": 18.81878344000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "16.67%",
          "page": 8,
          "x0": 392.39984778644316,
          "y0": 571.7653291600001,
          "x1": 419.9088466128078,
          "y1": 580.73170916,
          "width": 27.508998826364632,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "0.0%\n11.54%",
          "page": 8,
          "x0": 447.4801250858218,
          "y0": 561.91292572,
          "x1": 476.48643611686185,
          "y1": 580.73170916,
          "width": 29.00631103104007,
          "height": 18.81878344000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "0.0%",
          "page": 8,
          "x0": 452.63972016480784,
          "y0": 571.7653291600001,
          "x1": 471.26869159670224,
          "y1": 580.73170916,
          "width": 18.6289714318944,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "GPT-4o\nImProver",
          "page": 8,
          "x0": 179.52009999999999,
          "y0": 563.66159982,
          "x1": 217.08471328794207,
          "y1": 580.73154916,
          "width": 37.56461328794208,
          "height": 17.069949339999994,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "GPT-4o",
          "page": 8,
          "x0": 179.52009999999999,
          "y0": 571.76516916,
          "x1": 207.64330897417852,
          "y1": 580.73154916,
          "width": 28.12320897417854,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Length",
          "page": 8,
          "x0": 123.24,
          "y0": 566.8329257199999,
          "x1": 150.6653295893774,
          "y1": 575.7993057199999,
          "width": 27.425329589377398,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Length",
          "page": 8,
          "x0": 123.24,
          "y0": 566.8329257199999,
          "x1": 150.6653295893774,
          "y1": 575.7993057199999,
          "width": 27.425329589377398,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ImProver",
          "page": 8,
          "x0": 179.5201,
          "y0": 563.66159982,
          "x1": 217.08471328794207,
          "y1": 572.62797982,
          "width": 37.56461328794205,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "6.19",
          "page": 8,
          "x0": 245.16,
          "y0": 561.91292572,
          "x1": 260.8032157586654,
          "y1": 570.8793057199999,
          "width": 15.643215758665377,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "53.65",
          "page": 8,
          "x0": 323.0401146318654,
          "y0": 561.91292572,
          "x1": 343.12333184865713,
          "y1": 570.8793057199999,
          "width": 20.083217216791752,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "100.0%",
          "page": 8,
          "x0": 391.68004542825713,
          "y0": 561.91292572,
          "x1": 420.6864297146218,
          "y1": 570.8793057199999,
          "width": 29.006384286364664,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "11.54%",
          "page": 8,
          "x0": 447.4801250858218,
          "y0": 561.91292572,
          "x1": 476.48643611686185,
          "y1": 570.8793057199999,
          "width": 29.00631103104007,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "0.0\n4.63",
          "page": 8,
          "x0": 245.16,
          "y0": 536.7129257199999,
          "x1": 260.8032157586654,
          "y1": 555.53170916,
          "width": 15.643215758665377,
          "height": 18.81878344000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "0.0",
          "page": 8,
          "x0": 247.44,
          "y0": 546.56532916,
          "x1": 258.6431898223216,
          "y1": 555.53170916,
          "width": 11.203189822321576,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "0.0\n33.19",
          "page": 8,
          "x0": 323.0401146318654,
          "y0": 536.7129257199999,
          "x1": 343.12333184865713,
          "y1": 555.53170916,
          "width": 20.083217216791752,
          "height": 18.81878344000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "0.0",
          "page": 8,
          "x0": 327.4798823583216,
          "y0": 546.56532916,
          "x1": 338.6830721806432,
          "y1": 555.53170916,
          "width": 11.203189822321576,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "4.65%\n100.0%",
          "page": 8,
          "x0": 391.68004542825713,
          "y0": 536.7129257199999,
          "x1": 420.6864297146218,
          "y1": 555.53170916,
          "width": 29.006384286364664,
          "height": 18.81878344000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "4.65%",
          "page": 8,
          "x0": 394.6799085566432,
          "y0": 546.56532916,
          "x1": 417.7489059248814,
          "y1": 555.53170916,
          "width": 23.068997368238172,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "0.0%\n11.63%",
          "page": 8,
          "x0": 447.4801250858218,
          "y0": 536.7129257199999,
          "x1": 476.48643611686185,
          "y1": 555.53170916,
          "width": 29.00631103104007,
          "height": 18.81878344000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "0.0%",
          "page": 8,
          "x0": 452.64004941028145,
          "y0": 546.56532916,
          "x1": 471.26902084217585,
          "y1": 555.53170916,
          "width": 18.6289714318944,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "GPT-4o\nImProver",
          "page": 8,
          "x0": 179.52009999999999,
          "y0": 538.46159982,
          "x1": 217.08471328794207,
          "y1": 555.5316291600001,
          "width": 37.56461328794208,
          "height": 17.070029340000133,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "GPT-4o",
          "page": 8,
          "x0": 179.52009999999999,
          "y0": 546.5652491600001,
          "x1": 207.64330897417852,
          "y1": 555.5316291600001,
          "width": 28.12320897417854,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Readability",
          "page": 8,
          "x0": 123.24,
          "y0": 541.75292572,
          "x1": 167.68321695826194,
          "y1": 550.71930572,
          "width": 44.44321695826194,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Readability",
          "page": 8,
          "x0": 123.24,
          "y0": 541.75292572,
          "x1": 167.68321695826194,
          "y1": 550.71930572,
          "width": 44.44321695826194,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ImProver",
          "page": 8,
          "x0": 179.5201,
          "y0": 538.46159982,
          "x1": 217.08471328794207,
          "y1": 547.4279798199999,
          "width": 37.56461328794205,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "4.63",
          "page": 8,
          "x0": 245.16,
          "y0": 536.7129257199999,
          "x1": 260.8032157586654,
          "y1": 545.6793057199999,
          "width": 15.643215758665377,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "33.19",
          "page": 8,
          "x0": 323.0401146318654,
          "y0": 536.7129257199999,
          "x1": 343.12333184865713,
          "y1": 545.6793057199999,
          "width": 20.083217216791752,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "100.0%",
          "page": 8,
          "x0": 391.68004542825713,
          "y0": 536.7129257199999,
          "x1": 420.6864297146218,
          "y1": 545.6793057199999,
          "width": 29.006384286364664,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "11.63%",
          "page": 8,
          "x0": 447.4801250858218,
          "y0": 536.7129257199999,
          "x1": 476.48643611686185,
          "y1": 545.6793057199999,
          "width": 29.00631103104007,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Readability optimization. Readability optimization is similar, with ImProver outperforming\nGPT-4o by 423%. Moreover, the accuracy, improved accuracy, and nonempty improvement dis-\nparities for readability parallel those of the length tests. However, it should be noted that for both\nGPT-4o and ImProver, the accuracy and improved accuracy scores were markedly smaller for read-\nability than length optimization. This suggests that for both models, it was generally more “difﬁcult”\nto generate a correct output, and moreover, generate a correct output with a better metric score\nthan the input, for readability optimization than length optimization. In other words, optimizing for\nreadability is more difﬁcult for the underlying generator than optimizing for length. However, we\nspeculate with higher-quality prompts, descriptions of the metric, and examples, this disparity can\nbe minimized. Regardless, we note that different metrics can be less likely to be correctly optimized,\nand that model performance is correlated with the metric it seeks to optimize – both for GPT-4o and\nImProver.",
          "page": 8,
          "x0": 108.0,
          "y0": 387.74924,
          "x1": 505.9043360336227,
          "y1": 518.75033616,
          "width": 397.9043360336227,
          "height": 131.00109615999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Readability optimization. Readability optimization is similar, with ImProver outperforming",
          "page": 8,
          "x0": 108.0,
          "y0": 508.34934,
          "x1": 504.42135880210265,
          "y1": 518.75033616,
          "width": 396.42135880210265,
          "height": 10.400996159999977,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "GPT-4o by 423%. Moreover, the accuracy, improved accuracy, and nonempty improvement dis-",
          "page": 8,
          "x0": 108.0,
          "y0": 497.30913999999996,
          "x1": 505.63683905499494,
          "y1": 507.59058447999996,
          "width": 397.63683905499494,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "parities for readability parallel those of the length tests. However, it should be noted that for both",
          "page": 8,
          "x0": 108.0002,
          "y0": 486.70804447999996,
          "x1": 504.06121899800644,
          "y1": 496.67068448,
          "width": 396.06101899800643,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "GPT-4o and ImProver, the accuracy and improved accuracy scores were markedly smaller for read-",
          "page": 8,
          "x0": 108.0002,
          "y0": 475.46934,
          "x1": 505.75797791519636,
          "y1": 485.75078448,
          "width": 397.75777791519636,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ability than length optimization. This suggests that for both models, it was generally more “difﬁcult”",
          "page": 8,
          "x0": 108.00040000000007,
          "y0": 464.74794447999994,
          "x1": 505.9043360336227,
          "y1": 474.71058447999997,
          "width": 397.90393603362264,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "to generate a correct output, and moreover, generate a correct output with a better metric score",
          "page": 8,
          "x0": 108.0004000000001,
          "y0": 453.82804447999996,
          "x1": 504.10404211035143,
          "y1": 463.79068448,
          "width": 396.1036421103513,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "than the input, for readability optimization than length optimization. In other words, optimizing for",
          "page": 8,
          "x0": 108.0004000000001,
          "y0": 442.90814448,
          "x1": 504.3178268753897,
          "y1": 452.87078448,
          "width": 396.31742687538963,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "readability is more difﬁcult for the underlying generator than optimizing for length. However, we",
          "page": 8,
          "x0": 108.00040000000007,
          "y0": 431.86834447999996,
          "x1": 503.98287659481537,
          "y1": 441.83098448,
          "width": 395.9824765948153,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "speculate with higher-quality prompts, descriptions of the metric, and examples, this disparity can",
          "page": 8,
          "x0": 108.0004000000001,
          "y0": 420.94804447999996,
          "x1": 504.0617994774524,
          "y1": 430.91068448,
          "width": 396.06139947745226,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "be minimized. Regardless, we note that different metrics can be less likely to be correctly optimized,",
          "page": 8,
          "x0": 108.00040000000013,
          "y0": 410.02814448,
          "x1": 505.5303414378025,
          "y1": 419.99078448,
          "width": 397.5299414378024,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "and that model performance is correlated with the metric it seeks to optimize – both for GPT-4o and",
          "page": 8,
          "x0": 108.00040000000013,
          "y0": 398.98834447999997,
          "x1": 504.06167889046867,
          "y1": 408.95098448,
          "width": 396.06127889046854,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ImProver.",
          "page": 8,
          "x0": 108.0004000000001,
          "y0": 387.74924,
          "x1": 151.05086000000009,
          "y1": 398.03068448,
          "width": 43.05045999999999,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Optimization varies based on dataset difﬁculty. Additionally noting Table 2, Table 3, and\nTable 4, we observe that the improvement score for both metrics for both GPT-4o and ImProver\nis highest for the MIL dataset, lower for Compﬁles, and the lowest on the Mathlib theorems. This\nsuggests that the expected improvement in metric score decreases with higher difﬁcultly – with\nundergraduate-level theorems having a signiﬁcantly higher expected improvement than research-\nlevel theorems. However, it should be noted that for both metrics, the nonempty improvement of\nImProver stayed consistent, whereas for GPT-4o, it followed the aforementioned trend of decreas-\ning with difﬁculty. Similarly, the accuracy and improved accuracy scores for both metrics and\nmodels decreased with higher difﬁculty datasets (disregarding ImProver’s accuracy scores, as they\nare ensured to be 100%). This suggests that although the base GPT-4o generator is less likely to\ngenerate a correct output for higher difﬁculty datasets, the improvements that ImProver makes to\nthe base generator allows it to maintain its improvement in the metric score whenever a correct out-\nput is generated. As such, we can speculate that the bottleneck in the improvement score is not the\nmodel’s ability to optimize the proof for a metric, but rather its ability to generate a new correct\nproof at all. As such, we conjecture that with more capable generator models, the accuracy – and\nthus, the improvement score – in optimization tasks will continue to increase, until the improvement\nscores match the nonempty improvement.",
          "page": 8,
          "x0": 107.63940000000011,
          "y0": 187.54854447999998,
          "x1": 505.87730038476985,
          "y1": 372.95023616,
          "width": 398.2379003847698,
          "height": 185.40169168,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Optimization varies based on dataset difﬁculty. Additionally noting Table 2, Table 3, and",
          "page": 8,
          "x0": 108.0004000000001,
          "y0": 362.86804448,
          "x1": 504.06187413881497,
          "y1": 372.95023616,
          "width": 396.0614741388149,
          "height": 10.082191679999994,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Table 4, we observe that the improvement score for both metrics for both GPT-4o and ImProver",
          "page": 8,
          "x0": 107.63940000000011,
          "y0": 351.62934,
          "x1": 504.4159172502265,
          "y1": 361.91078448,
          "width": 396.77651725022645,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "is highest for the MIL dataset, lower for Compﬁles, and the lowest on the Mathlib theorems. This",
          "page": 8,
          "x0": 107.99960000000016,
          "y0": 341.02824448,
          "x1": 504.03462732575446,
          "y1": 350.99088448000003,
          "width": 396.0350273257543,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "suggests that the expected improvement in metric score decreases with higher difﬁcultly – with",
          "page": 8,
          "x0": 107.99960000000019,
          "y0": 329.98844448,
          "x1": 503.94111508398623,
          "y1": 339.95108448,
          "width": 395.941515083986,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "undergraduate-level theorems having a signiﬁcantly higher expected improvement than research-",
          "page": 8,
          "x0": 107.99960000000019,
          "y0": 319.06814448,
          "x1": 505.87730038476985,
          "y1": 329.03078448,
          "width": 397.8777003847697,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "level theorems. However, it should be noted that for both metrics, the nonempty improvement of",
          "page": 8,
          "x0": 107.99960000000019,
          "y0": 308.14824448,
          "x1": 504.0775880693977,
          "y1": 318.11088448000004,
          "width": 396.0779880693975,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ImProver stayed consistent, whereas for GPT-4o, it followed the aforementioned trend of decreas-",
          "page": 8,
          "x0": 107.99960000000019,
          "y0": 296.78964,
          "x1": 505.7570425277632,
          "y1": 307.07108448,
          "width": 397.75744252776303,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ing with difﬁculty. Similarly, the accuracy and improved accuracy scores for both metrics and",
          "page": 8,
          "x0": 107.99940000000015,
          "y0": 286.18854448,
          "x1": 504.06064515225535,
          "y1": 296.15118448000004,
          "width": 396.0612451522552,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "models decreased with higher difﬁculty datasets (disregarding ImProver’s accuracy scores, as they",
          "page": 8,
          "x0": 107.99940000000015,
          "y0": 274.94984000000005,
          "x1": 504.4207106431254,
          "y1": 285.23128448000006,
          "width": 396.42131064312525,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "are ensured to be 100%). This suggests that although the base GPT-4o generator is less likely to",
          "page": 8,
          "x0": 107.99930000000012,
          "y0": 264.34834448000004,
          "x1": 503.9408682827826,
          "y1": 274.31098448000006,
          "width": 395.9415682827825,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "generate a correct output for higher difﬁculty datasets, the improvements that ImProver makes to",
          "page": 8,
          "x0": 107.99930000000012,
          "y0": 252.98974000000004,
          "x1": 503.9400849096198,
          "y1": 263.27118448000004,
          "width": 395.9407849096197,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "the base generator allows it to maintain its improvement in the metric score whenever a correct out-",
          "page": 8,
          "x0": 107.99940000000004,
          "y0": 242.38864448,
          "x1": 505.75726719332596,
          "y1": 252.35128448000003,
          "width": 397.7578671933259,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "put is generated. As such, we can speculate that the bottleneck in the improvement score is not the",
          "page": 8,
          "x0": 107.99940000000004,
          "y0": 231.46874448,
          "x1": 504.1035866086164,
          "y1": 241.43138448000002,
          "width": 396.1041866086164,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "model’s ability to optimize the proof for a metric, but rather its ability to generate a new correct",
          "page": 8,
          "x0": 107.99940000000001,
          "y0": 220.42854448,
          "x1": 504.2501362827404,
          "y1": 230.39118448000002,
          "width": 396.2507362827404,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "proof at all. As such, we conjecture that with more capable generator models, the accuracy – and",
          "page": 8,
          "x0": 107.99940000000001,
          "y0": 209.50864448,
          "x1": 504.0611454936734,
          "y1": 219.47128448,
          "width": 396.06174549367336,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "thus, the improvement score – in optimization tasks will continue to increase, until the improvement",
          "page": 8,
          "x0": 107.99940000000001,
          "y0": 198.58874447999997,
          "x1": 504.49003470583887,
          "y1": 208.55138448,
          "width": 396.49063470583883,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "scores match the nonempty improvement.",
          "page": 8,
          "x0": 107.99940000000001,
          "y0": 187.54854447999998,
          "x1": 275.0103217171884,
          "y1": 197.51118448,
          "width": 167.01092171718838,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Overall, we conclude that although the performance of both ImProver and GPT-4o decreases on\nlength and readability optimization on more difﬁcult datasets, ImProver signiﬁcantly outperforms\nGPT-4o on all datasets for length and readability optimization.",
          "page": 8,
          "x0": 107.99919999999997,
          "y0": 148.66894448,
          "x1": 504.3947918635563,
          "y1": 180.59128448,
          "width": 396.3955918635563,
          "height": 31.92234000000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Overall, we conclude that although the performance of both ImProver and GPT-4o decreases on",
          "page": 8,
          "x0": 107.99940000000001,
          "y0": 170.30984,
          "x1": 504.0597333934698,
          "y1": 180.59128448,
          "width": 396.0603333934698,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "length and readability optimization on more difﬁcult datasets, ImProver signiﬁcantly outperforms",
          "page": 8,
          "x0": 107.9993,
          "y0": 159.38994,
          "x1": 504.3947918635563,
          "y1": 169.67138448,
          "width": 396.3954918635563,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "GPT-4o on all datasets for length and readability optimization.",
          "page": 8,
          "x0": 107.99919999999997,
          "y0": 148.66894448,
          "x1": 357.2098531866685,
          "y1": 158.63158448000001,
          "width": 249.21065318666854,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "4.2.1 ABLATION TESTING",
          "page": 8,
          "x0": 108.23919999999998,
          "y0": 123.58884448,
          "x1": 225.713205627947,
          "y1": 133.55148448,
          "width": 117.47400562794701,
          "height": 9.962639999999993,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "4.2.1 ABLATION TESTING",
          "page": 8,
          "x0": 108.23919999999998,
          "y0": 123.58884448,
          "x1": 225.713205627947,
          "y1": 133.55148448,
          "width": 117.47400562794701,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "We perform ablation studies using a subset of the MIL dataset as discussed in §4.1.1. The results\nof this factorial study are aggregated in Table 5. We measure the baseline results from the GPT-\n4o and GPT-4o-mini models, noting that GPT-4o is the better-scoring model (with respect to the\nimprovement score). Thus, ﬁxing this model, we vary the output formatting type and if CoS is\nenabled, and determine that outputting flat with CoS enabled maximizes the improvement score.",
          "page": 8,
          "x0": 107.51929999999999,
          "y0": 59.98894448000001,
          "x1": 505.8891848233745,
          "y1": 113.75148448,
          "width": 398.3698848233745,
          "height": 53.762539999999994,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "We perform ablation studies using a subset of the MIL dataset as discussed in §4.1.1. The results",
          "page": 8,
          "x0": 107.51929999999999,
          "y0": 103.78884448000001,
          "x1": 504.03469920456706,
          "y1": 113.75148448,
          "width": 396.5153992045671,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "of this factorial study are aggregated in Table 5. We measure the baseline results from the GPT-",
          "page": 8,
          "x0": 107.99929999999998,
          "y0": 92.86894448000001,
          "x1": 505.6356688009324,
          "y1": 102.83158448,
          "width": 397.6363688009325,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "4o and GPT-4o-mini models, noting that GPT-4o is the better-scoring model (with respect to the",
          "page": 8,
          "x0": 107.63830000000002,
          "y0": 81.82874448000001,
          "x1": 504.10193132103643,
          "y1": 91.79138448,
          "width": 396.4636313210364,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "improvement score). Thus, ﬁxing this model, we vary the output formatting type and if CoS is",
          "page": 8,
          "x0": 107.9983,
          "y0": 70.90884448000001,
          "x1": 504.03272765016567,
          "y1": 80.87148448,
          "width": 396.03442765016564,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "enabled, and determine that outputting flat with CoS enabled maximizes the improvement score.",
          "page": 8,
          "x0": 107.99829999999997,
          "y0": 59.98894448000001,
          "x1": 505.8891848233745,
          "y1": 70.27038896,
          "width": 397.8908848233745,
          "height": 10.281444479999998,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        }
      ]
    },
    {
      "page_num": 9,
      "elements": [
        {
          "text": "Table 5: Ablation results. Each cell in the ablation tests shows best / worst, which are the best\nand worst parameter combinations in the test group. The ImProver speciﬁcation outputs the input\ntheorem when no correct proof is generated, which results in an accuracy of 100% on MIL.",
          "page": 9,
          "x0": 107.64,
          "y0": 669.34804448,
          "x1": 504.1292077533914,
          "y1": 701.58958896,
          "width": 396.48920775339144,
          "height": 32.241544480000016,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Table 5: Ablation results. Each cell in the ablation tests shows best / worst, which are the best",
          "page": 9,
          "x0": 107.64,
          "y0": 691.30814448,
          "x1": 504.0974324625904,
          "y1": 701.58958896,
          "width": 396.4574324625904,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "and worst parameter combinations in the test group. The ImProver speciﬁcation outputs the input",
          "page": 9,
          "x0": 107.99986000000001,
          "y0": 680.26794448,
          "x1": 504.1292077533914,
          "y1": 690.54938896,
          "width": 396.1293477533914,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "theorem when no correct proof is generated, which results in an accuracy of 100% on MIL.",
          "page": 9,
          "x0": 107.99976000000004,
          "y0": 669.34804448,
          "x1": 471.81074112140396,
          "y1": 679.31068448,
          "width": 363.8109811214039,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Improvement Nonempty Improve.",
          "page": 9,
          "x0": 208.44,
          "y0": 655.7653291600001,
          "x1": 340.7616975355799,
          "y1": 664.73170916,
          "width": 132.32169753557991,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Improvement Nonempty Improve.",
          "page": 9,
          "x0": 208.44,
          "y0": 655.7653291600001,
          "x1": 340.7616975355799,
          "y1": 664.73170916,
          "width": 132.32169753557991,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Accuracy",
          "page": 9,
          "x0": 366.84014477417986,
          "y0": 655.7653291600001,
          "x1": 400.96317320280315,
          "y1": 664.73170916,
          "width": 34.123028428623286,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Accuracy",
          "page": 9,
          "x0": 366.84014477417986,
          "y0": 655.7653291600001,
          "x1": 400.96317320280315,
          "y1": 664.73170916,
          "width": 34.123028428623286,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Improved Acc.",
          "page": 9,
          "x0": 431.39990876800323,
          "y0": 655.7653291600001,
          "x1": 484.881384496342,
          "y1": 664.73170916,
          "width": 53.48147572833875,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Improved Acc.",
          "page": 9,
          "x0": 431.39990876800323,
          "y0": 655.7653291600001,
          "x1": 484.881384496342,
          "y1": 664.73170916,
          "width": 53.48147572833875,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "GPT-4o-mini\nGPT-4o\n+ Output and CoS\n+ Example Retrieval\n+ Sampling Method\n+ n and Model\n+ Combos and RAG\nImProver",
          "page": 9,
          "x0": 122.63940000000001,
          "y0": 567.50136982,
          "x1": 196.41203227267698,
          "y1": 649.49170916,
          "width": 73.77263227267697,
          "height": 81.99033933999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "GPT-4o-mini",
          "page": 9,
          "x0": 122.64,
          "y0": 640.5253291600001,
          "x1": 170.13267320223534,
          "y1": 649.49170916,
          "width": 47.49267320223534,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "0\n7.03\n8.04 / 6.31\n9.34 / 5.67\n15.35 / 9.34\n23.51 / 3.65\n34.88 / 28.25",
          "page": 9,
          "x0": 208.8,
          "y0": 580.7653291600001,
          "x1": 256.0031866929236,
          "y1": 649.49170916,
          "width": 47.203186692923566,
          "height": 68.72637999999995,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "0\n19.67\n12.38 / 14.17\n14.7 / 8.44\n18.44 / 14.7\n26.28 / 4.63\n57.56 / 33.48",
          "page": 9,
          "x0": 281.03903249735083,
          "y0": 580.7653291600001,
          "x1": 328.2431065960471,
          "y1": 649.49170916,
          "width": 47.20407409869625,
          "height": 68.72637999999995,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "3.62%\n35.77%",
          "page": 9,
          "x0": 370.20028411305714,
          "y0": 630.56532916,
          "x1": 397.7093073279753,
          "y1": 649.49170916,
          "width": 27.50902321491816,
          "height": 18.926379999999995,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "3.62%",
          "page": 9,
          "x0": 372.3601815144,
          "y0": 640.5253291600001,
          "x1": 395.42920327119174,
          "y1": 649.49170916,
          "width": 23.069021756791756,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "0%\n15.33%",
          "page": 9,
          "x0": 444.36048582997535,
          "y0": 630.56532916,
          "x1": 471.8694114010154,
          "y1": 649.49170916,
          "width": 27.508925571040038,
          "height": 18.926379999999995,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "0%",
          "page": 9,
          "x0": 452.28017700599173,
          "y0": 640.5253291600001,
          "x1": 464.18914861556453,
          "y1": 649.49170916,
          "width": 11.908971609572802,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "7.03",
          "page": 9,
          "x0": 224.64,
          "y0": 630.56532916,
          "x1": 240.2832157586654,
          "y1": 639.53170916,
          "width": 15.643215758665406,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "19.67",
          "page": 9,
          "x0": 294.60020084166536,
          "y0": 630.56532916,
          "x1": 314.6834180584571,
          "y1": 639.53170916,
          "width": 20.083217216791752,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "35.77%",
          "page": 9,
          "x0": 370.20028411305714,
          "y0": 630.56532916,
          "x1": 397.7093073279753,
          "y1": 639.53170916,
          "width": 27.50902321491816,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "15.33%",
          "page": 9,
          "x0": 444.36048582997535,
          "y0": 630.56532916,
          "x1": 471.8694114010154,
          "y1": 639.53170916,
          "width": 27.508925571040038,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "GPT-4o",
          "page": 9,
          "x0": 122.64,
          "y0": 630.5651691600001,
          "x1": 150.76320897417855,
          "y1": 639.53154916,
          "width": 28.123208974178553,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "+ Output and CoS",
          "page": 9,
          "x0": 122.63999999999999,
          "y0": 620.60555916,
          "x1": 187.74502266150452,
          "y1": 629.5719391599999,
          "width": 65.10502266150453,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "8.04 / 6.31",
          "page": 9,
          "x0": 213.239,
          "y0": 620.60532916,
          "x1": 251.5623272387508,
          "y1": 629.57170916,
          "width": 38.32332723875081,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "12.38 / 14.17",
          "page": 9,
          "x0": 281.03903249735083,
          "y0": 620.60532916,
          "x1": 328.2422191902743,
          "y1": 629.57170916,
          "width": 47.20318669292345,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "64.96% / 44.53% 21.17% / 16.06%\n63.5% / 67.15%\n21.9% / 16.79%\n36.5% / 21.9%\n83.21% / 63.5%\n89.47% / 78.95% 45.61% / 8.77%\n60.61% / 84.38% 54.55% / 53.12%",
          "page": 9,
          "x0": 352.7988924152743,
          "y0": 580.7653291600001,
          "x1": 489.1489092918635,
          "y1": 629.57170916,
          "width": 136.35001687658922,
          "height": 48.806379999999876,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "64.96% / 44.53% 21.17% / 16.06%",
          "page": 9,
          "x0": 352.7988924152743,
          "y0": 620.60532916,
          "x1": 489.1480218860907,
          "y1": 629.57170916,
          "width": 136.34912947081642,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "9.34 / 5.67",
          "page": 9,
          "x0": 213.24,
          "y0": 610.6453291600001,
          "x1": 251.56332723875082,
          "y1": 619.61170916,
          "width": 38.32332723875081,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "14.7 / 8.44",
          "page": 9,
          "x0": 285.4802735371508,
          "y0": 610.6453291600001,
          "x1": 323.80360077590154,
          "y1": 619.61170916,
          "width": 38.32332723875072,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "63.5% / 67.15%",
          "page": 9,
          "x0": 355.0803068195015,
          "y0": 610.6453291600001,
          "x1": 412.70928886371155,
          "y1": 619.61170916,
          "width": 57.628982044210034,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "21.9% / 16.79%",
          "page": 9,
          "x0": 429.36048417031157,
          "y0": 610.6453291600001,
          "x1": 486.9892684161788,
          "y1": 619.61170916,
          "width": 57.62878424586722,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "+ Example Retrieval",
          "page": 9,
          "x0": 122.63940000000001,
          "y0": 610.64516916,
          "x1": 196.41203227267698,
          "y1": 619.61154916,
          "width": 73.77263227267697,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "15.35 / 9.34",
          "page": 9,
          "x0": 211.08,
          "y0": 600.68532916,
          "x1": 253.84318523479723,
          "y1": 609.65170916,
          "width": 42.76318523479722,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "18.44 / 14.7",
          "page": 9,
          "x0": 283.2000099927972,
          "y0": 600.68532916,
          "x1": 326.08311159371436,
          "y1": 609.65170916,
          "width": 42.88310160091714,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "83.21% / 63.5%",
          "page": 9,
          "x0": 355.0797568671144,
          "y0": 600.68532916,
          "x1": 412.8288973697043,
          "y1": 609.65170916,
          "width": 57.74914050258991,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "36.5% / 21.9%",
          "page": 9,
          "x0": 431.5200337901043,
          "y0": 600.68532916,
          "x1": 484.7088409663988,
          "y1": 609.65170916,
          "width": 53.18880717629446,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "+ Sampling Method",
          "page": 9,
          "x0": 122.64000000000001,
          "y0": 600.6851691600001,
          "x1": 194.3231361285482,
          "y1": 609.6515491600001,
          "width": 71.6831361285482,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "+ n and Model",
          "page": 9,
          "x0": 122.64020000000001,
          "y0": 590.72555916,
          "x1": 176.25262722784962,
          "y1": 601.5479798199999,
          "width": 53.61242722784961,
          "height": 10.82242065999992,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "23.51 / 3.65",
          "page": 9,
          "x0": 211.08,
          "y0": 590.72532916,
          "x1": 253.84318523479723,
          "y1": 599.69170916,
          "width": 42.76318523479722,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "26.28 / 4.63",
          "page": 9,
          "x0": 283.2000099927972,
          "y0": 590.72532916,
          "x1": 326.08311159371436,
          "y1": 599.69170916,
          "width": 42.88310160091714,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "89.47% / 78.95% 45.61% / 8.77%",
          "page": 9,
          "x0": 352.8000547521143,
          "y0": 590.72532916,
          "x1": 486.9893575873579,
          "y1": 599.69170916,
          "width": 134.1893028352436,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "34.88 / 28.25",
          "page": 9,
          "x0": 208.8,
          "y0": 580.7653291600001,
          "x1": 256.0031866929236,
          "y1": 589.73170916,
          "width": 47.203186692923566,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "57.56 / 33.48",
          "page": 9,
          "x0": 281.03991990312363,
          "y0": 580.7653291600001,
          "x1": 328.2431065960471,
          "y1": 589.73170916,
          "width": 47.20318669292345,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "60.61% / 84.38% 54.55% / 53.12%",
          "page": 9,
          "x0": 352.79977982104714,
          "y0": 580.7653291600001,
          "x1": 489.1489092918635,
          "y1": 589.73170916,
          "width": 136.34912947081637,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "+ Combos and RAG",
          "page": 9,
          "x0": 122.64020000000001,
          "y0": 580.76516916,
          "x1": 195.8338940974062,
          "y1": 589.73154916,
          "width": 73.19369409740618,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ImProver",
          "page": 9,
          "x0": 122.64,
          "y0": 567.50136982,
          "x1": 160.20458907871605,
          "y1": 576.46774982,
          "width": 37.564589078716054,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "34.88",
          "page": 9,
          "x0": 222.36,
          "y0": 565.75292572,
          "x1": 242.44321721679182,
          "y1": 574.71930572,
          "width": 20.08321721679181,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "34.88",
          "page": 9,
          "x0": 222.36,
          "y0": 565.75292572,
          "x1": 242.44321721679182,
          "y1": 574.71930572,
          "width": 20.08321721679181,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "57.56",
          "page": 9,
          "x0": 294.59993236639184,
          "y0": 565.75292572,
          "x1": 314.6831495831836,
          "y1": 574.71930572,
          "width": 20.083217216791752,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "57.56",
          "page": 9,
          "x0": 294.59993236639184,
          "y0": 565.75292572,
          "x1": 314.6831495831836,
          "y1": 574.71930572,
          "width": 20.083217216791752,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "100%",
          "page": 9,
          "x0": 372.7199270729836,
          "y0": 565.75292572,
          "x1": 395.00633592558023,
          "y1": 574.71930572,
          "width": 22.28640885259665,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "100%",
          "page": 9,
          "x0": 372.7199270729836,
          "y0": 565.75292572,
          "x1": 395.00633592558023,
          "y1": 574.71930572,
          "width": 22.28640885259665,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "54.55%",
          "page": 9,
          "x0": 443.63989138178016,
          "y0": 565.75292572,
          "x1": 472.64620241282023,
          "y1": 574.71930572,
          "width": 29.00631103104007,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "54.55%",
          "page": 9,
          "x0": 443.63989138178016,
          "y0": 565.75292572,
          "x1": 472.64620241282023,
          "y1": 574.71930572,
          "width": 29.00631103104007,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Table 6: CoS Readability Ablation results.",
          "page": 9,
          "x0": 221.4,
          "y0": 530.86814448,
          "x1": 390.5709376955883,
          "y1": 540.8307844799999,
          "width": 169.17093769558832,
          "height": 9.962639999999965,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Table 6: CoS Readability Ablation results.",
          "page": 9,
          "x0": 221.4,
          "y0": 530.86814448,
          "x1": 390.5709376955883,
          "y1": 540.8307844799999,
          "width": 169.17093769558832,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Improvement Nonempty Improve. Accuracy",
          "page": 9,
          "x0": 235.68,
          "y0": 517.16532916,
          "x1": 414.28301888798717,
          "y1": 526.13170916,
          "width": 178.60301888798716,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Improvement Nonempty Improve. Accuracy",
          "page": 9,
          "x0": 235.68,
          "y0": 517.16532916,
          "x1": 414.28301888798717,
          "y1": 526.13170916,
          "width": 178.60301888798716,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Improved Acc.",
          "page": 9,
          "x0": 426.3600154375872,
          "y0": 517.16532916,
          "x1": 479.7215747998061,
          "y1": 526.13170916,
          "width": 53.361559362218884,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Improved Acc.",
          "page": 9,
          "x0": 426.3600154375872,
          "y0": 517.16532916,
          "x1": 479.7215747998061,
          "y1": 526.13170916,
          "width": 53.361559362218884,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "GPT-4o\nImProver, CoS Disabled\nImProver",
          "page": 9,
          "x0": 132.24,
          "y0": 483.98120982000006,
          "x1": 223.72343315390023,
          "y1": 511.01170916,
          "width": 91.48343315390022,
          "height": 27.03049933999995,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "GPT-4o",
          "page": 9,
          "x0": 132.24,
          "y0": 502.04532916,
          "x1": 160.36320897417855,
          "y1": 511.01170916,
          "width": 28.12320897417854,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "4.97\n9.23\n16.69",
          "page": 9,
          "x0": 249.72,
          "y0": 482.23292571999997,
          "x1": 269.8032172167918,
          "y1": 511.01170916,
          "width": 20.08321721679178,
          "height": 28.77878344000004,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "4.97",
          "page": 9,
          "x0": 251.88,
          "y0": 502.04532916,
          "x1": 267.5232157586654,
          "y1": 511.01170916,
          "width": 15.643215758665406,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "15.89\n24.61\n31.42",
          "page": 9,
          "x0": 321.8399622019918,
          "y0": 482.23292571999997,
          "x1": 341.9234180584571,
          "y1": 511.01170916,
          "width": 20.08345585646532,
          "height": 28.77878344000004,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "15.89",
          "page": 9,
          "x0": 321.84020084166536,
          "y0": 502.04532916,
          "x1": 341.9234180584571,
          "y1": 511.01170916,
          "width": 20.083217216791752,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "37.5%\n100.0%\n100.0%",
          "page": 9,
          "x0": 382.67985970878357,
          "y0": 482.23292571999997,
          "x1": 411.6862683837018,
          "y1": 511.01170916,
          "width": 29.006408674918248,
          "height": 28.77878344000004,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "37.5%",
          "page": 9,
          "x0": 385.68006976885715,
          "y0": 502.04532916,
          "x1": 408.7490915256489,
          "y1": 511.01170916,
          "width": 23.069021756791756,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "12.5%\n28.12%\n46.88%",
          "page": 9,
          "x0": 438.47996375490175,
          "y0": 482.23292571999997,
          "x1": 467.4862747859418,
          "y1": 511.01170916,
          "width": 29.00631103104007,
          "height": 28.77878344000004,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "12.5%",
          "page": 9,
          "x0": 441.48014440524895,
          "y0": 502.04532916,
          "x1": 464.54909290671617,
          "y1": 511.01170916,
          "width": 23.06894850146722,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ImProver, CoS Disabled",
          "page": 9,
          "x0": 132.24,
          "y0": 492.08555916,
          "x1": 223.72343315390023,
          "y1": 502.90797982,
          "width": 91.48343315390022,
          "height": 10.822420659999977,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "9.23",
          "page": 9,
          "x0": 251.88,
          "y0": 492.08532916,
          "x1": 267.5232157586654,
          "y1": 501.05170916000003,
          "width": 15.643215758665406,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "24.61",
          "page": 9,
          "x0": 321.84020084166536,
          "y0": 492.08532916,
          "x1": 341.9234180584571,
          "y1": 501.05170916000003,
          "width": 20.083217216791752,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "100.0%",
          "page": 9,
          "x0": 383.40045731765713,
          "y0": 492.08532916,
          "x1": 410.90948053257534,
          "y1": 501.05170916000003,
          "width": 27.509023214918216,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "28.12%",
          "page": 9,
          "x0": 439.20047169997537,
          "y0": 492.08532916,
          "x1": 466.7093972710154,
          "y1": 501.05170916000003,
          "width": 27.508925571040038,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ImProver",
          "page": 9,
          "x0": 132.24,
          "y0": 483.98120982000006,
          "x1": 169.80458907871608,
          "y1": 492.94758982,
          "width": 37.56458907871607,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "16.69",
          "page": 9,
          "x0": 249.72,
          "y0": 482.23292571999997,
          "x1": 269.8032172167918,
          "y1": 491.19930572,
          "width": 20.08321721679178,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "31.42",
          "page": 9,
          "x0": 321.8399622019918,
          "y0": 482.23292571999997,
          "x1": 341.92317941878355,
          "y1": 491.19930572,
          "width": 20.083217216791752,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "100.0%",
          "page": 9,
          "x0": 382.67985970878357,
          "y0": 482.23292571999997,
          "x1": 411.6862683837018,
          "y1": 491.19930572,
          "width": 29.006408674918248,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "46.88%",
          "page": 9,
          "x0": 438.47996375490175,
          "y0": 482.23292571999997,
          "x1": 467.4862747859418,
          "y1": 491.19930572,
          "width": 29.00631103104007,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Fixing these parameters, we now vary the number of examples retrieved, noting that prompting\nwith 10 examples maximizes the improvement score. Fixing this parameter, we vary the sampling\nmethods (excluding compound methods and ﬁxing n = 5) and observe that best-of-n is the best\nparameter combination. Now, as GPT-4o-mini is signiﬁcantly less computationally expensive than\nits GPT-4o counterpart, we test both models with the sample method ﬁxed to best-of-n, and vary\nn = 1, 3, 5, 7, 10, 15, and for GPT-4o-mini, also n = 20. We conclude that GPT-4o with n = 15\nis the most effective. Fixing these parameters, we consider all mixed compound sampling methods\nwith and without document retrieval enabled, concluding that a 5-step reﬁnement with best-of-3 on\neach iteration, with RAG enabled, is the optimal combination.",
          "page": 9,
          "x0": 107.63949999999991,
          "y0": 358.42844448,
          "x1": 504.4218815566269,
          "y1": 456.11078448,
          "width": 396.782381556627,
          "height": 97.68234000000001,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Fixing these parameters, we now vary the number of examples retrieved, noting that prompting",
          "page": 9,
          "x0": 108.0,
          "y0": 446.14814448,
          "x1": 504.3013663216807,
          "y1": 456.11078448,
          "width": 396.3013663216807,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "with 10 examples maximizes the improvement score. Fixing this parameter, we vary the sampling",
          "page": 9,
          "x0": 107.63999999999999,
          "y0": 434.78954,
          "x1": 504.1809569242342,
          "y1": 445.07098448,
          "width": 396.5409569242342,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "methods (excluding compound methods and ﬁxing n = 5) and observe that best-of-n is the best",
          "page": 9,
          "x0": 108.00059999999996,
          "y0": 423.86964,
          "x1": 504.01025398492357,
          "y1": 434.17100976,
          "width": 396.0096539849236,
          "height": 10.30136976,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "parameter combination. Now, as GPT-4o-mini is signiﬁcantly less computationally expensive than",
          "page": 9,
          "x0": 108.00009999999995,
          "y0": 413.26854448,
          "x1": 504.06177131224496,
          "y1": 423.23118448,
          "width": 396.06167131224504,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "its GPT-4o counterpart, we test both models with the sample method ﬁxed to best-of-n, and vary",
          "page": 9,
          "x0": 108.00009999999995,
          "y0": 402.22834448,
          "x1": 504.4218815566269,
          "y1": 412.19098448,
          "width": 396.4217815566269,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "n = 1, 3, 5, 7, 10, 15, and for GPT-4o-mini, also n = 20. We conclude that GPT-4o with n = 15",
          "page": 9,
          "x0": 108.00009999999992,
          "y0": 390.98964,
          "x1": 504.2997615529559,
          "y1": 401.29100976,
          "width": 396.29966155295597,
          "height": 10.30136976,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "is the most effective. Fixing these parameters, we consider all mixed compound sampling methods",
          "page": 9,
          "x0": 107.9994999999999,
          "y0": 380.38854448,
          "x1": 504.27627160977767,
          "y1": 390.35118448000003,
          "width": 396.27677160977777,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "with and without document retrieval enabled, concluding that a 5-step reﬁnement with best-of-3 on",
          "page": 9,
          "x0": 107.63949999999991,
          "y0": 369.02954,
          "x1": 504.06051140663595,
          "y1": 379.31098448,
          "width": 396.421011406636,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "each iteration, with RAG enabled, is the optimal combination.",
          "page": 9,
          "x0": 108.00018,
          "y0": 358.42844448,
          "x1": 355.650826998168,
          "y1": 368.39108448,
          "width": 247.65064699816799,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Thus, as we can see from Table 5, the optimal parameter combination comes from gpt-4o outputting\nas a string list with CoS, RAG, 10 examples, 5-step reﬁnement with each iteration being a\nbest-of-3 evaluation. Changing any one of these parameters them leads to a reduction in performance.\nAdditional ablation data can be found at (§B.1).",
          "page": 9,
          "x0": 107.63994000000002,
          "y0": 308.62854448,
          "x1": 506.1305972965908,
          "y1": 351.47118448000003,
          "width": 398.49065729659077,
          "height": 42.84264000000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Thus, as we can see from Table 5, the optimal parameter combination comes from gpt-4o outputting",
          "page": 9,
          "x0": 107.64018000000002,
          "y0": 341.50854448,
          "x1": 504.3014399803757,
          "y1": 351.47118448000003,
          "width": 396.6612599803757,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "as a string list with CoS, RAG, 10 examples, 5-step reﬁnement with each iteration being a",
          "page": 9,
          "x0": 108.00018,
          "y0": 330.26984000000004,
          "x1": 503.9837422885574,
          "y1": 340.87008896000003,
          "width": 395.9835622885574,
          "height": 10.600248959999988,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "best-of-3 evaluation. Changing any one of these parameters them leads to a reduction in performance.",
          "page": 9,
          "x0": 108.00002,
          "y0": 319.22964,
          "x1": 506.1305972965908,
          "y1": 329.51108448,
          "width": 398.1305772965908,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Additional ablation data can be found at (§B.1).",
          "page": 9,
          "x0": 107.63994000000002,
          "y0": 308.62854448,
          "x1": 298.29055187182524,
          "y1": 318.59118448000004,
          "width": 190.65061187182522,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Readability and Chain-of-States (CoS) Ablation. We additionally examine the effects of dis-\nabling CoS on readability optimization tasks, as the previous study focused on length optimization\ntasks, and we speculate that CoS has a high impact on the performance of readability optimization\ntasks, as the proof states that are embedded due to CoS seem to be a critical aspect to generating the\nexplicit declarations that the readability metric measures.",
          "page": 9,
          "x0": 108.00009600000001,
          "y0": 240.82864448,
          "x1": 505.63735679976986,
          "y1": 294.71073616,
          "width": 397.6372607997698,
          "height": 53.88209168,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Readability and Chain-of-States (CoS) Ablation. We additionally examine the effects of dis-",
          "page": 9,
          "x0": 108.00009600000003,
          "y0": 284.62854448,
          "x1": 505.63735679976986,
          "y1": 294.71073616,
          "width": 397.6372607997698,
          "height": 10.082191679999994,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "abling CoS on readability optimization tasks, as the previous study focused on length optimization",
          "page": 9,
          "x0": 108.00009600000001,
          "y0": 273.70864448000003,
          "x1": 504.1813233065693,
          "y1": 283.67128448000005,
          "width": 396.1812273065693,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "tasks, and we speculate that CoS has a high impact on the performance of readability optimization",
          "page": 9,
          "x0": 108.00009600000004,
          "y0": 262.66884448,
          "x1": 504.18199787254565,
          "y1": 272.63148448000004,
          "width": 396.1819018725456,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "tasks, as the proof states that are embedded due to CoS seem to be a critical aspect to generating the",
          "page": 9,
          "x0": 108.00009600000004,
          "y0": 251.74854448000002,
          "x1": 504.1038705323117,
          "y1": 261.71118448000004,
          "width": 396.10377453231166,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "explicit declarations that the readability metric measures.",
          "page": 9,
          "x0": 108.00009600000004,
          "y0": 240.82864448,
          "x1": 335.7307736950993,
          "y1": 250.79128448000003,
          "width": 227.73067769509925,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "We conﬁrm this result by considering Table 6 and observe that simply enabling CoS nearly doubles\nthe improvement score, and signiﬁcantly improves the nonempty improvement score, suggesting that\nCoS has a high degree of impact on optimizing for the readability metric, as conjectured. However,\nwe also note a signiﬁcant increase in improved accuracy, which suggests that embedding the chain\nof states also improves the ability of the model to generate nontrivial correct outputs, implying that\nthe symbolic information contained in the states are critical to effectively modifying the structure\nand content of a proof.",
          "page": 9,
          "x0": 107.52009600000008,
          "y0": 158.14874448,
          "x1": 505.5303671759437,
          "y1": 233.75148448000004,
          "width": 398.0102711759436,
          "height": 75.60274000000004,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "We conﬁrm this result by considering Table 6 and observe that simply enabling CoS nearly doubles",
          "page": 9,
          "x0": 107.52009600000008,
          "y0": 223.78884448000002,
          "x1": 504.27564138063434,
          "y1": 233.75148448000004,
          "width": 396.75554538063426,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "the improvement score, and signiﬁcantly improves the nonempty improvement score, suggesting that",
          "page": 9,
          "x0": 108.00009600000007,
          "y0": 212.86894448,
          "x1": 504.0097099510092,
          "y1": 222.83158448000003,
          "width": 396.0096139510091,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "CoS has a high degree of impact on optimizing for the readability metric, as conjectured. However,",
          "page": 9,
          "x0": 108.00009600000007,
          "y0": 201.94864448,
          "x1": 505.5303671759437,
          "y1": 211.91128448000003,
          "width": 397.53027117594365,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "we also note a signiﬁcant increase in improved accuracy, which suggests that embedding the chain",
          "page": 9,
          "x0": 107.63909600000011,
          "y0": 190.90884448000003,
          "x1": 504.06065658157627,
          "y1": 200.87148448000005,
          "width": 396.42156058157616,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "of states also improves the ability of the model to generate nontrivial correct outputs, implying that",
          "page": 9,
          "x0": 107.99909600000012,
          "y0": 179.98894448000001,
          "x1": 504.009006098046,
          "y1": 189.95158448000004,
          "width": 396.00991009804585,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "the symbolic information contained in the states are critical to effectively modifying the structure",
          "page": 9,
          "x0": 107.99909600000012,
          "y0": 169.06904448,
          "x1": 504.2226274559486,
          "y1": 179.03168448000002,
          "width": 396.2235314559485,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "and content of a proof.",
          "page": 9,
          "x0": 107.99909600000015,
          "y0": 158.14874448,
          "x1": 198.68949378799027,
          "y1": 168.11138448000003,
          "width": 90.69039778799012,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "4.2.2 NEURAL THEOREM PROVING EVALUATION",
          "page": 9,
          "x0": 108.23894000000016,
          "y0": 134.02884448,
          "x1": 322.43291872715014,
          "y1": 143.99148448000003,
          "width": 214.19397872714998,
          "height": 9.962640000000022,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "4.2.2 NEURAL THEOREM PROVING EVALUATION",
          "page": 9,
          "x0": 108.23894000000016,
          "y0": 134.02884448,
          "x1": 322.43291872715014,
          "y1": 143.99148448000003,
          "width": 214.19397872714998,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "We evaluate ImProver’s neural theorem proving (NTP) performance using the completion metric.\nWe evaluate on 23 exercises in group theory (12) and set theory (11) from MIL, with an empty input\nproof. Table 7 shows the accuracy on the dataset split by topic for both ImProver and GPT-4o.\nImProver substantially outperforms GPT-4o across all topics, with an 80% increase in accuracy\ncompared to the base model, showing that proof optimization systems are easily extendable to NTP\nsystems.",
          "page": 9,
          "x0": 107.51794000000012,
          "y0": 59.989144480000014,
          "x1": 505.8896684068557,
          "y1": 124.67158448,
          "width": 398.3717284068556,
          "height": 64.68243999999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "We evaluate ImProver’s neural theorem proving (NTP) performance using the completion metric.",
          "page": 9,
          "x0": 107.51864000000018,
          "y0": 114.39014,
          "x1": 505.8896684068557,
          "y1": 124.67158448,
          "width": 398.37102840685554,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "We evaluate on 23 exercises in group theory (12) and set theory (11) from MIL, with an empty input",
          "page": 9,
          "x0": 107.51794000000012,
          "y0": 103.78904448000002,
          "x1": 504.1265327889114,
          "y1": 113.75168448000001,
          "width": 396.60859278891127,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "proof. Table 7 shows the accuracy on the dataset split by topic for both ImProver and GPT-4o.",
          "page": 9,
          "x0": 107.99794000000011,
          "y0": 92.55034,
          "x1": 505.88879906844187,
          "y1": 102.83178448000001,
          "width": 397.8908590684417,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ImProver substantially outperforms GPT-4o across all topics, with an 80% increase in accuracy",
          "page": 9,
          "x0": 107.99794000000009,
          "y0": 81.51014,
          "x1": 504.53920644197314,
          "y1": 91.79158448000001,
          "width": 396.54126644197305,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "compared to the base model, showing that proof optimization systems are easily extendable to NTP",
          "page": 9,
          "x0": 107.99774000000008,
          "y0": 70.90904448000002,
          "x1": 504.0172495840794,
          "y1": 80.87168448000001,
          "width": 396.01950958407934,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "systems.",
          "page": 9,
          "x0": 107.99774000000005,
          "y0": 59.989144480000014,
          "x1": 142.0484061501534,
          "y1": 69.95178448000001,
          "width": 34.05066615015335,
          "height": 9.96264,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        }
      ]
    },
    {
      "page_num": 10,
      "elements": [
        {
          "text": "Table 7: Proof generation results. Each cell shows percent accuracy.",
          "page": 10,
          "x0": 168.84,
          "y0": 691.30814448,
          "x1": 440.37070821325676,
          "y1": 701.27078448,
          "width": 271.53070821325673,
          "height": 9.962639999999965,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Table 7: Proof generation results. Each cell shows percent accuracy.",
          "page": 10,
          "x0": 168.84,
          "y0": 691.30814448,
          "x1": 440.37070821325676,
          "y1": 701.27078448,
          "width": 271.53070821325673,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "MIL",
          "page": 10,
          "x0": 209.4,
          "y0": 677.7129257199999,
          "x1": 227.38058719097006,
          "y1": 686.6793057199999,
          "width": 17.980587190970056,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "MIL",
          "page": 10,
          "x0": 209.4,
          "y0": 677.7129257199999,
          "x1": 227.38058719097006,
          "y1": 686.6793057199999,
          "width": 17.980587190970056,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Set Theory Group Theory",
          "page": 10,
          "x0": 258.96,
          "y0": 677.60532916,
          "x1": 361.4833655364659,
          "y1": 686.57170916,
          "width": 102.52336553646592,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Set Theory Group Theory",
          "page": 10,
          "x0": 258.96,
          "y0": 677.60532916,
          "x1": 361.4833655364659,
          "y1": 686.57170916,
          "width": 102.52336553646592,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Overall",
          "page": 10,
          "x0": 374.6401832294659,
          "y0": 677.60532916,
          "x1": 401.3728372968346,
          "y1": 686.57170916,
          "width": 26.732654067368685,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Overall",
          "page": 10,
          "x0": 374.6401832294659,
          "y0": 677.60532916,
          "x1": 401.3728372968346,
          "y1": 686.57170916,
          "width": 26.732654067368685,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "GPT-4o\nImProver",
          "page": 10,
          "x0": 209.4,
          "y0": 654.38159982,
          "x1": 246.96477683960734,
          "y1": 671.4517091600001,
          "width": 37.56477683960733,
          "height": 17.070109340000045,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "GPT-4o",
          "page": 10,
          "x0": 209.4,
          "y0": 662.4853291600001,
          "x1": 237.52319641228019,
          "y1": 671.4517091600001,
          "width": 28.12319641228018,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "18.18%\n45.45%",
          "page": 10,
          "x0": 264.12,
          "y0": 652.63292572,
          "x1": 293.1264086749182,
          "y1": 671.4517091600001,
          "width": 29.00640867491819,
          "height": 18.81878344000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "18.18%",
          "page": 10,
          "x0": 264.84,
          "y0": 662.4853291600001,
          "x1": 292.34902321491813,
          "y1": 671.4517091600001,
          "width": 27.50902321491816,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "25%\n33.33%",
          "page": 10,
          "x0": 321.3599253465182,
          "y0": 652.63292572,
          "x1": 350.3663340214364,
          "y1": 671.4517091600001,
          "width": 29.00640867491819,
          "height": 18.81878344000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "25%",
          "page": 10,
          "x0": 327.7201370217182,
          "y0": 662.4853291600001,
          "x1": 344.06915895618835,
          "y1": 671.4517091600001,
          "width": 16.34902193447016,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "21.73%\n39.13%",
          "page": 10,
          "x0": 373.44005765823636,
          "y0": 652.63292572,
          "x1": 402.44646633315455,
          "y1": 671.4517091600001,
          "width": 29.00640867491819,
          "height": 18.81878344000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "21.73%",
          "page": 10,
          "x0": 374.1600612447883,
          "y0": 662.4853291600001,
          "x1": 401.6690844597065,
          "y1": 671.4517091600001,
          "width": 27.50902321491816,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ImProver",
          "page": 10,
          "x0": 209.40019999999998,
          "y0": 654.38159982,
          "x1": 246.96477683960734,
          "y1": 663.34797982,
          "width": 37.564576839607355,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "45.45%",
          "page": 10,
          "x0": 264.12,
          "y0": 652.63292572,
          "x1": 293.1264086749182,
          "y1": 661.59930572,
          "width": 29.00640867491819,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "33.33%",
          "page": 10,
          "x0": 321.3599253465182,
          "y0": 652.63292572,
          "x1": 350.3663340214364,
          "y1": 661.59930572,
          "width": 29.00640867491819,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "39.13%",
          "page": 10,
          "x0": 373.44005765823636,
          "y0": 652.63292572,
          "x1": 402.44646633315455,
          "y1": 661.59930572,
          "width": 29.00640867491819,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "4.3 QUALITATIVE RESULTS",
          "page": 10,
          "x0": 108.24,
          "y0": 613.42814448,
          "x1": 231.231144221107,
          "y1": 623.39078448,
          "width": 122.991144221107,
          "height": 9.962639999999965,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "4.3 QUALITATIVE RESULTS",
          "page": 10,
          "x0": 108.24,
          "y0": 613.42814448,
          "x1": 231.231144221107,
          "y1": 623.39078448,
          "width": 122.991144221107,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Next, we discuss qualitative examples showing the improvements from ImProver in proof optimiza-\ntion. These examples show the balance between correctness and the desired optimization metric,\nshowing how ImProver can produce more concise or readable proofs depending on the use case.\nAdditional examples can be found in (§B.2)",
          "page": 10,
          "x0": 107.63977999999992,
          "y0": 558.58834448,
          "x1": 505.87774862795897,
          "y1": 601.43058448,
          "width": 398.23796862795905,
          "height": 42.84223999999995,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Next, we discuss qualitative examples showing the improvements from ImProver in proof optimiza-",
          "page": 10,
          "x0": 108.00007999999998,
          "y0": 591.14914,
          "x1": 505.87774862795897,
          "y1": 601.43058448,
          "width": 397.877668627959,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "tion. These examples show the balance between correctness and the desired optimization metric,",
          "page": 10,
          "x0": 107.99987999999996,
          "y0": 580.42814448,
          "x1": 505.4111586806761,
          "y1": 590.39078448,
          "width": 397.41127868067616,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "showing how ImProver can produce more concise or readable proofs depending on the use case.",
          "page": 10,
          "x0": 107.99987999999993,
          "y0": 569.18944,
          "x1": 505.77067826802795,
          "y1": 579.47088448,
          "width": 397.770798268028,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Additional examples can be found in (§B.2)",
          "page": 10,
          "x0": 107.63977999999992,
          "y0": 558.58834448,
          "x1": 282.6772198934611,
          "y1": 568.55098448,
          "width": 175.03743989346117,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Example 1: Compﬁles Optimization. Consider Figure 1, a lemma from the 2022 IMO Question\n2 (Compﬁles) that we optimize for length.",
          "page": 10,
          "x0": 107.9999359999999,
          "y0": 520.1883444800001,
          "x1": 504.0603612321329,
          "y1": 541.1904361600001,
          "width": 396.06042523213296,
          "height": 21.002091680000035,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Example 1: Compﬁles Optimization. Consider Figure 1, a lemma from the 2022 IMO Question",
          "page": 10,
          "x0": 107.99993599999992,
          "y0": 531.10824448,
          "x1": 504.0603612321329,
          "y1": 541.1904361600001,
          "width": 396.06042523213296,
          "height": 10.08219168000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "2 (Compﬁles) that we optimize for length.",
          "page": 10,
          "x0": 107.9999359999999,
          "y0": 520.1883444800001,
          "x1": 276.0905618458683,
          "y1": 530.15098448,
          "width": 168.0906258458684,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "The original proof consisted of 12 tactic steps and multiple intermediate calculations. After applying\nImProver for length optimization, the proof was halved to only 6 tactics, eliminating redundant steps\nwhile maintaining correctness.",
          "page": 10,
          "x0": 107.6397799999999,
          "y0": 481.3083444800001,
          "x1": 504.1810487646021,
          "y1": 513.23108448,
          "width": 396.5412687646022,
          "height": 31.922739999999976,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "The original proof consisted of 12 tactic steps and multiple intermediate calculations. After applying",
          "page": 10,
          "x0": 107.6397799999999,
          "y0": 503.2684444800001,
          "x1": 504.1810487646021,
          "y1": 513.23108448,
          "width": 396.5412687646022,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ImProver for length optimization, the proof was halved to only 6 tactics, eliminating redundant steps",
          "page": 10,
          "x0": 108.0007799999999,
          "y0": 491.9094400000001,
          "x1": 504.03775598213923,
          "y1": 502.1908844800001,
          "width": 396.0369759821393,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "while maintaining correctness.",
          "page": 10,
          "x0": 107.64087999999992,
          "y0": 481.3083444800001,
          "x1": 229.89168667786538,
          "y1": 491.2709844800001,
          "width": 122.25080667786546,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "In comparison, the shortened proof makes multiple nontrivial optimizations, such as eliminating the\nh2’ and h4 and hxw hypotheses, as well as fully generating proof terms for speciﬁc rewrites and\nother tactics.",
          "page": 10,
          "x0": 108.0007359999999,
          "y0": 442.4283444800001,
          "x1": 504.10467623608935,
          "y1": 474.3510844800001,
          "width": 396.10394023608944,
          "height": 31.922740000000033,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "In comparison, the shortened proof makes multiple nontrivial optimizations, such as eliminating the",
          "page": 10,
          "x0": 108.00103599999993,
          "y0": 464.3884444800001,
          "x1": 504.10467623608935,
          "y1": 474.3510844800001,
          "width": 396.1036402360894,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "h2’ and h4 and hxw hypotheses, as well as fully generating proof terms for speciﬁc rewrites and",
          "page": 10,
          "x0": 108.00103599999991,
          "y0": 453.4685444800001,
          "x1": 504.0632987598072,
          "y1": 463.7499889600001,
          "width": 396.06226275980725,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "other tactics.",
          "page": 10,
          "x0": 108.0007359999999,
          "y0": 442.4283444800001,
          "x1": 158.85130332212933,
          "y1": 452.3909844800001,
          "width": 50.85056732212942,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Example 2: MIL. Consider Figure 3, a result from MIL that we optimize for readability.",
          "page": 10,
          "x0": 108.0007359999999,
          "y0": 415.06854448000007,
          "x1": 470.7313646918707,
          "y1": 425.15073616000006,
          "width": 362.7306286918708,
          "height": 10.082191679999994,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Example 2: MIL. Consider Figure 3, a result from MIL that we optimize for readability.",
          "page": 10,
          "x0": 108.0007359999999,
          "y0": 415.06854448000007,
          "x1": 470.7313646918707,
          "y1": 425.15073616000006,
          "width": 362.7306286918708,
          "height": 10.082191679999994,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Original (human-written)",
          "page": 10,
          "x0": 108.00083599999994,
          "y0": 387.7079961600001,
          "x1": 217.5182955972288,
          "y1": 397.6706361600001,
          "width": 109.51745959722888,
          "height": 9.962639999999965,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Original (human-written)",
          "page": 10,
          "x0": 108.00083599999994,
          "y0": 387.7079961600001,
          "x1": 217.5182955972288,
          "y1": 397.6706361600001,
          "width": 109.51745959722888,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ImProver (readability-optimized)",
          "page": 10,
          "x0": 308.88,
          "y0": 387.26934,
          "x1": 450.67778921456653,
          "y1": 397.67033616,
          "width": 141.79778921456654,
          "height": 10.400996159999977,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "ImProver (readability-optimized)",
          "page": 10,
          "x0": 308.88,
          "y0": 387.26934,
          "x1": 450.67778921456653,
          "y1": 397.67033616,
          "width": 141.79778921456654,
          "height": 10.400996159999977,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "def iso1 [Fintype G] (h : Disjoint H K) (h' :",
          "page": 10,
          "x0": 108.0,
          "y0": 374.5428639,
          "x1": 296.0245406518755,
          "y1": 381.51671389999996,
          "width": 188.0245406518755,
          "height": 6.97384999999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "def iso1 [Fintype G] (h : Disjoint H K) (h' :",
          "page": 10,
          "x0": 108.0,
          "y0": 374.5428639,
          "x1": 296.0245406518755,
          "y1": 381.51671389999996,
          "width": 188.0245406518755,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "def iso1 [Fintype G] (h : Disjoint H K) (h' :",
          "page": 10,
          "x0": 308.88,
          "y0": 374.30286390000003,
          "x1": 496.7844213160131,
          "y1": 381.2767139,
          "width": 187.9044213160131,
          "height": 6.97384999999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "def iso1 [Fintype G] (h : Disjoint H K) (h' :",
          "page": 10,
          "x0": 308.88,
          "y0": 374.30286390000003,
          "x1": 496.7844213160131,
          "y1": 381.2767139,
          "width": 187.9044213160131,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "card G = card H * card K)",
          "page": 10,
          "x0": 127.91984,
          "y0": 365.42286390000004,
          "x1": 232.54443007755802,
          "y1": 373.59679389999997,
          "width": 104.62459007755803,
          "height": 8.173929999999928,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "card G = card H * card K)",
          "page": 10,
          "x0": 127.91984,
          "y0": 365.42286390000004,
          "x1": 232.54443007755802,
          "y1": 373.59679389999997,
          "width": 104.62459007755803,
          "height": 8.173929999999928,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "card G = card H * card K)\n:= by",
          "page": 10,
          "x0": 328.7998400000001,
          "y0": 358.3428639,
          "x1": 433.424258255183,
          "y1": 373.2368739,
          "width": 104.62441825518295,
          "height": 14.89400999999998,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "card G = card H * card K)",
          "page": 10,
          "x0": 328.7998400000001,
          "y0": 365.0628639,
          "x1": 433.424258255183,
          "y1": 373.2368739,
          "width": 104.62441825518295,
          "height": 8.174009999999953,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": ": K ≃* G / H := by",
          "page": 10,
          "x0": 107.9999,
          "y0": 357.3828639,
          "x1": 189.5843060715895,
          "y1": 365.55687389999997,
          "width": 81.58440607158951,
          "height": 8.174009999999953,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": ": K ≃* G / H := by",
          "page": 10,
          "x0": 107.9999,
          "y0": 357.3828639,
          "x1": 189.5843060715895,
          "y1": 365.55687389999997,
          "width": 81.58440607158951,
          "height": 8.174009999999953,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": ": K ≃* G / H",
          "page": 10,
          "x0": 308.8802,
          "y0": 357.1428639,
          "x1": 361.06440627309996,
          "y1": 365.31671389999997,
          "width": 52.18420627309996,
          "height": 8.173849999999959,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": ": K ≃* G / H",
          "page": 10,
          "x0": 308.8802,
          "y0": 357.1428639,
          "x1": 361.06440627309996,
          "y1": 365.31671389999997,
          "width": 52.18420627309996,
          "height": 8.173849999999959,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": ":= by",
          "page": 10,
          "x0": 373.68,
          "y0": 358.3428639,
          "x1": 394.544318275827,
          "y1": 365.31671389999997,
          "width": 20.864318275826975,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "apply MulEquiv.ofBijective",
          "page": 10,
          "x0": 116.4,
          "y0": 350.6628639,
          "x1": 225.34436206176596,
          "y1": 357.63671389999996,
          "width": 108.94436206176596,
          "height": 6.97384999999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "apply MulEquiv.ofBijective",
          "page": 10,
          "x0": 116.4,
          "y0": 350.6628639,
          "x1": 225.34436206176596,
          "y1": 357.63671389999996,
          "width": 108.94436206176596,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "have injectivity : Function.Injective",
          "page": 10,
          "x0": 317.16,
          "y0": 350.30286390000003,
          "x1": 472.18444391048706,
          "y1": 357.27687389999994,
          "width": 155.02444391048704,
          "height": 6.9740099999999074,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "have injectivity : Function.Injective",
          "page": 10,
          "x0": 317.16,
          "y0": 350.30286390000003,
          "x1": 472.18444391048706,
          "y1": 357.27687389999994,
          "width": 155.02444391048704,
          "height": 6.9740099999999074,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "((QuotientGroup.mk' H).restrict K)\nrw [bijective_iff_injective_and_card]\nconstructor\n· rw [← ker_eq_bot_iff, (QuotientGroup.mk'",
          "page": 10,
          "x0": 116.4,
          "y0": 318.2965375,
          "x1": 294.104641216053,
          "y1": 349.59648389999995,
          "width": 177.70464121605298,
          "height": 31.299946399999953,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "((QuotientGroup.mk' H).restrict K)",
          "page": 10,
          "x0": 127.9198,
          "y0": 342.6226339,
          "x1": 270.22446052860846,
          "y1": 349.59648389999995,
          "width": 142.30466052860845,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "((QuotientGroup.mk' H).restrict K) := by\nrw [← ker_eq_bot_iff, (QuotientGroup.mk'\nH).ker_restrict K]\nsimp [h]",
          "page": 10,
          "x0": 325.56,
          "y0": 318.5028639,
          "x1": 496.6644061840191,
          "y1": 349.3567939,
          "width": 171.10440618401907,
          "height": 30.85392999999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "((QuotientGroup.mk' H).restrict K) := by",
          "page": 10,
          "x0": 328.79984,
          "y0": 342.3828639,
          "x1": 496.184293867352,
          "y1": 349.3567939,
          "width": 167.38445386735197,
          "height": 6.973929999999996,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "rw [bijective_iff_injective_and_card]",
          "page": 10,
          "x0": 116.4,
          "y0": 334.7028639,
          "x1": 271.1842726430715,
          "y1": 341.6767139,
          "width": 154.7842726430715,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "rw [← ker_eq_bot_iff, (QuotientGroup.mk'",
          "page": 10,
          "x0": 325.56,
          "y0": 333.89653749999997,
          "x1": 496.6644061840191,
          "y1": 341.31671389999997,
          "width": 171.10440618401907,
          "height": 7.420176400000003,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "constructor",
          "page": 10,
          "x0": 116.4,
          "y0": 326.7828639,
          "x1": 162.584270715895,
          "y1": 333.75671389999997,
          "width": 46.184270715894996,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "H).ker_restrict K]",
          "page": 10,
          "x0": 328.7998,
          "y0": 326.4229439,
          "x1": 404.024477578271,
          "y1": 333.3967939,
          "width": 75.22467757827098,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "· rw [← ker_eq_bot_iff, (QuotientGroup.mk'",
          "page": 10,
          "x0": 116.4,
          "y0": 318.2965375,
          "x1": 294.104641216053,
          "y1": 325.7167139,
          "width": 177.70464121605298,
          "height": 7.420176400000003,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "simp [h]",
          "page": 10,
          "x0": 325.56,
          "y0": 318.5028639,
          "x1": 359.024326551654,
          "y1": 325.4767139,
          "width": 33.46432655165398,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "H).ker_restrict K]\nsimp [h]",
          "page": 10,
          "x0": 124.68,
          "y0": 302.7828639,
          "x1": 203.26420177579246,
          "y1": 317.7967939,
          "width": 78.58420177579245,
          "height": 15.013930000000016,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "H).ker_restrict K]",
          "page": 10,
          "x0": 127.91979999999998,
          "y0": 310.82294390000004,
          "x1": 203.26420177579246,
          "y1": 317.7967939,
          "width": 75.34440177579248,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "have card_eq : card (G / H) = card K := by",
          "page": 10,
          "x0": 317.16,
          "y0": 310.4628639,
          "x1": 492.94529386735195,
          "y1": 317.4367139,
          "width": 175.78529386735192,
          "height": 6.97384999999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "have card_eq : card (G / H) = card K := by",
          "page": 10,
          "x0": 317.16,
          "y0": 310.4628639,
          "x1": 492.94529386735195,
          "y1": 317.4367139,
          "width": 175.78529386735192,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "simp [h]",
          "page": 10,
          "x0": 124.68,
          "y0": 302.7828639,
          "x1": 158.264302143179,
          "y1": 309.75671389999997,
          "width": 33.584302143179,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "exact aux_card_eq h'",
          "page": 10,
          "x0": 325.56,
          "y0": 302.5428639,
          "x1": 409.304488008347,
          "y1": 309.51671389999996,
          "width": 83.74448800834699,
          "height": 6.97384999999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "exact aux_card_eq h'",
          "page": 10,
          "x0": 325.56,
          "y0": 302.5428639,
          "x1": 409.304488008347,
          "y1": 309.51671389999996,
          "width": 83.74448800834699,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "· symm",
          "page": 10,
          "x0": 116.3999,
          "y0": 294.4166175,
          "x1": 139.6642782147685,
          "y1": 301.8367939,
          "width": 23.2643782147685,
          "height": 7.420176400000003,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "· symm",
          "page": 10,
          "x0": 116.3999,
          "y0": 294.4166175,
          "x1": 139.6642782147685,
          "y1": 301.8367939,
          "width": 23.2643782147685,
          "height": 7.420176400000003,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "apply MulEquiv.ofBijective",
          "page": 10,
          "x0": 317.16,
          "y0": 294.5028639,
          "x1": 426.104550481904,
          "y1": 301.4767139,
          "width": 108.944550481904,
          "height": 6.97384999999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "apply MulEquiv.ofBijective",
          "page": 10,
          "x0": 317.16,
          "y0": 294.5028639,
          "x1": 426.104550481904,
          "y1": 301.4767139,
          "width": 108.944550481904,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "exact aux_card_eq h'",
          "page": 10,
          "x0": 124.68,
          "y0": 286.8228639,
          "x1": 208.4244174894345,
          "y1": 293.7967139,
          "width": 83.74441748943448,
          "height": 6.97384999999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "exact aux_card_eq h'",
          "page": 10,
          "x0": 124.68,
          "y0": 286.8228639,
          "x1": 208.4244174894345,
          "y1": 293.7967139,
          "width": 83.74441748943448,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "((QuotientGroup.mk' H).restrict K)\nrw [bijective_iff_injective_and_card]\nconstructor\nexact injectivity\nsymm\nexact card_eq",
          "page": 10,
          "x0": 317.16,
          "y0": 246.7428639,
          "x1": 472.0641628049341,
          "y1": 293.5567939,
          "width": 154.90416280493406,
          "height": 46.81393,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "((QuotientGroup.mk' H).restrict K)",
          "page": 10,
          "x0": 328.7998,
          "y0": 286.58294390000003,
          "x1": 470.9844692326321,
          "y1": 293.5567939,
          "width": 142.18466923263207,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "rw [bijective_iff_injective_and_card]",
          "page": 10,
          "x0": 317.16,
          "y0": 278.6628639,
          "x1": 472.0641628049341,
          "y1": 285.63671389999996,
          "width": 154.90416280493406,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "constructor",
          "page": 10,
          "x0": 317.16,
          "y0": 270.6228639,
          "x1": 363.34439275827003,
          "y1": 277.5967139,
          "width": 46.18439275827001,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "exact injectivity",
          "page": 10,
          "x0": 317.16,
          "y0": 262.7028639,
          "x1": 388.54439275827,
          "y1": 269.6767939,
          "width": 71.38439275827,
          "height": 6.973929999999996,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "symm",
          "page": 10,
          "x0": 317.16,
          "y0": 254.6630239,
          "x1": 333.944334827481,
          "y1": 261.6368739,
          "width": 16.78433482748096,
          "height": 6.973849999999999,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "exact card_eq",
          "page": 10,
          "x0": 317.16,
          "y0": 246.7428639,
          "x1": 371.744359654962,
          "y1": 253.7167139,
          "width": 54.584359654961986,
          "height": 6.973849999999999,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Figure 3: Optimizing a group-theoretic result from MIL Chapter 8 Section 1 for readability. We\ndeﬁne a proof to be readable if it is written in a declarative style, which consists of intermediate\nconjectures (have · · · statements). ImProver introduces two intermediate conjectures into the proof.",
          "page": 10,
          "x0": 107.99999999999994,
          "y0": 207.02903999999998,
          "x1": 506.0109927045521,
          "y1": 239.15068448,
          "width": 398.01099270455217,
          "height": 32.121644480000015,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Figure 3: Optimizing a group-theoretic result from MIL Chapter 8 Section 1 for readability. We",
          "page": 10,
          "x0": 108.0,
          "y0": 229.18804447999997,
          "x1": 503.8630820400052,
          "y1": 239.15068448,
          "width": 395.8630820400052,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "deﬁne a proof to be readable if it is written in a declarative style, which consists of intermediate",
          "page": 10,
          "x0": 107.99999999999997,
          "y0": 218.26814447999996,
          "x1": 504.22331532783403,
          "y1": 228.23078447999998,
          "width": 396.22331532783403,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "conjectures (have · · · statements). ImProver introduces two intermediate conjectures into the proof.",
          "page": 10,
          "x0": 107.99999999999994,
          "y0": 207.02903999999998,
          "x1": 506.0109927045521,
          "y1": 218.48607999999996,
          "width": 398.01099270455217,
          "height": 11.457039999999978,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "This original proof carried a score of 0, as it does not contain any declarative statements. In compar-\nison, after applying ImProver, we transformed the proof to be more declarative, with many more\nintermediate steps with explicit have tactics for improved clarity. Additionally observe how the\nmodel deﬁnes hypotheses for use in the latter half of the proof; these predeﬁned hypotheses could\neasily be converted into standalone lemmas for reuse.",
          "page": 10,
          "x0": 107.64029999999994,
          "y0": 137.14794447999995,
          "x1": 505.877748902,
          "y1": 191.03078448,
          "width": 398.2374489020001,
          "height": 53.882840000000044,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "This original proof carried a score of 0, as it does not contain any declarative statements. In compar-",
          "page": 10,
          "x0": 107.64029999999994,
          "y0": 180.74934,
          "x1": 505.877748902,
          "y1": 191.03078448,
          "width": 398.2374489020001,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ison, after applying ImProver, we transformed the proof to be more declarative, with many more",
          "page": 10,
          "x0": 108.00013999999999,
          "y0": 169.70914,
          "x1": 504.10335436740723,
          "y1": 179.99058448,
          "width": 396.10321436740725,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "intermediate steps with explicit have tactics for improved clarity. Additionally observe how the",
          "page": 10,
          "x0": 107.99994000000004,
          "y0": 159.10804447999996,
          "x1": 504.1034185933022,
          "y1": 169.38948895999997,
          "width": 396.10347859330216,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "model deﬁnes hypotheses for use in the latter half of the proof; these predeﬁned hypotheses could",
          "page": 10,
          "x0": 107.99974000000003,
          "y0": 148.18814447999995,
          "x1": 504.1815211071247,
          "y1": 158.15078447999997,
          "width": 396.18178110712466,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "easily be converted into standalone lemmas for reuse.",
          "page": 10,
          "x0": 107.99974000000003,
          "y0": 137.14794447999995,
          "x1": 321.0904823472994,
          "y1": 147.11058447999997,
          "width": 213.0907423472994,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Example 3: Full Proof Generation. We analyze the application of ImProver to neural theorem\nproving in the MIL example from Figure 4.",
          "page": 10,
          "x0": 107.99953999999997,
          "y0": 98.86824447999996,
          "x1": 504.1896538891379,
          "y1": 119.87033615999995,
          "width": 396.19011388913793,
          "height": 21.002091679999992,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Example 3: Full Proof Generation. We analyze the application of ImProver to neural theorem",
          "page": 10,
          "x0": 107.99974000000003,
          "y0": 109.46933999999995,
          "x1": 504.1896538891379,
          "y1": 119.87033615999995,
          "width": 396.18991388913787,
          "height": 10.400996160000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "proving in the MIL example from Figure 4.",
          "page": 10,
          "x0": 107.99953999999997,
          "y0": 98.86824447999996,
          "x1": 280.89019774805473,
          "y1": 108.83088447999995,
          "width": 172.89065774805476,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "This theorem relating to group theory originally has no proof, however, ImProver generates one\nfrom scratch. This generated proof is veriﬁed to be correct by Lean, utilizing all the included hy-\npotheses as well as a retrieved mathlib theorem.",
          "page": 10,
          "x0": 107.63938399999996,
          "y0": 59.988244479999956,
          "x1": 505.87784442302956,
          "y1": 91.79068447999995,
          "width": 398.2384604230296,
          "height": 31.802439999999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "This theorem relating to group theory originally has no proof, however, ImProver generates one",
          "page": 10,
          "x0": 107.63938399999996,
          "y0": 81.50923999999995,
          "x1": 504.1023416413285,
          "y1": 91.79068447999995,
          "width": 396.46295764132856,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "from scratch. This generated proof is veriﬁed to be correct by Lean, utilizing all the included hy-",
          "page": 10,
          "x0": 107.99998399999993,
          "y0": 70.90814447999996,
          "x1": 505.87784442302956,
          "y1": 80.87078447999995,
          "width": 397.87786042302963,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "potheses as well as a retrieved mathlib theorem.",
          "page": 10,
          "x0": 107.9999839999999,
          "y0": 59.988244479999956,
          "x1": 298.77067127784727,
          "y1": 69.95088447999996,
          "width": 190.77068727784737,
          "height": 9.96264,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "10",
          "page": 10,
          "x0": 300.9599839999999,
          "y0": 30.108144479999957,
          "x1": 310.9812909981679,
          "y1": 40.07078447999996,
          "width": 10.021306998167972,
          "height": 9.96264,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "10",
          "page": 10,
          "x0": 300.9599839999999,
          "y0": 30.108144479999957,
          "x1": 310.9812909981679,
          "y1": 40.07078447999996,
          "width": 10.021306998167972,
          "height": 9.96264,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        }
      ]
    },
    {
      "page_num": 11,
      "elements": [
        {
          "text": "ImProver (completeness-optimized)",
          "page": 11,
          "x0": 308.88,
          "y0": 697.70944,
          "x1": 460.0376951931966,
          "y1": 708.1104361600001,
          "width": 151.15769519319662,
          "height": 10.40099616000009,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "ImProver (completeness-optimized)",
          "page": 11,
          "x0": 308.88,
          "y0": 697.70944,
          "x1": 460.0376951931966,
          "y1": 708.1104361600001,
          "width": 151.15769519319662,
          "height": 10.40099616000009,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Original (human-written)",
          "page": 11,
          "x0": 108.0,
          "y0": 698.14769616,
          "x1": 217.51745959722888,
          "y1": 708.1103361600001,
          "width": 109.51745959722888,
          "height": 9.962640000000079,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Original (human-written)",
          "page": 11,
          "x0": 108.0,
          "y0": 698.14769616,
          "x1": 217.51745959722888,
          "y1": 708.1103361600001,
          "width": 109.51745959722888,
          "height": 9.962640000000079,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "example (ϕ : G →* H) (S T : Subgroup H) (hST\n: S ≤ T) : comap ϕ S ≤ comap ϕ T := by",
          "page": 11,
          "x0": 108.0,
          "y0": 676.4963075000001,
          "x1": 297.34431827582694,
          "y1": 691.9567139,
          "width": 189.34431827582694,
          "height": 15.460406399999897,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "example (ϕ : G →* H) (S T : Subgroup H) (hST",
          "page": 11,
          "x0": 108.0,
          "y0": 683.7828639,
          "x1": 296.9846802531135,
          "y1": 691.9567139,
          "width": 188.98468025311348,
          "height": 8.173849999999902,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "example (ϕ : G →* H) (S T : Subgroup H) (hST",
          "page": 11,
          "x0": 308.88,
          "y0": 683.4228639,
          "x1": 497.74433386198405,
          "y1": 691.5967138999999,
          "width": 188.86433386198405,
          "height": 8.173849999999902,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "example (ϕ : G →* H) (S T : Subgroup H) (hST",
          "page": 11,
          "x0": 308.88,
          "y0": 683.4228639,
          "x1": 497.74433386198405,
          "y1": 691.5967138999999,
          "width": 188.86433386198405,
          "height": 8.173849999999902,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": ": S ≤ T) : comap ϕ S ≤ comap ϕ T := by",
          "page": 11,
          "x0": 127.9198,
          "y0": 676.4963075000001,
          "x1": 297.34431827582694,
          "y1": 683.9167139,
          "width": 169.42451827582693,
          "height": 7.4204063999999335,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": ": S ≤ T) : comap ϕ S ≤ comap ϕ T",
          "page": 11,
          "x0": 328.80010000000004,
          "y0": 676.2566175,
          "x1": 468.82464999999996,
          "y1": 683.6767938999999,
          "width": 140.02454999999992,
          "height": 7.420176399999946,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": ": S ≤ T) : comap ϕ S ≤ comap ϕ T",
          "page": 11,
          "x0": 328.80010000000004,
          "y0": 676.2566175,
          "x1": 468.82464999999996,
          "y1": 683.6767938999999,
          "width": 140.02454999999992,
          "height": 7.420176399999946,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": ":= by",
          "page": 11,
          "x0": 481.44,
          "y0": 676.7028639,
          "x1": 502.304293867352,
          "y1": 683.6767139,
          "width": 20.86429386735199,
          "height": 6.97384999999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": ":= by",
          "page": 11,
          "x0": 481.44,
          "y0": 676.7028639,
          "x1": 502.304293867352,
          "y1": 683.6767139,
          "width": 20.86429386735199,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "sorry",
          "page": 11,
          "x0": 116.4,
          "y0": 669.0228639000001,
          "x1": 137.38429428635803,
          "y1": 675.9967139,
          "width": 20.984294286358022,
          "height": 6.97384999999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "sorry",
          "page": 11,
          "x0": 116.4,
          "y0": 669.0228639000001,
          "x1": 137.38429428635803,
          "y1": 675.9967139,
          "width": 20.984294286358022,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "intro g\nsimp only [mem_comap]\nintro hS\nexact hST hS",
          "page": 11,
          "x0": 317.16,
          "y0": 644.7828639,
          "x1": 405.104582793309,
          "y1": 675.6367139,
          "width": 87.944582793309,
          "height": 30.853849999999966,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "intro g",
          "page": 11,
          "x0": 317.16,
          "y0": 668.6628639,
          "x1": 346.54431,
          "y1": 675.6367139,
          "width": 29.38430999999997,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "simp only [mem_comap]",
          "page": 11,
          "x0": 317.16,
          "y0": 660.7428639,
          "x1": 405.104582793309,
          "y1": 667.7167139,
          "width": 87.944582793309,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "intro hS",
          "page": 11,
          "x0": 317.16,
          "y0": 652.7028639,
          "x1": 350.74431827582697,
          "y1": 659.6767139,
          "width": 33.584318275826945,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "exact hST hS",
          "page": 11,
          "x0": 317.16,
          "y0": 644.7828639,
          "x1": 367.424421801731,
          "y1": 651.7567139,
          "width": 50.264421801730975,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Figure 4: Solving a group theorem exercise from MIL Chapter 8 Section 1 for readability.",
          "page": 11,
          "x0": 125.52000000000001,
          "y0": 627.22804448,
          "x1": 483.69066793543755,
          "y1": 637.19068448,
          "width": 358.17066793543756,
          "height": 9.962639999999965,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Figure 4: Solving a group theorem exercise from MIL Chapter 8 Section 1 for readability.",
          "page": 11,
          "x0": 125.52000000000001,
          "y0": 627.22804448,
          "x1": 483.69066793543755,
          "y1": 637.19068448,
          "width": 358.17066793543756,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "5 CONCLUSION",
          "page": 11,
          "x0": 108.24000000000007,
          "y0": 594.7538664,
          "x1": 194.70506684706407,
          "y1": 606.7090664,
          "width": 86.46506684706401,
          "height": 11.95519999999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "5 CONCLUSION",
          "page": 11,
          "x0": 108.24000000000007,
          "y0": 594.7538664,
          "x1": 194.70506684706407,
          "y1": 606.7090664,
          "width": 86.46506684706401,
          "height": 11.95519999999999,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "In this paper, we introduced ImProver, a novel agent-based tool for automated proof optimization\nin Lean. By incorporating CoS, RAG, and other features, ImProver signiﬁcantly outperforms base\nlanguage models in proof optimization over undergraduate, competition, and research-level prob-\nlems.",
          "page": 11,
          "x0": 108.00020000000006,
          "y0": 538.66844448,
          "x1": 505.8789227005802,
          "y1": 581.5106844799999,
          "width": 397.8787227005801,
          "height": 42.84223999999995,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "In this paper, we introduced ImProver, a novel agent-based tool for automated proof optimization",
          "page": 11,
          "x0": 108.00020000000006,
          "y0": 571.2292399999999,
          "x1": 504.182539019061,
          "y1": 581.5106844799999,
          "width": 396.1823390190609,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "in Lean. By incorporating CoS, RAG, and other features, ImProver signiﬁcantly outperforms base",
          "page": 11,
          "x0": 108.00100000000009,
          "y0": 560.3093399999999,
          "x1": 503.9835210321588,
          "y1": 570.5907844799999,
          "width": 395.98252103215873,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "language models in proof optimization over undergraduate, competition, and research-level prob-",
          "page": 11,
          "x0": 108.00100000000009,
          "y0": 549.5883444799999,
          "x1": 505.8789227005802,
          "y1": 559.5509844799999,
          "width": 397.8779227005801,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "lems.",
          "page": 11,
          "x0": 108.00100000000006,
          "y0": 538.66844448,
          "x1": 129.3316680706286,
          "y1": 548.6310844799999,
          "width": 21.330668070628548,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "However, ImProver is limited by its high cost and slow runtime, which is exacerbated by its reliance\non black-box LLM’s. We intend to address this inefﬁciency in future work by applying ﬁne-tuning\nand RL on a smaller model to match performance at a lower cost.",
          "page": 11,
          "x0": 108.00059999999999,
          "y0": 499.78844447999995,
          "x1": 504.30238867884304,
          "y1": 531.7107844799999,
          "width": 396.3017886788431,
          "height": 31.922339999999963,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "However, ImProver is limited by its high cost and slow runtime, which is exacerbated by its reliance",
          "page": 11,
          "x0": 108.00100000000006,
          "y0": 521.4293399999999,
          "x1": 504.103838864862,
          "y1": 531.7107844799999,
          "width": 396.10283886486195,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "on black-box LLM’s. We intend to address this inefﬁciency in future work by applying ﬁne-tuning",
          "page": 11,
          "x0": 108.00060000000002,
          "y0": 510.82824447999997,
          "x1": 504.30238867884304,
          "y1": 520.7908844799999,
          "width": 396.301788678843,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "and RL on a smaller model to match performance at a lower cost.",
          "page": 11,
          "x0": 108.00059999999999,
          "y0": 499.78844447999995,
          "x1": 368.7318896467345,
          "y1": 509.75108448,
          "width": 260.73128964673447,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ImProver demonstrates its ability to generate substantially shorter, more readable, and modular\nproofs while maintaining correctness. As such, we believe that ImProver sets the stage for further\nwork on proof optimization to advance the study and use of AI in mathematics.",
          "page": 11,
          "x0": 107.64019999999994,
          "y0": 461.02794448,
          "x1": 504.43828150367443,
          "y1": 492.83078448,
          "width": 396.7980815036745,
          "height": 31.802840000000003,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "ImProver demonstrates its ability to generate substantially shorter, more readable, and modular",
          "page": 11,
          "x0": 108.00059999999999,
          "y0": 482.54934,
          "x1": 504.43828150367443,
          "y1": 492.83078448,
          "width": 396.4376815036744,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "proofs while maintaining correctness. As such, we believe that ImProver sets the stage for further",
          "page": 11,
          "x0": 108.00060000000002,
          "y0": 471.62904,
          "x1": 504.4376964682078,
          "y1": 481.91048448,
          "width": 396.43709646820776,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "work on proof optimization to advance the study and use of AI in mathematics.",
          "page": 11,
          "x0": 107.64019999999994,
          "y0": 461.02794448,
          "x1": 423.450832989516,
          "y1": 470.99058448,
          "width": 315.8106329895161,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ACKNOWLEDGEMENTS",
          "page": 11,
          "x0": 108.24019999999996,
          "y0": 437.26814448,
          "x1": 205.55086075215695,
          "y1": 447.23078448,
          "width": 97.31066075215699,
          "height": 9.962640000000022,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "ACKNOWLEDGEMENTS",
          "page": 11,
          "x0": 108.24019999999996,
          "y0": 437.26814448,
          "x1": 205.55086075215695,
          "y1": 447.23078448,
          "width": 97.31066075215699,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Riyaz Ahuja thanks the L3 Lab and Hoskinson Center for Formal Mathematics for their support.",
          "page": 11,
          "x0": 108.00034999999995,
          "y0": 418.18804448,
          "x1": 492.9310185144113,
          "y1": 428.15068448,
          "width": 384.9306685144113,
          "height": 9.962640000000022,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Riyaz Ahuja thanks the L3 Lab and Hoskinson Center for Formal Mathematics for their support.",
          "page": 11,
          "x0": 108.00034999999995,
          "y0": 418.18804448,
          "x1": 492.9310185144113,
          "y1": 428.15068448,
          "width": 384.9306685144113,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Sean Welleck thanks Convergent Research, the Lean FRO, and the OpenAI Researcher Access Pro-\ngram for their support.",
          "page": 11,
          "x0": 108.00034999999997,
          "y0": 390.22794448,
          "x1": 505.75823882721505,
          "y1": 411.11048448,
          "width": 397.7578888272151,
          "height": 20.882540000000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Sean Welleck thanks Convergent Research, the Lean FRO, and the OpenAI Researcher Access Pro-",
          "page": 11,
          "x0": 108.00034999999997,
          "y0": 401.14784448,
          "x1": 505.75823882721505,
          "y1": 411.11048448,
          "width": 397.7578888272151,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "gram for their support.",
          "page": 11,
          "x0": 108.00034999999997,
          "y0": 390.22794448,
          "x1": 198.45124321255201,
          "y1": 400.19058448000004,
          "width": 90.45089321255205,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "11",
          "page": 11,
          "x0": 300.96034999999995,
          "y0": 30.10794448000002,
          "x1": 310.9816569981679,
          "y1": 40.07058448000002,
          "width": 10.021306998167972,
          "height": 9.96264,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "11",
          "page": 11,
          "x0": 300.96034999999995,
          "y0": 30.10794448000002,
          "x1": 310.9816569981679,
          "y1": 40.07058448000002,
          "width": 10.021306998167972,
          "height": 9.96264,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        }
      ]
    },
    {
      "page_num": 12,
      "elements": [
        {
          "text": "REFERENCES",
          "page": 12,
          "x0": 108.24,
          "y0": 697.5937664,
          "x1": 174.51818937910798,
          "y1": 709.5489664,
          "width": 66.27818937910799,
          "height": 11.95519999999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "REFERENCES",
          "page": 12,
          "x0": 108.24,
          "y0": 697.5937664,
          "x1": 174.51818937910798,
          "y1": 709.5489664,
          "width": 66.27818937910799,
          "height": 11.95519999999999,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "AlphaProof\nstandard\nhttps://deepmind.google/discover/blog/ai-solves-imo-problems-at-silver-medal-level/\n2024.",
          "page": 12,
          "x0": 108.00016,
          "y0": 647.62824448,
          "x1": 618.3384078256047,
          "y1": 690.47088448,
          "width": 510.3382478256047,
          "height": 42.84263999999996,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "AlphaProof",
          "page": 12,
          "x0": 108.00016,
          "y0": 680.50824448,
          "x1": 154.75768893715696,
          "y1": 690.47088448,
          "width": 46.75752893715696,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "and",
          "page": 12,
          "x0": 173.16027903955694,
          "y0": 680.50824448,
          "x1": 187.62159984139456,
          "y1": 690.47088448,
          "width": 14.461320801837616,
          "height": 9.962639999999965,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "and",
          "page": 12,
          "x0": 173.16027903955694,
          "y0": 680.50824448,
          "x1": 187.62159984139456,
          "y1": 690.47088448,
          "width": 14.461320801837616,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "AlphaGeometry",
          "page": 12,
          "x0": 206.16027960619454,
          "y0": 680.50824448,
          "x1": 270.66162969592574,
          "y1": 690.47088448,
          "width": 64.5013500897312,
          "height": 9.962639999999965,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "AlphaGeometry",
          "page": 12,
          "x0": 206.16027960619454,
          "y0": 680.50824448,
          "x1": 270.66162969592574,
          "y1": 690.47088448,
          "width": 64.5013500897312,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Teams.",
          "page": 12,
          "x0": 289.0802596487257,
          "y0": 680.50824448,
          "x1": 317.4909121167985,
          "y1": 690.47088448,
          "width": 28.410652468072783,
          "height": 9.962639999999965,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Teams.",
          "page": 12,
          "x0": 289.0802596487257,
          "y0": 680.50824448,
          "x1": 317.4909121167985,
          "y1": 690.47088448,
          "width": 28.410652468072783,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "AI",
          "page": 12,
          "x0": 372.8404507911985,
          "y0": 680.50824448,
          "x1": 383.35801841703153,
          "y1": 690.47088448,
          "width": 10.51756762583301,
          "height": 9.962639999999965,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "AI",
          "page": 12,
          "x0": 372.8404507911985,
          "y0": 680.50824448,
          "x1": 383.35801841703153,
          "y1": 690.47088448,
          "width": 10.51756762583301,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "achieves\nolympiad",
          "page": 12,
          "x0": 399.84035369427414,
          "y0": 669.58834448,
          "x1": 437.7017173804176,
          "y1": 690.47088448,
          "width": 37.86136368614348,
          "height": 20.88253999999995,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "achieves",
          "page": 12,
          "x0": 402.00060851703154,
          "y0": 680.50824448,
          "x1": 436.1161629255646,
          "y1": 690.47088448,
          "width": 34.11555440853306,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "silver-medal\nproblems.",
          "page": 12,
          "x0": 454.5607953687646,
          "y0": 669.58834448,
          "x1": 506.01086378610614,
          "y1": 690.47088448,
          "width": 51.45006841734153,
          "height": 20.88253999999995,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "silver-medal",
          "page": 12,
          "x0": 454.5607953687646,
          "y0": 680.50824448,
          "x1": 504.25079903067916,
          "y1": 690.47088448,
          "width": 49.690003661914545,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "standard",
          "page": 12,
          "x0": 117.96015999999997,
          "y0": 669.58834448,
          "x1": 151.86147262736296,
          "y1": 679.55098448,
          "width": 33.901312627362984,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "solving",
          "page": 12,
          "x0": 180.36020210576294,
          "y0": 669.58834448,
          "x1": 209.82151491700284,
          "y1": 679.55098448,
          "width": 29.461312811239907,
          "height": 9.962639999999965,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "solving",
          "page": 12,
          "x0": 180.36020210576294,
          "y0": 669.58834448,
          "x1": 209.82151491700284,
          "y1": 679.55098448,
          "width": 29.461312811239907,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "international",
          "page": 12,
          "x0": 238.44029420740281,
          "y0": 669.58834448,
          "x1": 289.08994038583796,
          "y1": 679.55098448,
          "width": 50.64964617843515,
          "height": 9.962639999999965,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "international",
          "page": 12,
          "x0": 238.44029420740281,
          "y0": 669.58834448,
          "x1": 289.08994038583796,
          "y1": 679.55098448,
          "width": 50.64964617843515,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "mathematical",
          "page": 12,
          "x0": 317.520425780238,
          "y0": 669.58834448,
          "x1": 371.4100675526741,
          "y1": 679.55098448,
          "width": 53.88964177243611,
          "height": 9.962639999999965,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "mathematical",
          "page": 12,
          "x0": 317.520425780238,
          "y0": 669.58834448,
          "x1": 371.4100675526741,
          "y1": 679.55098448,
          "width": 53.88964177243611,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "olympiad",
          "page": 12,
          "x0": 399.84035369427414,
          "y0": 669.58834448,
          "x1": 437.7017173804176,
          "y1": 679.55098448,
          "width": 37.86136368614348,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "problems.",
          "page": 12,
          "x0": 466.2005464852176,
          "y0": 669.58834448,
          "x1": 506.01086378610614,
          "y1": 679.55098448,
          "width": 39.81031730088853,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "https://deepmind.google/discover/blog/ai-solves-imo-problems-at-silver-medal-level/",
          "page": 12,
          "x0": 117.96015999999997,
          "y0": 658.8669489600001,
          "x1": 618.3384078256047,
          "y1": 668.82958896,
          "width": 500.3782478256047,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "2024.",
          "page": 12,
          "x0": 117.96015999999997,
          "y0": 647.62824448,
          "x1": 140.61080475481356,
          "y1": 657.59088448,
          "width": 22.650644754813584,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Serge Autexier and Dominik Dietrich. A tactic language for declarative proofs. In Matt Kaufmann\nand Lawrence C. Paulson (eds.), Interactive Theorem Proving, pp. 99–114, Berlin, Heidelberg,\n2010. Springer Berlin Heidelberg.",
          "page": 12,
          "x0": 107.99999999999997,
          "y0": 607.18844448,
          "x1": 505.5311548808105,
          "y1": 639.11078448,
          "width": 397.5311548808105,
          "height": 31.922339999999963,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Serge Autexier and Dominik Dietrich. A tactic language for declarative proofs. In Matt Kaufmann",
          "page": 12,
          "x0": 107.99999999999997,
          "y0": 629.14814448,
          "x1": 504.30004845614167,
          "y1": 639.11078448,
          "width": 396.30004845614167,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "and Lawrence C. Paulson (eds.), Interactive Theorem Proving, pp. 99–114, Berlin, Heidelberg,",
          "page": 12,
          "x0": 117.96000000000001,
          "y0": 618.2282444800001,
          "x1": 505.5311548808105,
          "y1": 628.3004735200001,
          "width": 387.57115488081047,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "2010. Springer Berlin Heidelberg.",
          "page": 12,
          "x0": 117.96000000000004,
          "y0": 607.18844448,
          "x1": 254.0109616880583,
          "y1": 617.15108448,
          "width": 136.05096168805827,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Jaime Carbonell and Jade Goldstein. The use of mmr, diversity-based reranking for reordering doc-\numents and producing summaries. In Proceedings of the 21st Annual International ACM SIGIR\nConference on Research and Development in Information Retrieval, SIGIR ’98, pp. 335–336,\nISBN 1581130155. doi:\nNew York, NY, USA, 1998. Association for Computing Machinery.\n10.1145/290941.291025. URL https://doi.org/10.1145/290941.291025.",
          "page": 12,
          "x0": 107.99984000000003,
          "y0": 544.9084444800001,
          "x1": 505.7575885166571,
          "y1": 598.67098448,
          "width": 397.7577485166571,
          "height": 53.762539999999944,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Jaime Carbonell and Jade Goldstein. The use of mmr, diversity-based reranking for reordering doc-",
          "page": 12,
          "x0": 107.99984000000003,
          "y0": 588.70834448,
          "x1": 505.7575885166571,
          "y1": 598.67098448,
          "width": 397.7577485166571,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "uments and producing summaries. In Proceedings of the 21st Annual International ACM SIGIR",
          "page": 12,
          "x0": 117.95984000000001,
          "y0": 577.7884444800001,
          "x1": 504.2074056424364,
          "y1": 587.8606735200001,
          "width": 386.24756564243637,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Conference on Research and Development in Information Retrieval, SIGIR ’98, pp. 335–336,",
          "page": 12,
          "x0": 117.59884,
          "y0": 566.8685444800001,
          "x1": 505.649464038213,
          "y1": 576.9407735200001,
          "width": 388.050624038213,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "New York, NY, USA, 1998. Association for Computing Machinery.",
          "page": 12,
          "x0": 117.95954,
          "y0": 555.82834448,
          "x1": 397.05004055336,
          "y1": 565.79098448,
          "width": 279.09050055336,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ISBN 1581130155. doi:",
          "page": 12,
          "x0": 404.03947012232004,
          "y0": 555.82834448,
          "x1": 505.44935034358855,
          "y1": 565.79098448,
          "width": 101.40988022126851,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "10.1145/290941.291025. URL https://doi.org/10.1145/290941.291025.",
          "page": 12,
          "x0": 117.23954000000003,
          "y0": 544.9084444800001,
          "x1": 466.7702,
          "y1": 555.1898889600001,
          "width": 349.53065999999995,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Xinyun Chen, Maxwell Lin, Nathanael Schärli, and Denny Zhou. Teaching large language models",
          "page": 12,
          "x0": 107.99954000000002,
          "y0": 526.4283444800001,
          "x1": 504.15560230251964,
          "y1": 536.39098448,
          "width": 396.1560623025196,
          "height": 9.962639999999965,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Xinyun Chen, Maxwell Lin, Nathanael Schärli, and Denny Zhou. Teaching large language models",
          "page": 12,
          "x0": 107.99954000000002,
          "y0": 526.4283444800001,
          "x1": 504.15560230251964,
          "y1": 536.39098448,
          "width": 396.1560623025196,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "to self-debug, 2023. URL https://arxiv.org/abs/2304.05128.",
          "page": 12,
          "x0": 117.96054000000004,
          "y0": 515.3885444800001,
          "x1": 417.2112,
          "y1": 525.6699889600001,
          "width": 299.25066,
          "height": 10.281444480000005,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "to self-debug, 2023. URL https://arxiv.org/abs/2304.05128.",
          "page": 12,
          "x0": 117.96054000000004,
          "y0": 515.3885444800001,
          "x1": 417.2112,
          "y1": 525.6699889600001,
          "width": 299.25066,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "David Renshaw. compﬁles. https://github.com/dwrensha/compfiles, 2024.",
          "page": 12,
          "x0": 108.00054,
          "y0": 496.90844448000007,
          "x1": 470.7311250282,
          "y1": 507.1898889600001,
          "width": 362.7305850282,
          "height": 10.281444480000005,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "David Renshaw. compﬁles. https://github.com/dwrensha/compfiles, 2024.",
          "page": 12,
          "x0": 108.00054,
          "y0": 496.90844448000007,
          "x1": 470.7311250282,
          "y1": 507.1898889600001,
          "width": 362.7305850282,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Emily First, Markus N. Rabe, Talia Ringer, and Yuriy Brun. Baldur: Whole-proof generation and",
          "page": 12,
          "x0": 108.00053999999994,
          "y0": 478.4283444800001,
          "x1": 504.0619419202571,
          "y1": 488.3909844800001,
          "width": 396.06140192025714,
          "height": 9.962640000000022,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Emily First, Markus N. Rabe, Talia Ringer, and Yuriy Brun. Baldur: Whole-proof generation and",
          "page": 12,
          "x0": 108.00053999999994,
          "y0": 478.4283444800001,
          "x1": 504.0619419202571,
          "y1": 488.3909844800001,
          "width": 396.06140192025714,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "repair with large language models, 2023.",
          "page": 12,
          "x0": 117.96053999999992,
          "y0": 467.5084444800001,
          "x1": 281.0111975376129,
          "y1": 477.4710844800001,
          "width": 163.05065753761295,
          "height": 9.962640000000022,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "repair with large language models, 2023.",
          "page": 12,
          "x0": 117.96053999999992,
          "y0": 467.5084444800001,
          "x1": 281.0111975376129,
          "y1": 477.4710844800001,
          "width": 163.05065753761295,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Jesse Michael Han, Jason Rute, Yuhuai Wu, Edward Ayers, and Stanislas Polu. Proof artifact co-\nIn International Conference on Learning",
          "page": 12,
          "x0": 108.00037999999992,
          "y0": 438.1084444800001,
          "x1": 505.75721755475524,
          "y1": 458.9909844800001,
          "width": 397.7568375547553,
          "height": 20.882540000000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Jesse Michael Han, Jason Rute, Yuhuai Wu, Edward Ayers, and Stanislas Polu. Proof artifact co-",
          "page": 12,
          "x0": 108.00037999999992,
          "y0": 449.0283444800001,
          "x1": 505.75721755475524,
          "y1": 458.9909844800001,
          "width": 397.7568375547553,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "In International Conference on Learning",
          "page": 12,
          "x0": 336.96043302295084,
          "y0": 438.1084444800001,
          "x1": 504.1820387703691,
          "y1": 448.18067352000014,
          "width": 167.22160574741827,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "training for theorem proving with language models.\nRepresentations, 2022. URL https://openreview.net/forum?id=rpxJc9j04U.",
          "page": 12,
          "x0": 117.60037999999992,
          "y0": 427.0686444800001,
          "x1": 488.4909399999999,
          "y1": 448.07108448000014,
          "width": 370.89056,
          "height": 21.002440000000036,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "training for theorem proving with language models.",
          "page": 12,
          "x0": 117.96037999999993,
          "y0": 438.1084444800001,
          "x1": 330.21092375047084,
          "y1": 448.07108448000014,
          "width": 212.2505437504709,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Representations, 2022. URL https://openreview.net/forum?id=rpxJc9j04U.",
          "page": 12,
          "x0": 117.60037999999992,
          "y0": 427.0686444800001,
          "x1": 488.4909399999999,
          "y1": 437.3500889600001,
          "width": 370.89056,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Jiewen Hu, Thomas Zhu, and Sean Welleck. minictx: Neural theorem proving with (long-)contexts,",
          "page": 12,
          "x0": 108.00027999999992,
          "y0": 408.5885444800001,
          "x1": 505.7709352873155,
          "y1": 418.55118448000013,
          "width": 397.7706552873156,
          "height": 9.962640000000022,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Jiewen Hu, Thomas Zhu, and Sean Welleck. minictx: Neural theorem proving with (long-)contexts,",
          "page": 12,
          "x0": 108.00027999999992,
          "y0": 408.5885444800001,
          "x1": 505.7709352873155,
          "y1": 418.55118448000013,
          "width": 397.7706552873156,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "2024. URL https://arxiv.org/abs/2408.03350.",
          "page": 12,
          "x0": 117.9602799999999,
          "y0": 397.6682444800001,
          "x1": 360.2106399999999,
          "y1": 407.9496889600001,
          "width": 242.25036,
          "height": 10.281444480000005,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "2024. URL https://arxiv.org/abs/2408.03350.",
          "page": 12,
          "x0": 117.9602799999999,
          "y0": 397.6682444800001,
          "x1": 360.2106399999999,
          "y1": 407.9496889600001,
          "width": 242.25036,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Albert Qiaochu Jiang, Sean Welleck, Jin Peng Zhou, Timothee Lacroix, Jiacheng Liu, Wenda Li,\nMateja Jamnik, Guillaume Lample, and Yuhuai Wu. Draft, sketch, and prove: Guiding formal\ntheorem provers with informal proofs. In The Eleventh International Conference on Learning\nRepresentations, 2023. URL https://openreview.net/forum?id=SMa9EAovKMC.",
          "page": 12,
          "x0": 107.99997999999991,
          "y0": 346.30854448000014,
          "x1": 505.2920000384032,
          "y1": 389.15118448000015,
          "width": 397.2920200384033,
          "height": 42.84264000000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Albert Qiaochu Jiang, Sean Welleck, Jin Peng Zhou, Timothee Lacroix, Jiacheng Liu, Wenda Li,",
          "page": 12,
          "x0": 107.99997999999991,
          "y0": 379.18854448000013,
          "x1": 505.2920000384032,
          "y1": 389.15118448000015,
          "width": 397.2920200384033,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Mateja Jamnik, Guillaume Lample, and Yuhuai Wu. Draft, sketch, and prove: Guiding formal",
          "page": 12,
          "x0": 117.96097999999989,
          "y0": 368.1483444800001,
          "x1": 504.2502334332388,
          "y1": 378.1109844800001,
          "width": 386.2892534332389,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "theorem provers with informal proofs. In The Eleventh International Conference on Learning",
          "page": 12,
          "x0": 117.96097999999989,
          "y0": 357.2284444800001,
          "x1": 504.18262752641897,
          "y1": 367.30067352000015,
          "width": 386.2216475264191,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Representations, 2023. URL https://openreview.net/forum?id=SMa9EAovKMC.",
          "page": 12,
          "x0": 117.60097999999985,
          "y0": 346.30854448000014,
          "x1": 494.3715399999998,
          "y1": 356.58998896000014,
          "width": 376.77055999999993,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Kim Morrison. lean-training-data. https://github.com/kim-em/lean-training-data,",
          "page": 12,
          "x0": 108.00087999999982,
          "y0": 327.82844448000014,
          "x1": 512.1315399999999,
          "y1": 338.10988896000015,
          "width": 404.13066000000003,
          "height": 10.281444480000005,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Kim Morrison. lean-training-data. https://github.com/kim-em/lean-training-data,",
          "page": 12,
          "x0": 108.00087999999982,
          "y0": 327.82844448000014,
          "x1": 512.1315399999999,
          "y1": 338.10988896000015,
          "width": 404.13066000000003,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "2024.",
          "page": 12,
          "x0": 117.9608799999998,
          "y0": 316.78864448000013,
          "x1": 140.6115247548134,
          "y1": 326.75128448000015,
          "width": 22.650644754813584,
          "height": 9.962640000000022,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "2024.",
          "page": 12,
          "x0": 117.9608799999998,
          "y0": 316.78864448000013,
          "x1": 140.6115247548134,
          "y1": 326.75128448000015,
          "width": 22.650644754813584,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Guillaume Lample, Timothee Lacroix, Marie anne Lachaux, Aurelien Rodriguez, Amaury\nHypertree proof search\nHayat, Thibaut Lavril, Gabriel Ebner, and Xavier Martinet.\nfor neural\nIn Alice H. Oh, Alekh Agarwal, Danielle Belgrave, and\nKyunghyun Cho (eds.), Advances in Neural Information Processing Systems, 2022. URL\nhttps://openreview.net/forum?id=J4pX8Q8cxHH.",
          "page": 12,
          "x0": 108.0007199999998,
          "y0": 254.50864448000016,
          "x1": 504.54313285016974,
          "y1": 308.27118448000016,
          "width": 396.54241285016997,
          "height": 53.76254,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Guillaume Lample, Timothee Lacroix, Marie anne Lachaux, Aurelien Rodriguez, Amaury",
          "page": 12,
          "x0": 108.0007199999998,
          "y0": 298.30854448000014,
          "x1": 504.54313285016974,
          "y1": 308.27118448000016,
          "width": 396.54241285016997,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Hayat, Thibaut Lavril, Gabriel Ebner, and Xavier Martinet.",
          "page": 12,
          "x0": 117.96171999999984,
          "y0": 287.38864448000015,
          "x1": 386.4920553271498,
          "y1": 297.3512844800002,
          "width": 268.53033532714994,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Hypertree proof search",
          "page": 12,
          "x0": 403.56171999999987,
          "y0": 287.38864448000015,
          "x1": 504.0631792191446,
          "y1": 297.3512844800002,
          "width": 100.50145921914475,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "for neural",
          "page": 12,
          "x0": 117.96171999999984,
          "y0": 276.3484444800001,
          "x1": 160.57125860254706,
          "y1": 286.31108448000015,
          "width": 42.60953860254722,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "theorem proving.",
          "page": 12,
          "x0": 166.32149515774705,
          "y0": 276.3484444800001,
          "x1": 238.5320077905609,
          "y1": 286.31108448000015,
          "width": 72.21051263281385,
          "height": 9.962640000000022,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "theorem proving.",
          "page": 12,
          "x0": 166.32149515774705,
          "y0": 276.3484444800001,
          "x1": 238.5320077905609,
          "y1": 286.31108448000015,
          "width": 72.21051263281385,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "In Alice H. Oh, Alekh Agarwal, Danielle Belgrave, and",
          "page": 12,
          "x0": 252.7214970633609,
          "y0": 276.3484444800001,
          "x1": 504.06324755537804,
          "y1": 286.31108448000015,
          "width": 251.34175049201713,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Kyunghyun Cho (eds.), Advances in Neural Information Processing Systems, 2022. URL",
          "page": 12,
          "x0": 117.96171999999984,
          "y0": 265.42854448000014,
          "x1": 504.44863964135925,
          "y1": 275.50077352000017,
          "width": 386.4869196413594,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "https://openreview.net/forum?id=J4pX8Q8cxHH.",
          "page": 12,
          "x0": 117.96071999999981,
          "y0": 254.50864448000016,
          "x1": 377.4913799999998,
          "y1": 264.79008896000016,
          "width": 259.53066,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "leanprover-community. mathematics_in_lean. https://github.com/leanprover-community/mathematics_in_lea",
          "page": 12,
          "x0": 108.00071999999983,
          "y0": 236.02854448000016,
          "x1": 641.0183590334782,
          "y1": 246.30998896000017,
          "width": 533.0176390334784,
          "height": 10.281444480000005,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "leanprover-community. mathematics_in_lean. https://github.com/leanprover-community/mathematics_in_lea",
          "page": 12,
          "x0": 108.00071999999983,
          "y0": 236.02854448000016,
          "x1": 641.0183590334782,
          "y1": 246.30998896000017,
          "width": 533.0176390334784,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "2024.",
          "page": 12,
          "x0": 117.96071999999987,
          "y0": 224.98874448000015,
          "x1": 140.61136475481345,
          "y1": 234.95138448000017,
          "width": 22.650644754813584,
          "height": 9.962640000000022,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "2024.",
          "page": 12,
          "x0": 117.96071999999987,
          "y0": 224.98874448000015,
          "x1": 140.61136475481345,
          "y1": 234.95138448000017,
          "width": 22.650644754813584,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Zhaoyu Li, Jialiang Sun, Logan Murphy, Qidong Su, Zenan Li, Xian Zhang, Kaiyu Yang, and Xujie",
          "page": 12,
          "x0": 108.00055999999987,
          "y0": 206.50864448000016,
          "x1": 504.10424469664827,
          "y1": 216.47128448000018,
          "width": 396.10368469664843,
          "height": 9.962640000000022,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Zhaoyu Li, Jialiang Sun, Logan Murphy, Qidong Su, Zenan Li, Xian Zhang, Kaiyu Yang, and Xujie",
          "page": 12,
          "x0": 108.00055999999987,
          "y0": 206.50864448000016,
          "x1": 504.10424469664827,
          "y1": 216.47128448000018,
          "width": 396.10368469664843,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Si. A survey on deep learning for theorem proving, 2024.",
          "page": 12,
          "x0": 117.9605599999999,
          "y0": 195.58874448000014,
          "x1": 347.3713763360288,
          "y1": 205.55138448000017,
          "width": 229.4108163360289,
          "height": 9.962640000000022,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Si. A survey on deep learning for theorem proving, 2024.",
          "page": 12,
          "x0": 117.9605599999999,
          "y0": 195.58874448000014,
          "x1": 347.3713763360288,
          "y1": 205.55138448000017,
          "width": 229.4108163360289,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Pan Lu, Liang Qiu, Wenhao Yu, Sean Welleck, and Kai-Wei Chang. A survey of deep\nlearning for mathematical reasoning.\nIn Anna Rogers, Jordan Boyd-Graber, and Naoaki\nOkazaki (eds.), Proceedings of the 61st Annual Meeting of the Association for Computa-\ntional Linguistics (Volume 1: Long Papers), pp. 14605–14631, Toronto, Canada, July 2023.\nAssociation for Computational Linguistics.\n10.18653/v1/2023.acl-long.817. URL\nhttps://aclanthology.org/2023.acl-long.817.",
          "page": 12,
          "x0": 108.0003999999999,
          "y0": 122.26854448000013,
          "x1": 506.01107284861945,
          "y1": 187.07128448000017,
          "width": 398.01067284861955,
          "height": 64.80274000000004,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Pan Lu, Liang Qiu, Wenhao Yu, Sean Welleck, and Kai-Wei Chang. A survey of deep",
          "page": 12,
          "x0": 108.0003999999999,
          "y0": 177.10864448000015,
          "x1": 504.06147363615025,
          "y1": 187.07128448000017,
          "width": 396.06107363615035,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "learning for mathematical reasoning.",
          "page": 12,
          "x0": 117.96039999999988,
          "y0": 166.18874448000014,
          "x1": 273.3307737787993,
          "y1": 176.15138448000016,
          "width": 155.37037377879943,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "In Anna Rogers, Jordan Boyd-Graber, and Naoaki",
          "page": 12,
          "x0": 285.72021325639935,
          "y0": 166.18874448000014,
          "x1": 504.1302163102603,
          "y1": 176.15138448000016,
          "width": 218.41000305386098,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Okazaki (eds.), Proceedings of the 61st Annual Meeting of the Association for Computa-",
          "page": 12,
          "x0": 117.96039999999988,
          "y0": 155.14854448000014,
          "x1": 505.87776961054124,
          "y1": 165.22077352000014,
          "width": 387.91736961054136,
          "height": 10.072229039999996,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "tional Linguistics (Volume 1: Long Papers), pp. 14605–14631, Toronto, Canada, July 2023.",
          "page": 12,
          "x0": 117.96019999999987,
          "y0": 144.22864448000013,
          "x1": 506.01107284861945,
          "y1": 154.30087352000012,
          "width": 388.0508728486196,
          "height": 10.072229039999996,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Association for Computational Linguistics.",
          "page": 12,
          "x0": 117.60019999999986,
          "y0": 133.30874448000012,
          "x1": 300.57080663853793,
          "y1": 143.27138448000014,
          "width": 182.97060663853807,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "doi:",
          "page": 12,
          "x0": 315.48019627773795,
          "y0": 133.30874448000012,
          "x1": 331.08980338440654,
          "y1": 143.27138448000014,
          "width": 15.60960710666859,
          "height": 9.962640000000022,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "doi:",
          "page": 12,
          "x0": 315.48019627773795,
          "y0": 133.30874448000012,
          "x1": 331.08980338440654,
          "y1": 143.27138448000014,
          "width": 15.60960710666859,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "10.18653/v1/2023.acl-long.817. URL",
          "page": 12,
          "x0": 341.1602391492066,
          "y0": 133.30874448000012,
          "x1": 504.4475389892111,
          "y1": 143.27138448000014,
          "width": 163.28729984000455,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "https://aclanthology.org/2023.acl-long.817.",
          "page": 12,
          "x0": 117.96019999999987,
          "y0": 122.26854448000013,
          "x1": 371.97085999999985,
          "y1": 132.54998896000012,
          "width": 254.01065999999997,
          "height": 10.28144447999999,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Aman Madaan, Niket Tandon, Prakhar Gupta, Skyler Hallinan, Luyu Gao, Sarah Wiegreffe, Uri\nAlon, Nouha Dziri, Shrimai Prabhumoye, Yiming Yang, Shashank Gupta, Bodhisattwa Prasad\nMajumder, Katherine Hermann, Sean Welleck, Amir Yazdanbakhsh, and Peter Clark. Self-reﬁne:\nIterative reﬁnement with self-feedback. In Thirty-seventh Conference on Neural Information Pro-\ncessing Systems, 2023. URL https://openreview.net/forum?id=S37hOerQLB.",
          "page": 12,
          "x0": 108.00019999999984,
          "y0": 59.98854448000014,
          "x1": 505.63799024325294,
          "y1": 113.75108448000013,
          "width": 397.6377902432531,
          "height": 53.762539999999994,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Aman Madaan, Niket Tandon, Prakhar Gupta, Skyler Hallinan, Luyu Gao, Sarah Wiegreffe, Uri",
          "page": 12,
          "x0": 108.00019999999984,
          "y0": 103.78844448000014,
          "x1": 504.01112276494564,
          "y1": 113.75108448000013,
          "width": 396.0109227649458,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Alon, Nouha Dziri, Shrimai Prabhumoye, Yiming Yang, Shashank Gupta, Bodhisattwa Prasad",
          "page": 12,
          "x0": 117.60019999999983,
          "y0": 92.86854448000014,
          "x1": 504.0616258617665,
          "y1": 102.83118448000013,
          "width": 386.46142586176666,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Majumder, Katherine Hermann, Sean Welleck, Amir Yazdanbakhsh, and Peter Clark. Self-reﬁne:",
          "page": 12,
          "x0": 117.96019999999982,
          "y0": 81.82834448000014,
          "x1": 505.56997728855106,
          "y1": 91.79098448000013,
          "width": 387.60977728855124,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Iterative reﬁnement with self-feedback. In Thirty-seventh Conference on Neural Information Pro-",
          "page": 12,
          "x0": 117.96019999999982,
          "y0": 70.90844448000014,
          "x1": 505.63799024325294,
          "y1": 80.98067352000014,
          "width": 387.6777902432531,
          "height": 10.072229039999996,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "cessing Systems, 2023. URL https://openreview.net/forum?id=S37hOerQLB.",
          "page": 12,
          "x0": 117.96019999999984,
          "y0": 59.98854448000014,
          "x1": 488.2506599999998,
          "y1": 70.26998896000013,
          "width": 370.29045999999994,
          "height": 10.281444479999998,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "12",
          "page": 12,
          "x0": 300.9599999999998,
          "y0": 30.108444480000138,
          "x1": 310.9813069981678,
          "y1": 40.07108448000014,
          "width": 10.021306998167972,
          "height": 9.96264,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "12",
          "page": 12,
          "x0": 300.9599999999998,
          "y0": 30.108444480000138,
          "x1": 310.9813069981678,
          "y1": 40.07108448000014,
          "width": 10.021306998167972,
          "height": 9.96264,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        }
      ]
    },
    {
      "page_num": 13,
      "elements": [
        {
          "text": "The mathlib Community. The lean mathematical library. In Proceedings of the 9th ACM SIGPLAN\nInternational Conference on Certiﬁed Programs and Proofs, POPL ’20. ACM, January 2020. doi:\n10.1145/3372885.3373824. URL http://dx.doi.org/10.1145/3372885.3373824.",
          "page": 13,
          "x0": 108.0,
          "y0": 676.06804448,
          "x1": 505.449227881296,
          "y1": 708.1003735200001,
          "width": 397.449227881296,
          "height": 32.032329040000036,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "The mathlib Community. The lean mathematical library. In Proceedings of the 9th ACM SIGPLAN",
          "page": 13,
          "x0": 108.0,
          "y0": 698.02814448,
          "x1": 504.1654585501532,
          "y1": 708.1003735200001,
          "width": 396.1654585501532,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "International Conference on Certiﬁed Programs and Proofs, POPL ’20. ACM, January 2020. doi:",
          "page": 13,
          "x0": 117.84000000000003,
          "y0": 686.98834448,
          "x1": 505.449227881296,
          "y1": 697.06057352,
          "width": 387.60922788129596,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "10.1145/3372885.3373824. URL http://dx.doi.org/10.1145/3372885.3373824.",
          "page": 13,
          "x0": 117.24000000000001,
          "y0": 676.06804448,
          "x1": 500.61066,
          "y1": 686.34948896,
          "width": 383.37066,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Leonardo de Moura and Sebastian Ullrich. The lean 4 theorem prover and programming lan-\nIn Automated Deduction – CADE 28: 28th International Conference on Automated\nguage.\nDeduction, Virtual Event, July 12–15, 2021, Proceedings, pp. 625–635, Berlin, Heidelberg,\n2021. Springer-Verlag. ISBN 978-3-030-79875-8. doi: 10.1007/978-3-030-79876-5_37. URL\nhttps://doi.org/10.1007/978-3-030-79876-5_37.",
          "page": 13,
          "x0": 108.0,
          "y0": 613.18844448,
          "x1": 505.75751372235305,
          "y1": 666.95098448,
          "width": 397.75751372235305,
          "height": 53.762539999999944,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Leonardo de Moura and Sebastian Ullrich. The lean 4 theorem prover and programming lan-",
          "page": 13,
          "x0": 108.0,
          "y0": 656.98834448,
          "x1": 505.75751372235305,
          "y1": 666.95098448,
          "width": 397.75751372235305,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "In Automated Deduction – CADE 28: 28th International Conference on Automated",
          "page": 13,
          "x0": 153.47997852400317,
          "y0": 646.06804448,
          "x1": 504.1815721890405,
          "y1": 656.14027352,
          "width": 350.7015936650373,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "guage.",
          "page": 13,
          "x0": 117.95999999999998,
          "y0": 646.06804448,
          "x1": 144.45064860184317,
          "y1": 656.03068448,
          "width": 26.49064860184319,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Deduction, Virtual Event, July 12–15, 2021, Proceedings, pp. 625–635, Berlin, Heidelberg,",
          "page": 13,
          "x0": 117.59899999999993,
          "y0": 635.14814448,
          "x1": 505.52976324105845,
          "y1": 645.2203735200001,
          "width": 387.9307632410585,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "2021. Springer-Verlag. ISBN 978-3-030-79875-8. doi: 10.1007/978-3-030-79876-5_37. URL",
          "page": 13,
          "x0": 117.95899999999995,
          "y0": 624.10834448,
          "x1": 504.4471096797559,
          "y1": 634.07098448,
          "width": 386.48810967975595,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "https://doi.org/10.1007/978-3-030-79876-5_37.",
          "page": 13,
          "x0": 117.95899999999995,
          "y0": 613.18844448,
          "x1": 385.4096599999999,
          "y1": 623.46988896,
          "width": 267.45065999999997,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "OpenAI, Josh Achiam, Steven Adler, Sandhini Agarwal, Lama Ahmad, Ilge Akkaya, Floren-\ncia Leoni Aleman, Diogo Almeida, Janko Altenschmidt, Sam Altman, Shyamal Anadkat, Red\nAvila, Igor Babuschkin, Suchir Balaji, Valerie Balcom, Paul Baltescu, Haiming Bao, Moham-\nmad Bavarian, Jeff Belgum, Irwan Bello, Jake Berdine, Gabriel Bernadett-Shapiro, Christopher\nBerner, Lenny Bogdonoff, Oleg Boiko, Madelaine Boyd, Anna-Luisa Brakman, Greg Brockman,\nTim Brooks, Miles Brundage, Kevin Button, Trevor Cai, Rosie Campbell, Andrew Cann, Brit-\ntany Carey, Chelsea Carlson, Rory Carmichael, Brooke Chan, Che Chang, Fotis Chantzis, Derek\nChen, Sully Chen, Ruby Chen, Jason Chen, Mark Chen, Ben Chess, Chester Cho, Casey Chu,\nHyung Won Chung, Dave Cummings, Jeremiah Currier, Yunxing Dai, Cory Decareaux, Thomas\nDegry, Noah Deutsch, Damien Deville, Arka Dhar, David Dohan, Steve Dowling, Sheila Dunning,\nAdrien Ecoffet, Atty Eleti, Tyna Eloundou, David Farhi, Liam Fedus, Niko Felix, Simón Posada\nFishman, Juston Forte, Isabella Fulford, Leo Gao, Elie Georges, Christian Gibson, Vik Goel,\nTarun Gogineni, Gabriel Goh, Rapha Gontijo-Lopes, Jonathan Gordon, Morgan Grafstein, Scott\nGray, Ryan Greene, Joshua Gross, Shixiang Shane Gu, Yufei Guo, Chris Hallacy, Jesse Han, Jeff\nHarris, Yuchen He, Mike Heaton, Johannes Heidecke, Chris Hesse, Alan Hickey, Wade Hickey,\nPeter Hoeschele, Brandon Houghton, Kenny Hsu, Shengli Hu, Xin Hu, Joost Huizinga, Shantanu\nJain, Shawn Jain, Joanne Jang, Angela Jiang, Roger Jiang, Haozhun Jin, Denny Jin, Shino Jo-\nmoto, Billie Jonn, Heewoo Jun, Tomer Kaftan, Łukasz Kaiser, Ali Kamali, Ingmar Kanitscheider,\nNitish Shirish Keskar, Tabarak Khan, Logan Kilpatrick, Jong Wook Kim, Christina Kim, Yongjik\nKim, Jan Hendrik Kirchner, Jamie Kiros, Matt Knight, Daniel Kokotajlo, Łukasz Kondraciuk, An-\ndrew Kondrich, Aris Konstantinidis, Kyle Kosic, Gretchen Krueger, Vishal Kuo, Michael Lampe,\nIkai Lan, Teddy Lee, Jan Leike, Jade Leung, Daniel Levy, Chak Ming Li, Rachel Lim, Molly Lin,\nStephanie Lin, Mateusz Litwin, Theresa Lopez, Ryan Lowe, Patricia Lue, Anna Makanju, Kim\nMalfacini, Sam Manning, Todor Markov, Yaniv Markovski, Bianca Martin, Katie Mayer, Andrew\nMayne, Bob McGrew, Scott Mayer McKinney, Christine McLeavey, Paul McMillan, Jake McNeil,\nDavid Medina, Aalok Mehta, Jacob Menick, Luke Metz, Andrey Mishchenko, Pamela Mishkin,\nVinnie Monaco, Evan Morikawa, Daniel Mossing, Tong Mu, Mira Murati, Oleg Murk, David\nMély, Ashvin Nair, Reiichiro Nakano, Rajeev Nayak, Arvind Neelakantan, Richard Ngo, Hyeon-\nwoo Noh, Long Ouyang, Cullen O’Keefe, Jakub Pachocki, Alex Paino, Joe Palermo, Ashley\nPantuliano, Giambattista Parascandolo, Joel Parish, Emy Parparita, Alex Passos, Mikhail Pavlov,\nAndrew Peng, Adam Perelman, Filipe de Avila Belbute Peres, Michael Petrov, Henrique Ponde\nde Oliveira Pinto, Michael, Pokorny, Michelle Pokrass, Vitchyr H. Pong, Tolly Powell, Alethea\nPower, Boris Power, Elizabeth Proehl, Raul Puri, Alec Radford, Jack Rae, Aditya Ramesh,\nCameron Raymond, Francis Real, Kendra Rimbach, Carl Ross, Bob Rotsted, Henri Roussez, Nick\nRyder, Mario Saltarelli, Ted Sanders, Shibani Santurkar, Girish Sastry, Heather Schmidt, David\nSchnurr, John Schulman, Daniel Selsam, Kyla Sheppard, Toki Sherbakov, Jessica Shieh, Sarah\nShoker, Pranav Shyam, Szymon Sidor, Eric Sigler, Maddie Simens, Jordan Sitkin, Katarina Slama,\nIan Sohl, Benjamin Sokolowsky, Yang Song, Natalie Staudacher, Felipe Petroski Such, Natalie\nSummers, Ilya Sutskever, Jie Tang, Nikolas Tezak, Madeleine B. Thompson, Phil Tillet, Amin\nTootoonchian, Elizabeth Tseng, Preston Tuggle, Nick Turley, Jerry Tworek, Juan Felipe Cerón\nUribe, Andrea Vallone, Arun Vijayvergiya, Chelsea Voss, Carroll Wainwright, Justin Jay Wang,\nAlvin Wang, Ben Wang, Jonathan Ward, Jason Wei, CJ Weinmann, Akila Welihinda, Peter Welin-\nder, Jiayi Weng, Lilian Weng, Matt Wiethoff, Dave Willner, Clemens Winter, Samuel Wolrich,\nHannah Wong, Lauren Workman, Sherwin Wu, Jeff Wu, Michael Wu, Kai Xiao, Tao Xu, Sarah\nYoo, Kevin Yu, Qiming Yuan, Wojciech Zaremba, Rowan Zellers, Chong Zhang, Marvin Zhang,\nShengjia Zhao, Tianhao Zheng, Juntang Zhuang, William Zhuk, and Barret Zoph. Gpt-4 technical\nreport, 2024. URL https://arxiv.org/abs/2303.08774.",
          "page": 13,
          "x0": 107.99899999999991,
          "y0": 89.9896444800001,
          "x1": 505.8780204670388,
          "y1": 604.07098448,
          "width": 397.8790204670389,
          "height": 514.08134,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "OpenAI, Josh Achiam, Steven Adler, Sandhini Agarwal, Lama Ahmad, Ilge Akkaya, Floren-",
          "page": 13,
          "x0": 107.99899999999991,
          "y0": 594.10834448,
          "x1": 505.75703246981783,
          "y1": 604.07098448,
          "width": 397.7580324698179,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "cia Leoni Aleman, Diogo Almeida, Janko Altenschmidt, Sam Altman, Shyamal Anadkat, Red",
          "page": 13,
          "x0": 117.95899999999995,
          "y0": 583.18844448,
          "x1": 503.9404665839885,
          "y1": 593.15108448,
          "width": 385.98146658398855,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Avila, Igor Babuschkin, Suchir Balaji, Valerie Balcom, Paul Baltescu, Haiming Bao, Moham-",
          "page": 13,
          "x0": 117.59899999999993,
          "y0": 572.14824448,
          "x1": 505.87666678662,
          "y1": 582.11088448,
          "width": 388.27766678662005,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "mad Bavarian, Jeff Belgum, Irwan Bello, Jake Berdine, Gabriel Bernadett-Shapiro, Christopher",
          "page": 13,
          "x0": 117.95899999999992,
          "y0": 561.22834448,
          "x1": 504.31658672430643,
          "y1": 571.19098448,
          "width": 386.35758672430654,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Berner, Lenny Bogdonoff, Oleg Boiko, Madelaine Boyd, Anna-Luisa Brakman, Greg Brockman,",
          "page": 13,
          "x0": 117.95899999999989,
          "y0": 550.30844448,
          "x1": 505.5298047503023,
          "y1": 560.27108448,
          "width": 387.5708047503024,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Tim Brooks, Miles Brundage, Kevin Button, Trevor Cai, Rosie Campbell, Andrew Cann, Brit-",
          "page": 13,
          "x0": 117.59899999999988,
          "y0": 539.26864448,
          "x1": 505.63725736936425,
          "y1": 549.23128448,
          "width": 388.0382573693644,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "tany Carey, Chelsea Carlson, Rory Carmichael, Brooke Chan, Che Chang, Fotis Chantzis, Derek",
          "page": 13,
          "x0": 117.95999999999987,
          "y0": 528.34834448,
          "x1": 504.3013188330394,
          "y1": 538.31098448,
          "width": 386.3413188330395,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Chen, Sully Chen, Ruby Chen, Jason Chen, Mark Chen, Ben Chess, Chester Cho, Casey Chu,",
          "page": 13,
          "x0": 117.95999999999984,
          "y0": 517.42844448,
          "x1": 505.29096695810335,
          "y1": 527.39108448,
          "width": 387.33096695810355,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Hyung Won Chung, Dave Cummings, Jeremiah Currier, Yunxing Dai, Cory Decareaux, Thomas",
          "page": 13,
          "x0": 117.95999999999987,
          "y0": 506.38864448000004,
          "x1": 504.2760207654478,
          "y1": 516.35128448,
          "width": 386.31602076544794,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Degry, Noah Deutsch, Damien Deville, Arka Dhar, David Dohan, Steve Dowling, Sheila Dunning,",
          "page": 13,
          "x0": 117.95999999999987,
          "y0": 495.46874448000005,
          "x1": 505.5310417300572,
          "y1": 505.4313844800001,
          "width": 387.57104173005735,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Adrien Ecoffet, Atty Eleti, Tyna Eloundou, David Farhi, Liam Fedus, Niko Felix, Simón Posada",
          "page": 13,
          "x0": 117.59999999999985,
          "y0": 484.54844448000006,
          "x1": 504.1039206949282,
          "y1": 494.5110844800001,
          "width": 386.50392069492835,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Fishman, Juston Forte, Isabella Fulford, Leo Gao, Elie Georges, Christian Gibson, Vik Goel,",
          "page": 13,
          "x0": 117.95999999999987,
          "y0": 473.50864448000004,
          "x1": 505.29049344757806,
          "y1": 483.47128448000007,
          "width": 387.3304934475782,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Tarun Gogineni, Gabriel Goh, Rapha Gontijo-Lopes, Jonathan Gordon, Morgan Grafstein, Scott",
          "page": 13,
          "x0": 117.59999999999985,
          "y0": 462.58874448000006,
          "x1": 504.0101077752716,
          "y1": 472.5513844800001,
          "width": 386.41010777527174,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Gray, Ryan Greene, Joshua Gross, Shixiang Shane Gu, Yufei Guo, Chris Hallacy, Jesse Han, Jeff",
          "page": 13,
          "x0": 117.95999999999984,
          "y0": 451.6688444800001,
          "x1": 504.0772517065099,
          "y1": 461.6314844800001,
          "width": 386.11725170651005,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Harris, Yuchen He, Mike Heaton, Johannes Heidecke, Chris Hesse, Alan Hickey, Wade Hickey,",
          "page": 13,
          "x0": 117.95999999999981,
          "y0": 440.62864448000005,
          "x1": 505.4101731501261,
          "y1": 450.59128448000007,
          "width": 387.4501731501263,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Peter Hoeschele, Brandon Houghton, Kenny Hsu, Shengli Hu, Xin Hu, Joost Huizinga, Shantanu",
          "page": 13,
          "x0": 117.95999999999981,
          "y0": 429.70874448000006,
          "x1": 504.1812926395577,
          "y1": 439.6713844800001,
          "width": 386.2212926395579,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Jain, Shawn Jain, Joanne Jang, Angela Jiang, Roger Jiang, Haozhun Jin, Denny Jin, Shino Jo-",
          "page": 13,
          "x0": 117.7199999999998,
          "y0": 418.7888444800001,
          "x1": 505.63814561063447,
          "y1": 428.7514844800001,
          "width": 387.91814561063467,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "moto, Billie Jonn, Heewoo Jun, Tomer Kaftan, Łukasz Kaiser, Ali Kamali, Ingmar Kanitscheider,",
          "page": 13,
          "x0": 117.95999999999978,
          "y0": 407.74864448000005,
          "x1": 505.53071928538947,
          "y1": 417.7112844800001,
          "width": 387.5707192853897,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Nitish Shirish Keskar, Tabarak Khan, Logan Kilpatrick, Jong Wook Kim, Christina Kim, Yongjik",
          "page": 13,
          "x0": 117.95999999999981,
          "y0": 396.82874448000007,
          "x1": 504.4224212150424,
          "y1": 406.7913844800001,
          "width": 386.4624212150426,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Kim, Jan Hendrik Kirchner, Jamie Kiros, Matt Knight, Daniel Kokotajlo, Łukasz Kondraciuk, An-",
          "page": 13,
          "x0": 117.95999999999981,
          "y0": 385.9088444800001,
          "x1": 505.75726430556387,
          "y1": 395.8714844800001,
          "width": 387.79726430556406,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "drew Kondrich, Aris Konstantinidis, Kyle Kosic, Gretchen Krueger, Vishal Kuo, Michael Lampe,",
          "page": 13,
          "x0": 117.95999999999981,
          "y0": 374.9889444800001,
          "x1": 505.41110936273446,
          "y1": 384.9515844800001,
          "width": 387.45110936273466,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Ikai Lan, Teddy Lee, Jan Leike, Jade Leung, Daniel Levy, Chak Ming Li, Rachel Lim, Molly Lin,",
          "page": 13,
          "x0": 117.95999999999978,
          "y0": 363.9487444800001,
          "x1": 505.2907974923376,
          "y1": 373.9113844800001,
          "width": 387.33079749233787,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Stephanie Lin, Mateusz Litwin, Theresa Lopez, Ryan Lowe, Patricia Lue, Anna Makanju, Kim",
          "page": 13,
          "x0": 117.95999999999981,
          "y0": 353.0288444800001,
          "x1": 503.9510024261919,
          "y1": 362.9914844800001,
          "width": 385.9910024261921,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Malfacini, Sam Manning, Todor Markov, Yaniv Markovski, Bianca Martin, Katie Mayer, Andrew",
          "page": 13,
          "x0": 117.95999999999981,
          "y0": 342.1089444800001,
          "x1": 504.59216087773694,
          "y1": 352.0715844800001,
          "width": 386.63216087773714,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Mayne, Bob McGrew, Scott Mayer McKinney, Christine McLeavey, Paul McMillan, Jake McNeil,",
          "page": 13,
          "x0": 117.95999999999984,
          "y0": 331.0687444800001,
          "x1": 505.29057652324394,
          "y1": 341.0313844800001,
          "width": 387.3305765232441,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "David Medina, Aalok Mehta, Jacob Menick, Luke Metz, Andrey Mishchenko, Pamela Mishkin,",
          "page": 13,
          "x0": 117.95999999999987,
          "y0": 320.1488444800001,
          "x1": 505.4120199934493,
          "y1": 330.1114844800001,
          "width": 387.4520199934494,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Vinnie Monaco, Evan Morikawa, Daniel Mossing, Tong Mu, Mira Murati, Oleg Murk, David",
          "page": 13,
          "x0": 117.59999999999985,
          "y0": 309.2289444800001,
          "x1": 504.06130229330313,
          "y1": 319.19158448000013,
          "width": 386.4613022933033,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Mély, Ashvin Nair, Reiichiro Nakano, Rajeev Nayak, Arvind Neelakantan, Richard Ngo, Hyeon-",
          "page": 13,
          "x0": 117.95999999999987,
          "y0": 298.1891444800001,
          "x1": 505.8780204670388,
          "y1": 308.1517844800001,
          "width": 387.91802046703896,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "woo Noh, Long Ouyang, Cullen O’Keefe, Jakub Pachocki, Alex Paino, Joe Palermo, Ashley",
          "page": 13,
          "x0": 117.59999999999988,
          "y0": 287.2692444800001,
          "x1": 504.4227285050049,
          "y1": 297.23188448000013,
          "width": 386.822728505005,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Pantuliano, Giambattista Parascandolo, Joel Parish, Emy Parparita, Alex Passos, Mikhail Pavlov,",
          "page": 13,
          "x0": 117.95999999999987,
          "y0": 276.3489444800001,
          "x1": 505.53071981884904,
          "y1": 286.31158448000014,
          "width": 387.57071981884917,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Andrew Peng, Adam Perelman, Filipe de Avila Belbute Peres, Michael Petrov, Henrique Ponde",
          "page": 13,
          "x0": 117.59999999999985,
          "y0": 265.3091444800001,
          "x1": 504.103458878373,
          "y1": 275.2717844800001,
          "width": 386.5034588783731,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "de Oliveira Pinto, Michael, Pokorny, Michelle Pokrass, Vitchyr H. Pong, Tolly Powell, Alethea",
          "page": 13,
          "x0": 117.95999999999987,
          "y0": 254.38924448000012,
          "x1": 504.103690648696,
          "y1": 264.35188448000014,
          "width": 386.1436906486961,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Power, Boris Power, Elizabeth Proehl, Raul Puri, Alec Radford, Jack Rae, Aditya Ramesh,",
          "page": 13,
          "x0": 117.95999999999987,
          "y0": 243.4693444800001,
          "x1": 505.29114283271474,
          "y1": 253.43198448000012,
          "width": 387.3311428327149,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Cameron Raymond, Francis Real, Kendra Rimbach, Carl Ross, Bob Rotsted, Henri Roussez, Nick",
          "page": 13,
          "x0": 117.95999999999987,
          "y0": 232.4291444800001,
          "x1": 504.30121015766116,
          "y1": 242.39178448000013,
          "width": 386.3412101576613,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Ryder, Mario Saltarelli, Ted Sanders, Shibani Santurkar, Girish Sastry, Heather Schmidt, David",
          "page": 13,
          "x0": 117.95999999999987,
          "y0": 221.5092444800001,
          "x1": 504.0614819058826,
          "y1": 231.4718844800001,
          "width": 386.10148190588274,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Schnurr, John Schulman, Daniel Selsam, Kyla Sheppard, Toki Sherbakov, Jessica Shieh, Sarah",
          "page": 13,
          "x0": 117.95999999999984,
          "y0": 210.58934448000008,
          "x1": 504.0623857806417,
          "y1": 220.5519844800001,
          "width": 386.10238578064184,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Shoker, Pranav Shyam, Szymon Sidor, Eric Sigler, Maddie Simens, Jordan Sitkin, Katarina Slama,",
          "page": 13,
          "x0": 117.95999999999981,
          "y0": 199.54914448000008,
          "x1": 505.2905518719869,
          "y1": 209.5117844800001,
          "width": 387.3305518719871,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Ian Sohl, Benjamin Sokolowsky, Yang Song, Natalie Staudacher, Felipe Petroski Such, Natalie",
          "page": 13,
          "x0": 117.95999999999981,
          "y0": 188.62924448000007,
          "x1": 503.98392541094256,
          "y1": 198.5918844800001,
          "width": 386.02392541094275,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Summers, Ilya Sutskever, Jie Tang, Nikolas Tezak, Madeleine B. Thompson, Phil Tillet, Amin",
          "page": 13,
          "x0": 117.95999999999981,
          "y0": 177.70934448000006,
          "x1": 504.0617981037245,
          "y1": 187.67198448000008,
          "width": 386.1017981037247,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Tootoonchian, Elizabeth Tseng, Preston Tuggle, Nick Turley, Jerry Tworek, Juan Felipe Cerón",
          "page": 13,
          "x0": 117.5999999999998,
          "y0": 166.66954448000007,
          "x1": 504.0619582840262,
          "y1": 176.6321844800001,
          "width": 386.4619582840264,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Uribe, Andrea Vallone, Arun Vijayvergiya, Chelsea Voss, Carroll Wainwright, Justin Jay Wang,",
          "page": 13,
          "x0": 117.95999999999978,
          "y0": 155.74924448000007,
          "x1": 505.2907991318743,
          "y1": 165.7118844800001,
          "width": 387.3307991318745,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Alvin Wang, Ben Wang, Jonathan Ward, Jason Wei, CJ Weinmann, Akila Welihinda, Peter Welin-",
          "page": 13,
          "x0": 117.59899999999979,
          "y0": 144.82934448000006,
          "x1": 505.6357477753797,
          "y1": 154.79198448000008,
          "width": 388.0367477753799,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "der, Jiayi Weng, Lilian Weng, Matt Wiethoff, Dave Willner, Clemens Winter, Samuel Wolrich,",
          "page": 13,
          "x0": 117.95899999999978,
          "y0": 133.78954448000007,
          "x1": 505.2897441336377,
          "y1": 143.7521844800001,
          "width": 387.33074413363795,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Hannah Wong, Lauren Workman, Sherwin Wu, Jeff Wu, Michael Wu, Kai Xiao, Tao Xu, Sarah",
          "page": 13,
          "x0": 117.95899999999978,
          "y0": 122.86964448000009,
          "x1": 504.059523247245,
          "y1": 132.83228448000008,
          "width": 386.10052324724523,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Yoo, Kevin Yu, Qiming Yuan, Wojciech Zaremba, Rowan Zellers, Chong Zhang, Marvin Zhang,",
          "page": 13,
          "x0": 117.35899999999981,
          "y0": 111.9493444800001,
          "x1": 505.53000793940646,
          "y1": 121.91198448000009,
          "width": 388.17100793940665,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Shengjia Zhao, Tianhao Zheng, Juntang Zhuang, William Zhuk, and Barret Zoph. Gpt-4 technical",
          "page": 13,
          "x0": 117.95899999999983,
          "y0": 100.9095444800001,
          "x1": 504.1286765206607,
          "y1": 110.87218448000009,
          "width": 386.16967652066086,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "report, 2024. URL https://arxiv.org/abs/2303.08774.",
          "page": 13,
          "x0": 117.95899999999983,
          "y0": 89.9896444800001,
          "x1": 388.8894599999998,
          "y1": 100.27108896000009,
          "width": 270.93046,
          "height": 10.28144447999999,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Stanislas Polu and Ilya Sutskever. Generative language modeling for automated theorem proving,",
          "page": 13,
          "x0": 107.99879999999985,
          "y0": 70.9095444800001,
          "x1": 505.6494621236382,
          "y1": 80.87218448000009,
          "width": 397.65066212363837,
          "height": 9.962639999999993,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Stanislas Polu and Ilya Sutskever. Generative language modeling for automated theorem proving,",
          "page": 13,
          "x0": 107.99879999999985,
          "y0": 70.9095444800001,
          "x1": 505.6494621236382,
          "y1": 80.87218448000009,
          "width": 397.65066212363837,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "2020.",
          "page": 13,
          "x0": 117.95979999999983,
          "y0": 59.98964448000009,
          "x1": 140.61044475481341,
          "y1": 69.95228448000009,
          "width": 22.650644754813584,
          "height": 9.96264,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "2020.",
          "page": 13,
          "x0": 117.95979999999983,
          "y0": 59.98964448000009,
          "x1": 140.61044475481341,
          "y1": 69.95228448000009,
          "width": 22.650644754813584,
          "height": 9.96264,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "13",
          "page": 13,
          "x0": 300.95979999999986,
          "y0": 30.10954448000009,
          "x1": 310.98110699816783,
          "y1": 40.07218448000009,
          "width": 10.021306998167972,
          "height": 9.96264,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "13",
          "page": 13,
          "x0": 300.95979999999986,
          "y0": 30.10954448000009,
          "x1": 310.98110699816783,
          "y1": 40.07218448000009,
          "width": 10.021306998167972,
          "height": 9.96264,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        }
      ]
    },
    {
      "page_num": 14,
      "elements": [
        {
          "text": "Stanislas Polu, Jesse Michael Han, Kunhao Zheng, Mantas Baksys, Igor Babuschkin, and Ilya",
          "page": 14,
          "x0": 108.0,
          "y0": 698.02814448,
          "x1": 504.10358285444113,
          "y1": 707.99078448,
          "width": 396.10358285444113,
          "height": 9.962639999999965,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Stanislas Polu, Jesse Michael Han, Kunhao Zheng, Mantas Baksys, Igor Babuschkin, and Ilya",
          "page": 14,
          "x0": 108.0,
          "y0": 698.02814448,
          "x1": 504.10358285444113,
          "y1": 707.99078448,
          "width": 396.10358285444113,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Sutskever. Formal mathematics statement curriculum learning, 2022.",
          "page": 14,
          "x0": 117.96100000000001,
          "y0": 686.98834448,
          "x1": 393.45175405786455,
          "y1": 696.95098448,
          "width": 275.49075405786454,
          "height": 9.962639999999965,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Sutskever. Formal mathematics statement curriculum learning, 2022.",
          "page": 14,
          "x0": 117.96100000000001,
          "y0": 686.98834448,
          "x1": 393.45175405786455,
          "y1": 696.95098448,
          "width": 275.49075405786454,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Amitayush Thakur, George Tsoukalas, Yeming Wen, Jimmy Xin, and Swarat Chaudhuri. An in-",
          "page": 14,
          "x0": 108.001,
          "y0": 668.14814448,
          "x1": 505.75885296983415,
          "y1": 678.11078448,
          "width": 397.7578529698342,
          "height": 9.962639999999965,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Amitayush Thakur, George Tsoukalas, Yeming Wen, Jimmy Xin, and Swarat Chaudhuri. An in-",
          "page": 14,
          "x0": 108.001,
          "y0": 668.14814448,
          "x1": 505.75885296983415,
          "y1": 678.11078448,
          "width": 397.7578529698342,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "context learning agent for formal theorem-proving, 2024.",
          "page": 14,
          "x0": 117.96100000000001,
          "y0": 657.10834448,
          "x1": 346.41205988236374,
          "y1": 667.07098448,
          "width": 228.45105988236372,
          "height": 9.962639999999965,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "context learning agent for formal theorem-proving, 2024.",
          "page": 14,
          "x0": 117.96100000000001,
          "y0": 657.10834448,
          "x1": 346.41205988236374,
          "y1": 667.07098448,
          "width": 228.45105988236372,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Jason Wei, Xuezhi Wang, Dale Schuurmans, Maarten Bosma, brian ichter, Fei Xia, Ed H.\nthought prompting elicits reasoning\nChi, Quoc V Le, and Denny Zhou.\nin large language models.\nIn Alice H. Oh, Alekh Agarwal, Danielle Belgrave, and\nKyunghyun Cho (eds.), Advances in Neural Information Processing Systems, 2022. URL\nhttps://openreview.net/forum?id=_VjQlMeSB_J.",
          "page": 14,
          "x0": 108.00084000000001,
          "y0": 594.34834448,
          "x1": 505.7702844936245,
          "y1": 648.23078448,
          "width": 397.7694444936245,
          "height": 53.882439999999974,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Jason Wei, Xuezhi Wang, Dale Schuurmans, Maarten Bosma, brian ichter, Fei Xia, Ed H.",
          "page": 14,
          "x0": 108.00084000000001,
          "y0": 638.26814448,
          "x1": 505.7702844936245,
          "y1": 648.23078448,
          "width": 397.7694444936245,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Chi, Quoc V Le, and Denny Zhou.",
          "page": 14,
          "x0": 117.96083999999996,
          "y0": 627.22834448,
          "x1": 285.0918267720276,
          "y1": 637.19098448,
          "width": 167.13098677202765,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Chain of",
          "page": 14,
          "x0": 302.6412163848276,
          "y0": 627.22834448,
          "x1": 341.83859650592984,
          "y1": 637.19098448,
          "width": 39.19738012110224,
          "height": 9.962639999999965,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Chain of",
          "page": 14,
          "x0": 302.6412163848276,
          "y0": 627.22834448,
          "x1": 341.83859650592984,
          "y1": 637.19098448,
          "width": 39.19738012110224,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "thought prompting elicits reasoning",
          "page": 14,
          "x0": 348.7208978069698,
          "y0": 627.22834448,
          "x1": 504.1821085138216,
          "y1": 637.19098448,
          "width": 155.46121070685183,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "in large language models.",
          "page": 14,
          "x0": 117.96083999999996,
          "y0": 616.30844448,
          "x1": 232.05156728748614,
          "y1": 626.27108448,
          "width": 114.09072728748617,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "In Alice H. Oh, Alekh Agarwal, Danielle Belgrave, and",
          "page": 14,
          "x0": 248.16085728828617,
          "y0": 616.30844448,
          "x1": 504.06236135487757,
          "y1": 626.27108448,
          "width": 255.9015040665914,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Kyunghyun Cho (eds.), Advances in Neural Information Processing Systems, 2022. URL",
          "page": 14,
          "x0": 117.96083999999996,
          "y0": 605.3885444800001,
          "x1": 504.4477596413594,
          "y1": 615.4607735200001,
          "width": 386.48691964135946,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "https://openreview.net/forum?id=_VjQlMeSB_J.",
          "page": 14,
          "x0": 117.95983999999999,
          "y0": 594.34834448,
          "x1": 377.4905,
          "y1": 604.62978896,
          "width": 259.53066,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Freek Wiedijk. Formal proof sketches. In Stefano Berardi, Mario Coppo, and Ferruccio Damiani\n(eds.), Types for Proofs and Programs, pp. 378–393, Berlin, Heidelberg, 2004. Springer Berlin\nHeidelberg. ISBN 978-3-540-24849-1.",
          "page": 14,
          "x0": 107.99984,
          "y0": 553.5484444800001,
          "x1": 504.13097243905634,
          "y1": 585.47118448,
          "width": 396.13113243905633,
          "height": 31.922739999999976,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Freek Wiedijk. Formal proof sketches. In Stefano Berardi, Mario Coppo, and Ferruccio Damiani",
          "page": 14,
          "x0": 107.99984,
          "y0": 575.5085444800001,
          "x1": 504.13097243905634,
          "y1": 585.47118448,
          "width": 396.13113243905633,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "(eds.), Types for Proofs and Programs, pp. 378–393, Berlin, Heidelberg, 2004. Springer Berlin",
          "page": 14,
          "x0": 117.59984000000006,
          "y0": 564.46874448,
          "x1": 503.9413280579112,
          "y1": 574.5409735200001,
          "width": 386.3414880579112,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Heidelberg. ISBN 978-3-540-24849-1.",
          "page": 14,
          "x0": 117.95974000000004,
          "y0": 553.5484444800001,
          "x1": 274.53043679543873,
          "y1": 563.51108448,
          "width": 156.5706967954387,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Kaiyu Yang, Aidan Swope, Alex Gu, Rahul Chalamala, Peiyang Song, Shixing Yu, Saad Godil,\nRyan Prenger, and Anima Anandkumar. LeanDojo: Theorem proving with retrieval-augmented\nlanguage models. In Neural Information Processing Systems (NeurIPS), 2023.",
          "page": 14,
          "x0": 107.99958000000004,
          "y0": 512.7484444800001,
          "x1": 505.41036540126646,
          "y1": 544.55128448,
          "width": 397.4107854012664,
          "height": 31.802839999999946,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Kaiyu Yang, Aidan Swope, Alex Gu, Rahul Chalamala, Peiyang Song, Shixing Yu, Saad Godil,",
          "page": 14,
          "x0": 107.99958000000004,
          "y0": 534.5886444800001,
          "x1": 505.41036540126646,
          "y1": 544.55128448,
          "width": 397.4107854012664,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Ryan Prenger, and Anima Anandkumar. LeanDojo: Theorem proving with retrieval-augmented",
          "page": 14,
          "x0": 117.95958000000002,
          "y0": 523.6687444800001,
          "x1": 504.5408777954911,
          "y1": 533.6313844800001,
          "width": 386.5812977954911,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "language models. In Neural Information Processing Systems (NeurIPS), 2023.",
          "page": 14,
          "x0": 117.95958000000002,
          "y0": 512.7484444800001,
          "x1": 431.13024435812,
          "y1": 522.8206735200001,
          "width": 313.17066435812,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Shuyan Zhou, Uri Alon, Frank F. Xu, Zhengbao Jiang, and Graham Neubig. Docprompting: Gener-\nating code by retrieving the docs. In The Eleventh International Conference on Learning Repre-\nsentations, 2023. URL https://openreview.net/forum?id=ZTCxT2t2Ru.",
          "page": 14,
          "x0": 107.99948,
          "y0": 471.8285444800001,
          "x1": 505.758487613348,
          "y1": 503.75128448000015,
          "width": 397.759007613348,
          "height": 31.922740000000033,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Shuyan Zhou, Uri Alon, Frank F. Xu, Zhengbao Jiang, and Graham Neubig. Docprompting: Gener-",
          "page": 14,
          "x0": 107.99948,
          "y0": 493.78864448000013,
          "x1": 505.75744763744694,
          "y1": 503.75128448000015,
          "width": 397.75796763744694,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ating code by retrieving the docs. In The Eleventh International Conference on Learning Repre-",
          "page": 14,
          "x0": 117.96047999999999,
          "y0": 482.86874448000015,
          "x1": 505.758487613348,
          "y1": 492.94097352000017,
          "width": 387.798007613348,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "sentations, 2023. URL https://openreview.net/forum?id=ZTCxT2t2Ru.",
          "page": 14,
          "x0": 117.96047999999996,
          "y0": 471.8285444800001,
          "x1": 465.33104,
          "y1": 482.1099889600001,
          "width": 347.37056,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "14",
          "page": 14,
          "x0": 300.96038,
          "y0": 30.1085444800001,
          "x1": 310.98168699816796,
          "y1": 40.0711844800001,
          "width": 10.021306998167972,
          "height": 9.96264,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "14",
          "page": 14,
          "x0": 300.96038,
          "y0": 30.1085444800001,
          "x1": 310.98168699816796,
          "y1": 40.0711844800001,
          "width": 10.021306998167972,
          "height": 9.96264,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        }
      ]
    },
    {
      "page_num": 15,
      "elements": [
        {
          "text": "A PROMPTS",
          "page": 15,
          "x0": 108.24,
          "y0": 697.5937664,
          "x1": 176.917778797628,
          "y1": 709.5489664,
          "width": 68.677778797628,
          "height": 11.95519999999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "A PROMPTS",
          "page": 15,
          "x0": 108.24,
          "y0": 697.5937664,
          "x1": 176.917778797628,
          "y1": 709.5489664,
          "width": 68.677778797628,
          "height": 11.95519999999999,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "In this appendix, we note the prompts used by ImProver both for general LLM prompting, as well\nas the metric-speciﬁc prompts.",
          "page": 15,
          "x0": 108.00000000000006,
          "y0": 663.58834448,
          "x1": 504.00949530511855,
          "y1": 684.47088448,
          "width": 396.0094953051185,
          "height": 20.88253999999995,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "In this appendix, we note the prompts used by ImProver both for general LLM prompting, as well",
          "page": 15,
          "x0": 108.0001,
          "y0": 674.18944,
          "x1": 504.00949530511855,
          "y1": 684.47088448,
          "width": 396.0093953051186,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "as the metric-speciﬁc prompts.",
          "page": 15,
          "x0": 108.00000000000006,
          "y0": 663.58834448,
          "x1": 230.4905919008724,
          "y1": 673.55098448,
          "width": 122.49059190087235,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "A.1 TEMPLATE",
          "page": 15,
          "x0": 108.23984400000006,
          "y0": 638.7481444800001,
          "x1": 179.94985440938308,
          "y1": 648.71078448,
          "width": 71.71001040938302,
          "height": 9.962639999999965,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "A.1 TEMPLATE",
          "page": 15,
          "x0": 108.23984400000006,
          "y0": 638.7481444800001,
          "x1": 179.94985440938308,
          "y1": 648.71078448,
          "width": 71.71001040938302,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "For the main prompt sent to the LLM on each sample, we build a prompt string using a chat prompt\ntemplate that is then invoked at runtime to ﬁll in the variables.",
          "page": 15,
          "x0": 108.00004400000006,
          "y0": 607.18844448,
          "x1": 504.2502053915233,
          "y1": 628.19088448,
          "width": 396.25016139152325,
          "height": 21.00243999999998,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "For the main prompt sent to the LLM on each sample, we build a prompt string using a chat prompt",
          "page": 15,
          "x0": 108.00004400000006,
          "y0": 618.2282444800001,
          "x1": 504.2502053915233,
          "y1": 628.19088448,
          "width": 396.25016139152325,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "template that is then invoked at runtime to ﬁll in the variables.",
          "page": 15,
          "x0": 108.00004400000006,
          "y0": 607.18844448,
          "x1": 355.1707109906745,
          "y1": 617.15108448,
          "width": 247.17066699067442,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Namely, these variables include the set of metric prompts, previous results, input theorem, context,\na syntax documents, Mathlib documents, and examples.",
          "page": 15,
          "x0": 108.00004400000006,
          "y0": 579.3482444800001,
          "x1": 505.41068106304937,
          "y1": 600.23078448,
          "width": 397.4106370630493,
          "height": 20.88253999999995,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Namely, these variables include the set of metric prompts, previous results, input theorem, context,",
          "page": 15,
          "x0": 108.00004400000009,
          "y0": 590.26814448,
          "x1": 505.41068106304937,
          "y1": 600.23078448,
          "width": 397.4106370630493,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "a syntax documents, Mathlib documents, and examples.",
          "page": 15,
          "x0": 108.00004400000006,
          "y0": 579.3482444800001,
          "x1": 330.81047014549483,
          "y1": 589.31088448,
          "width": 222.81042614549477,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "The prompt template is a conversation of the format:",
          "page": 15,
          "x0": 107.63988800000006,
          "y0": 562.4283444800001,
          "x1": 317.6488146371463,
          "y1": 572.39098448,
          "width": 210.00892663714626,
          "height": 9.962639999999965,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "The prompt template is a conversation of the format:",
          "page": 15,
          "x0": 107.63988800000006,
          "y0": 562.4283444800001,
          "x1": 317.6488146371463,
          "y1": 572.39098448,
          "width": 210.00892663714626,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Placeholder: All metric prompts with a ‘System’ role\nSystem: You will be given the proof context (i.e. the lean ﬁle contents/imports leading up\nto the theorem declaration) wrapped by <CONTEXT>...</CONTEXT>.\nYou will be given the previous num_prev input/output pairs as well as their metric (met-\nric.name) score and correctness score, as well as any error messages, for your reference to\nimprove upon. Each of these previous results will be wrapped with <PREV I=0></PREV\nI=0>,...,<PREV I=num_prev-1></PREV I=num_prev-1>, with I=num_prev-1 being the\nmost recent result.\nRemember to use lean 4 syntax, which has signiﬁcant changes from the lean 3 syntax. To\nassist with the syntax relating to the current theorem and current error messages, you will\nbe given num_syntax_docs documents to refer to for ﬁxing these syntax issues. Each of\nthese documents will be wrapped with <SYNTAX_DOC>...</SYNTAX_DOC>.\nYou will also receive num_mathlib_docs documents relevant to the current theorem to\nhelp with formulating your modiﬁed proof. Each of these will be wrapped with <CON-\nTENT_DOC>...</CONTENT_DOC>\nYou will also receive num_examples examples of input-output pairs of proofs that\nwere optimized for the metric metric. Each of these will be wrapped with <EXAM-\nPLE>...</EXAMPLE>\nYou will be given the tactic states as comments for reference. The current theorem will be\nwrapped in <CURRENT>...</CURRENT>\nSystem: Output format instructions\nPlaceholder: All retrieved syntax documentation\nPlaceholder: All retrieved mathlib documentation\nPlaceholder: All retrieved examples\nUser: <CONTEXT> context </CONTEXT>\nPlaceholder: Previous results and inputs/outputs\nPlaceholder: All metric prompts with a ‘User’ role\nUser: <CURRENT> theorem </CURRENT>",
          "page": 15,
          "x0": 143.280188,
          "y0": 202.18864447999994,
          "x1": 505.75950652008515,
          "y1": 551.8707361600001,
          "width": 362.47931852008514,
          "height": 349.68209168000016,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Placeholder: All metric prompts with a ‘System’ role",
          "page": 15,
          "x0": 143.88008800000006,
          "y0": 541.8981335200001,
          "x1": 356.8641684302893,
          "y1": 551.8707361600001,
          "width": 212.98408043028923,
          "height": 9.972602639999991,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "System: You will be given the proof context (i.e. the lean ﬁle contents/imports leading up",
          "page": 15,
          "x0": 143.88008800000006,
          "y0": 527.02834448,
          "x1": 504.0624433153018,
          "y1": 537.11053616,
          "width": 360.1823553153017,
          "height": 10.08219168000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "to the theorem declaration) wrapped by <CONTEXT>...</CONTEXT>.",
          "page": 15,
          "x0": 143.88018800000003,
          "y0": 516.10844448,
          "x1": 431.73085024982265,
          "y1": 526.07108448,
          "width": 287.8506622498226,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "You will be given the previous num_prev input/output pairs as well as their metric (met-",
          "page": 15,
          "x0": 143.280188,
          "y0": 503.26864448,
          "x1": 505.75700940500565,
          "y1": 513.34087352,
          "width": 362.47682140500564,
          "height": 10.072229039999968,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ric.name) score and correctness score, as well as any error messages, for your reference to",
          "page": 15,
          "x0": 143.88078800000002,
          "y0": 492.22844447999995,
          "x1": 503.94135941976134,
          "y1": 502.19108448,
          "width": 360.06057141976135,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "improve upon. Each of these previous results will be wrapped with <PREV I=0></PREV",
          "page": 15,
          "x0": 143.88078800000002,
          "y0": 481.30854447999997,
          "x1": 504.47359237083606,
          "y1": 491.27118448,
          "width": 360.592804370836,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "I=0>,...,<PREV I=num_prev-1></PREV I=num_prev-1>, with I=num_prev-1 being the",
          "page": 15,
          "x0": 143.88078800000002,
          "y0": 470.38864448,
          "x1": 504.10433680568036,
          "y1": 480.46087352,
          "width": 360.22354880568037,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "most recent result.",
          "page": 15,
          "x0": 143.88168800000005,
          "y0": 459.34844447999996,
          "x1": 217.29230692218277,
          "y1": 469.31108448,
          "width": 73.41061892218272,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Remember to use lean 4 syntax, which has signiﬁcant changes from the lean 3 syntax. To",
          "page": 15,
          "x0": 143.88168800000005,
          "y0": 446.50864447999993,
          "x1": 503.94339043936304,
          "y1": 456.47128447999995,
          "width": 360.061702439363,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "assist with the syntax relating to the current theorem and current error messages, you will",
          "page": 15,
          "x0": 143.88168800000005,
          "y0": 435.58874447999995,
          "x1": 504.0128482855318,
          "y1": 445.55138447999997,
          "width": 360.13116028553173,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "be given num_syntax_docs documents to refer to for ﬁxing these syntax issues. Each of",
          "page": 15,
          "x0": 143.88168800000003,
          "y0": 424.66884447999996,
          "x1": 504.0798242412039,
          "y1": 434.74107352,
          "width": 360.1981362412039,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "these documents will be wrapped with <SYNTAX_DOC>...</SYNTAX_DOC>.",
          "page": 15,
          "x0": 143.88198800000004,
          "y0": 413.62864447999993,
          "x1": 465.8126069795058,
          "y1": 423.59128447999996,
          "width": 321.93061897950577,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "You will also receive num_mathlib_docs documents relevant to the current theorem to",
          "page": 15,
          "x0": 143.281988,
          "y0": 400.7888444799999,
          "x1": 503.943312659457,
          "y1": 410.86107351999993,
          "width": 360.66132465945697,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "help with formulating your modiﬁed proof. Each of these will be wrapped with <CON-",
          "page": 15,
          "x0": 143.88168800000003,
          "y0": 389.8685444799999,
          "x1": 505.63921407742447,
          "y1": 399.83118447999993,
          "width": 361.7575260774245,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "TENT_DOC>...</CONTENT_DOC>",
          "page": 15,
          "x0": 143.52168800000004,
          "y0": 378.8287444799999,
          "x1": 294.94059357422935,
          "y1": 388.7913844799999,
          "width": 151.4189055742293,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "You will also receive num_examples examples of input-output pairs of proofs that",
          "page": 15,
          "x0": 143.28184400000004,
          "y0": 365.9889444799999,
          "x1": 504.01146699846015,
          "y1": 376.0611735199999,
          "width": 360.7296229984601,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "were optimized for the metric metric. Each of these will be wrapped with <EXAM-",
          "page": 15,
          "x0": 143.521744,
          "y0": 355.0686444799999,
          "x1": 505.75950652008515,
          "y1": 365.1408735199999,
          "width": 362.23776252008514,
          "height": 10.072229040000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "PLE>...</EXAMPLE>",
          "page": 15,
          "x0": 143.88184400000006,
          "y0": 344.1487444799999,
          "x1": 236.0207343264318,
          "y1": 354.1113844799999,
          "width": 92.13889032643175,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "You will be given the tactic states as comments for reference. The current theorem will be",
          "page": 15,
          "x0": 143.28184400000006,
          "y0": 331.1889444799999,
          "x1": 504.10509072334116,
          "y1": 341.15158447999994,
          "width": 360.8232467233411,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "wrapped in <CURRENT>...</CURRENT>",
          "page": 15,
          "x0": 143.5218440000001,
          "y0": 320.2686444799999,
          "x1": 316.30056910658396,
          "y1": 330.23128447999994,
          "width": 172.77872510658386,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "System: Output format instructions",
          "page": 15,
          "x0": 143.8820000000001,
          "y0": 305.61843351999994,
          "x1": 287.07709308339605,
          "y1": 315.59103615999993,
          "width": 143.19509308339596,
          "height": 9.972602639999991,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Placeholder: All retrieved syntax documentation",
          "page": 15,
          "x0": 143.8820000000001,
          "y0": 290.85823351999994,
          "x1": 340.2637961430119,
          "y1": 300.83083615999993,
          "width": 196.38179614301183,
          "height": 9.972602639999991,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Placeholder: All retrieved mathlib documentation",
          "page": 15,
          "x0": 143.8820000000001,
          "y0": 276.09843351999996,
          "x1": 345.18374188708776,
          "y1": 286.07103615999995,
          "width": 201.30174188708767,
          "height": 9.972602639999991,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Placeholder: All retrieved examples",
          "page": 15,
          "x0": 143.8820000000001,
          "y0": 261.33823351999996,
          "x1": 289.71777178172255,
          "y1": 271.31083615999995,
          "width": 145.83577178172246,
          "height": 9.972602639999991,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "User: <CONTEXT> context </CONTEXT>",
          "page": 15,
          "x0": 143.8820000000001,
          "y0": 246.46884447999994,
          "x1": 322.1808164751574,
          "y1": 256.55103615999997,
          "width": 178.29881647515734,
          "height": 10.082191680000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Placeholder: Previous results and inputs/outputs",
          "page": 15,
          "x0": 143.88190000000012,
          "y0": 231.81823351999995,
          "x1": 340.9575192892493,
          "y1": 241.79083615999997,
          "width": 197.0756192892492,
          "height": 9.97260264000002,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Placeholder: All metric prompts with a ‘User’ role",
          "page": 15,
          "x0": 143.88190000000012,
          "y0": 217.05803351999995,
          "x1": 348.5858985305248,
          "y1": 227.03063615999997,
          "width": 204.70399853052467,
          "height": 9.97260264000002,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "User: <CURRENT> theorem </CURRENT>",
          "page": 15,
          "x0": 143.88190000000012,
          "y0": 202.18864447999994,
          "x1": 325.6606986332692,
          "y1": 212.27083615999993,
          "width": 181.77879863326908,
          "height": 10.082191679999994,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "This prompt is then invoked and sent to the language model by ﬁlling in all the variables and place-\nholders. Notably, when we invoke the chain given by chain|llm|parser, we throttle the invoca-\ntion with a randomized exponential rate limit throttling to account for API rate limits, especially in\nhighly-parallelized requests like when benchmarking over a large number of theorems.",
          "page": 15,
          "x0": 107.6418000000001,
          "y0": 148.6688444799999,
          "x1": 505.88012539484345,
          "y1": 191.51108447999997,
          "width": 398.23832539484334,
          "height": 42.84224000000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "This prompt is then invoked and sent to the language model by ﬁlling in all the variables and place-",
          "page": 15,
          "x0": 107.6418000000001,
          "y0": 181.54844447999994,
          "x1": 505.7596474935339,
          "y1": 191.51108447999997,
          "width": 398.1178474935338,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "holders. Notably, when we invoke the chain given by chain|llm|parser, we throttle the invoca-",
          "page": 15,
          "x0": 108.00180000000012,
          "y0": 170.30973999999995,
          "x1": 505.88012539484345,
          "y1": 180.90998895999994,
          "width": 397.87832539484333,
          "height": 10.600248959999988,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "tion with a randomized exponential rate limit throttling to account for API rate limits, especially in",
          "page": 15,
          "x0": 108.00142000000017,
          "y0": 159.70864447999992,
          "x1": 503.94250600837165,
          "y1": 169.67128447999994,
          "width": 395.9410860083715,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "highly-parallelized requests like when benchmarking over a large number of theorems.",
          "page": 15,
          "x0": 108.00142000000017,
          "y0": 148.6688444799999,
          "x1": 453.6923703913212,
          "y1": 158.63148447999993,
          "width": 345.69095039132105,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "A.2 METRIC PROMPTS",
          "page": 15,
          "x0": 108.24142000000015,
          "y0": 123.82864447999992,
          "x1": 211.67323208727814,
          "y1": 133.79128447999992,
          "width": 103.43181208727799,
          "height": 9.962639999999993,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "A.2 METRIC PROMPTS",
          "page": 15,
          "x0": 108.24142000000015,
          "y0": 123.82864447999992,
          "x1": 211.67323208727814,
          "y1": 133.79128447999992,
          "width": 103.43181208727799,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Length Metric",
          "page": 15,
          "x0": 108.00162000000013,
          "y0": 103.42829615999992,
          "x1": 169.66509972209508,
          "y1": 113.39093615999992,
          "width": 61.66347972209495,
          "height": 9.962640000000007,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Length Metric",
          "page": 15,
          "x0": 108.00162000000013,
          "y0": 103.42829615999992,
          "x1": 169.66509972209508,
          "y1": 113.39093615999992,
          "width": 61.66347972209495,
          "height": 9.962640000000007,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "System: You are an AI assistant who shortens Lean 4 proofs while ensuring their correct-\nness. You will aim to reduce the number of lines of the tactic proof while ensuring that it\nproperly compiles in Lean 4.",
          "page": 15,
          "x0": 143.88172000000014,
          "y0": 59.98884447999993,
          "x1": 505.87910881303895,
          "y1": 91.91083615999993,
          "width": 361.9973888130388,
          "height": 31.921991679999998,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "System: You are an AI assistant who shortens Lean 4 proofs while ensuring their correct-",
          "page": 15,
          "x0": 143.88172000000014,
          "y0": 81.82864447999994,
          "x1": 505.87910881303895,
          "y1": 91.91083615999993,
          "width": 361.9973888130388,
          "height": 10.082191679999994,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ness. You will aim to reduce the number of lines of the tactic proof while ensuring that it",
          "page": 15,
          "x0": 143.88252000000017,
          "y0": 70.90874447999994,
          "x1": 504.0127008202934,
          "y1": 80.87138447999993,
          "width": 360.1301808202932,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "properly compiles in Lean 4.",
          "page": 15,
          "x0": 143.88252000000017,
          "y0": 59.98884447999993,
          "x1": 258.8127875530636,
          "y1": 69.95148447999993,
          "width": 114.9302675530634,
          "height": 9.96264,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "15",
          "page": 15,
          "x0": 300.96252000000015,
          "y0": 30.108744479999935,
          "x1": 310.9838269981681,
          "y1": 40.071384479999935,
          "width": 10.021306998167972,
          "height": 9.96264,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "15",
          "page": 15,
          "x0": 300.96252000000015,
          "y0": 30.108744479999935,
          "x1": 310.9838269981681,
          "y1": 40.071384479999935,
          "width": 10.021306998167972,
          "height": 9.96264,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        }
      ]
    },
    {
      "page_num": 16,
      "elements": [
        {
          "text": "User: Shorten the current theorem (wrapped in <CURRENT>...</CURRENT>) to be as\nshort in length—measured in the number of lines of the proof—as possible, while also\nensuring that the output is still syntactically correct.\"",
          "page": 16,
          "x0": 143.87989999999996,
          "y0": 676.06804448,
          "x1": 504.03522203977275,
          "y1": 708.1103361600001,
          "width": 360.1553220397728,
          "height": 32.04229168000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "User: Shorten the current theorem (wrapped in <CURRENT>...</CURRENT>) to be as",
          "page": 16,
          "x0": 143.88,
          "y0": 698.02814448,
          "x1": 504.03522203977275,
          "y1": 708.1103361600001,
          "width": 360.15522203977275,
          "height": 10.08219168000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "short in length—measured in the number of lines of the proof—as possible, while also",
          "page": 16,
          "x0": 143.87989999999996,
          "y0": 686.98834448,
          "x1": 503.941304163895,
          "y1": 696.95098448,
          "width": 360.061404163895,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ensuring that the output is still syntactically correct.\"",
          "page": 16,
          "x0": 143.87989999999996,
          "y0": 676.06804448,
          "x1": 354.5844221868527,
          "y1": 686.03068448,
          "width": 210.70452218685273,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Readability Metric",
          "page": 16,
          "x0": 107.99979999999996,
          "y0": 653.86769616,
          "x1": 188.50310162086978,
          "y1": 663.8303361600001,
          "width": 80.50330162086982,
          "height": 9.962640000000079,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Readability Metric",
          "page": 16,
          "x0": 107.99979999999996,
          "y0": 653.86769616,
          "x1": 188.50310162086978,
          "y1": 663.8303361600001,
          "width": 80.50330162086982,
          "height": 9.962640000000079,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "System: You are an AI assistant who rewrites Lean 4 proofs to be more readable while\nensuring their correctness. We measure readablity by considering the ratio of the number\nofexplicitly typed have tactics against the total number of tactics in the proof, as this is\nproportional to whether a proof is declarative in style, and thus, readable.",
          "page": 16,
          "x0": 143.8798,
          "y0": 598.5482444800001,
          "x1": 504.43621821077403,
          "y1": 641.5104361600002,
          "width": 360.55641821077404,
          "height": 42.962191680000046,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "System: You are an AI assistant who rewrites Lean 4 proofs to be more readable while",
          "page": 16,
          "x0": 143.87989999999996,
          "y0": 631.4282444800001,
          "x1": 504.1033153795571,
          "y1": 641.5104361600002,
          "width": 360.22341537955714,
          "height": 10.08219168000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ensuring their correctness. We measure readablity by considering the ratio of the number",
          "page": 16,
          "x0": 143.8798,
          "y0": 620.3884444800001,
          "x1": 504.43621821077403,
          "y1": 630.35108448,
          "width": 360.55641821077404,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ofexplicitly typed have tactics against the total number of tactics in the proof, as this is",
          "page": 16,
          "x0": 143.87980000000002,
          "y0": 609.4681444800001,
          "x1": 504.03577856940507,
          "y1": 619.7495889600001,
          "width": 360.1559785694051,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "proportional to whether a proof is declarative in style, and thus, readable.",
          "page": 16,
          "x0": 143.88049999999998,
          "y0": 598.5482444800001,
          "x1": 435.33129282422425,
          "y1": 608.5108844800001,
          "width": 291.45079282422427,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "User: Rewrite the current theorem (wrapped in <CURRENT>...</CURRENT>) so it is\nmore readable and declarative and modular.",
          "page": 16,
          "x0": 143.88029999999992,
          "y0": 572.0283444800001,
          "x1": 504.0358495104812,
          "y1": 593.1503361600002,
          "width": 360.1555495104813,
          "height": 21.121991680000065,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "User: Rewrite the current theorem (wrapped in <CURRENT>...</CURRENT>) so it is",
          "page": 16,
          "x0": 143.88049999999996,
          "y0": 583.0681444800001,
          "x1": 504.0358495104812,
          "y1": 593.1503361600002,
          "width": 360.1553495104813,
          "height": 10.08219168000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "more readable and declarative and modular.",
          "page": 16,
          "x0": 143.88029999999992,
          "y0": 572.0283444800001,
          "x1": 317.9705841470174,
          "y1": 581.9909844800001,
          "width": 174.09028414701748,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Completion Metric",
          "page": 16,
          "x0": 108.00019999999992,
          "y0": 549.8279961600001,
          "x1": 189.1035120856044,
          "y1": 559.7906361600002,
          "width": 81.10331208560447,
          "height": 9.962640000000079,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Completion Metric",
          "page": 16,
          "x0": 108.00019999999992,
          "y0": 549.8279961600001,
          "x1": 189.1035120856044,
          "y1": 559.7906361600002,
          "width": 81.10331208560447,
          "height": 9.962640000000079,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "System: You are an AI assistant who automatically solves Lean 4 proofs (as in, generates\nthe tactic proof) and ensures its correctness. You will receive a Lean 4 proof you must\nmodify to eliminate any errors so that it compiles correctly and eliminate any “sorry”s with\nfull proofs.",
          "page": 16,
          "x0": 143.8802999999999,
          "y0": 494.5085444800002,
          "x1": 504.2760787924914,
          "y1": 537.4707361600002,
          "width": 360.39577879249146,
          "height": 42.962191680000046,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "System: You are an AI assistant who automatically solves Lean 4 proofs (as in, generates",
          "page": 16,
          "x0": 143.88029999999992,
          "y0": 527.3885444800002,
          "x1": 504.2760787924914,
          "y1": 537.4707361600002,
          "width": 360.39577879249146,
          "height": 10.08219168000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "the tactic proof) and ensures its correctness. You will receive a Lean 4 proof you must",
          "page": 16,
          "x0": 143.88029999999992,
          "y0": 516.4686444800002,
          "x1": 504.1300228539718,
          "y1": 526.4312844800002,
          "width": 360.2497228539719,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "modify to eliminate any errors so that it compiles correctly and eliminate any “sorry”s with",
          "page": 16,
          "x0": 143.8802999999999,
          "y0": 505.42844448000017,
          "x1": 503.94321620370744,
          "y1": 515.3910844800001,
          "width": 360.0629162037076,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "full proofs.",
          "page": 16,
          "x0": 143.88029999999992,
          "y0": 494.5085444800002,
          "x1": 188.37087419021248,
          "y1": 504.4711844800002,
          "width": 44.490574190212556,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "User: Rewrite the current theorem (wrapped in <CURRENT>...</CURRENT>) so it is a\nformal, complete, and correct Lean 4 proof by ﬁlling in its tactic proof.",
          "page": 16,
          "x0": 143.88019999999995,
          "y0": 467.9886444800002,
          "x1": 503.9838241768013,
          "y1": 489.1106361600002,
          "width": 360.10362417680136,
          "height": 21.121991680000008,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "User: Rewrite the current theorem (wrapped in <CURRENT>...</CURRENT>) so it is a",
          "page": 16,
          "x0": 143.88029999999992,
          "y0": 479.0284444800002,
          "x1": 503.9838241768013,
          "y1": 489.1106361600002,
          "width": 360.1035241768014,
          "height": 10.082191679999994,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "formal, complete, and correct Lean 4 proof by ﬁlling in its tactic proof.",
          "page": 16,
          "x0": 143.88019999999995,
          "y0": 467.9886444800002,
          "x1": 427.17086905818263,
          "y1": 477.9512844800002,
          "width": 283.2906690581827,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "B ADDITIONAL EXPERIMENTAL RESULTS",
          "page": 16,
          "x0": 108.2401999999999,
          "y0": 438.0343664000002,
          "x1": 327.63748377567197,
          "y1": 449.9895664000002,
          "width": 219.39728377567207,
          "height": 11.95519999999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "B ADDITIONAL EXPERIMENTAL RESULTS",
          "page": 16,
          "x0": 108.2401999999999,
          "y0": 438.0343664000002,
          "x1": 327.63748377567197,
          "y1": 449.9895664000002,
          "width": 219.39728377567207,
          "height": 11.95519999999999,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "In this section, we provide more detailed information on the experimental setup and results used to\nevaluate ImProver.",
          "page": 16,
          "x0": 108.00059999999993,
          "y0": 403.2296400000002,
          "x1": 503.94326835214093,
          "y1": 424.4313844800002,
          "width": 395.942668352141,
          "height": 21.201744480000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "In this section, we provide more detailed information on the experimental setup and results used to",
          "page": 16,
          "x0": 108.00059999999993,
          "y0": 414.46874448000017,
          "x1": 503.94326835214093,
          "y1": 424.4313844800002,
          "width": 395.942668352141,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "evaluate ImProver.",
          "page": 16,
          "x0": 108.00059999999996,
          "y0": 403.2296400000002,
          "x1": 186.33155999999997,
          "y1": 413.5110844800002,
          "width": 78.33096,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "B.1 ABLATION DETAILS",
          "page": 16,
          "x0": 108.24049999999998,
          "y0": 377.8683444800002,
          "x1": 218.51210523874997,
          "y1": 387.8309844800002,
          "width": 110.27160523874998,
          "height": 9.962640000000022,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "B.1 ABLATION DETAILS",
          "page": 16,
          "x0": 108.24049999999998,
          "y0": 377.8683444800002,
          "x1": 218.51210523874997,
          "y1": 387.8309844800002,
          "width": 110.27160523874998,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "We now proceed to show detailed results from our ablation testing.",
          "page": 16,
          "x0": 107.52057999999998,
          "y0": 357.1085444800002,
          "x1": 373.8912523770011,
          "y1": 367.0711844800002,
          "width": 266.3706723770011,
          "height": 9.962640000000022,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "We now proceed to show detailed results from our ablation testing.",
          "page": 16,
          "x0": 107.52057999999998,
          "y0": 357.1085444800002,
          "x1": 373.8912523770011,
          "y1": 367.0711844800002,
          "width": 266.3706723770011,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Table 8: Output and Chain-of-States Ablations",
          "page": 16,
          "x0": 213.00057999999996,
          "y0": 325.6683444800002,
          "x1": 399.15593847717616,
          "y1": 335.6309844800002,
          "width": 186.1553584771762,
          "height": 9.962640000000022,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Table 8: Output and Chain-of-States Ablations",
          "page": 16,
          "x0": 213.00057999999996,
          "y0": 325.6683444800002,
          "x1": 399.15593847717616,
          "y1": 335.6309844800002,
          "width": 186.1553584771762,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Output Format",
          "page": 16,
          "x0": 132.96,
          "y0": 312.08532916,
          "x1": 185.97244039153333,
          "y1": 321.05170916000003,
          "width": 53.01244039153332,
          "height": 8.966380000000015,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Output Format",
          "page": 16,
          "x0": 132.96,
          "y0": 312.08532916,
          "x1": 185.97244039153333,
          "y1": 321.05170916000003,
          "width": 53.01244039153332,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "CoS",
          "page": 16,
          "x0": 204.11976586493336,
          "y0": 312.08532916,
          "x1": 219.54508370540793,
          "y1": 321.05170916000003,
          "width": 15.425317840474577,
          "height": 8.966380000000015,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "CoS",
          "page": 16,
          "x0": 204.11976586493336,
          "y0": 312.08532916,
          "x1": 219.54508370540793,
          "y1": 321.05170916000003,
          "width": 15.425317840474577,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Improvement Nonempty Improve. Accuracy",
          "page": 16,
          "x0": 234.84,
          "y0": 312.08532916,
          "x1": 413.44299378212315,
          "y1": 321.05170916000003,
          "width": 178.60299378212315,
          "height": 8.966380000000015,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Improvement Nonempty Improve. Accuracy",
          "page": 16,
          "x0": 234.84,
          "y0": 312.08532916,
          "x1": 413.44299378212315,
          "y1": 321.05170916000003,
          "width": 178.60299378212315,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Improved Acc.",
          "page": 16,
          "x0": 425.5199903317232,
          "y0": 312.08532916,
          "x1": 479.001466060062,
          "y1": 321.05170916000003,
          "width": 53.48147572833881,
          "height": 8.966380000000015,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Improved Acc.",
          "page": 16,
          "x0": 425.5199903317232,
          "y0": 312.08532916,
          "x1": 479.001466060062,
          "y1": 321.05170916000003,
          "width": 53.48147572833881,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "string\nTrue\nstring\nFalse\nstring list True\nstring list\nFalse\nstring tree\nTrue\nstring tree\nFalse",
          "page": 16,
          "x0": 132.95999999999998,
          "y0": 247.16516915999998,
          "x1": 222.98221155500744,
          "y1": 306.21863332000004,
          "width": 90.02221155500746,
          "height": 59.05346416000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "string",
          "page": 16,
          "x0": 132.96,
          "y0": 297.25225332,
          "x1": 165.339859052717,
          "y1": 306.21863332000004,
          "width": 32.379859052716995,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "True",
          "page": 16,
          "x0": 204.1202,
          "y0": 296.96532916,
          "x1": 220.70143494732238,
          "y1": 305.93170916,
          "width": 16.581234947322372,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "7.53\n7.03\n8.04\n7.04\n7.62\n6.31",
          "page": 16,
          "x0": 251.04,
          "y0": 247.16532916,
          "x1": 266.6842157586654,
          "y1": 305.93170916,
          "width": 15.64421575866541,
          "height": 58.76638000000003,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "7.53",
          "page": 16,
          "x0": 251.041,
          "y0": 296.96532916,
          "x1": 266.6842157586654,
          "y1": 305.93170916,
          "width": 15.643215758665406,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "16.12\n19.67\n12.38\n13.58\n15.34\n14.17",
          "page": 16,
          "x0": 321.0002008416654,
          "y0": 247.16532916,
          "x1": 341.0844180584572,
          "y1": 305.93170916,
          "width": 20.084217216791785,
          "height": 58.76638000000003,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "16.12",
          "page": 16,
          "x0": 321.0012008416654,
          "y0": 296.96532916,
          "x1": 341.0844180584572,
          "y1": 305.93170916,
          "width": 20.083217216791752,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "46.72%\n35.77%\n64.96%\n51.82%\n49.64%\n44.53%",
          "page": 16,
          "x0": 381.84009834845716,
          "y0": 247.16532916,
          "x1": 410.8465070233754,
          "y1": 305.93170916,
          "width": 29.006408674918248,
          "height": 58.76638000000003,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "46.72%",
          "page": 16,
          "x0": 382.5614573176572,
          "y0": 296.96532916,
          "x1": 410.07048053257535,
          "y1": 305.93170916,
          "width": 27.50902321491816,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "16.79%\n15.33%\n21.17%\n18.98%\n18.25%\n16.06%",
          "page": 16,
          "x0": 437.64020239457534,
          "y0": 247.16532916,
          "x1": 466.6465134256154,
          "y1": 305.93170916,
          "width": 29.00631103104007,
          "height": 58.76638000000003,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "16.79%",
          "page": 16,
          "x0": 438.36147169997537,
          "y0": 296.96532916,
          "x1": 465.8703972710154,
          "y1": 305.93170916,
          "width": 27.508925571040038,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "string",
          "page": 16,
          "x0": 132.961,
          "y0": 287.29248332000003,
          "x1": 165.340859052717,
          "y1": 296.25886332000005,
          "width": 32.379859052716995,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "False",
          "page": 16,
          "x0": 204.12120000000002,
          "y0": 287.00555916,
          "x1": 222.98221155500744,
          "y1": 295.97193916000003,
          "width": 18.861011555007423,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "7.03",
          "page": 16,
          "x0": 251.04,
          "y0": 287.00532916,
          "x1": 266.68321575866537,
          "y1": 295.97170916,
          "width": 15.643215758665377,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "19.67",
          "page": 16,
          "x0": 321.0002008416654,
          "y0": 287.00532916,
          "x1": 341.08341805845714,
          "y1": 295.97170916,
          "width": 20.083217216791752,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "35.77%",
          "page": 16,
          "x0": 382.56045731765715,
          "y0": 287.00532916,
          "x1": 410.06948053257537,
          "y1": 295.97170916,
          "width": 27.509023214918216,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "15.33%",
          "page": 16,
          "x0": 438.3604716999754,
          "y0": 287.00532916,
          "x1": 465.86939727101543,
          "y1": 295.97170916,
          "width": 27.508925571040038,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "string list True",
          "page": 16,
          "x0": 132.95999999999998,
          "y0": 277.15276572,
          "x1": 222.38135779203478,
          "y1": 286.29847332,
          "width": 89.4213577920348,
          "height": 9.145707600000037,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "8.04",
          "page": 16,
          "x0": 251.04,
          "y0": 277.15292572,
          "x1": 266.68321575866537,
          "y1": 286.11930572,
          "width": 15.643215758665377,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "12.38",
          "page": 16,
          "x0": 321.0002008416654,
          "y0": 277.15292572,
          "x1": 341.08341805845714,
          "y1": 286.11930572,
          "width": 20.083217216791752,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "64.96%",
          "page": 16,
          "x0": 381.84009834845716,
          "y0": 277.15292572,
          "x1": 410.8465070233754,
          "y1": 286.11930572,
          "width": 29.006408674918248,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "21.17%",
          "page": 16,
          "x0": 437.64020239457534,
          "y0": 277.15292572,
          "x1": 466.6465134256154,
          "y1": 286.11930572,
          "width": 29.00631103104007,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "string list",
          "page": 16,
          "x0": 132.95999999999998,
          "y0": 267.37248332,
          "x1": 192.21996602822716,
          "y1": 276.33886332000003,
          "width": 59.25996602822718,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "False",
          "page": 16,
          "x0": 204.12019999999998,
          "y0": 267.08555916,
          "x1": 222.9812115550074,
          "y1": 276.05193916,
          "width": 18.861011555007423,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "7.04",
          "page": 16,
          "x0": 251.04,
          "y0": 267.08532916,
          "x1": 266.68321575866537,
          "y1": 276.05170916000003,
          "width": 15.643215758665377,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "13.58",
          "page": 16,
          "x0": 321.0002008416654,
          "y0": 267.08532916,
          "x1": 341.08341805845714,
          "y1": 276.05170916000003,
          "width": 20.083217216791752,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "51.82%",
          "page": 16,
          "x0": 382.56045731765715,
          "y0": 267.08532916,
          "x1": 410.06948053257537,
          "y1": 276.05170916000003,
          "width": 27.509023214918216,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "18.98%",
          "page": 16,
          "x0": 438.3604716999754,
          "y0": 267.08532916,
          "x1": 465.86939727101543,
          "y1": 276.05170916000003,
          "width": 27.508925571040038,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "string tree",
          "page": 16,
          "x0": 132.95999999999998,
          "y0": 257.41209332000005,
          "x1": 192.21996602822716,
          "y1": 266.37847332000007,
          "width": 59.25996602822718,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "7.62",
          "page": 16,
          "x0": 251.041,
          "y0": 257.12532916,
          "x1": 266.6842157586654,
          "y1": 266.09170916,
          "width": 15.643215758665406,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "15.34",
          "page": 16,
          "x0": 321.0012008416654,
          "y0": 257.12532916,
          "x1": 341.0844180584572,
          "y1": 266.09170916,
          "width": 20.083217216791752,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "49.64%",
          "page": 16,
          "x0": 382.5614573176572,
          "y0": 257.12532916,
          "x1": 410.07048053257535,
          "y1": 266.09170916,
          "width": 27.50902321491816,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "18.25%",
          "page": 16,
          "x0": 438.36147169997537,
          "y0": 257.12532916,
          "x1": 465.8703972710154,
          "y1": 266.09170916,
          "width": 27.508925571040038,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "True",
          "page": 16,
          "x0": 204.12019999999998,
          "y0": 257.12516916000004,
          "x1": 220.70143494732235,
          "y1": 266.09154916000006,
          "width": 16.581234947322372,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "string tree",
          "page": 16,
          "x0": 132.961,
          "y0": 247.45209332,
          "x1": 192.2209660282272,
          "y1": 256.41847332,
          "width": 59.25996602822718,
          "height": 8.966379999999987,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "6.31",
          "page": 16,
          "x0": 251.04,
          "y0": 247.16532916,
          "x1": 266.68321575866537,
          "y1": 256.13170916,
          "width": 15.643215758665377,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "14.17",
          "page": 16,
          "x0": 321.0002008416654,
          "y0": 247.16532916,
          "x1": 341.08341805845714,
          "y1": 256.13170916,
          "width": 20.083217216791752,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "44.53%",
          "page": 16,
          "x0": 382.56045731765715,
          "y0": 247.16532916,
          "x1": 410.06948053257537,
          "y1": 256.13170916,
          "width": 27.509023214918216,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "16.06%",
          "page": 16,
          "x0": 438.3604716999754,
          "y0": 247.16532916,
          "x1": 465.86939727101543,
          "y1": 256.13170916,
          "width": 27.508925571040038,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "False",
          "page": 16,
          "x0": 204.12120000000002,
          "y0": 247.16516915999998,
          "x1": 222.98221155500744,
          "y1": 256.13154915999996,
          "width": 18.861011555007423,
          "height": 8.966379999999987,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "By Table 8, we see that the optimal combination in this testing group is a string list output\nformat with CoS enabled. Fix these values for all future tests.",
          "page": 16,
          "x0": 108.0,
          "y0": 209.02824447999998,
          "x1": 504.2498031453446,
          "y1": 230.22958896,
          "width": 396.2498031453446,
          "height": 21.201344480000017,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "By Table 8, we see that the optimal combination in this testing group is a string list output",
          "page": 16,
          "x0": 108.0,
          "y0": 219.94814448,
          "x1": 504.2498031453446,
          "y1": 230.22958896,
          "width": 396.2498031453446,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "format with CoS enabled. Fix these values for all future tests.",
          "page": 16,
          "x0": 108.00010000000003,
          "y0": 209.02824447999998,
          "x1": 352.89075328663125,
          "y1": 218.99088448,
          "width": 244.89065328663122,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Table 9: Example Retrieval Ablations\nImprovement Nonempty Improve. Accuracy",
          "page": 16,
          "x0": 207.6,
          "y0": 166.04532916,
          "x1": 386.08307741600316,
          "y1": 189.71078448,
          "width": 178.48307741600317,
          "height": 23.665455320000007,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Table 9: Example Retrieval Ablations",
          "page": 16,
          "x0": 230.76010000000002,
          "y0": 179.74814447999998,
          "x1": 381.3955219955138,
          "y1": 189.71078448,
          "width": 150.63542199551375,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Examples",
          "page": 16,
          "x0": 160.32,
          "y0": 166.04532916,
          "x1": 195.6079387070146,
          "y1": 175.01170916,
          "width": 35.287938707014604,
          "height": 8.966380000000015,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Examples",
          "page": 16,
          "x0": 160.32,
          "y0": 166.04532916,
          "x1": 195.6079387070146,
          "y1": 175.01170916,
          "width": 35.287938707014604,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Improvement Nonempty Improve. Accuracy",
          "page": 16,
          "x0": 207.6,
          "y0": 166.04532916,
          "x1": 386.08307741600316,
          "y1": 175.01170916,
          "width": 178.48307741600317,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Improved Acc.",
          "page": 16,
          "x0": 398.1600739656032,
          "y0": 166.04532916,
          "x1": 451.64154969394207,
          "y1": 175.01170916,
          "width": 53.481475728338864,
          "height": 8.966380000000015,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Improved Acc.",
          "page": 16,
          "x0": 398.1600739656032,
          "y0": 166.04532916,
          "x1": 451.64154969394207,
          "y1": 175.01170916,
          "width": 53.481475728338864,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "0\n3\n5\n7\n10",
          "page": 16,
          "x0": 160.31990000000002,
          "y0": 111.19315572,
          "x1": 169.24309145812643,
          "y1": 159.89170916,
          "width": 8.92319145812641,
          "height": 48.69855344000001,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "5.67\n8.49\n8.38\n7.56\n9.34",
          "page": 16,
          "x0": 223.8,
          "y0": 111.19292572,
          "x1": 239.44321575866542,
          "y1": 159.89170916,
          "width": 15.643215758665406,
          "height": 48.69878344,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "5.67",
          "page": 16,
          "x0": 223.8,
          "y0": 150.92532916,
          "x1": 239.44321575866542,
          "y1": 159.89170916,
          "width": 15.643215758665406,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "8.44\n13.68\n12.9\n12.04\n14.7",
          "page": 16,
          "x0": 293.76020084166544,
          "y0": 111.19292572,
          "x1": 313.8434180584572,
          "y1": 159.89170916,
          "width": 20.083217216791752,
          "height": 48.69878344,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "8.44",
          "page": 16,
          "x0": 296.0399029566654,
          "y0": 150.92532916,
          "x1": 311.68311871533075,
          "y1": 159.89170916,
          "width": 15.643215758665349,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "67.15%\n62.04%\n64.96%\n62.77%\n63.5%",
          "page": 16,
          "x0": 355.3200692527308,
          "y0": 111.19292572,
          "x1": 382.82948053257536,
          "y1": 159.89170916,
          "width": 27.509411279844585,
          "height": 48.69878344,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "67.15%",
          "page": 16,
          "x0": 355.3200692527308,
          "y0": 150.92532916,
          "x1": 382.829092467649,
          "y1": 159.89170916,
          "width": 27.509023214918216,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "16.79%\n19.71%\n21.17%\n19.71%\n21.9%",
          "page": 16,
          "x0": 411.120083635049,
          "y0": 111.19292572,
          "x1": 438.6293972710154,
          "y1": 159.89170916,
          "width": 27.509313635966407,
          "height": 48.69878344,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "16.79%",
          "page": 16,
          "x0": 411.120083635049,
          "y0": 150.92532916,
          "x1": 438.62900920608905,
          "y1": 159.89170916,
          "width": 27.508925571040038,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "8.49",
          "page": 16,
          "x0": 223.8,
          "y0": 140.96532915999998,
          "x1": 239.44321575866542,
          "y1": 149.93170916,
          "width": 15.643215758665406,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "13.68",
          "page": 16,
          "x0": 293.76020084166544,
          "y0": 140.96532915999998,
          "x1": 313.8434180584572,
          "y1": 149.93170916,
          "width": 20.083217216791752,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "62.04%",
          "page": 16,
          "x0": 355.3204573176572,
          "y0": 140.96532915999998,
          "x1": 382.82948053257536,
          "y1": 149.93170916,
          "width": 27.50902321491816,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "19.71%",
          "page": 16,
          "x0": 411.1204716999754,
          "y0": 140.96532915999998,
          "x1": 438.6293972710154,
          "y1": 149.93170916,
          "width": 27.508925571040038,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "8.38",
          "page": 16,
          "x0": 223.8,
          "y0": 131.00532916,
          "x1": 239.44321575866542,
          "y1": 139.97170916000002,
          "width": 15.643215758665406,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "12.9",
          "page": 16,
          "x0": 296.0399029566654,
          "y0": 131.00532916,
          "x1": 311.68311871533075,
          "y1": 139.97170916000002,
          "width": 15.643215758665349,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "64.96%",
          "page": 16,
          "x0": 355.3200692527308,
          "y0": 131.00532916,
          "x1": 382.829092467649,
          "y1": 139.97170916000002,
          "width": 27.509023214918216,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "21.17%",
          "page": 16,
          "x0": 411.120083635049,
          "y0": 131.00532916,
          "x1": 438.62900920608905,
          "y1": 139.97170916000002,
          "width": 27.508925571040038,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "7.56",
          "page": 16,
          "x0": 223.8,
          "y0": 121.04532916,
          "x1": 239.44321575866542,
          "y1": 130.01170916,
          "width": 15.643215758665406,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "12.04",
          "page": 16,
          "x0": 293.76020084166544,
          "y0": 121.04532916,
          "x1": 313.8434180584572,
          "y1": 130.01170916,
          "width": 20.083217216791752,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "62.77%",
          "page": 16,
          "x0": 355.3204573176572,
          "y0": 121.04532916,
          "x1": 382.82948053257536,
          "y1": 130.01170916,
          "width": 27.50902321491816,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "19.71%",
          "page": 16,
          "x0": 411.1204716999754,
          "y0": 121.04532916,
          "x1": 438.6293972710154,
          "y1": 130.01170916,
          "width": 27.508925571040038,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "10",
          "page": 16,
          "x0": 160.31990000000002,
          "y0": 111.19315572,
          "x1": 169.24309145812643,
          "y1": 120.15953572,
          "width": 8.92319145812641,
          "height": 8.966380000000001,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "9.34",
          "page": 16,
          "x0": 223.8,
          "y0": 111.19292572,
          "x1": 239.44321575866542,
          "y1": 120.15930572,
          "width": 15.643215758665406,
          "height": 8.966380000000001,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "14.7",
          "page": 16,
          "x0": 296.0399029566654,
          "y0": 111.19292572,
          "x1": 311.68311871533075,
          "y1": 120.15930572,
          "width": 15.643215758665349,
          "height": 8.966380000000001,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "63.5%",
          "page": 16,
          "x0": 356.7598905531308,
          "y0": 111.19292572,
          "x1": 381.32629776992263,
          "y1": 120.15930572,
          "width": 24.566407216791845,
          "height": 8.966380000000001,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "21.9%",
          "page": 16,
          "x0": 412.5599651895226,
          "y0": 111.19292572,
          "x1": 437.12629915098984,
          "y1": 120.15930572,
          "width": 24.56633396146725,
          "height": 8.966380000000001,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "With the previous optimal parameters ﬁxed, run the ablation on the number of examples. By Table 9,\nwe see that the optimal combination in this testing group is 10 examples. Fix this value for all future\ntests.",
          "page": 16,
          "x0": 107.52,
          "y0": 59.98834448,
          "x1": 505.2909411920758,
          "y1": 91.79078448,
          "width": 397.77094119207584,
          "height": 31.802439999999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "With the previous optimal parameters ﬁxed, run the ablation on the number of examples. By Table 9,",
          "page": 16,
          "x0": 107.52,
          "y0": 81.82814448,
          "x1": 505.2909411920758,
          "y1": 91.79078448,
          "width": 397.77094119207584,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "we see that the optimal combination in this testing group is 10 examples. Fix this value for all future",
          "page": 16,
          "x0": 107.63999999999999,
          "y0": 70.58944,
          "x1": 504.2230994611991,
          "y1": 80.87088448,
          "width": 396.58309946119914,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "tests.",
          "page": 16,
          "x0": 107.9998,
          "y0": 59.98834448,
          "x1": 128.13046219470831,
          "y1": 69.95098448,
          "width": 20.13066219470832,
          "height": 9.96264,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "16",
          "page": 16,
          "x0": 300.9598,
          "y0": 30.108244480000003,
          "x1": 310.98110699816795,
          "y1": 40.070884480000004,
          "width": 10.021306998167972,
          "height": 9.96264,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "16",
          "page": 16,
          "x0": 300.9598,
          "y0": 30.108244480000003,
          "x1": 310.98110699816795,
          "y1": 40.070884480000004,
          "width": 10.021306998167972,
          "height": 9.96264,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        }
      ]
    },
    {
      "page_num": 17,
      "elements": [
        {
          "text": "Table 10: Sampling Method Ablations",
          "page": 17,
          "x0": 229.44,
          "y0": 691.30814448,
          "x1": 382.7157892916506,
          "y1": 701.27078448,
          "width": 153.2757892916506,
          "height": 9.962639999999965,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Table 10: Sampling Method Ablations",
          "page": 17,
          "x0": 229.44,
          "y0": 691.30814448,
          "x1": 382.7157892916506,
          "y1": 701.27078448,
          "width": 153.2757892916506,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Method",
          "page": 17,
          "x0": 114.0,
          "y0": 677.60532916,
          "x1": 141.7631947130628,
          "y1": 686.57170916,
          "width": 27.763194713062802,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Method",
          "page": 17,
          "x0": 114.0,
          "y0": 677.60532916,
          "x1": 141.7631947130628,
          "y1": 686.57170916,
          "width": 27.763194713062802,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Forward Keep Best",
          "page": 17,
          "x0": 164.2801061518628,
          "y0": 677.60532916,
          "x1": 243.2124202313959,
          "y1": 686.57170916,
          "width": 78.93231407953309,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Forward Keep Best",
          "page": 17,
          "x0": 164.2801061518628,
          "y0": 677.60532916,
          "x1": 243.2124202313959,
          "y1": 686.57170916,
          "width": 78.93231407953309,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Improvement Nonempty Improve. Accuracy",
          "page": 17,
          "x0": 255.24,
          "y0": 677.60532916,
          "x1": 433.7231270897484,
          "y1": 686.57170916,
          "width": 178.4831270897484,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Improvement Nonempty Improve. Accuracy",
          "page": 17,
          "x0": 255.24,
          "y0": 677.60532916,
          "x1": 433.7231270897484,
          "y1": 686.57170916,
          "width": 178.4831270897484,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Improved Acc.",
          "page": 17,
          "x0": 445.80012363934844,
          "y0": 677.60532916,
          "x1": 499.2815993676873,
          "y1": 686.57170916,
          "width": 53.481475728338864,
          "height": 8.966379999999958,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Improved Acc.",
          "page": 17,
          "x0": 445.80012363934844,
          "y0": 677.60532916,
          "x1": 499.2815993676873,
          "y1": 686.57170916,
          "width": 53.481475728338864,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "None\nreﬁnement\nreﬁnement\nreﬁnement\nreﬁnement\nbest-of-n",
          "page": 17,
          "x0": 114.0,
          "y0": 612.79276572,
          "x1": 152.252673867963,
          "y1": 671.4517091600001,
          "width": 38.25267386796301,
          "height": 58.65894344000003,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "None",
          "page": 17,
          "x0": 114.0,
          "y0": 662.4853291600001,
          "x1": 133.3410764268845,
          "y1": 671.4517091600001,
          "width": 19.341076426884513,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "N/A\n1\n5\n1\n5\nN/A",
          "page": 17,
          "x0": 164.279996672363,
          "y0": 612.6851691600001,
          "x1": 179.75384536737727,
          "y1": 671.4517091600001,
          "width": 15.473848695014254,
          "height": 58.766539999999964,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "N/A",
          "page": 17,
          "x0": 164.28010859968452,
          "y0": 662.4853291600001,
          "x1": 179.75384536737727,
          "y1": 671.4517091600001,
          "width": 15.473736767692742,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "N/A\nFalse\nFalse\nTrue\nTrue\nN/A",
          "page": 17,
          "x0": 206.399925377563,
          "y0": 612.6851691600001,
          "x1": 225.26093693257044,
          "y1": 671.4517091600001,
          "width": 18.86101155500745,
          "height": 58.766539999999964,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "N/A",
          "page": 17,
          "x0": 206.40004378757726,
          "y0": 662.4853291600001,
          "x1": 221.87376835202684,
          "y1": 671.4517091600001,
          "width": 15.473724564449583,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "9.34\n14.76\n12.5\n14.95\n13.15\n15.35",
          "page": 17,
          "x0": 269.16,
          "y0": 612.79292572,
          "x1": 289.24321721679183,
          "y1": 671.4517091600001,
          "width": 20.08321721679181,
          "height": 58.65878344000009,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "9.34",
          "page": 17,
          "x0": 271.44,
          "y0": 662.4853291600001,
          "x1": 287.0832157586654,
          "y1": 671.4517091600001,
          "width": 15.643215758665406,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "14.7\n30.63\n20.88\n14.95\n13.15\n18.44",
          "page": 17,
          "x0": 341.3999323663918,
          "y0": 612.79292572,
          "x1": 361.4834180584572,
          "y1": 671.4517091600001,
          "width": 20.08348569206538,
          "height": 58.65878344000009,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "14.7",
          "page": 17,
          "x0": 343.5600224560654,
          "y0": 662.4853291600001,
          "x1": 359.20323821473073,
          "y1": 671.4517091600001,
          "width": 15.643215758665349,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "63.5%\n48.18%\n59.85%\n100.0%\n100.0%\n83.21%",
          "page": 17,
          "x0": 402.1199493725836,
          "y0": 612.79292572,
          "x1": 431.1262847921773,
          "y1": 671.4517091600001,
          "width": 29.006335419593654,
          "height": 58.65878344000009,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "63.5%",
          "page": 17,
          "x0": 405.12024952233077,
          "y0": 662.4853291600001,
          "x1": 428.189198023798,
          "y1": 671.4517091600001,
          "width": 23.06894850146722,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "21.9%\n30.66%\n30.66%\n30.66%\n29.93%\n36.5%",
          "page": 17,
          "x0": 458.7601299693772,
          "y0": 612.79292572,
          "x1": 486.26932401569087,
          "y1": 671.4517091600001,
          "width": 27.509194046313667,
          "height": 58.65878344000009,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "21.9%",
          "page": 17,
          "x0": 460.920250903398,
          "y0": 662.4853291600001,
          "x1": 483.98919940486525,
          "y1": 671.4517091600001,
          "width": 23.06894850146722,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "reﬁnement",
          "page": 17,
          "x0": 114.0,
          "y0": 652.5255591600001,
          "x1": 152.25267386796298,
          "y1": 661.49193916,
          "width": 38.25267386796298,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "False",
          "page": 17,
          "x0": 206.399925377563,
          "y0": 652.5255591600001,
          "x1": 225.26093693257042,
          "y1": 661.49193916,
          "width": 18.861011555007423,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "14.76",
          "page": 17,
          "x0": 269.16,
          "y0": 652.5253291600001,
          "x1": 289.24321721679183,
          "y1": 661.49170916,
          "width": 20.08321721679181,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "30.63",
          "page": 17,
          "x0": 341.3999323663918,
          "y0": 652.5253291600001,
          "x1": 361.48314958318355,
          "y1": 661.49170916,
          "width": 20.083217216791752,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "48.18%",
          "page": 17,
          "x0": 402.96018884238356,
          "y0": 652.5253291600001,
          "x1": 430.4691388019772,
          "y1": 661.49170916,
          "width": 27.50894995959362,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "30.66%",
          "page": 17,
          "x0": 458.7601299693772,
          "y0": 652.5253291600001,
          "x1": 486.26905554041724,
          "y1": 661.49170916,
          "width": 27.508925571040038,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "12.5",
          "page": 17,
          "x0": 271.44,
          "y0": 642.56532916,
          "x1": 287.0832157586654,
          "y1": 651.53170916,
          "width": 15.643215758665406,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "20.88",
          "page": 17,
          "x0": 341.4002008416654,
          "y0": 642.56532916,
          "x1": 361.4834180584572,
          "y1": 651.53170916,
          "width": 20.083217216791752,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "59.85%",
          "page": 17,
          "x0": 402.9604573176572,
          "y0": 642.56532916,
          "x1": 430.4694072772508,
          "y1": 651.53170916,
          "width": 27.50894995959362,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "30.66%",
          "page": 17,
          "x0": 458.76039844465083,
          "y0": 642.56532916,
          "x1": 486.26932401569087,
          "y1": 651.53170916,
          "width": 27.508925571040038,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "reﬁnement",
          "page": 17,
          "x0": 114.00000000000003,
          "y0": 642.5651691600001,
          "x1": 152.252673867963,
          "y1": 651.53154916,
          "width": 38.25267386796298,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "False",
          "page": 17,
          "x0": 206.39992537756302,
          "y0": 642.5651691600001,
          "x1": 225.26093693257044,
          "y1": 651.53154916,
          "width": 18.861011555007423,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "reﬁnement",
          "page": 17,
          "x0": 114.0,
          "y0": 632.60555916,
          "x1": 152.25267386796298,
          "y1": 641.5719391599999,
          "width": 38.25267386796298,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "True",
          "page": 17,
          "x0": 206.399925377563,
          "y0": 632.60555916,
          "x1": 222.98116032488537,
          "y1": 641.5719391599999,
          "width": 16.581234947322372,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "14.95",
          "page": 17,
          "x0": 269.16,
          "y0": 632.60532916,
          "x1": 289.24321721679183,
          "y1": 641.57170916,
          "width": 20.08321721679181,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "14.95",
          "page": 17,
          "x0": 341.3999323663918,
          "y0": 632.60532916,
          "x1": 361.48314958318355,
          "y1": 641.57170916,
          "width": 20.083217216791752,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "100.0%",
          "page": 17,
          "x0": 402.96018884238356,
          "y0": 632.60532916,
          "x1": 430.4691388019772,
          "y1": 641.57170916,
          "width": 27.50894995959362,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "30.66%",
          "page": 17,
          "x0": 458.7601299693772,
          "y0": 632.60532916,
          "x1": 486.26905554041724,
          "y1": 641.57170916,
          "width": 27.508925571040038,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "13.15",
          "page": 17,
          "x0": 269.16,
          "y0": 622.6453291600001,
          "x1": 289.24321721679183,
          "y1": 631.61170916,
          "width": 20.08321721679181,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "13.15",
          "page": 17,
          "x0": 341.3999323663918,
          "y0": 622.6453291600001,
          "x1": 361.48314958318355,
          "y1": 631.61170916,
          "width": 20.083217216791752,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "100.0%",
          "page": 17,
          "x0": 402.96018884238356,
          "y0": 622.6453291600001,
          "x1": 430.4691388019772,
          "y1": 631.61170916,
          "width": 27.50894995959362,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "29.93%",
          "page": 17,
          "x0": 458.7601299693772,
          "y0": 622.6453291600001,
          "x1": 486.26905554041724,
          "y1": 631.61170916,
          "width": 27.508925571040038,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "reﬁnement",
          "page": 17,
          "x0": 114.00000000000003,
          "y0": 622.64516916,
          "x1": 152.252673867963,
          "y1": 631.61154916,
          "width": 38.25267386796298,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "True",
          "page": 17,
          "x0": 206.39992537756302,
          "y0": 622.64516916,
          "x1": 222.98116032488542,
          "y1": 631.61154916,
          "width": 16.5812349473224,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "15.35",
          "page": 17,
          "x0": 269.16,
          "y0": 612.79292572,
          "x1": 289.24321721679183,
          "y1": 621.7593057199999,
          "width": 20.08321721679181,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "18.44",
          "page": 17,
          "x0": 341.3999323663918,
          "y0": 612.79292572,
          "x1": 361.48314958318355,
          "y1": 621.7593057199999,
          "width": 20.083217216791752,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "83.21%",
          "page": 17,
          "x0": 402.1199493725836,
          "y0": 612.79292572,
          "x1": 431.1262847921773,
          "y1": 621.7593057199999,
          "width": 29.006335419593654,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "36.5%",
          "page": 17,
          "x0": 460.2000409335772,
          "y0": 612.79292572,
          "x1": 484.76637489504446,
          "y1": 621.7593057199999,
          "width": 24.56633396146725,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "best-of-n",
          "page": 17,
          "x0": 114.00000000000003,
          "y0": 612.79276572,
          "x1": 147.9053240407785,
          "y1": 621.75914572,
          "width": 33.90532404077848,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "N/A",
          "page": 17,
          "x0": 164.28010000000003,
          "y0": 612.6851691600001,
          "x1": 179.75383676769277,
          "y1": 621.6515491600001,
          "width": 15.473736767692742,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "N/A",
          "page": 17,
          "x0": 206.40003518789277,
          "y0": 612.6851691600001,
          "x1": 221.87375975234232,
          "y1": 621.6515491600001,
          "width": 15.473724564449554,
          "height": 8.966379999999958,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Note that forward and keep-best values are parameters for reﬁnement of how many previous itera-\ntions to forward, and whether to keep the most recent or the best iteration in subsequent reﬁnement\nsteps.",
          "page": 17,
          "x0": 107.99999999999997,
          "y0": 556.18844448,
          "x1": 505.75695321854647,
          "y1": 588.11078448,
          "width": 397.7569532185465,
          "height": 31.922339999999963,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Note that forward and keep-best values are parameters for reﬁnement of how many previous itera-",
          "page": 17,
          "x0": 108.0,
          "y0": 578.14814448,
          "x1": 505.75695321854647,
          "y1": 588.11078448,
          "width": 397.75695321854647,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "tions to forward, and whether to keep the most recent or the best iteration in subsequent reﬁnement",
          "page": 17,
          "x0": 108.0,
          "y0": 567.2282444800001,
          "x1": 504.2497987483547,
          "y1": 577.19088448,
          "width": 396.2497987483547,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "steps.",
          "page": 17,
          "x0": 107.99999999999997,
          "y0": 556.18844448,
          "x1": 130.41065441101173,
          "y1": 566.15108448,
          "width": 22.410654411011762,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Now, with the previous optimal parameters ﬁxed, run the ablation on the sample method. By\nTable 10, we see that the optimal combination in this testing group is best-of-n. Fix this value\nfor all future tests.",
          "page": 17,
          "x0": 107.63999999999993,
          "y0": 517.4283444800001,
          "x1": 504.30125398789045,
          "y1": 549.23118448,
          "width": 396.6612539878905,
          "height": 31.802839999999946,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Now, with the previous optimal parameters ﬁxed, run the ablation on the sample method. By",
          "page": 17,
          "x0": 107.99999999999997,
          "y0": 539.2685444800001,
          "x1": 504.30125398789045,
          "y1": 549.23118448,
          "width": 396.3012539878905,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Table 10, we see that the optimal combination in this testing group is best-of-n. Fix this value",
          "page": 17,
          "x0": 107.63999999999993,
          "y0": 528.3482444800001,
          "x1": 504.10348693729475,
          "y1": 538.31088448,
          "width": 396.4634869372948,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "for all future tests.",
          "page": 17,
          "x0": 107.99999999999991,
          "y0": 517.4283444800001,
          "x1": 180.9310482968413,
          "y1": 527.39098448,
          "width": 72.9310482968414,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Table 11: Model and n Ablations\nImprovement Nonempty Improve. Accuracy",
          "page": 17,
          "x0": 221.76,
          "y0": 477.68532916,
          "x1": 400.36299378212317,
          "y1": 499.2109097600001,
          "width": 178.60299378212318,
          "height": 21.525580600000126,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Table 11: Model and n Ablations",
          "page": 17,
          "x0": 239.6399999999999,
          "y0": 489.2283444800001,
          "x1": 372.51528332690975,
          "y1": 499.2109097600001,
          "width": 132.87528332690985,
          "height": 9.982565280000017,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Model",
          "page": 17,
          "x0": 146.16,
          "y0": 477.68532916,
          "x1": 169.4126608406148,
          "y1": 486.65170916,
          "width": 23.252660840614794,
          "height": 8.966380000000015,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Model",
          "page": 17,
          "x0": 146.16,
          "y0": 477.68532916,
          "x1": 169.4126608406148,
          "y1": 486.65170916,
          "width": 23.252660840614794,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Improvement Nonempty Improve. Accuracy",
          "page": 17,
          "x0": 221.76,
          "y0": 477.68532916,
          "x1": 400.36299378212317,
          "y1": 486.65170916,
          "width": 178.60299378212318,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Improved Acc.",
          "page": 17,
          "x0": 412.43999033172315,
          "y0": 477.68532916,
          "x1": 465.921466060062,
          "y1": 486.65170916,
          "width": 53.481475728338864,
          "height": 8.966380000000015,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Improved Acc.",
          "page": 17,
          "x0": 412.43999033172315,
          "y0": 477.68532916,
          "x1": 465.921466060062,
          "y1": 486.65170916,
          "width": 53.481475728338864,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "gpt-4o\ngpt-4o\ngpt-4o\ngpt-4o\ngpt-4o\ngpt-4o-mini\ngpt-4o-mini\ngpt-4o-mini\ngpt-4o-mini\ngpt-4o-mini\ngpt-4o-mini",
          "page": 17,
          "x0": 146.16,
          "y0": 362.84516916,
          "x1": 188.85285739332943,
          "y1": 471.41170916,
          "width": 42.69285739332943,
          "height": 108.56653999999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "gpt-4o",
          "page": 17,
          "x0": 146.16,
          "y0": 462.44532916,
          "x1": 169.4831931652726,
          "y1": 471.41170916,
          "width": 23.323193165272613,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "3\n5\n7\n10\n15\n3\n5\n7\n10\n15\n20",
          "page": 17,
          "x0": 200.87995903707258,
          "y0": 362.84516916,
          "x1": 209.80335049519906,
          "y1": 471.41170916,
          "width": 8.923391458126474,
          "height": 108.56653999999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "19.66\n20.12\n22.44\n21.73\n23.51\n3.65\n5.12\n3.65\n4.99\n4.35\n4.87",
          "page": 17,
          "x0": 235.8,
          "y0": 362.84532916,
          "x1": 255.88321721679182,
          "y1": 471.41170916,
          "width": 20.08321721679181,
          "height": 108.56637999999998,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "19.66",
          "page": 17,
          "x0": 235.8,
          "y0": 462.44532916,
          "x1": 255.88321721679182,
          "y1": 471.41170916,
          "width": 20.08321721679181,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "24.36\n24.97\n27.21\n25.28\n26.28\n4.63\n6.21\n4.34\n5.69\n5.06\n5.56",
          "page": 17,
          "x0": 307.9199622019918,
          "y0": 362.84532916,
          "x1": 328.00317941878353,
          "y1": 471.41170916,
          "width": 20.083217216791752,
          "height": 108.56637999999998,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "24.36",
          "page": 17,
          "x0": 307.9199622019918,
          "y0": 462.44532916,
          "x1": 328.00317941878353,
          "y1": 471.41170916,
          "width": 20.083217216791752,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "80.7%\n80.56%\n82.46%\n85.96%\n89.47%\n78.95%\n82.46%\n84.21%\n87.72%\n85.96%\n87.72%",
          "page": 17,
          "x0": 368.75985970878355,
          "y0": 362.84532916,
          "x1": 397.7662683837018,
          "y1": 471.41170916,
          "width": 29.006408674918248,
          "height": 108.56637999999998,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "80.7%",
          "page": 17,
          "x0": 371.75983112918357,
          "y0": 462.44532916,
          "x1": 394.8288528859753,
          "y1": 471.41170916,
          "width": 23.069021756791756,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "38.6%\n36.11%\n42.11%\n40.35%\n45.61%\n8.77%\n10.53%\n8.77%\n12.28%\n12.28%\n14.04%",
          "page": 17,
          "x0": 424.55987409110173,
          "y0": 362.84532916,
          "x1": 453.5661851221418,
          "y1": 471.41170916,
          "width": 29.00631103104007,
          "height": 108.56637999999998,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "38.6%",
          "page": 17,
          "x0": 427.55990576557537,
          "y0": 462.44532916,
          "x1": 450.6288542670426,
          "y1": 471.41170916,
          "width": 23.06894850146722,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "gpt-4o",
          "page": 17,
          "x0": 146.16020000000003,
          "y0": 452.48555916,
          "x1": 169.48339316527264,
          "y1": 461.45193916,
          "width": 23.323193165272613,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "20.12",
          "page": 17,
          "x0": 235.8,
          "y0": 452.48532916,
          "x1": 255.88321721679182,
          "y1": 461.45170916,
          "width": 20.08321721679181,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "24.97",
          "page": 17,
          "x0": 307.9199622019918,
          "y0": 452.48532916,
          "x1": 328.00317941878353,
          "y1": 461.45170916,
          "width": 20.083217216791752,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "80.56%",
          "page": 17,
          "x0": 369.48021867798354,
          "y0": 452.48532916,
          "x1": 396.98924189290176,
          "y1": 461.45170916,
          "width": 27.509023214918216,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "36.11%",
          "page": 17,
          "x0": 425.2802330603018,
          "y0": 452.48532916,
          "x1": 452.7891586313418,
          "y1": 461.45170916,
          "width": 27.508925571040038,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "22.44",
          "page": 17,
          "x0": 235.8,
          "y0": 442.52532916,
          "x1": 255.88321721679182,
          "y1": 451.49170916,
          "width": 20.08321721679181,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "27.21",
          "page": 17,
          "x0": 307.9199622019918,
          "y0": 442.52532916,
          "x1": 328.00317941878353,
          "y1": 451.49170916,
          "width": 20.083217216791752,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "82.46%",
          "page": 17,
          "x0": 369.48021867798354,
          "y0": 442.52532916,
          "x1": 396.98924189290176,
          "y1": 451.49170916,
          "width": 27.509023214918216,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "42.11%",
          "page": 17,
          "x0": 425.2802330603018,
          "y0": 442.52532916,
          "x1": 452.7891586313418,
          "y1": 451.49170916,
          "width": 27.508925571040038,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "gpt-4o",
          "page": 17,
          "x0": 146.16020000000003,
          "y0": 442.52516916,
          "x1": 169.48339316527264,
          "y1": 451.49154916000003,
          "width": 23.323193165272613,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "21.73",
          "page": 17,
          "x0": 235.8,
          "y0": 432.56532916,
          "x1": 255.88321721679182,
          "y1": 441.53170916,
          "width": 20.08321721679181,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "25.28",
          "page": 17,
          "x0": 307.9199622019918,
          "y0": 432.56532916,
          "x1": 328.00317941878353,
          "y1": 441.53170916,
          "width": 20.083217216791752,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "85.96%",
          "page": 17,
          "x0": 369.48021867798354,
          "y0": 432.56532916,
          "x1": 396.98924189290176,
          "y1": 441.53170916,
          "width": 27.509023214918216,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "40.35%",
          "page": 17,
          "x0": 425.2802330603018,
          "y0": 432.56532916,
          "x1": 452.7891586313418,
          "y1": 441.53170916,
          "width": 27.508925571040038,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "gpt-4o",
          "page": 17,
          "x0": 146.16020000000003,
          "y0": 432.56516916000004,
          "x1": 169.48339316527264,
          "y1": 441.53154916000005,
          "width": 23.323193165272613,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "10",
          "page": 17,
          "x0": 200.88015903707264,
          "y0": 432.56516916000004,
          "x1": 209.80335049519906,
          "y1": 441.53154916000005,
          "width": 8.92319145812641,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "gpt-4o",
          "page": 17,
          "x0": 146.16020000000003,
          "y0": 422.71315572,
          "x1": 170.56339049803964,
          "y1": 431.67953572,
          "width": 24.403190498039606,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "15",
          "page": 17,
          "x0": 200.88015589883963,
          "y0": 422.71315572,
          "x1": 209.80334735696604,
          "y1": 431.67953572,
          "width": 8.92319145812641,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "23.51",
          "page": 17,
          "x0": 235.8,
          "y0": 422.71292572,
          "x1": 255.88321721679182,
          "y1": 431.67930572,
          "width": 20.08321721679181,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "26.28",
          "page": 17,
          "x0": 307.9199622019918,
          "y0": 422.71292572,
          "x1": 328.00317941878353,
          "y1": 431.67930572,
          "width": 20.083217216791752,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "89.47%",
          "page": 17,
          "x0": 368.75985970878355,
          "y0": 422.71292572,
          "x1": 397.7662683837018,
          "y1": 431.67930572,
          "width": 29.006408674918248,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "45.61%",
          "page": 17,
          "x0": 424.55987409110173,
          "y0": 422.71292572,
          "x1": 453.5661851221418,
          "y1": 431.67930572,
          "width": 29.00631103104007,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "3.65",
          "page": 17,
          "x0": 237.96,
          "y0": 412.64532916,
          "x1": 253.6032157586654,
          "y1": 421.61170916000003,
          "width": 15.643215758665406,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "4.63",
          "page": 17,
          "x0": 310.19990295666537,
          "y0": 412.64532916,
          "x1": 325.8431187153308,
          "y1": 421.61170916000003,
          "width": 15.643215758665406,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "78.95%",
          "page": 17,
          "x0": 369.4800692527308,
          "y0": 412.64532916,
          "x1": 396.98909246764896,
          "y1": 421.61170916000003,
          "width": 27.50902321491816,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "8.77%",
          "page": 17,
          "x0": 427.560234069049,
          "y0": 412.64532916,
          "x1": 450.6291825705162,
          "y1": 421.61170916000003,
          "width": 23.06894850146722,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "gpt-4o-mini",
          "page": 17,
          "x0": 146.16020000000003,
          "y0": 412.64516916,
          "x1": 188.85285739332943,
          "y1": 421.61154916000004,
          "width": 42.6926573933294,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "5.12",
          "page": 17,
          "x0": 237.96,
          "y0": 402.68532916,
          "x1": 253.6032157586654,
          "y1": 411.65170916,
          "width": 15.643215758665406,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "6.21",
          "page": 17,
          "x0": 310.19990295666537,
          "y0": 402.68532916,
          "x1": 325.8431187153308,
          "y1": 411.65170916,
          "width": 15.643215758665406,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "82.46%",
          "page": 17,
          "x0": 369.4800692527308,
          "y0": 402.68532916,
          "x1": 396.98909246764896,
          "y1": 411.65170916,
          "width": 27.50902321491816,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "10.53%",
          "page": 17,
          "x0": 425.280083635049,
          "y0": 402.68532916,
          "x1": 452.789009206089,
          "y1": 411.65170916,
          "width": 27.508925571040038,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "gpt-4o-mini",
          "page": 17,
          "x0": 146.16000000000003,
          "y0": 402.68516916000004,
          "x1": 188.85265739332942,
          "y1": 411.65154916000006,
          "width": 42.6926573933294,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "gpt-4o-mini",
          "page": 17,
          "x0": 146.16000000000003,
          "y0": 392.72555916,
          "x1": 188.85265739332942,
          "y1": 401.69193916,
          "width": 42.6926573933294,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "3.65",
          "page": 17,
          "x0": 237.96,
          "y0": 392.72532916,
          "x1": 253.6032157586654,
          "y1": 401.69170916,
          "width": 15.643215758665406,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "4.34",
          "page": 17,
          "x0": 310.19990295666537,
          "y0": 392.72532916,
          "x1": 325.8431187153308,
          "y1": 401.69170916,
          "width": 15.643215758665406,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "84.21%",
          "page": 17,
          "x0": 369.4800692527308,
          "y0": 392.72532916,
          "x1": 396.98909246764896,
          "y1": 401.69170916,
          "width": 27.50902321491816,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "8.77%",
          "page": 17,
          "x0": 427.560234069049,
          "y0": 392.72532916,
          "x1": 450.6291825705162,
          "y1": 401.69170916,
          "width": 23.06894850146722,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "4.99",
          "page": 17,
          "x0": 237.96,
          "y0": 382.76532916,
          "x1": 253.6032157586654,
          "y1": 391.73170916000004,
          "width": 15.643215758665406,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "5.69",
          "page": 17,
          "x0": 310.19990295666537,
          "y0": 382.76532916,
          "x1": 325.8431187153308,
          "y1": 391.73170916000004,
          "width": 15.643215758665406,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "87.72%",
          "page": 17,
          "x0": 369.4800692527308,
          "y0": 382.76532916,
          "x1": 396.98909246764896,
          "y1": 391.73170916000004,
          "width": 27.50902321491816,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "12.28%",
          "page": 17,
          "x0": 425.280083635049,
          "y0": 382.76532916,
          "x1": 452.789009206089,
          "y1": 391.73170916000004,
          "width": 27.508925571040038,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "gpt-4o-mini",
          "page": 17,
          "x0": 146.16000000000003,
          "y0": 382.76516916,
          "x1": 188.85265739332942,
          "y1": 391.73154916000004,
          "width": 42.6926573933294,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "10",
          "page": 17,
          "x0": 200.87998019772942,
          "y0": 382.76516916,
          "x1": 209.80317165585583,
          "y1": 391.73154916000004,
          "width": 8.92319145812641,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "gpt-4o-mini",
          "page": 17,
          "x0": 146.16000000000003,
          "y0": 372.80555916000003,
          "x1": 188.85265739332942,
          "y1": 381.77193916000004,
          "width": 42.6926573933294,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "15",
          "page": 17,
          "x0": 200.87998019772942,
          "y0": 372.80555916000003,
          "x1": 209.80317165585583,
          "y1": 381.77193916000004,
          "width": 8.92319145812641,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "4.35",
          "page": 17,
          "x0": 237.96,
          "y0": 372.80532916,
          "x1": 253.6032157586654,
          "y1": 381.77170916,
          "width": 15.643215758665406,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "5.06",
          "page": 17,
          "x0": 310.19990295666537,
          "y0": 372.80532916,
          "x1": 325.8431187153308,
          "y1": 381.77170916,
          "width": 15.643215758665406,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "85.96%",
          "page": 17,
          "x0": 369.4800692527308,
          "y0": 372.80532916,
          "x1": 396.98909246764896,
          "y1": 381.77170916,
          "width": 27.50902321491816,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "12.28%",
          "page": 17,
          "x0": 425.280083635049,
          "y0": 372.80532916,
          "x1": 452.789009206089,
          "y1": 381.77170916,
          "width": 27.508925571040038,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "4.87",
          "page": 17,
          "x0": 237.96,
          "y0": 362.84532916,
          "x1": 253.6032157586654,
          "y1": 371.81170916,
          "width": 15.643215758665406,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "5.56",
          "page": 17,
          "x0": 310.19990295666537,
          "y0": 362.84532916,
          "x1": 325.8431187153308,
          "y1": 371.81170916,
          "width": 15.643215758665406,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "87.72%",
          "page": 17,
          "x0": 369.4800692527308,
          "y0": 362.84532916,
          "x1": 396.98909246764896,
          "y1": 371.81170916,
          "width": 27.50902321491816,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "14.04%",
          "page": 17,
          "x0": 425.280083635049,
          "y0": 362.84532916,
          "x1": 452.789009206089,
          "y1": 371.81170916,
          "width": 27.508925571040038,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "gpt-4o-mini",
          "page": 17,
          "x0": 146.16000000000003,
          "y0": 362.84516916,
          "x1": 188.85265739332942,
          "y1": 371.81154916,
          "width": 42.6926573933294,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "20",
          "page": 17,
          "x0": 200.87998019772942,
          "y0": 362.84516916,
          "x1": 209.80317165585583,
          "y1": 371.81154916,
          "width": 8.92319145812641,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "With the previous optimal parameters ﬁxed, run the ablation on the value of n and model. By\nTable 11, we see that the optimal combination in this testing group is GPT-4o with n = 15. Fix this\nvalue for all future tests.",
          "page": 17,
          "x0": 107.52,
          "y0": 312.94794448,
          "x1": 504.3010950511259,
          "y1": 344.77070976,
          "width": 396.78109505112593,
          "height": 31.82276528,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "With the previous optimal parameters ﬁxed, run the ablation on the value of n and model. By",
          "page": 17,
          "x0": 107.52,
          "y0": 334.78814447999997,
          "x1": 504.3010950511259,
          "y1": 344.77070976,
          "width": 396.78109505112593,
          "height": 9.982565280000017,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Table 11, we see that the optimal combination in this testing group is GPT-4o with n = 15. Fix this",
          "page": 17,
          "x0": 107.63973999999996,
          "y0": 323.54904,
          "x1": 504.0354425660814,
          "y1": 333.85040976,
          "width": 396.3957025660814,
          "height": 10.30136976,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "value for all future tests.",
          "page": 17,
          "x0": 107.76009999999991,
          "y0": 312.94794448,
          "x1": 204.57122047647147,
          "y1": 322.91058448,
          "width": 96.81112047647156,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Table 12: RAG and Combination Sampling Method Ablations",
          "page": 17,
          "x0": 182.16009999999991,
          "y0": 284.74794448,
          "x1": 429.9956806947451,
          "y1": 294.71058448,
          "width": 247.83558069474518,
          "height": 9.962640000000022,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Table 12: RAG and Combination Sampling Method Ablations",
          "page": 17,
          "x0": 182.16009999999991,
          "y0": 284.74794448,
          "x1": 429.9956806947451,
          "y1": 294.71058448,
          "width": 247.83558069474518,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "m′",
          "page": 17,
          "x0": 234.36019125960001,
          "y0": 272.78136982,
          "x1": 244.70171670000002,
          "y1": 282.69741999999997,
          "width": 10.341525440400005,
          "height": 9.916050179999957,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "m′",
          "page": 17,
          "x0": 234.36019125960001,
          "y0": 272.78136982,
          "x1": 244.70171670000002,
          "y1": 282.69741999999997,
          "width": 10.341525440400005,
          "height": 9.916050179999957,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Combination",
          "page": 17,
          "x0": 114.0,
          "y0": 270.92532916,
          "x1": 160.7231994250654,
          "y1": 279.89170916,
          "width": 46.72319942506539,
          "height": 8.966380000000015,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Combination",
          "page": 17,
          "x0": 114.0,
          "y0": 270.92532916,
          "x1": 160.7231994250654,
          "y1": 279.89170916,
          "width": 46.72319942506539,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "RAG Improvement Nonempty Improve. Accuracy",
          "page": 17,
          "x0": 257.0398,
          "y0": 270.92532916,
          "x1": 466.36312760083206,
          "y1": 279.89170916,
          "width": 209.32332760083204,
          "height": 8.966380000000015,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "RAG Improvement Nonempty Improve. Accuracy",
          "page": 17,
          "x0": 257.0398,
          "y0": 270.92532916,
          "x1": 466.36312760083206,
          "y1": 279.89170916,
          "width": 209.32332760083204,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Improved Acc.",
          "page": 17,
          "x0": 478.4401241504321,
          "y0": 270.92532916,
          "x1": 531.9215998787708,
          "y1": 279.89170916,
          "width": 53.48147572833875,
          "height": 8.966380000000015,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Improved Acc.",
          "page": 17,
          "x0": 478.4401241504321,
          "y0": 270.92532916,
          "x1": 531.9215998787708,
          "y1": 279.89170916,
          "width": 53.48147572833875,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "best-of-n(reﬁnement)\nbest-of-n(reﬁnement)\nbest-of-n(reﬁnement)\nbest-of-n(reﬁnement)\nreﬁnement(best-of-n)\nreﬁnement(best-of-n)\nreﬁnement(best-of-n)\nreﬁnement(best-of-n)\nbest-of-n\nbest-of-n",
          "page": 17,
          "x0": 114.0,
          "y0": 166.16516916,
          "x1": 195.22570250386423,
          "y1": 264.77170916,
          "width": 81.22570250386423,
          "height": 98.60654,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "best-of-n(reﬁnement)",
          "page": 17,
          "x0": 114.0,
          "y0": 255.80532915999999,
          "x1": 190.54583216105368,
          "y1": 264.77170916,
          "width": 76.54583216105368,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "5\n3\n5\n3\n3\n5\n3\n5\n5\n3\n5\n3\n3\n5\n5\n3\nN/A 15\nN/A 15",
          "page": 17,
          "x0": 207.00003556107086,
          "y0": 166.16516916,
          "x1": 243.28341255824682,
          "y1": 264.77170916,
          "width": 36.283376997175964,
          "height": 98.60654,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "True\nFalse\nTrue\nFalse\nTrue\nFalse\nTrue\nFalse\nTrue\nFalse",
          "page": 17,
          "x0": 257.04032691345367,
          "y0": 166.16516916,
          "x1": 275.9013616196542,
          "y1": 264.77170916,
          "width": 18.86103470620054,
          "height": 98.60654,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "True",
          "page": 17,
          "x0": 257.04032691345367,
          "y0": 255.80532915999999,
          "x1": 273.621561860776,
          "y1": 264.77170916,
          "width": 16.581234947322343,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "33.78\n31.23\n31.85\n31.35\n32.66\n32.88\n34.88\n29.54\n29.64\n28.25",
          "page": 17,
          "x0": 301.8,
          "y0": 166.16532916,
          "x1": 321.8832172167918,
          "y1": 264.77170916,
          "width": 20.08321721679181,
          "height": 98.60638,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "33.78",
          "page": 17,
          "x0": 301.8,
          "y0": 255.80532915999999,
          "x1": 321.8832172167918,
          "y1": 264.77170916,
          "width": 20.08321721679181,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "33.78\n31.23\n31.85\n31.35\n51.32\n50.1\n57.56\n49.75\n32.71\n33.48",
          "page": 17,
          "x0": 373.9199622019918,
          "y0": 166.16532916,
          "x1": 394.00317941878353,
          "y1": 264.77170916,
          "width": 20.083217216791752,
          "height": 98.60638,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "33.78",
          "page": 17,
          "x0": 373.9199622019918,
          "y0": 255.80532915999999,
          "x1": 394.00317941878353,
          "y1": 264.77170916,
          "width": 20.083217216791752,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "100.0%\n100.0%\n100.0%\n100.0%\n63.64%\n65.62%\n60.61%\n59.38%\n90.62%\n84.38%",
          "page": 17,
          "x0": 434.75985970878355,
          "y0": 166.16532916,
          "x1": 463.7661707398236,
          "y1": 264.77170916,
          "width": 29.00631103104007,
          "height": 98.60638,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "100.0%",
          "page": 17,
          "x0": 435.48021867798354,
          "y0": 255.80532915999999,
          "x1": 462.9891442490236,
          "y1": 264.77170916,
          "width": 27.508925571040038,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "50.0%\n46.88%\n50.0%\n50.0%\n48.48%\n53.12%\n54.55%\n43.75%\n56.25%\n53.12%",
          "page": 17,
          "x0": 490.5598661110236,
          "y0": 166.16532916,
          "x1": 519.5661771420637,
          "y1": 264.77170916,
          "width": 29.00631103104007,
          "height": 98.60638,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "50.0%",
          "page": 17,
          "x0": 493.5602858504236,
          "y0": 255.80532915999999,
          "x1": 516.6292343518909,
          "y1": 264.77170916,
          "width": 23.068948501467275,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "31.23",
          "page": 17,
          "x0": 301.8,
          "y0": 245.84532916,
          "x1": 321.8832172167918,
          "y1": 254.81170916000002,
          "width": 20.08321721679181,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "31.23",
          "page": 17,
          "x0": 373.9199622019918,
          "y0": 245.84532916,
          "x1": 394.00317941878353,
          "y1": 254.81170916000002,
          "width": 20.083217216791752,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "100.0%",
          "page": 17,
          "x0": 435.48021867798354,
          "y0": 245.84532916,
          "x1": 462.9891442490236,
          "y1": 254.81170916000002,
          "width": 27.508925571040038,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "46.88%",
          "page": 17,
          "x0": 491.4001055808236,
          "y0": 245.84532916,
          "x1": 518.9090311518637,
          "y1": 254.81170916000002,
          "width": 27.508925571040095,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "best-of-n(reﬁnement)",
          "page": 17,
          "x0": 114.0,
          "y0": 245.84516915999998,
          "x1": 190.54583216105368,
          "y1": 254.81154916,
          "width": 76.54583216105368,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "False",
          "page": 17,
          "x0": 257.04032691345367,
          "y0": 245.84516915999998,
          "x1": 275.901338468461,
          "y1": 254.81154916,
          "width": 18.861011555007337,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "best-of-n(reﬁnement)",
          "page": 17,
          "x0": 114.0,
          "y0": 235.88555916,
          "x1": 190.54583216105368,
          "y1": 244.85193916000003,
          "width": 76.54583216105368,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "True",
          "page": 17,
          "x0": 257.04032691345367,
          "y0": 235.88555916,
          "x1": 273.621561860776,
          "y1": 244.85193916000003,
          "width": 16.581234947322343,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "31.85",
          "page": 17,
          "x0": 301.8,
          "y0": 235.88532916,
          "x1": 321.8832172167918,
          "y1": 244.85170916,
          "width": 20.08321721679181,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "31.85",
          "page": 17,
          "x0": 373.9199622019918,
          "y0": 235.88532916,
          "x1": 394.00317941878353,
          "y1": 244.85170916,
          "width": 20.083217216791752,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "100.0%",
          "page": 17,
          "x0": 435.48021867798354,
          "y0": 235.88532916,
          "x1": 462.9891442490236,
          "y1": 244.85170916,
          "width": 27.508925571040038,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "50.0%",
          "page": 17,
          "x0": 493.5602858504236,
          "y0": 235.88532916,
          "x1": 516.6292343518909,
          "y1": 244.85170916,
          "width": 23.068948501467275,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "31.35",
          "page": 17,
          "x0": 301.8,
          "y0": 225.92532916,
          "x1": 321.8832172167918,
          "y1": 234.89170916,
          "width": 20.08321721679181,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "31.35",
          "page": 17,
          "x0": 373.9199622019918,
          "y0": 225.92532916,
          "x1": 394.00317941878353,
          "y1": 234.89170916,
          "width": 20.083217216791752,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "100.0%",
          "page": 17,
          "x0": 435.48021867798354,
          "y0": 225.92532916,
          "x1": 462.9891442490236,
          "y1": 234.89170916,
          "width": 27.508925571040038,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "50.0%",
          "page": 17,
          "x0": 493.5602858504236,
          "y0": 225.92532916,
          "x1": 516.6292343518909,
          "y1": 234.89170916,
          "width": 23.068948501467275,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "best-of-n(reﬁnement)",
          "page": 17,
          "x0": 114.0,
          "y0": 225.92516916,
          "x1": 190.54583216105368,
          "y1": 234.89154916,
          "width": 76.54583216105368,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "False",
          "page": 17,
          "x0": 257.04032691345367,
          "y0": 225.92516916,
          "x1": 275.901338468461,
          "y1": 234.89154916,
          "width": 18.861011555007337,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "32.66",
          "page": 17,
          "x0": 301.8,
          "y0": 215.96532915999998,
          "x1": 321.8832172167918,
          "y1": 224.93170916,
          "width": 20.08321721679181,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "51.32",
          "page": 17,
          "x0": 373.9199622019918,
          "y0": 215.96532915999998,
          "x1": 394.00317941878353,
          "y1": 224.93170916,
          "width": 20.083217216791752,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "63.64%",
          "page": 17,
          "x0": 435.48021867798354,
          "y0": 215.96532915999998,
          "x1": 462.9891442490236,
          "y1": 224.93170916,
          "width": 27.508925571040038,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "48.48%",
          "page": 17,
          "x0": 491.4001055808236,
          "y0": 215.96532915999998,
          "x1": 518.9090311518637,
          "y1": 224.93170916,
          "width": 27.508925571040095,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "reﬁnement(best-of-n)",
          "page": 17,
          "x0": 114.0,
          "y0": 215.96516916,
          "x1": 190.54583226865026,
          "y1": 224.93154916,
          "width": 76.54583226865026,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "True",
          "page": 17,
          "x0": 257.04032702105025,
          "y0": 215.96516916,
          "x1": 273.62156196837265,
          "y1": 224.93154916,
          "width": 16.5812349473224,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "reﬁnement(best-of-n)",
          "page": 17,
          "x0": 114.0,
          "y0": 206.00555916,
          "x1": 190.54583226865026,
          "y1": 214.97193916,
          "width": 76.54583226865026,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "False",
          "page": 17,
          "x0": 257.04032702105025,
          "y0": 206.00555916,
          "x1": 275.90133857605764,
          "y1": 214.97193916,
          "width": 18.861011555007394,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "32.88",
          "page": 17,
          "x0": 301.8,
          "y0": 206.00532916,
          "x1": 321.8832172167918,
          "y1": 214.97170916000002,
          "width": 20.08321721679181,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "50.1",
          "page": 17,
          "x0": 376.20002297219185,
          "y0": 206.00532916,
          "x1": 391.8432387308572,
          "y1": 214.97170916000002,
          "width": 15.643215758665349,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "65.62%",
          "page": 17,
          "x0": 435.48018926825716,
          "y0": 206.00532916,
          "x1": 462.9891148392972,
          "y1": 214.97170916000002,
          "width": 27.508925571040038,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "53.12%",
          "page": 17,
          "x0": 491.4000761710972,
          "y0": 206.00532916,
          "x1": 518.9090017421373,
          "y1": 214.97170916000002,
          "width": 27.508925571040095,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "34.88",
          "page": 17,
          "x0": 301.8,
          "y0": 196.15292572,
          "x1": 321.8832172167918,
          "y1": 205.11930572,
          "width": 20.08321721679181,
          "height": 8.966379999999987,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "57.56",
          "page": 17,
          "x0": 373.9199622019918,
          "y0": 196.15292572,
          "x1": 394.00317941878353,
          "y1": 205.11930572,
          "width": 20.083217216791752,
          "height": 8.966379999999987,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "60.61%",
          "page": 17,
          "x0": 434.75985970878355,
          "y0": 196.15292572,
          "x1": 463.7661707398236,
          "y1": 205.11930572,
          "width": 29.00631103104007,
          "height": 8.966379999999987,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "54.55%",
          "page": 17,
          "x0": 490.5598661110236,
          "y0": 196.15292572,
          "x1": 519.5661771420637,
          "y1": 205.11930572,
          "width": 29.00631103104007,
          "height": 8.966379999999987,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "reﬁnement(best-of-n)",
          "page": 17,
          "x0": 114.0,
          "y0": 196.15276572000002,
          "x1": 195.22570250386423,
          "y1": 205.11914572,
          "width": 81.22570250386423,
          "height": 8.966379999999987,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "True",
          "page": 17,
          "x0": 257.04037454286424,
          "y0": 196.15276572000002,
          "x1": 275.30153233489904,
          "y1": 205.11914572,
          "width": 18.261157792034794,
          "height": 8.966379999999987,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "reﬁnement(best-of-n)",
          "page": 17,
          "x0": 114.0,
          "y0": 186.08555916,
          "x1": 190.54583226865026,
          "y1": 195.05193916000002,
          "width": 76.54583226865026,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "False",
          "page": 17,
          "x0": 257.04032702105025,
          "y0": 186.08555916,
          "x1": 275.90133857605764,
          "y1": 195.05193916000002,
          "width": 18.861011555007394,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "29.54",
          "page": 17,
          "x0": 301.8,
          "y0": 186.08532916,
          "x1": 321.8832172167918,
          "y1": 195.05170916,
          "width": 20.08321721679181,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "49.75",
          "page": 17,
          "x0": 373.9199622019918,
          "y0": 186.08532916,
          "x1": 394.00317941878353,
          "y1": 195.05170916,
          "width": 20.083217216791752,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "59.38%",
          "page": 17,
          "x0": 435.48021867798354,
          "y0": 186.08532916,
          "x1": 462.9891442490236,
          "y1": 195.05170916,
          "width": 27.508925571040038,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "43.75%",
          "page": 17,
          "x0": 491.4001055808236,
          "y0": 186.08532916,
          "x1": 518.9090311518637,
          "y1": 195.05170916,
          "width": 27.508925571040095,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "29.64",
          "page": 17,
          "x0": 301.8,
          "y0": 176.12532916,
          "x1": 321.8832172167918,
          "y1": 185.09170916000002,
          "width": 20.08321721679181,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "32.71",
          "page": 17,
          "x0": 373.9199622019918,
          "y0": 176.12532916,
          "x1": 394.00317941878353,
          "y1": 185.09170916000002,
          "width": 20.083217216791752,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "90.62%",
          "page": 17,
          "x0": 435.48021867798354,
          "y0": 176.12532916,
          "x1": 462.9891442490236,
          "y1": 185.09170916000002,
          "width": 27.508925571040038,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "56.25%",
          "page": 17,
          "x0": 491.4001055808236,
          "y0": 176.12532916,
          "x1": 518.9090311518637,
          "y1": 185.09170916000002,
          "width": 27.508925571040095,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "best-of-n",
          "page": 17,
          "x0": 114.0,
          "y0": 176.12516915999998,
          "x1": 146.3231971440709,
          "y1": 185.09154916,
          "width": 32.32319714407089,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "N/A 15",
          "page": 17,
          "x0": 207.00003556107086,
          "y0": 176.12516915999998,
          "x1": 243.28341255824682,
          "y1": 185.09154916,
          "width": 36.283376997175964,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "True",
          "page": 17,
          "x0": 257.0403500646468,
          "y0": 176.12516915999998,
          "x1": 273.6215850119692,
          "y1": 185.09154916,
          "width": 16.5812349473224,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "28.25",
          "page": 17,
          "x0": 301.8,
          "y0": 166.16532916,
          "x1": 321.8832172167918,
          "y1": 175.13170916,
          "width": 20.08321721679181,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "33.48",
          "page": 17,
          "x0": 373.9199622019918,
          "y0": 166.16532916,
          "x1": 394.00317941878353,
          "y1": 175.13170916,
          "width": 20.083217216791752,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "84.38%",
          "page": 17,
          "x0": 435.48021867798354,
          "y0": 166.16532916,
          "x1": 462.9891442490236,
          "y1": 175.13170916,
          "width": 27.508925571040038,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "53.12%",
          "page": 17,
          "x0": 491.4001055808236,
          "y0": 166.16532916,
          "x1": 518.9090311518637,
          "y1": 175.13170916,
          "width": 27.508925571040095,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "best-of-n",
          "page": 17,
          "x0": 114.0,
          "y0": 166.16516916,
          "x1": 146.3231971440709,
          "y1": 175.13154916000002,
          "width": 32.32319714407089,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "N/A 15",
          "page": 17,
          "x0": 207.00003556107086,
          "y0": 166.16516916,
          "x1": 243.28341255824682,
          "y1": 175.13154916000002,
          "width": 36.283376997175964,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "False",
          "page": 17,
          "x0": 257.0403500646468,
          "y0": 166.16516916,
          "x1": 275.9013616196542,
          "y1": 175.13154916000002,
          "width": 18.861011555007394,
          "height": 8.966380000000015,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "With the previous optimal parameters ﬁxed, run the ablation on the combination methods and if\nRAG is enabled. By Table 12, we see that the optimal combination in this testing group is a 5-step\nreﬁnement with each iteration being a best-of-3 call, with RAG enabled.",
          "page": 17,
          "x0": 107.52,
          "y0": 116.14804448,
          "x1": 504.06112816484216,
          "y1": 148.07078448000001,
          "width": 396.5411281648422,
          "height": 31.92274000000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "With the previous optimal parameters ﬁxed, run the ablation on the combination methods and if",
          "page": 17,
          "x0": 107.52,
          "y0": 138.10814448,
          "x1": 503.9577096625853,
          "y1": 148.07078448000001,
          "width": 396.4377096625853,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "RAG is enabled. By Table 12, we see that the optimal combination in this testing group is a 5-step",
          "page": 17,
          "x0": 108.0,
          "y0": 126.86943999999998,
          "x1": 504.06112816484216,
          "y1": 137.15088448,
          "width": 396.06112816484216,
          "height": 10.281444480000019,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "reﬁnement with each iteration being a best-of-3 call, with RAG enabled.",
          "page": 17,
          "x0": 107.99984,
          "y0": 116.14804448,
          "x1": 396.09035923966616,
          "y1": 126.11068447999999,
          "width": 288.09051923966615,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "B.2 ADDITIONAL QUALITATIVE EXAMPLES",
          "page": 17,
          "x0": 108.23983999999999,
          "y0": 91.42814448,
          "x1": 299.630178952213,
          "y1": 101.39078448,
          "width": 191.390338952213,
          "height": 9.962639999999993,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "B.2 ADDITIONAL QUALITATIVE EXAMPLES",
          "page": 17,
          "x0": 108.23983999999999,
          "y0": 91.42814448,
          "x1": 299.630178952213,
          "y1": 101.39078448,
          "width": 191.390338952213,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "In this section, we provide qualitative examples demonstrating the improvements ImProver achieves\nin proof optimization.",
          "page": 17,
          "x0": 107.99999999999997,
          "y0": 59.98834447999999,
          "x1": 504.15587881700105,
          "y1": 80.87088447999999,
          "width": 396.15587881700105,
          "height": 20.88254,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "In this section, we provide qualitative examples demonstrating the improvements ImProver achieves",
          "page": 17,
          "x0": 107.99999999999997,
          "y0": 70.58943999999998,
          "x1": 504.15587881700105,
          "y1": 80.87088447999999,
          "width": 396.15587881700105,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "in proof optimization.",
          "page": 17,
          "x0": 108.00029999999992,
          "y0": 59.98834447999999,
          "x1": 195.45084128240603,
          "y1": 69.95098447999999,
          "width": 87.4505412824061,
          "height": 9.96264,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "17",
          "page": 17,
          "x0": 300.96029999999996,
          "y0": 30.10824447999999,
          "x1": 310.98160699816793,
          "y1": 40.07088447999999,
          "width": 10.021306998167972,
          "height": 9.96264,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "17",
          "page": 17,
          "x0": 300.96029999999996,
          "y0": 30.10824447999999,
          "x1": 310.98160699816793,
          "y1": 40.07088447999999,
          "width": 10.021306998167972,
          "height": 9.96264,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        }
      ]
    },
    {
      "page_num": 18,
      "elements": [
        {
          "text": "Compﬁles: Length Optimization See (§4.3)",
          "page": 18,
          "x0": 108.0,
          "y0": 698.02814448,
          "x1": 297.317715157848,
          "y1": 708.1103361600001,
          "width": 189.317715157848,
          "height": 10.08219168000005,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Compﬁles: Length Optimization See (§4.3)",
          "page": 18,
          "x0": 108.0,
          "y0": 698.02814448,
          "x1": 297.317715157848,
          "y1": 708.1103361600001,
          "width": 189.317715157848,
          "height": 10.08219168000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Compﬁles: Readability Optimization Consider Figure 5, in which a lemma from the 2019 IMO\nproblem 1 (from the Compﬁles dataset) is optimized for readability. This introduces multiple new\nhypotheses, which generalize a linear_property of the functions, and then reuses and instanti-\nates that (and others, too) hypothesis throughout the proof, creating a signiﬁcantly more declaritive,\nmodular, and therefore readable proof.",
          "page": 18,
          "x0": 107.99979999999996,
          "y0": 631.06804448,
          "x1": 505.757328382243,
          "y1": 684.95013616,
          "width": 397.757528382243,
          "height": 53.88209168000003,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Compﬁles: Readability Optimization Consider Figure 5, in which a lemma from the 2019 IMO",
          "page": 18,
          "x0": 108.0,
          "y0": 674.86794448,
          "x1": 504.11245534434835,
          "y1": 684.95013616,
          "width": 396.11245534434835,
          "height": 10.08219168000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "problem 1 (from the Compﬁles dataset) is optimized for readability. This introduces multiple new",
          "page": 18,
          "x0": 107.99999999999997,
          "y0": 663.94804448,
          "x1": 504.47273717064695,
          "y1": 673.91068448,
          "width": 396.47273717064695,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "hypotheses, which generalize a linear_property of the functions, and then reuses and instanti-",
          "page": 18,
          "x0": 107.99999999999997,
          "y0": 652.90824448,
          "x1": 505.757328382243,
          "y1": 663.18968896,
          "width": 397.75732838224303,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ates that (and others, too) hypothesis throughout the proof, creating a signiﬁcantly more declaritive,",
          "page": 18,
          "x0": 107.9998,
          "y0": 641.98834448,
          "x1": 505.53028123226085,
          "y1": 651.95098448,
          "width": 397.53048123226085,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "modular, and therefore readable proof.",
          "page": 18,
          "x0": 107.99979999999996,
          "y0": 631.06804448,
          "x1": 261.6902309114144,
          "y1": 641.03068448,
          "width": 153.69043091141444,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Original (human-written)",
          "page": 18,
          "x0": 107.99979999999996,
          "y0": 608.26769616,
          "x1": 217.51725959722884,
          "y1": 618.2303361600001,
          "width": 109.51745959722888,
          "height": 9.962640000000079,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Original (human-written)",
          "page": 18,
          "x0": 107.99979999999996,
          "y0": 608.26769616,
          "x1": 217.51725959722884,
          "y1": 618.2303361600001,
          "width": 109.51745959722888,
          "height": 9.962640000000079,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ImProver (readability-optimized)\nlemma additive_to_int_linear (f : Z → Z) (h:\n∀ (x y : Z), f (x + y) = f x + f y):",
          "page": 18,
          "x0": 308.88,
          "y0": 586.3765375,
          "x1": 497.62440378740393,
          "y1": 618.2302961600001,
          "width": 188.74440378740394,
          "height": 31.85375866000004,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "ImProver (readability-optimized)",
          "page": 18,
          "x0": 308.8802,
          "y0": 607.8293,
          "x1": 450.67798921456654,
          "y1": 618.2302961600001,
          "width": 141.79778921456654,
          "height": 10.40099616000009,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "lemma additive_to_int_linear (f : Z → Z) (h:\n∀ (x y : Z), f (x + y) = f x + f y):",
          "page": 18,
          "x0": 108.0,
          "y0": 586.6165375,
          "x1": 296.7445540838119,
          "y1": 603.2538499999999,
          "width": 188.74455408381192,
          "height": 16.637312499999894,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "lemma additive_to_int_linear (f : Z → Z) (h:",
          "page": 18,
          "x0": 108.0,
          "y0": 594.5365375,
          "x1": 296.7445540838119,
          "y1": 603.2538499999999,
          "width": 188.74455408381192,
          "height": 8.717312499999935,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "lemma additive_to_int_linear (f : Z → Z) (h:",
          "page": 18,
          "x0": 308.88,
          "y0": 594.2965375,
          "x1": 497.62440378740393,
          "y1": 603.0138499999999,
          "width": 188.74440378740394,
          "height": 8.717312499999935,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "∀ (x y : Z), f (x + y) = f x + f y):",
          "page": 18,
          "x0": 127.92,
          "y0": 586.6165375,
          "x1": 279.344413525904,
          "y1": 595.33385,
          "width": 151.42441352590396,
          "height": 8.717312499999935,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "∀ (x y : Z), f (x + y) = f x + f y):",
          "page": 18,
          "x0": 328.8,
          "y0": 586.3765375,
          "x1": 480.224266112004,
          "y1": 595.09385,
          "width": 151.42426611200398,
          "height": 8.717312499999935,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "∃ c, ∀ a, f a = c * a",
          "page": 18,
          "x0": 120.6,
          "y0": 577.9428639,
          "x1": 209.02431,
          "y1": 586.1167139,
          "width": 88.42431000000002,
          "height": 8.173850000000016,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "∃ c, ∀ a, f a = c * a",
          "page": 18,
          "x0": 120.6,
          "y0": 577.9428639,
          "x1": 209.02431,
          "y1": 586.1167139,
          "width": 88.42431000000002,
          "height": 8.173850000000016,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": ":= by",
          "page": 18,
          "x0": 217.44,
          "y0": 579.1428639000001,
          "x1": 238.424318275827,
          "y1": 586.1167139,
          "width": 20.984318275827007,
          "height": 6.97384999999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": ":= by",
          "page": 18,
          "x0": 217.44,
          "y0": 579.1428639000001,
          "x1": 238.424318275827,
          "y1": 586.1167139,
          "width": 20.984318275827007,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "∃ c, ∀ a, f a = c * a",
          "page": 18,
          "x0": 321.36,
          "y0": 577.5828639,
          "x1": 409.90431,
          "y1": 585.7567139,
          "width": 88.54431,
          "height": 8.173850000000016,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "∃ c, ∀ a, f a = c * a",
          "page": 18,
          "x0": 321.36,
          "y0": 577.5828639,
          "x1": 409.90431,
          "y1": 585.7567139,
          "width": 88.54431,
          "height": 8.173850000000016,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": ":= by",
          "page": 18,
          "x0": 422.52,
          "y0": 578.7828639,
          "x1": 443.38429386735197,
          "y1": 585.7567139,
          "width": 20.86429386735199,
          "height": 6.97384999999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": ":= by",
          "page": 18,
          "x0": 422.52,
          "y0": 578.7828639,
          "x1": 443.38429386735197,
          "y1": 585.7567139,
          "width": 20.86429386735199,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "let g := AddMonoidHom.toIntLinearMap <|",
          "page": 18,
          "x0": 116.39999999999999,
          "y0": 570.6565375,
          "x1": 277.76413514999996,
          "y1": 578.0768739,
          "width": 161.36413514999998,
          "height": 7.4203363999999965,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "let g := AddMonoidHom.toIntLinearMap <|",
          "page": 18,
          "x0": 116.39999999999999,
          "y0": 570.6565375,
          "x1": 277.76413514999996,
          "y1": 578.0768739,
          "width": 161.36413514999998,
          "height": 7.4203363999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "let g := AddMonoidHom.toIntLinearMap <|",
          "page": 18,
          "x0": 317.15999999999997,
          "y0": 570.4165375,
          "x1": 478.52413514999995,
          "y1": 577.8367939,
          "width": 161.36413514999998,
          "height": 7.420256399999971,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "let g := AddMonoidHom.toIntLinearMap <|",
          "page": 18,
          "x0": 317.15999999999997,
          "y0": 570.4165375,
          "x1": 478.52413514999995,
          "y1": 577.8367939,
          "width": 161.36413514999998,
          "height": 7.420256399999971,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "AddMonoidHom.mk' f h\nrefine hf 1, fun a => ?_i\nchange g a = g 1 * a\nrw [mul_comm, ← smul_eq_mul, ←",
          "page": 18,
          "x0": 116.39990000000003,
          "y0": 538.8565375000001,
          "x1": 249.3764413,
          "y1": 570.1567938999999,
          "width": 132.97654129999998,
          "height": 31.300256399999853,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "AddMonoidHom.mk' f h",
          "page": 18,
          "x0": 127.91999999999999,
          "y0": 563.1829438999999,
          "x1": 211.66439803354297,
          "y1": 570.1567938999999,
          "width": 83.74439803354298,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "AddMonoidHom.mk' f h",
          "page": 18,
          "x0": 328.799,
          "y0": 562.8226339,
          "x1": 412.42368631921295,
          "y1": 569.7964839,
          "width": 83.62468631921297,
          "height": 6.97384999999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "AddMonoidHom.mk' f h",
          "page": 18,
          "x0": 328.799,
          "y0": 562.8226339,
          "x1": 412.42368631921295,
          "y1": 569.7964839,
          "width": 83.62468631921297,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "refine hf 1, fun a => ?_i",
          "page": 18,
          "x0": 116.4,
          "y0": 554.6965375000001,
          "x1": 219.10191870000003,
          "y1": 562.1167139,
          "width": 102.70191870000002,
          "height": 7.420176399999946,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "have linear_property : ∀ a, f a = g a := by",
          "page": 18,
          "x0": 317.16,
          "y0": 554.4565375000001,
          "x1": 497.50529386735195,
          "y1": 561.8767139,
          "width": 180.34529386735193,
          "height": 7.420176399999946,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "have linear_property : ∀ a, f a = g a := by",
          "page": 18,
          "x0": 317.16,
          "y0": 554.4565375000001,
          "x1": 497.50529386735195,
          "y1": 561.8767139,
          "width": 180.34529386735193,
          "height": 7.420176399999946,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "change g a = g 1 * a",
          "page": 18,
          "x0": 116.39990000000003,
          "y0": 546.0228639000001,
          "x1": 200.02431,
          "y1": 554.1967139,
          "width": 83.62440999999998,
          "height": 8.173849999999902,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "intro a\nrfl",
          "page": 18,
          "x0": 325.55989999999997,
          "y0": 538.9429438999999,
          "x1": 354.82430999999997,
          "y1": 553.8367139,
          "width": 29.264409999999998,
          "height": 14.893770000000018,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "intro a",
          "page": 18,
          "x0": 325.56,
          "y0": 546.8628639,
          "x1": 354.82430999999997,
          "y1": 553.8367139,
          "width": 29.264309999999966,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "rw [mul_comm, ← smul_eq_mul, ←",
          "page": 18,
          "x0": 116.4,
          "y0": 538.8565375000001,
          "x1": 249.3764413,
          "y1": 546.2767139,
          "width": 132.9764413,
          "height": 7.420176399999946,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "rfl",
          "page": 18,
          "x0": 325.55989999999997,
          "y0": 538.9429438999999,
          "x1": 338.14422655165396,
          "y1": 545.9167938999999,
          "width": 12.584326551653987,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "LinearMap.map_smul, smul_eq_mul, mul_one]",
          "page": 18,
          "x0": 127.92020000000001,
          "y0": 531.2630239,
          "x1": 299.504996762444,
          "y1": 538.2368739,
          "width": 171.584796762444,
          "height": 6.97384999999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "LinearMap.map_smul, smul_eq_mul, mul_one]",
          "page": 18,
          "x0": 127.92020000000001,
          "y0": 531.2630239,
          "x1": 299.504996762444,
          "y1": 538.2368739,
          "width": 171.584796762444,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "have g_smul : ∀ a, g a = g 1 * a := by",
          "page": 18,
          "x0": 317.16,
          "y0": 529.8228639,
          "x1": 476.504293867352,
          "y1": 537.9967139,
          "width": 159.34429386735195,
          "height": 8.173850000000016,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "have g_smul : ∀ a, g a = g 1 * a := by",
          "page": 18,
          "x0": 317.16,
          "y0": 529.8228639,
          "x1": 476.504293867352,
          "y1": 537.9967139,
          "width": 159.34429386735195,
          "height": 8.173850000000016,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "intro a\nrw [mul_comm, ← smul_eq_mul, ←\nLinearMap.map_smul, smul_eq_mul, mul_one]",
          "page": 18,
          "x0": 325.56,
          "y0": 507.0226339,
          "x1": 500.2648345374041,
          "y1": 529.9567139,
          "width": 174.7048345374041,
          "height": 22.934079999999938,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "intro a",
          "page": 18,
          "x0": 325.56,
          "y0": 522.9828639,
          "x1": 354.82430999999997,
          "y1": 529.9567139,
          "width": 29.264309999999966,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "rw [mul_comm, ← smul_eq_mul, ←",
          "page": 18,
          "x0": 325.56,
          "y0": 514.6165375,
          "x1": 458.6564413,
          "y1": 522.0367139,
          "width": 133.09644129999998,
          "height": 7.420176399999946,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "LinearMap.map_smul, smul_eq_mul, mul_one]",
          "page": 18,
          "x0": 328.80019999999996,
          "y0": 507.0226339,
          "x1": 500.2648345374041,
          "y1": 513.9964839,
          "width": 171.46463453740415,
          "height": 6.973850000000027,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "refine hf 1, fun a => ?_i\nhave f_eq_g : f a = g a := linear_property a\nhave g_a_eq : g a = g 1 * a := g_smul a\nrw [f_eq_g, linear_property 1, g_a_eq]",
          "page": 18,
          "x0": 317.16,
          "y0": 475.2228639,
          "x1": 501.344227871028,
          "y1": 506.07671389999996,
          "width": 184.18422787102799,
          "height": 30.853849999999966,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "refine hf 1, fun a => ?_i",
          "page": 18,
          "x0": 317.16,
          "y0": 498.65653749999996,
          "x1": 419.86201869999996,
          "y1": 506.07671389999996,
          "width": 102.70201869999994,
          "height": 7.420176400000003,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "have f_eq_g : f a = g a := linear_property a",
          "page": 18,
          "x0": 317.16,
          "y0": 491.18286390000003,
          "x1": 501.344227871028,
          "y1": 498.1567139,
          "width": 184.18422787102799,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "have g_a_eq : g a = g 1 * a := g_smul a",
          "page": 18,
          "x0": 317.16,
          "y0": 481.9428639,
          "x1": 480.34429538946,
          "y1": 490.1167139,
          "width": 163.18429538945998,
          "height": 8.173849999999959,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "rw [f_eq_g, linear_property 1, g_a_eq]",
          "page": 18,
          "x0": 317.16,
          "y0": 475.2228639,
          "x1": 476.26457054288903,
          "y1": 482.19671389999996,
          "width": 159.104570542889,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Figure 5: Optimizing a lemma from IMO 2019 P1 for readability",
          "page": 18,
          "x0": 176.16,
          "y0": 457.66844447999995,
          "x1": 436.021472320439,
          "y1": 467.63108447999997,
          "width": 259.861472320439,
          "height": 9.962640000000022,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Figure 5: Optimizing a lemma from IMO 2019 P1 for readability",
          "page": 18,
          "x0": 176.16,
          "y0": 457.66844447999995,
          "x1": 436.021472320439,
          "y1": 467.63108447999997,
          "width": 259.861472320439,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "MIL: Length Optimization Consider Figure 6, which optimizes an exercise solution from MIL\nChapter 8, Section 1 (Group theory) for length, eliminating simp calls and introducing proof terms\ninto the structure of the proof to shorten it from 9 tactic invocations to 7.",
          "page": 18,
          "x0": 107.9998,
          "y0": 407.42933999999997,
          "x1": 504.5668643188504,
          "y1": 439.79043615999996,
          "width": 396.5670643188504,
          "height": 32.36109615999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "MIL: Length Optimization Consider Figure 6, which optimizes an exercise solution from MIL",
          "page": 18,
          "x0": 107.9998,
          "y0": 429.70824447999996,
          "x1": 504.5668643188504,
          "y1": 439.79043615999996,
          "width": 396.5670643188504,
          "height": 10.082191679999994,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Chapter 8, Section 1 (Group theory) for length, eliminating simp calls and introducing proof terms",
          "page": 18,
          "x0": 107.9998,
          "y0": 418.78834448,
          "x1": 504.1554209100761,
          "y1": 429.06978896,
          "width": 396.1556209100761,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "into the structure of the proof to shorten it from 9 tactic invocations to 7.",
          "page": 18,
          "x0": 107.99989999999997,
          "y0": 407.42933999999997,
          "x1": 396.56994000000003,
          "y1": 417.71078448,
          "width": 288.57004000000006,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Original (human-written)\nexample (ϕ : G →* H) (ψ : H →* K) (S :",
          "page": 18,
          "x0": 108.0,
          "y0": 372.3828639,
          "x1": 276.94442338266197,
          "y1": 395.03033615999993,
          "width": 168.94442338266197,
          "height": 22.647472259999915,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Original (human-written)",
          "page": 18,
          "x0": 108.00028000000003,
          "y0": 385.06769615999997,
          "x1": 217.5177395972289,
          "y1": 395.03033615999993,
          "width": 109.51745959722888,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ImProver (length-optimized)",
          "page": 18,
          "x0": 308.8798,
          "y0": 384.62913999999995,
          "x1": 430.75750924440246,
          "y1": 395.0301361599999,
          "width": 121.87770924440247,
          "height": 10.400996159999977,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "ImProver (length-optimized)",
          "page": 18,
          "x0": 308.8798,
          "y0": 384.62913999999995,
          "x1": 430.75750924440246,
          "y1": 395.0301361599999,
          "width": 121.87770924440247,
          "height": 10.400996159999977,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "example (ϕ : G →* H) (ψ : H →* K) (S :",
          "page": 18,
          "x0": 108.0,
          "y0": 372.3828639,
          "x1": 276.94442338266197,
          "y1": 380.5567139,
          "width": 168.94442338266197,
          "height": 8.173849999999959,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Subgroup G) :\nmap (ψ.comp ϕ) S = map ψ (S.map ϕ)",
          "page": 18,
          "x0": 124.68016,
          "y0": 357.4134984,
          "x1": 271.78450999999995,
          "y1": 372.6367939,
          "width": 147.10434999999995,
          "height": 15.223295500000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Subgroup G) :",
          "page": 18,
          "x0": 127.92,
          "y0": 365.6629439,
          "x1": 182.26442462581602,
          "y1": 372.6367939,
          "width": 54.34442462581602,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "example (ϕ : G →* H) (ψ : H →* K) (S :",
          "page": 18,
          "x0": 308.88,
          "y0": 364.1028639,
          "x1": 477.704332164704,
          "y1": 372.2767139,
          "width": 168.824332164704,
          "height": 8.173850000000016,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "example (ϕ : G →* H) (ψ : H →* K) (S :",
          "page": 18,
          "x0": 308.88,
          "y0": 364.1028639,
          "x1": 477.704332164704,
          "y1": 372.2767139,
          "width": 168.824332164704,
          "height": 8.173850000000016,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "map (ψ.comp ϕ) S = map ψ (S.map ϕ)",
          "page": 18,
          "x0": 124.68016,
          "y0": 357.4134984,
          "x1": 271.78450999999995,
          "y1": 364.5967139,
          "width": 147.10434999999995,
          "height": 7.183215500000017,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": ":= by",
          "page": 18,
          "x0": 280.2,
          "y0": 357.6228639,
          "x1": 301.06431827582696,
          "y1": 364.5967139,
          "width": 20.864318275826975,
          "height": 6.97384999999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": ":= by",
          "page": 18,
          "x0": 280.2,
          "y0": 357.6228639,
          "x1": 301.06431827582696,
          "y1": 364.5967139,
          "width": 20.864318275826975,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Subgroup G) :\nmap (ψ.comp ϕ) S = map ψ (S.map ϕ)\nby\next x\nsimp only [mem_map]\nconstructor\nrintro hy, y_in, hyi; exact hϕ y, hy, y_in,",
          "page": 18,
          "x0": 317.16,
          "y0": 309.0565375,
          "x1": 494.38413594736807,
          "y1": 364.3567939,
          "width": 177.22413594736804,
          "height": 55.30025640000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Subgroup G) :",
          "page": 18,
          "x0": 328.8,
          "y0": 357.38294390000004,
          "x1": 383.144550155116,
          "y1": 364.3567939,
          "width": 54.344550155115996,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ext x\nsimp only [mem_map]\nconstructor\n· rintro hy, y_in, hyi",
          "page": 18,
          "x0": 116.4,
          "y0": 325.3765375,
          "x1": 204.7020387,
          "y1": 356.6767139,
          "width": 88.3020387,
          "height": 31.300176399999998,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "ext x",
          "page": 18,
          "x0": 116.4,
          "y0": 349.7028639,
          "x1": 137.26437516972902,
          "y1": 356.6767139,
          "width": 20.864375169729016,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "map (ψ.comp ϕ) S = map ψ (S.map ϕ)",
          "page": 18,
          "x0": 325.56016,
          "y0": 349.1334984,
          "x1": 472.66450999999995,
          "y1": 356.31671389999997,
          "width": 147.10434999999995,
          "height": 7.18321549999996,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": ":=",
          "page": 18,
          "x0": 485.161,
          "y0": 349.3428639,
          "x1": 493.545293867352,
          "y1": 356.31671389999997,
          "width": 8.384293867351971,
          "height": 6.97384999999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": ":=",
          "page": 18,
          "x0": 485.161,
          "y0": 349.3428639,
          "x1": 493.545293867352,
          "y1": 356.31671389999997,
          "width": 8.384293867351971,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "simp only [mem_map]",
          "page": 18,
          "x0": 116.4,
          "y0": 341.7828639,
          "x1": 195.82441769865,
          "y1": 348.75671389999997,
          "width": 79.42441769864999,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "by",
          "page": 18,
          "x0": 328.8,
          "y0": 341.42286390000004,
          "x1": 337.18431827582697,
          "y1": 348.3967139,
          "width": 8.384318275826956,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "constructor",
          "page": 18,
          "x0": 116.4,
          "y0": 333.74286390000003,
          "x1": 162.584270715895,
          "y1": 340.7167139,
          "width": 46.184270715894996,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ext x",
          "page": 18,
          "x0": 317.16,
          "y0": 333.5028639,
          "x1": 338.14433585050404,
          "y1": 340.4767139,
          "width": 20.98433585050401,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "· rintro hy, y_in, hyi",
          "page": 18,
          "x0": 116.4,
          "y0": 325.3765375,
          "x1": 204.7020387,
          "y1": 332.7967139,
          "width": 88.3020387,
          "height": 7.420176400000003,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "simp only [mem_map]",
          "page": 18,
          "x0": 317.16,
          "y0": 325.4628639,
          "x1": 396.704566241655,
          "y1": 332.4367139,
          "width": 79.54456624165499,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "exact hϕ y, hy, y_in, rfli, hyi",
          "page": 18,
          "x0": 124.68,
          "y0": 317.33653749999996,
          "x1": 251.62189869999997,
          "y1": 324.75671389999997,
          "width": 126.94189869999997,
          "height": 7.420176400000003,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "exact hϕ y, hy, y_in, rfli, hyi",
          "page": 18,
          "x0": 124.68,
          "y0": 317.33653749999996,
          "x1": 251.62189869999997,
          "y1": 324.75671389999997,
          "width": 126.94189869999997,
          "height": 7.420176400000003,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "constructor",
          "page": 18,
          "x0": 317.16,
          "y0": 317.5428639,
          "x1": 363.34439275827003,
          "y1": 324.51671389999996,
          "width": 46.18439275827001,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "· rintro hy, hz, z_in, hzi, hyi",
          "page": 18,
          "x0": 116.39997999999997,
          "y0": 309.4166175,
          "x1": 240.46179869999995,
          "y1": 316.8367939,
          "width": 124.06181869999998,
          "height": 7.420176400000003,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "· rintro hy, hz, z_in, hzi, hyi",
          "page": 18,
          "x0": 116.39997999999997,
          "y0": 309.4166175,
          "x1": 240.46179869999995,
          "y1": 316.8367939,
          "width": 124.06181869999998,
          "height": 7.420176400000003,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "rintro hy, y_in, hyi; exact hϕ y, hy, y_in,",
          "page": 18,
          "x0": 317.16,
          "y0": 309.0565375,
          "x1": 494.38413594736807,
          "y1": 316.4767139,
          "width": 177.22413594736804,
          "height": 7.420176400000003,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "use z, z_in\ncalc ψ.comp ϕ z = ψ (ϕ z) := rfl\n_\n= ψ y := by congr",
          "page": 18,
          "x0": 124.67987999999994,
          "y0": 285.77364839999996,
          "x1": 264.224343103308,
          "y1": 308.79656389999997,
          "width": 139.54446310330806,
          "height": 23.02291550000001,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "use z, z_in",
          "page": 18,
          "x0": 124.67987999999994,
          "y0": 301.8227139,
          "x1": 170.86415713183695,
          "y1": 308.79656389999997,
          "width": 46.18427713183701,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "rfli, hyi",
          "page": 18,
          "x0": 328.7998400000001,
          "y0": 301.1366175,
          "x1": 364.5416987000001,
          "y1": 308.5567939,
          "width": 35.74185870000002,
          "height": 7.420176400000003,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "rfli, hyi",
          "page": 18,
          "x0": 328.7998400000001,
          "y0": 301.1366175,
          "x1": 364.5416987000001,
          "y1": 308.5567939,
          "width": 35.74185870000002,
          "height": 7.420176400000003,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "calc ψ.comp ϕ z = ψ (ϕ z) := rfl",
          "page": 18,
          "x0": 124.68,
          "y0": 293.6936484,
          "x1": 263.50432655165395,
          "y1": 300.87671389999997,
          "width": 138.82432655165394,
          "height": 7.183065499999998,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "rintro hy, hz, z_in, hzi, hyi; exact hz,\nz_in, (congr_arg ψ hz).trans hyi",
          "page": 18,
          "x0": 317.1599800000001,
          "y0": 285.17630749999995,
          "x1": 479.74421386735196,
          "y1": 300.6368739,
          "width": 162.58423386735188,
          "height": 15.460566400000062,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "rintro hy, hz, z_in, hzi, hyi; exact hz,",
          "page": 18,
          "x0": 317.1599800000001,
          "y0": 293.21653749999996,
          "x1": 479.74421386735196,
          "y1": 300.6368739,
          "width": 162.58423386735188,
          "height": 7.420336400000053,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "= ψ y := by congr",
          "page": 18,
          "x0": 191.64,
          "y0": 285.77364839999996,
          "x1": 264.224343103308,
          "y1": 292.95671389999995,
          "width": 72.58434310330802,
          "height": 7.183065499999998,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "z_in, (congr_arg ψ hz).trans hyi",
          "page": 18,
          "x0": 328.79992,
          "y0": 285.17630749999995,
          "x1": 463.06205869999997,
          "y1": 292.59648389999995,
          "width": 134.26213869999998,
          "height": 7.420176400000003,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Figure 6: Optimizing a lemma from the solutions of MIL CH08 S01 for length",
          "page": 18,
          "x0": 149.16013999999996,
          "y0": 261.94791447999995,
          "x1": 462.90071729837143,
          "y1": 271.91055448,
          "width": 313.7405772983715,
          "height": 9.962640000000022,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Figure 6: Optimizing a lemma from the solutions of MIL CH08 S01 for length",
          "page": 18,
          "x0": 149.16013999999996,
          "y0": 261.94791447999995,
          "x1": 462.90071729837143,
          "y1": 271.91055448,
          "width": 313.7405772983715,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "MIL: Length Optimization 2 Consider Figure 6, which optimizes an exercise solution from MIL\nChapter 8, Section 1 (Group theory) for length, converting a full tactic proof into a single proof term\nto shorten it from 28 tactic invocations to 1. Note that the model does not have access to the Lean\ncommands that symbolically generate proof terms, and therefore generates and estimates the proof\nterm entirely by itself.",
          "page": 18,
          "x0": 108.00007999999991,
          "y0": 190.1882144799999,
          "x1": 504.5662840271703,
          "y1": 244.07030615999997,
          "width": 396.5662040271704,
          "height": 53.88209168000006,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "MIL: Length Optimization 2 Consider Figure 6, which optimizes an exercise solution from MIL",
          "page": 18,
          "x0": 108.00013999999993,
          "y0": 233.98811447999995,
          "x1": 504.5662840271703,
          "y1": 244.07030615999997,
          "width": 396.56614402717037,
          "height": 10.082191680000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Chapter 8, Section 1 (Group theory) for length, converting a full tactic proof into a single proof term",
          "page": 18,
          "x0": 108.00013999999993,
          "y0": 223.06821447999994,
          "x1": 504.0715267395466,
          "y1": 233.03085447999996,
          "width": 396.07138673954665,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "to shorten it from 28 tactic invocations to 1. Note that the model does not have access to the Lean",
          "page": 18,
          "x0": 108.00013999999993,
          "y0": 211.70920999999996,
          "x1": 504.06137278912297,
          "y1": 221.99065447999996,
          "width": 396.06123278912304,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "commands that symbolically generate proof terms, and therefore generates and estimates the proof",
          "page": 18,
          "x0": 108.00007999999994,
          "y0": 201.10811447999993,
          "x1": 504.19785246913153,
          "y1": 211.07075447999995,
          "width": 396.19777246913156,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "term entirely by itself.",
          "page": 18,
          "x0": 108.00007999999991,
          "y0": 190.1882144799999,
          "x1": 196.5310411371062,
          "y1": 200.15085447999994,
          "width": 88.53096113710629,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "MIL: Readability Optimization See (§4.3)",
          "page": 18,
          "x0": 108.00007999999991,
          "y0": 167.0280144799999,
          "x1": 292.8777154555279,
          "y1": 177.1102061599999,
          "width": 184.87763545552798,
          "height": 10.082191679999994,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "MIL: Readability Optimization See (§4.3)",
          "page": 18,
          "x0": 108.00007999999991,
          "y0": 167.0280144799999,
          "x1": 292.8777154555279,
          "y1": 177.1102061599999,
          "width": 184.87763545552798,
          "height": 10.082191679999994,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Mathlib: Length Optimization Consider Figure 8, which optimizes a theorem in algebraic topol-\nogy from mathlib for length, eliminating simp calls and combining tactics to shorten it from 3 tactic\ninvocations to 1.",
          "page": 18,
          "x0": 108.0000599999999,
          "y0": 121.58930999999993,
          "x1": 505.7576567151365,
          "y1": 153.95040615999994,
          "width": 397.7575967151366,
          "height": 32.36109616000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Mathlib: Length Optimization Consider Figure 8, which optimizes a theorem in algebraic topol-",
          "page": 18,
          "x0": 108.00007999999991,
          "y0": 143.86821447999992,
          "x1": 505.7576567151365,
          "y1": 153.95040615999994,
          "width": 397.75757671513657,
          "height": 10.082191680000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ogy from mathlib for length, eliminating simp calls and combining tactics to shorten it from 3 tactic",
          "page": 18,
          "x0": 108.00007999999991,
          "y0": 132.62910999999994,
          "x1": 503.98348391367995,
          "y1": 143.22935895999993,
          "width": 395.98340391368004,
          "height": 10.600248959999988,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "invocations to 1.",
          "page": 18,
          "x0": 108.0000599999999,
          "y0": 121.58930999999993,
          "x1": 173.6102599999999,
          "y1": 131.87075447999993,
          "width": 65.61019999999999,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Mathlib: Readability Optimization Consider Figure 9, a theorem from Mathlib that we optimize\nfor readability.",
          "page": 18,
          "x0": 108.00009999999989,
          "y0": 87.82811447999994,
          "x1": 504.10402538265737,
          "y1": 108.95050615999993,
          "width": 396.1039253826575,
          "height": 21.122391679999993,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Mathlib: Readability Optimization Consider Figure 9, a theorem from Mathlib that we optimize",
          "page": 18,
          "x0": 108.0000999999999,
          "y0": 98.86831447999994,
          "x1": 504.10402538265737,
          "y1": 108.95050615999993,
          "width": 396.10392538265745,
          "height": 10.082191679999994,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "for readability.",
          "page": 18,
          "x0": 108.00009999999989,
          "y0": 87.82811447999994,
          "x1": 166.89074729154171,
          "y1": 97.79075447999993,
          "width": 58.890647291541825,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "This original proof carried a score of 0, as it does not contain any declarative statements. It is concise\nand efﬁcient, however, it is difﬁcult to understand and read.",
          "page": 18,
          "x0": 107.63994399999989,
          "y0": 59.988314479999936,
          "x1": 504.1041735240709,
          "y1": 80.87085447999993,
          "width": 396.464229524071,
          "height": 20.88254,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "This original proof carried a score of 0, as it does not contain any declarative statements. It is concise",
          "page": 18,
          "x0": 107.63994399999989,
          "y0": 70.58940999999993,
          "x1": 504.1041735240709,
          "y1": 80.87085447999993,
          "width": 396.464229524071,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "and efﬁcient, however, it is difﬁcult to understand and read.",
          "page": 18,
          "x0": 108.00078399999995,
          "y0": 59.988314479999936,
          "x1": 344.49144399999994,
          "y1": 69.95095447999994,
          "width": 236.49066,
          "height": 9.96264,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "18",
          "page": 18,
          "x0": 300.96138399999995,
          "y0": 30.108214479999937,
          "x1": 310.9826909981679,
          "y1": 40.07085447999994,
          "width": 10.021306998167972,
          "height": 9.96264,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "18",
          "page": 18,
          "x0": 300.96138399999995,
          "y0": 30.108214479999937,
          "x1": 310.9826909981679,
          "y1": 40.07085447999994,
          "width": 10.021306998167972,
          "height": 9.96264,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        }
      ]
    },
    {
      "page_num": 19,
      "elements": [
        {
          "text": "Original (human-written)\nexample : s \\ t ∪ t \\ s = (s ∪ t) \\ (s ∩ t)",
          "page": 19,
          "x0": 108.0,
          "y0": 686.3365375000001,
          "x1": 291.46449827582694,
          "y1": 708.1103361600001,
          "width": 183.46449827582694,
          "height": 21.77379866000001,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Original (human-written)",
          "page": 19,
          "x0": 108.0,
          "y0": 698.14769616,
          "x1": 217.51745959722888,
          "y1": 708.1103361600001,
          "width": 109.51745959722888,
          "height": 9.962640000000079,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ImProver (length-optimized)",
          "page": 19,
          "x0": 308.88,
          "y0": 697.70934,
          "x1": 430.75770924440246,
          "y1": 708.1103361600001,
          "width": 121.87770924440247,
          "height": 10.40099616000009,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "ImProver (length-optimized)",
          "page": 19,
          "x0": 308.88,
          "y0": 697.70934,
          "x1": 430.75770924440246,
          "y1": 708.1103361600001,
          "width": 121.87770924440247,
          "height": 10.40099616000009,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "example : s \\ t ∪ t \\ s = (s ∪ t) \\ (s ∩ t)",
          "page": 19,
          "x0": 108.0,
          "y0": 686.3365375000001,
          "x1": 291.46449827582694,
          "y1": 693.7567139,
          "width": 183.46449827582694,
          "height": 7.420176399999946,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "example : s \\ t ∪ t \\ s = (s ∪ t) \\ (s ∩ t)",
          "page": 19,
          "x0": 308.88,
          "y0": 684.5365375,
          "x1": 492.344473867352,
          "y1": 691.9567139,
          "width": 183.464473867352,
          "height": 7.420176399999946,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "example : s \\ t ∪ t \\ s = (s ∪ t) \\ (s ∩ t)",
          "page": 19,
          "x0": 308.88,
          "y0": 684.5365375,
          "x1": 492.344473867352,
          "y1": 691.9567139,
          "width": 183.464473867352,
          "height": 7.420176399999946,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": ":= by",
          "page": 19,
          "x0": 127.92,
          "y0": 678.7428639,
          "x1": 148.90430607158953,
          "y1": 685.7167139,
          "width": 20.98430607158953,
          "height": 6.97384999999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": ":= by",
          "page": 19,
          "x0": 127.92,
          "y0": 678.7428639,
          "x1": 148.90430607158953,
          "y1": 685.7167139,
          "width": 20.98430607158953,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": ":= by",
          "page": 19,
          "x0": 349.68,
          "y0": 676.9428639,
          "x1": 370.66431827582693,
          "y1": 683.9167139,
          "width": 20.984318275826922,
          "height": 6.97384999999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": ":= by",
          "page": 19,
          "x0": 349.68,
          "y0": 676.9428639,
          "x1": 370.66431827582693,
          "y1": 683.9167139,
          "width": 20.984318275826922,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ext x; constructor\n· rintro (hxs, xnti | hxt, xnsi)",
          "page": 19,
          "x0": 116.4,
          "y0": 662.3365375000001,
          "x1": 242.74415000000002,
          "y1": 677.7967139,
          "width": 126.34415000000001,
          "height": 15.46017639999991,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "ext x; constructor",
          "page": 19,
          "x0": 116.4,
          "y0": 670.8228639,
          "x1": 191.864270715895,
          "y1": 677.7967139,
          "width": 75.464270715895,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "exact Set.ext fun x => hfun h => h.elim",
          "page": 19,
          "x0": 317.16,
          "y0": 668.5765375000001,
          "x1": 479.50421771406,
          "y1": 675.9967139,
          "width": 162.34421771406,
          "height": 7.420176399999946,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "exact Set.ext fun x => hfun h => h.elim",
          "page": 19,
          "x0": 317.16,
          "y0": 668.5765375000001,
          "x1": 479.50421771406,
          "y1": 675.9967139,
          "width": 162.34421771406,
          "height": 7.420176399999946,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "· rintro (hxs, xnti | hxt, xnsi)",
          "page": 19,
          "x0": 116.4,
          "y0": 662.3365375000001,
          "x1": 242.74415000000002,
          "y1": 669.7567139,
          "width": 126.34415000000001,
          "height": 7.420176399999946,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "(fun hxs, xnti => hOr.inl xs, fun h_, xti =\n> xnt xti) (fun hxt, xnsi => hOr.inr xt,\nfun hxs, _i => xns xsi),",
          "page": 19,
          "x0": 328.8,
          "y0": 644.5765375000001,
          "x1": 503.86431,
          "y1": 667.9568739,
          "width": 175.06430999999998,
          "height": 23.38033639999992,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "(fun hxs, xnti => hOr.inl xs, fun h_, xti =",
          "page": 19,
          "x0": 328.8,
          "y0": 660.5365375,
          "x1": 503.86431,
          "y1": 667.9568739,
          "width": 175.06430999999998,
          "height": 7.4203363999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "· constructor",
          "page": 19,
          "x0": 124.67984000000001,
          "y0": 654.4166175,
          "x1": 177.464270715895,
          "y1": 661.8367139,
          "width": 52.784430715894985,
          "height": 7.42009639999992,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "· constructor",
          "page": 19,
          "x0": 124.67984000000001,
          "y0": 654.4166175,
          "x1": 177.464270715895,
          "y1": 661.8367139,
          "width": 52.784430715894985,
          "height": 7.42009639999992,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "> xnt xti) (fun hxt, xnsi => hOr.inr xt,",
          "page": 19,
          "x0": 328.8,
          "y0": 652.6165375,
          "x1": 492.34410368207193,
          "y1": 660.0367139,
          "width": 163.54410368207192,
          "height": 7.420176399999946,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "left\nexact xs\nrintro h_, xti\ncontradiction",
          "page": 19,
          "x0": 133.0799,
          "y0": 622.9428639,
          "x1": 189.8217587,
          "y1": 653.7967139,
          "width": 56.741858699999995,
          "height": 30.853849999999966,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "left",
          "page": 19,
          "x0": 133.08,
          "y0": 646.8228639,
          "x1": 149.86429821476852,
          "y1": 653.7967139,
          "width": 16.784298214768512,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "fun hxs, _i => xns xsi),",
          "page": 19,
          "x0": 328.8,
          "y0": 644.5765375000001,
          "x1": 426.344233867352,
          "y1": 651.9967139,
          "width": 97.54423386735198,
          "height": 7.420176399999946,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "exact xs",
          "page": 19,
          "x0": 133.08,
          "y0": 638.9028639,
          "x1": 166.54430607158952,
          "y1": 645.8767139,
          "width": 33.464306071589505,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "fun hh, nxsti => h.elim (fun xs => Or.inl h\nxs, fun xt => nxst hxs, xtii) (fun xt =>\nOr.inr hxt, fun xs => nxst hxs, xtii)i",
          "page": 19,
          "x0": 317.16,
          "y0": 620.6963075000001,
          "x1": 494.2620187,
          "y1": 644.0767139,
          "width": 177.10201869999997,
          "height": 23.380406399999856,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "fun hh, nxsti => h.elim (fun xs => Or.inl h",
          "page": 19,
          "x0": 317.16,
          "y0": 636.6565375,
          "x1": 494.2620187,
          "y1": 644.0767139,
          "width": 177.10201869999997,
          "height": 7.420176399999946,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "rintro h_, xti",
          "page": 19,
          "x0": 133.0799,
          "y0": 630.5366175,
          "x1": 189.8217587,
          "y1": 637.9567939,
          "width": 56.741858699999995,
          "height": 7.420176399999946,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "xs, fun xt => nxst hxs, xtii) (fun xt =>",
          "page": 19,
          "x0": 328.8001,
          "y0": 628.7365375,
          "x1": 493.30431,
          "y1": 636.1567938999999,
          "width": 164.50421,
          "height": 7.420256399999857,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "contradiction",
          "page": 19,
          "x0": 133.08,
          "y0": 622.9428639,
          "x1": 187.664262859074,
          "y1": 629.9167139,
          "width": 54.58426285907399,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Or.inr hxt, fun xs => nxst hxs, xtii)i",
          "page": 19,
          "x0": 328.8,
          "y0": 620.6963075000001,
          "x1": 482.98203870000003,
          "y1": 628.1167139,
          "width": 154.18203870000002,
          "height": 7.4204063999999335,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": ". constructor",
          "page": 19,
          "x0": 124.68,
          "y0": 615.0228639000001,
          "x1": 179.264270715895,
          "y1": 621.9967139,
          "width": 54.584270715895,
          "height": 6.97384999999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": ". constructor",
          "page": 19,
          "x0": 124.68,
          "y0": 615.0228639000001,
          "x1": 179.264270715895,
          "y1": 621.9967139,
          "width": 54.584270715895,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "right\nexact xt\nrintro hxs, _i\ncontradiction\nrintro hxs | xt, nxsti\n· left",
          "page": 19,
          "x0": 116.4,
          "y0": 566.6966975,
          "x1": 204.70205869999998,
          "y1": 613.9567139,
          "width": 88.30205869999998,
          "height": 47.26001639999993,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "right",
          "page": 19,
          "x0": 133.08,
          "y0": 606.9828639,
          "x1": 154.06429428635803,
          "y1": 613.9567139,
          "width": 20.984294286358022,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "exact xt",
          "page": 19,
          "x0": 133.08,
          "y0": 599.0628639,
          "x1": 166.54430607158952,
          "y1": 606.0367139,
          "width": 33.464306071589505,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "rintro hxs, _i",
          "page": 19,
          "x0": 133.0799,
          "y0": 590.5763075000001,
          "x1": 189.8217587,
          "y1": 597.9964839,
          "width": 56.741858699999995,
          "height": 7.420176399999946,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "contradiction",
          "page": 19,
          "x0": 133.08,
          "y0": 583.1028639,
          "x1": 187.664262859074,
          "y1": 590.0767139,
          "width": 54.58426285907399,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "rintro hxs | xt, nxsti",
          "page": 19,
          "x0": 116.4,
          "y0": 574.7365375,
          "x1": 204.70205869999998,
          "y1": 582.1567139,
          "width": 88.30205869999998,
          "height": 7.420176399999946,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "· left",
          "page": 19,
          "x0": 116.40003999999998,
          "y0": 566.6966975,
          "x1": 139.6644182147685,
          "y1": 574.1168739,
          "width": 23.264378214768513,
          "height": 7.420176399999946,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "use xs\nintro xt\napply nxst\nconstructor <;> assumption",
          "page": 19,
          "x0": 124.68,
          "y0": 535.3428639,
          "x1": 233.62434786973049,
          "y1": 566.1965639,
          "width": 108.94434786973048,
          "height": 30.853700000000003,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "use xs",
          "page": 19,
          "x0": 124.68011999999997,
          "y0": 559.2227139,
          "x1": 149.86441356591848,
          "y1": 566.1965639,
          "width": 25.18429356591851,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "intro xt",
          "page": 19,
          "x0": 124.68,
          "y0": 551.1828639,
          "x1": 158.26430607158952,
          "y1": 558.1567139,
          "width": 33.58430607158951,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "apply nxst",
          "page": 19,
          "x0": 124.68,
          "y0": 543.2628639,
          "x1": 166.6642982147685,
          "y1": 550.2367138999999,
          "width": 41.9842982147685,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "constructor <;> assumption",
          "page": 19,
          "x0": 124.68,
          "y0": 535.3428639,
          "x1": 233.62434786973049,
          "y1": 542.3167139,
          "width": 108.94434786973048,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": ". right; use xt; intro xs",
          "page": 19,
          "x0": 116.4,
          "y0": 527.3028639,
          "x1": 221.024318275827,
          "y1": 534.2767139,
          "width": 104.624318275827,
          "height": 6.97384999999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": ". right; use xt; intro xs",
          "page": 19,
          "x0": 116.4,
          "y0": 527.3028639,
          "x1": 221.024318275827,
          "y1": 534.2767139,
          "width": 104.624318275827,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "apply nxst\nconstructor <;> assumption",
          "page": 19,
          "x0": 124.68,
          "y0": 511.3428639,
          "x1": 233.62434786973049,
          "y1": 526.3567138999999,
          "width": 108.94434786973048,
          "height": 15.013849999999934,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "apply nxst",
          "page": 19,
          "x0": 124.68,
          "y0": 519.3828639,
          "x1": 166.6642982147685,
          "y1": 526.3567138999999,
          "width": 41.9842982147685,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "constructor <;> assumption",
          "page": 19,
          "x0": 124.68,
          "y0": 511.3428639,
          "x1": 233.62434786973049,
          "y1": 518.3167139,
          "width": 108.94434786973048,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Figure 7: Optimizing a lemma from MIL CH04 S01 solution for length",
          "page": 19,
          "x0": 163.92012000000005,
          "y0": 487.42814448,
          "x1": 448.2624575951366,
          "y1": 497.39078448000004,
          "width": 284.34233759513654,
          "height": 9.962640000000022,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Figure 7: Optimizing a lemma from MIL CH04 S01 solution for length",
          "page": 19,
          "x0": 163.92012000000005,
          "y0": 487.42814448,
          "x1": 448.2624575951366,
          "y1": 497.39078448000004,
          "width": 284.34233759513654,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Original (human-written)\n/-- If `f(p(t) = g(q(t))` for two paths `p`",
          "page": 19,
          "x0": 108.0,
          "y0": 452.0628639,
          "x1": 285.94333435000004,
          "y1": 473.39043616,
          "width": 177.94333435000004,
          "height": 21.327572259999954,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Original (human-written)",
          "page": 19,
          "x0": 108.0001200000001,
          "y0": 463.42779616,
          "x1": 217.51757959722897,
          "y1": 473.39043616,
          "width": 109.51745959722888,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ImProver (length-optimized)",
          "page": 19,
          "x0": 308.87980000000005,
          "y0": 462.98934,
          "x1": 430.7575092444025,
          "y1": 473.39033616,
          "width": 121.87770924440247,
          "height": 10.400996159999977,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "ImProver (length-optimized)",
          "page": 19,
          "x0": 308.87980000000005,
          "y0": 462.98934,
          "x1": 430.7575092444025,
          "y1": 473.39033616,
          "width": 121.87770924440247,
          "height": 10.400996159999977,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "/-- If `f(p(t) = g(q(t))` for two paths `p`",
          "page": 19,
          "x0": 108.0,
          "y0": 452.0628639,
          "x1": 285.94333435000004,
          "y1": 460.33385000000004,
          "width": 177.94333435000004,
          "height": 8.270986100000016,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "and `q`, then the induced path homotopy\nclasses",
          "page": 19,
          "x0": 127.92022000000003,
          "y0": 436.1027139,
          "x1": 290.2648004485295,
          "y1": 452.29362000000003,
          "width": 162.34458044852948,
          "height": 16.190906100000007,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "and `q`, then the induced path homotopy",
          "page": 19,
          "x0": 127.92022000000003,
          "y0": 444.0226339,
          "x1": 290.2648004485295,
          "y1": 452.29362000000003,
          "width": 162.34458044852948,
          "height": 8.270986100000016,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "/-- If `f(p(t) = g(q(t))` for two paths `p`",
          "page": 19,
          "x0": 308.88,
          "y0": 439.8228639,
          "x1": 486.82325435,
          "y1": 448.09385000000003,
          "width": 177.94325435000002,
          "height": 8.270986100000016,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "/-- If `f(p(t) = g(q(t))` for two paths `p`",
          "page": 19,
          "x0": 308.88,
          "y0": 439.8228639,
          "x1": 486.82325435,
          "y1": 448.09385000000003,
          "width": 177.94325435000002,
          "height": 8.270986100000016,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "classes",
          "page": 19,
          "x0": 127.92024000000002,
          "y0": 436.1027139,
          "x1": 157.30452642953702,
          "y1": 443.0765639,
          "width": 29.384286429537,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "and `q`, then the induced path homotopy\nclasses",
          "page": 19,
          "x0": 328.80014,
          "y0": 423.8631039,
          "x1": 491.14443534259203,
          "y1": 440.05401,
          "width": 162.34429534259203,
          "height": 16.190906100000007,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "and `q`, then the induced path homotopy",
          "page": 19,
          "x0": 328.80014,
          "y0": 431.7830239,
          "x1": 491.14443534259203,
          "y1": 440.05401,
          "width": 162.34429534259203,
          "height": 8.270986100000016,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "`f(p)` and `g(p)` are the same as well,",
          "page": 19,
          "x0": 108.00034000000002,
          "y0": 428.18279390000004,
          "x1": 269.2648295290195,
          "y1": 436.45378000000005,
          "width": 161.26448952901947,
          "height": 8.270986100000016,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "`f(p)` and `g(p)` are the same as well,",
          "page": 19,
          "x0": 108.00034000000002,
          "y0": 428.18279390000004,
          "x1": 269.2648295290195,
          "y1": 436.45378000000005,
          "width": 161.26448952901947,
          "height": 8.270986100000016,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "classes",
          "page": 19,
          "x0": 328.80017999999995,
          "y0": 423.8631039,
          "x1": 358.18453965496195,
          "y1": 430.83695389999997,
          "width": 29.384359654961997,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "despite having a priori different types\n-/",
          "page": 19,
          "x0": 127.92030000000003,
          "y0": 412.22264390000004,
          "x1": 291.22501062505603,
          "y1": 427.1168039,
          "width": 163.304710625056,
          "height": 14.894159999999943,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "despite having a priori different types",
          "page": 19,
          "x0": 127.92030000000003,
          "y0": 420.1429539,
          "x1": 291.22501062505603,
          "y1": 427.1168039,
          "width": 163.304710625056,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "`f(p)` and `g(p)` are the same as well,",
          "page": 19,
          "x0": 308.88027999999997,
          "y0": 415.8228739,
          "x1": 470.144563823674,
          "y1": 424.09386,
          "width": 161.26428382367402,
          "height": 8.270986100000016,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "`f(p)` and `g(p)` are the same as well,",
          "page": 19,
          "x0": 308.88027999999997,
          "y0": 415.8228739,
          "x1": 470.144563823674,
          "y1": 424.09386,
          "width": 161.26428382367402,
          "height": 8.270986100000016,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "-/",
          "page": 19,
          "x0": 127.92030000000003,
          "y0": 412.22264390000004,
          "x1": 136.30460607158955,
          "y1": 419.1964939,
          "width": 8.38430607158952,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "despite having a priori different types\n-/",
          "page": 19,
          "x0": 328.80022,
          "y0": 399.9830339,
          "x1": 491.9847886241812,
          "y1": 414.87680389999997,
          "width": 163.18456862418117,
          "height": 14.89376999999996,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "despite having a priori different types",
          "page": 19,
          "x0": 328.80022,
          "y0": 407.9029539,
          "x1": 491.9847886241812,
          "y1": 414.87680389999997,
          "width": 163.18456862418117,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "theorem heq_path_of_eq_image : HEq ((πm\n:= by",
          "page": 19,
          "x0": 108.0,
          "y0": 396.2628639,
          "x1": 274.18431827582697,
          "y1": 411.1567139,
          "width": 166.18431827582697,
          "height": 14.893849999999986,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "theorem heq_path_of_eq_image : HEq ((πm",
          "page": 19,
          "x0": 108.0,
          "y0": 403.9736484,
          "x1": 273.83698095999995,
          "y1": 411.1567139,
          "width": 165.83698095999995,
          "height": 7.183065499999998,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "-/",
          "page": 19,
          "x0": 328.80022,
          "y0": 399.9830339,
          "x1": 337.184538275827,
          "y1": 406.9568839,
          "width": 8.384318275826956,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "f).map JpK) ((πm g).map JqK)",
          "page": 19,
          "x0": 127.91991999999993,
          "y0": 395.8166115,
          "x1": 244.78437999999997,
          "y1": 403.2367879,
          "width": 116.86446000000004,
          "height": 7.420176400000003,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "f).map JpK) ((πm g).map JqK)",
          "page": 19,
          "x0": 127.91991999999993,
          "y0": 395.8166115,
          "x1": 244.78437999999997,
          "y1": 403.2367879,
          "width": 116.86446000000004,
          "height": 7.420176400000003,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": ":= by",
          "page": 19,
          "x0": 253.2,
          "y0": 396.2628639,
          "x1": 274.18431827582697,
          "y1": 403.2367139,
          "width": 20.98431827582698,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "theorem heq_path_of_eq_image : HEq ((πm",
          "page": 19,
          "x0": 308.88,
          "y0": 391.7336484,
          "x1": 474.71698096,
          "y1": 398.9167139,
          "width": 165.83698096,
          "height": 7.183065499999998,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "theorem heq_path_of_eq_image : HEq ((πm",
          "page": 19,
          "x0": 308.88,
          "y0": 391.7336484,
          "x1": 474.71698096,
          "y1": 398.9167139,
          "width": 165.83698096,
          "height": 7.183065499999998,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "simp only [map_eq, ←",
          "page": 19,
          "x0": 116.4,
          "y0": 387.77653749999996,
          "x1": 203.77644130000002,
          "y1": 395.19671389999996,
          "width": 87.37644130000001,
          "height": 7.420176400000003,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "simp only [map_eq, ←",
          "page": 19,
          "x0": 116.4,
          "y0": 387.77653749999996,
          "x1": 203.77644130000002,
          "y1": 395.19671389999996,
          "width": 87.37644130000001,
          "height": 7.420176400000003,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "f).map JpK) ((πm g).map JqK)\nexact Path.Homotopic.hpath_hext hfg",
          "page": 19,
          "x0": 317.16,
          "y0": 375.9828639,
          "x1": 463.66458128146803,
          "y1": 390.9967879,
          "width": 146.504581281468,
          "height": 15.013924000000031,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "f).map JpK) ((πm g).map JqK)",
          "page": 19,
          "x0": 328.79992,
          "y0": 383.5766115,
          "x1": 445.66436000000004,
          "y1": 390.9967879,
          "width": 116.86444000000006,
          "height": 7.420176400000003,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": ":= by",
          "page": 19,
          "x0": 462.36,
          "y0": 384.0228639,
          "x1": 483.34429386735195,
          "y1": 390.9967139,
          "width": 20.984293867351937,
          "height": 6.97384999999997,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": ":= by",
          "page": 19,
          "x0": 462.36,
          "y0": 384.0228639,
          "x1": 483.34429386735195,
          "y1": 390.9967139,
          "width": 20.984293867351937,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Path.Homotopic.map_lift]; apply\nPath.Homotopic.hpath_hext; exact hfg",
          "page": 19,
          "x0": 127.91990000000001,
          "y0": 372.3828639,
          "x1": 278.624326551654,
          "y1": 387.2767939,
          "width": 150.704426551654,
          "height": 14.893929999999955,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Path.Homotopic.map_lift]; apply",
          "page": 19,
          "x0": 127.91990000000001,
          "y0": 380.30286390000003,
          "x1": 257.744343103308,
          "y1": 387.2767939,
          "width": 129.82444310330797,
          "height": 6.973929999999939,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "exact Path.Homotopic.hpath_hext hfg",
          "page": 19,
          "x0": 317.16,
          "y0": 375.9828639,
          "x1": 463.66458128146803,
          "y1": 382.95671389999995,
          "width": 146.504581281468,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Path.Homotopic.hpath_hext; exact hfg",
          "page": 19,
          "x0": 127.92,
          "y0": 372.3828639,
          "x1": 278.624326551654,
          "y1": 379.3567139,
          "width": 150.704326551654,
          "height": 6.97384999999997,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Figure 8: Optimizing a theorem from Mathlib/FundamentalGroupoid/InducedMaps for\nlength",
          "page": 19,
          "x0": 107.99999999999994,
          "y0": 337.42804448,
          "x1": 504.3175613274072,
          "y1": 358.62938895999997,
          "width": 396.31756132740725,
          "height": 21.20134447999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Figure 8: Optimizing a theorem from Mathlib/FundamentalGroupoid/InducedMaps for",
          "page": 19,
          "x0": 108.0,
          "y0": 348.34794447999997,
          "x1": 504.3175613274072,
          "y1": 358.62938895999997,
          "width": 396.3175613274072,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "length",
          "page": 19,
          "x0": 107.99999999999994,
          "y0": 337.42804448,
          "x1": 133.02130956796867,
          "y1": 347.39068448,
          "width": 25.02130956796873,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "After optimizing for readability, we see that the model did not change the structure of the proof.\nRather, it added an intermediate declaration so that users can better understand the state after the\nconvert. This intermediate tactic greatly helps in the understandability and clarity of the proof.",
          "page": 19,
          "x0": 107.63984399999994,
          "y0": 283.42814447999996,
          "x1": 506.0106689730638,
          "y1": 315.35088448,
          "width": 398.37082497306386,
          "height": 31.922740000000033,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "After optimizing for readability, we see that the model did not change the structure of the proof.",
          "page": 19,
          "x0": 107.63984399999994,
          "y0": 305.38824447999997,
          "x1": 506.0106689730638,
          "y1": 315.35088448,
          "width": 398.37082497306386,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Rather, it added an intermediate declaration so that users can better understand the state after the",
          "page": 19,
          "x0": 107.99984399999994,
          "y0": 294.34804447999994,
          "x1": 504.1031190691948,
          "y1": 304.31068447999996,
          "width": 396.10327506919486,
          "height": 9.962640000000022,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "convert. This intermediate tactic greatly helps in the understandability and clarity of the proof.",
          "page": 19,
          "x0": 107.99984399999994,
          "y0": 283.42814447999996,
          "x1": 496.8907744482916,
          "y1": 293.70958895999996,
          "width": 388.89093044829167,
          "height": 10.281444480000005,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Original (human-written)",
          "page": 19,
          "x0": 107.999844,
          "y0": 259.42779616,
          "x1": 217.51730359722887,
          "y1": 269.39043616,
          "width": 109.51745959722888,
          "height": 9.962639999999965,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Original (human-written)",
          "page": 19,
          "x0": 107.999844,
          "y0": 259.42779616,
          "x1": 217.51730359722887,
          "y1": 269.39043616,
          "width": 109.51745959722888,
          "height": 9.962639999999965,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "ImProver (readability-optimized)",
          "page": 19,
          "x0": 308.87984,
          "y0": 258.98911000000004,
          "x1": 450.67762921456654,
          "y1": 269.39010616,
          "width": 141.79778921456654,
          "height": 10.400996159999977,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "ImProver (readability-optimized)",
          "page": 19,
          "x0": 308.87984,
          "y0": 258.98911000000004,
          "x1": 450.67762921456654,
          "y1": 269.39010616,
          "width": 141.79778921456654,
          "height": 10.400996159999977,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "/-- Another version of",
          "page": 19,
          "x0": 108.0,
          "y0": 246.2628639,
          "x1": 200.02447015349247,
          "y1": 253.2367139,
          "width": 92.02447015349247,
          "height": 6.973849999999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "/-- Another version of",
          "page": 19,
          "x0": 108.0,
          "y0": 246.2628639,
          "x1": 200.02447015349247,
          "y1": 253.2367139,
          "width": 92.02447015349247,
          "height": 6.973849999999999,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "/-- Another version of",
          "page": 19,
          "x0": 308.88,
          "y0": 246.0228639,
          "x1": 400.904695618063,
          "y1": 252.9967139,
          "width": 92.02469561806299,
          "height": 6.973849999999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "/-- Another version of",
          "page": 19,
          "x0": 308.88,
          "y0": 246.0228639,
          "x1": 400.904695618063,
          "y1": 252.9967139,
          "width": 92.02469561806299,
          "height": 6.973849999999999,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "`simply_connected_iff_paths_homotopic` -/\ntheorem simply_connected_iff_paths_homotopic'\n{Y : Type*} [TopologicalSpace Y] :\nSimplyConnectedSpace Y ↔",
          "page": 19,
          "x0": 108.0,
          "y0": 213.89669750000002,
          "x1": 298.54405827582696,
          "y1": 246.61393,
          "width": 190.54405827582696,
          "height": 32.717232499999994,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "`simply_connected_iff_paths_homotopic` -/",
          "page": 19,
          "x0": 127.9199,
          "y0": 238.34294390000002,
          "x1": 298.54405827582696,
          "y1": 246.61393,
          "width": 170.62415827582697,
          "height": 8.270986099999988,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "`simply_connected_iff_paths_homotopic` -/\ntheorem simply_connected_iff_paths_homotopic'\n{Y : Type*} [TopologicalSpace Y] :\nSimplyConnectedSpace Y ↔",
          "page": 19,
          "x0": 308.88,
          "y0": 213.6566175,
          "x1": 499.42403386735197,
          "y1": 246.25401,
          "width": 190.54403386735197,
          "height": 32.597392499999984,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "`simply_connected_iff_paths_homotopic` -/",
          "page": 19,
          "x0": 328.7999,
          "y0": 237.9830239,
          "x1": 499.42403386735197,
          "y1": 246.25401,
          "width": 170.624133867352,
          "height": 8.270986099999988,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "theorem simply_connected_iff_paths_homotopic'",
          "page": 19,
          "x0": 108.0,
          "y0": 230.3028639,
          "x1": 296.26441245604997,
          "y1": 237.2767139,
          "width": 188.26441245604997,
          "height": 6.973849999999999,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "theorem simply_connected_iff_paths_homotopic'",
          "page": 19,
          "x0": 308.88,
          "y0": 230.06286390000002,
          "x1": 497.14411955435014,
          "y1": 237.03671390000002,
          "width": 188.26411955435015,
          "height": 6.973849999999999,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "{Y : Type*} [TopologicalSpace Y] :",
          "page": 19,
          "x0": 127.9198,
          "y0": 221.1828639,
          "x1": 270.22462443868403,
          "y1": 229.3567939,
          "width": 142.30482443868402,
          "height": 8.173930000000013,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "{Y : Type*} [TopologicalSpace Y] :",
          "page": 19,
          "x0": 328.7998,
          "y0": 220.82286390000002,
          "x1": 470.984425683959,
          "y1": 228.9967139,
          "width": 142.18462568395898,
          "height": 8.173849999999987,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "SimplyConnectedSpace Y ↔",
          "page": 19,
          "x0": 124.68010000000001,
          "y0": 213.89669750000002,
          "x1": 228.8565413,
          "y1": 221.31687390000002,
          "width": 104.1764413,
          "height": 7.420176400000003,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "SimplyConnectedSpace Y ↔",
          "page": 19,
          "x0": 325.56,
          "y0": 213.6566175,
          "x1": 429.7360413,
          "y1": 221.0767939,
          "width": 104.17604130000001,
          "height": 7.420176400000003,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "PathConnectedSpace Y ∧ ∀ {x y : Y} (p1\n:=",
          "page": 19,
          "x0": 133.08010000000002,
          "y0": 198.50286390000002,
          "x1": 294.46431827582694,
          "y1": 213.3967139,
          "width": 161.38421827582692,
          "height": 14.893849999999986,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "PathConnectedSpace Y ∧ ∀ {x y : Y} (p1",
          "page": 19,
          "x0": 133.08010000000002,
          "y0": 205.97638750000002,
          "x1": 292.8274976,
          "y1": 213.3967139,
          "width": 159.7473976,
          "height": 7.420326399999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "PathConnectedSpace Y ∧ ∀ {x y : Y} (p1",
          "page": 19,
          "x0": 333.96000000000004,
          "y0": 205.7365375,
          "x1": 493.70739760000004,
          "y1": 213.15687390000002,
          "width": 159.7473976,
          "height": 7.420336400000025,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "PathConnectedSpace Y ∧ ∀ {x y : Y} (p1",
          "page": 19,
          "x0": 333.96000000000004,
          "y0": 205.7365375,
          "x1": 493.70739760000004,
          "y1": 213.15687390000002,
          "width": 159.7473976,
          "height": 7.420336400000025,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "p2 : Path x y), Path.Homotopic p1 p2\nby\nconvert",
          "page": 19,
          "x0": 116.4,
          "y0": 182.54286390000001,
          "x1": 277.22649759999996,
          "y1": 205.4767879,
          "width": 160.82649759999995,
          "height": 22.93392399999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "p2 : Path x y), Path.Homotopic p1 p2",
          "page": 19,
          "x0": 127.91920000000002,
          "y0": 198.5029379,
          "x1": 277.22649759999996,
          "y1": 205.4767879,
          "width": 149.30729759999994,
          "height": 6.973849999999999,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": ":=",
          "page": 19,
          "x0": 286.08,
          "y0": 198.50286390000002,
          "x1": 294.46431827582694,
          "y1": 205.47671390000002,
          "width": 8.384318275826956,
          "height": 6.973849999999999,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "p2 : Path x y), Path.Homotopic p1 p2\nby\nconvert",
          "page": 19,
          "x0": 317.16,
          "y0": 182.1828639,
          "x1": 477.9870776000001,
          "y1": 205.1168679,
          "width": 160.82707760000005,
          "height": 22.934003999999987,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "p2 : Path x y), Path.Homotopic p1 p2",
          "page": 19,
          "x0": 328.80010000000004,
          "y0": 198.1430179,
          "x1": 477.9870776000001,
          "y1": 205.1168679,
          "width": 149.18697760000003,
          "height": 6.973849999999999,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": ":=",
          "page": 19,
          "x0": 491.04,
          "y0": 198.1428639,
          "x1": 499.424293867352,
          "y1": 205.1167139,
          "width": 8.384293867351971,
          "height": 6.973849999999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": ":=",
          "page": 19,
          "x0": 491.04,
          "y0": 198.1428639,
          "x1": 499.424293867352,
          "y1": 205.1167139,
          "width": 8.384293867351971,
          "height": 6.973849999999999,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "by",
          "page": 19,
          "x0": 127.92,
          "y0": 190.4628639,
          "x1": 136.3043060715895,
          "y1": 197.4367139,
          "width": 8.384306071589506,
          "height": 6.973849999999999,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "by",
          "page": 19,
          "x0": 328.8,
          "y0": 190.22286390000002,
          "x1": 337.18431827582697,
          "y1": 197.19671390000002,
          "width": 8.384318275826956,
          "height": 6.973849999999999,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "convert",
          "page": 19,
          "x0": 116.4,
          "y0": 182.54286390000001,
          "x1": 145.78428642953702,
          "y1": 189.5167139,
          "width": 29.384286429537013,
          "height": 6.973849999999999,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "convert",
          "page": 19,
          "x0": 317.16,
          "y0": 182.1828639,
          "x1": 346.544359654962,
          "y1": 189.1567139,
          "width": 29.384359654961997,
          "height": 6.973849999999999,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "simply_connected_iff_paths_homotopic (Y\n:= Y)",
          "page": 19,
          "x0": 127.91990000000001,
          "y0": 166.5828639,
          "x1": 291.1042866764345,
          "y1": 181.4764839,
          "width": 163.1843866764345,
          "height": 14.893619999999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "simply_connected_iff_paths_homotopic (Y",
          "page": 19,
          "x0": 127.91990000000001,
          "y0": 174.5026339,
          "x1": 291.1042866764345,
          "y1": 181.4764839,
          "width": 163.1843866764345,
          "height": 6.973849999999999,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "simply_connected_iff_paths_homotopic (Y\n:= Y)",
          "page": 19,
          "x0": 328.7998,
          "y0": 166.22286390000002,
          "x1": 491.9839792043972,
          "y1": 181.2367939,
          "width": 163.1841792043972,
          "height": 15.013929999999988,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "simply_connected_iff_paths_homotopic (Y",
          "page": 19,
          "x0": 328.7998,
          "y0": 174.2629439,
          "x1": 491.9839792043972,
          "y1": 181.2367939,
          "width": 163.1841792043972,
          "height": 6.973849999999999,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": ":= Y)",
          "page": 19,
          "x0": 127.92,
          "y0": 166.5828639,
          "x1": 148.90430607158953,
          "y1": 173.5567139,
          "width": 20.98430607158953,
          "height": 6.973849999999999,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": ":= Y)",
          "page": 19,
          "x0": 328.8,
          "y0": 166.22286390000002,
          "x1": 349.66431827582693,
          "y1": 173.19671390000002,
          "width": 20.864318275826918,
          "height": 6.973849999999999,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "simp [Path.Homotopic.Quotient,\nSetoid.eq_top_iff]; rfl",
          "page": 19,
          "x0": 116.4,
          "y0": 150.6226339,
          "x1": 241.90454735458698,
          "y1": 165.63671390000002,
          "width": 125.50454735458698,
          "height": 15.014080000000007,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "simp [Path.Homotopic.Quotient,",
          "page": 19,
          "x0": 116.4,
          "y0": 158.66286390000002,
          "x1": 241.90454735458698,
          "y1": 165.63671390000002,
          "width": 125.50454735458698,
          "height": 6.973849999999999,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "have h1 : ∀ x y : Y, Subsingleton",
          "page": 19,
          "x0": 317.16,
          "y0": 157.8565375,
          "x1": 455.74435777137404,
          "y1": 165.2767139,
          "width": 138.58435777137402,
          "height": 7.420176400000003,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "have h1 : ∀ x y : Y, Subsingleton",
          "page": 19,
          "x0": 317.16,
          "y0": 157.8565375,
          "x1": 455.74435777137404,
          "y1": 165.2767139,
          "width": 138.58435777137402,
          "height": 7.420176400000003,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Setoid.eq_top_iff]; rfl",
          "page": 19,
          "x0": 127.91984,
          "y0": 150.6226339,
          "x1": 224.14433858374596,
          "y1": 157.5964839,
          "width": 96.22449858374597,
          "height": 6.973849999999999,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "(Path.Homotopic.Quotient x y) ↔ ∀ {p1 p2\n: Path x y}, Path.Homotopic p1 p2 := by\nintro x y\nsimp [Path.Homotopic.Quotient,\nSetoid.eq_top_iff]\nrfl",
          "page": 19,
          "x0": 325.55996,
          "y0": 110.5430239,
          "x1": 499.1071376,
          "y1": 157.3567939,
          "width": 173.5471776,
          "height": 46.81377000000002,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "(Path.Homotopic.Quotient x y) ↔ ∀ {p1 p2",
          "page": 19,
          "x0": 328.8,
          "y0": 149.93653750000001,
          "x1": 499.1071376,
          "y1": 157.3567939,
          "width": 170.30713759999998,
          "height": 7.4202563999999995,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": ": Path x y}, Path.Homotopic p1 p2 := by",
          "page": 19,
          "x0": 328.79984,
          "y0": 142.3428639,
          "x1": 491.38429386735197,
          "y1": 149.3168679,
          "width": 162.58445386735195,
          "height": 6.974004000000008,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "intro x y",
          "page": 19,
          "x0": 325.56,
          "y0": 134.4228639,
          "x1": 363.22431929885,
          "y1": 141.3967139,
          "width": 37.66431929884999,
          "height": 6.973849999999999,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "simp [Path.Homotopic.Quotient,",
          "page": 19,
          "x0": 325.56,
          "y0": 126.3828639,
          "x1": 451.06452308558903,
          "y1": 133.35671390000002,
          "width": 125.50452308558903,
          "height": 6.973850000000013,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Setoid.eq_top_iff]",
          "page": 19,
          "x0": 328.7998,
          "y0": 118.4629439,
          "x1": 404.02448483107503,
          "y1": 125.4367939,
          "width": 75.22468483107502,
          "height": 6.973849999999999,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "rfl",
          "page": 19,
          "x0": 325.55996,
          "y0": 110.5430239,
          "x1": 338.144286551654,
          "y1": 117.5168739,
          "width": 12.584326551653987,
          "height": 6.973849999999999,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "simp only [h1]",
          "page": 19,
          "x0": 317.16,
          "y0": 102.5028639,
          "x1": 375.824446629212,
          "y1": 109.4767139,
          "width": 58.664446629211966,
          "height": 6.973849999999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "simp only [h1]",
          "page": 19,
          "x0": 317.16,
          "y0": 102.5028639,
          "x1": 375.824446629212,
          "y1": 109.4767139,
          "width": 58.664446629211966,
          "height": 6.973849999999999,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "Figure 9: Optimizing a theorem from Mathlib/FundamentalGroupoid/SimplyConnected\nfor readability",
          "page": 19,
          "x0": 108.00000000000003,
          "y0": 74.02814448000001,
          "x1": 513.5776029020759,
          "y1": 95.22948896,
          "width": 405.5776029020759,
          "height": 21.20134447999999,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "Figure 9: Optimizing a theorem from Mathlib/FundamentalGroupoid/SimplyConnected",
          "page": 19,
          "x0": 108.00000000000003,
          "y0": 84.94804448000001,
          "x1": 513.5776029020759,
          "y1": 95.22948896,
          "width": 405.5776029020759,
          "height": 10.28144447999999,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "for readability",
          "page": 19,
          "x0": 108.00000000000003,
          "y0": 74.02814448000001,
          "x1": 164.94146673818187,
          "y1": 83.99078448,
          "width": 56.941466738181845,
          "height": 9.962639999999993,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        },
        {
          "text": "19",
          "page": 19,
          "x0": 300.96000000000004,
          "y0": 30.108244480000003,
          "x1": 310.981306998168,
          "y1": 40.070884480000004,
          "width": 10.021306998167972,
          "height": 9.96264,
          "element_type": "LTTextBoxHorizontal",
          "depth": 0
        },
        {
          "text": "19",
          "page": 19,
          "x0": 300.96000000000004,
          "y0": 30.108244480000003,
          "x1": 310.981306998168,
          "y1": 40.070884480000004,
          "width": 10.021306998167972,
          "height": 9.96264,
          "element_type": "LTTextLineHorizontal",
          "depth": 1
        }
      ]
    }
  ],
  "metadata": {
    "total_sentences": 377,
    "total_pages": 19,
    "processed_at": 1749060345.6459608,
    "pdf_path": "C:\\Users\\hannah\\git\\doc-provenance\\app\\uploads\\paper.pdf",
    "pdf_filename": "paper.pdf",
    "method": "compatible_layout_extraction",
    "sentence_extraction_method": "original_pipeline_preserved",
    "layout_mapping_version": "1.0"
  },
  "compatibility": {
    "preserves_sentence_indices": true,
    "uses_original_text_extraction": true,
    "compatible_with_existing_provenance": true
  }
}
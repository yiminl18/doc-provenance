// components/QuestionSuggestionsModal.js
import React, { useState, useEffect } from 'react';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import {
  faQuestionCircle,
  faTimes,
  faRobot,
  faSpinner,
  faExclamationTriangle,
  faPaperPlane
} from '@fortawesome/free-solid-svg-icons';
import { getGeneratedQuestions } from '../services/api';

const QuestionSuggestionsModal = ({ 
  isOpen, 
  onClose, 
  filename, 
  onQuestionSelect 
}) => {
  const [questions, setQuestions] = useState([]);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);
  const [metadata, setMetadata] = useState(null);

  useEffect(() => {
    if (isOpen && filename) {
      loadQuestions();
    }
  }, [isOpen, filename]);

  const loadQuestions = async () => {
    setLoading(true);
    setError(null);
    
    try {
      const response = await getGeneratedQuestions(filename);
      
      if (response.success) {
        console.log('Loaded questions:', response.questions);
        console.log('Metadata:', response.metadata);
        setQuestions(response.questions || []);
        setMetadata(response.metadata || null);
      } else {
        setError('Failed to load questions');
      }
    } catch (err) {
      setError(err.message);
    } finally {
      setLoading(false);
    }
  };

  const handleQuestionClick = (question) => {
    onQuestionSelect(question);
    onClose();
  };

  if (!isOpen) return null;

  return (
    <div className="modal-overlay" onClick={(e) => e.target === e.currentTarget && onClose()}>
      <div className="modal-container question-suggestions">
        <div className="modal-header">
          <div className="header-content">
            <FontAwesomeIcon icon={faQuestionCircle} />
            <h3>Suggested Questions</h3>
            {metadata && (
              <span className="question-count">
                {questions.length} questions available
              </span>
            )}
          </div>
          <button className="close-btn" onClick={onClose}>
            <FontAwesomeIcon icon={faTimes} />
          </button>
        </div>

        <div className="modal-body">
          {loading ? (
            <div className="loading-state">
              <FontAwesomeIcon icon={faSpinner} spin />
              <p>Loading suggested questions...</p>
            </div>
          ) : error ? (
            <div className="error-state">
              <FontAwesomeIcon icon={faExclamationTriangle} />
              <p>Error loading questions: {error}</p>
              <button className="retry-btn" onClick={loadQuestions}>
                Try Again
              </button>
            </div>
          ) : questions.length > 0 ? (
            <>
              {metadata && (
                <div className="questions-info">
                  <FontAwesomeIcon icon={faRobot} />
                  <span>
                    Questions generated by GPT-4o on {new Date(metadata.generated_at * 1000).toLocaleDateString()}
                  </span>
                </div>
              )}
              
              <div className="documents-grid">
                {questions.map((question, index) => (
                  <button
                    key={index}
                    className="question-item"
                    onClick={() => handleQuestionClick(question)}
                  >
                    <div className="question-number">{index + 1}</div>
                    <div className="question-text">{question.question_text}</div>
                    <div className="question-action">
                      <FontAwesomeIcon icon={faPaperPlane} />
                    </div>
                  </button>
                ))}
              </div>
            </>
          ) : (
            <div className="empty-state">
              <FontAwesomeIcon icon={faQuestionCircle} />
              <p>No suggested questions are available for this document.</p>
              <p className="empty-subtitle">
                You can generate questions by running the question generation script.
              </p>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default QuestionSuggestionsModal;